{"version":3,"mappings":"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","names":["_c0","_c1","_c2","_c3","_c4","MatOption_Conditional_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","disabled","selected","MatOption_Conditional_5_Template","MatOption_Conditional_6_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","group","label","MAT_OPTION_PARENT_COMPONENT","InjectionToken","MAT_OPTGROUP","MatOptgroup","_MatOptgroup","_labelId","inject","_IdGenerator","getId","_inert","constructor","parent","optional","inertGroups","ɵfac","MatOptgroup_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatOptgroup_HostBindings","ɵɵattribute","toString","inputs","booleanAttribute","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ngContentSelectors","decls","vars","consts","template","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵclassProp","styles","encapsulation","changeDetection","ngDevMode","setClassMetadata","Component","args","selector","ViewEncapsulation","None","ChangeDetectionStrategy","OnPush","host","providers","Input","transform","MatOptionSelectionChange","source","isUserInput","MatOption","_MatOption","_element","ElementRef","_changeDetectorRef","ChangeDetectorRef","_parent","_signalDisableRipple","_selected","_active","_disabled","_mostRecentViewValue","multiple","value","id","disableRipple","hideSingleSelectionIndicator","onSelectionChange","EventEmitter","_text","_stateChanges","Subject","styleLoader","_CdkPrivateStyleLoader","load","_StructuralStylesLoader","_VisuallyHiddenLoader","isSignal","active","viewValue","nativeElement","textContent","trim","select","emitEvent","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","element","_getHostElement","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","event","keyCode","ENTER","SPACE","hasModifierKey","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","next","ngOnDestroy","complete","emit","MatOption_Factory","viewQuery","MatOption_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","outputs","MatOption_Template","ɵɵtemplate","ɵɵconditional","dependencies","MatPseudoCheckbox","MatRipple","imports","Output","ViewChild","static","_countGroupLabelsBeforeOption","optionIndex","optionGroups","length","optionsArray","toArray","groups","groupCounter","i","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","Math","max","MatOptionModule","_MatOptionModule","MatOptionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","NgModule","exports","MatSelect_Conditional_4_Template","ctx_r1","ɵɵtextInterpolate","placeholder","MatSelect_Conditional_5_Conditional_1_Template","MatSelect_Conditional_5_Conditional_2_Template","triggerValue","MatSelect_Conditional_5_Template","customTrigger","MatSelect_ng_template_10_Template","_r3","ɵɵgetCurrentView","MatSelect_ng_template_10_Template_div_keydown_0_listener","ɵɵrestoreView","ɵɵresetView","ɵɵclassMapInterpolate1","_getPanelTheme","_animationsDisabled","panelClass","ariaLabel","_getPanelAriaLabelledby","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","MAT_SELECT_SCROLL_STRATEGY","providedIn","factory","overlay","Overlay","scrollStrategies","reposition","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","deps","useFactory","MAT_SELECT_TRIGGER","MatSelectChange","MatSelect","_MatSelect","_viewportRuler","ViewportRuler","_elementRef","_dir","Directionality","_idGenerator","_renderer","Renderer2","_parentFormField","MAT_FORM_FIELD","ngControl","NgControl","self","_liveAnnouncer","LiveAnnouncer","_defaultOptions","ANIMATION_MODULE_TYPE","_initialized","_cleanupDetach","_positions","originX","originY","overlayX","overlayY","_scrollOptionIntoView","index","option","panel","labelCount","scrollTop","offsetTop","offsetHeight","_positioningSettled","_keyManager","activeItemIndex","_getChangeEvent","_scrollStrategyFactory","_panelOpen","_compareWith","o1","o2","_uid","_triggerAriaLabelledBy","_previousControl","_destroy","_errorStateTracker","stateChanges","disableAutomaticLabeling","userAriaDescribedBy","_selectionModel","_preferredOverlayOrigin","_overlayWidth","_onChange","_onTouched","_valueId","_scrollStrategy","_overlayPanelClass","overlayPanelClass","focused","_focused","controlType","trigger","_overlayDir","tabIndex","_hideSingleSelectionIndicator","_syncParentProperties","_placeholder","required","_required","control","hasValidator","Validators","_multiple","disableOptionCentering","compareWith","fn","_initializeSelection","_value","newValue","hasAssigned","_assignValue","ariaLabelledby","errorStateMatcher","matcher","typeaheadDebounceInterval","sortComparator","_id","errorState","panelWidth","canSelectNullableOptions","optionSelectionChanges","defer","changes","pipe","startWith","switchMap","merge","map","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","defaultErrorStateMatcher","ErrorStateMatcher","parentForm","NgForm","parentFormGroup","FormGroupDirective","HostAttributeToken","valueAccessor","_ErrorStateTracker","parseInt","ngOnInit","SelectionModel","change","takeUntil","subscribe","panelOpen","_getOverlayWidth","detectChanges","ngAfterContentInit","_initKeyManager","changed","added","forEach","removed","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","setAttribute","removeAttribute","updateErrorState","ngOnChanges","withTypeAhead","destroy","_clearFromModal","toggle","close","open","_canOpen","getConnectedOverlayOrigin","_applyModalPanelOwnership","positionChange","take","attachOverlay","withHorizontalOrientation","_highlightCorrectOption","Promise","resolve","then","_trackedModal","modal","closest","panelId","removeAriaReferencedId","addAriaReferencedId","_exitAndDetach","_isRtl","_detachOverlay","cleanupEvent","clearTimeout","exitFallbackTimer","listen","animationName","setTimeout","classList","add","detachOverlay","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","empty","selectedOptions","reverse","join","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","A","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","shiftKey","_handleOverlayKeydown","ESCAPE","_onFocus","_onBlur","cancelTypeahead","color","isEmpty","_setSelectionByValue","clear","Array","isArray","currentValue","_selectOptionByValue","_sortValues","correspondingOption","updateActiveItem","find","isSelected","error","console","warn","_skipPredicate","preferredOrigin","refToMeasure","CdkOverlayOrigin","elementRef","getBoundingClientRect","width","ActiveDescendantKeyManager","withVerticalOrientation","withHomeAndEnd","withPageUpDown","withAllowedModifierKeys","skipPredicate","tabOut","changedOrDestroyed","_onSelect","wasSelected","_propagateChanges","setActiveItem","sort","a","b","indexOf","fallbackValue","valueToEmit","firstEnabledOptionIndex","get","labelId","getLabelId","labelExpression","_getAriaActiveDescendant","setDescribedByIds","ids","onContainerClick","shouldLabelFloat","MatSelect_Factory","contentQueries","MatSelect_ContentQueries","dirIndex","ɵɵcontentQuery","MatSelect_Query","CdkConnectedOverlay","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","numberAttribute","MatFormFieldControl","ɵɵNgOnChangesFeature","MatSelect_Template","_r1","MatSelect_Template_div_click_0_listener","ɵɵnamespaceSVG","MatSelect_Template_ng_template_backdropClick_10_listener","MatSelect_Template_ng_template_overlayKeydown_10_listener","fallbackOverlayOrigin_r4","ɵɵreference","NgClass","ContentChildren","descendants","ContentChild","MatSelectTrigger","_MatSelectTrigger","MatSelectTrigger_Factory","ɵdir","ɵɵdefineDirective","Directive","MatSelectModule","_MatSelectModule","MatSelectModule_Factory","OverlayModule","CdkScrollableModule","MatFormFieldModule","MatPaginator_Conditional_2_Conditional_3_For_4_Template","pageSizeOption_r3","$implicit","MatPaginator_Conditional_2_Conditional_3_Template","MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener","_changePageSize","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIdentity","MatPaginator_Conditional_2_Conditional_3_Template_div_click_5_listener","selectRef_r4","_formFieldAppearance","pageSize","_pageSizeLabelId","selectConfig","ɵɵrepeater","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","_intl","itemsPerPageLabel","MatPaginator_Conditional_6_Template","_r5","MatPaginator_Conditional_6_Template_button_click_0_listener","_buttonClicked","_previousButtonsDisabled","firstPageLabel","MatPaginator_Conditional_13_Template","_r6","MatPaginator_Conditional_13_Template_button_click_0_listener","getNumberOfPages","_nextButtonsDisabled","lastPageLabel","MatPaginatorIntl","_MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","endIndex","min","MatPaginatorIntl_Factory","ɵprov","ɵɵdefineInjectable","token","Injectable","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","Optional","SkipSelf","DEFAULT_PAGE_SIZE","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginator","_MatPaginator","_intlChanges","_isInitialized","_initializedStream","ReplaySubject","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","p","hidePageSize","showFirstLastButtons","initialized","defaults","formFieldAppearance","unsubscribe","nextPage","hasNextPage","_navigate","previousPage","hasPreviousPage","firstPage","lastPage","maxPageIndex","ceil","previousPageIndex","floor","_emitPageEvent","slice","push","previousIndex","targetIndex","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","ɵɵnamespaceHTML","MatPaginator_Template_button_click_10_listener","MatFormField","MatIconButton","MatTooltip","MatPaginatorModule","_MatPaginatorModule","MatPaginatorModule_Factory","MatButtonModule","MatTooltipModule","MatSortHeader_Conditional_3_Template","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MAT_SORT_DEFAULT_OPTIONS","MatSort","_MatSort","sortables","Map","start","_direction","disableClear","sortChange","register","sortable","has","set","deregister","delete","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","MatSort_Factory","ɵɵdirectiveInject","decorators","Inject","alias","sortOrder","MatSortHeaderIntl","_MatSortHeaderIntl","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MatSortHeader","_MatSortHeader","_sort","_columnDef","_focusMonitor","FocusMonitor","_ariaDescriber","AriaDescriber","_renderChanges","_animationModule","_recentlyCleared","signal","_sortButton","arrowPosition","sortActionDescription","_sortActionDescription","_updateSortActionDescription","defaultOptions","name","querySelector","ngAfterViewInit","monitor","stopMonitoring","removeDescription","_toggleOnInteraction","_isDisabled","wasSorted","_isSorted","prevDirection","_getAriaSortAttribute","_renderArrow","newDescription","describe","MatSortHeader_Factory","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","attrs","MatSortHeader_Template","MatSortModule","_MatSortModule","MatSortModule_Factory","CdkTable_Conditional_2_Template","CdkTable_Conditional_3_Template","ɵɵelementContainer","CdkTable_Conditional_4_Template","CdkTextColumn_th_1_Template","ɵɵstyleProp","justify","headerText","CdkTextColumn_td_2_Template","data_r2","dataAccessor","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","_CdkCellDef","TemplateRef","CdkCellDef_Factory","CdkHeaderCellDef","_CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","_CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDef","_CdkColumnDef","_table","_hasStickyChanged","_name","_setNameInput","sticky","_sticky","stickyEnd","_stickyEnd","cell","headerCell","footerCell","cssClassFriendlyName","_columnCssClassName","hasStickyChanged","resetStickyChanged","_updateColumnCssClassName","replace","CdkColumnDef_Factory","CdkColumnDef_ContentQueries","BaseCdkCell","columnDef","CdkHeaderCell","_CdkHeaderCell","CdkHeaderCell_Factory","ɵɵInheritDefinitionFeature","CdkFooterCell","_CdkFooterCell","role","_getCellRole","CdkFooterCell_Factory","CdkCell","_CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","__CoalescedStyleScheduler","_currentSchedule","_ngZone","NgZone","schedule","task","_createScheduleIfNeeded","scheduleEnd","runOutsideAngular","queueMicrotask","_CoalescedStyleScheduler_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_BaseRowDef","_differs","IterableDiffers","columns","_columnsDiffer","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","_CdkHeaderRowDef","CdkHeaderRowDef_Factory","_CdkFooterRowDef","CdkFooterRowDef_Factory","CdkRowDef","_CdkRowDef","when","CdkRowDef_Factory","CdkCellOutlet","_CdkCellOutlet","_viewContainer","ViewContainerRef","cells","context","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","_CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","Default","CdkFooterRow","_CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","_CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","_CdkNoDataRow","templateRef","_contentClassName","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_tableInjector","_elemSizeCache","WeakMap","_resizeObserver","globalThis","ResizeObserver","entries","_updateCachedSizes","_updatedStickyColumnsParamsToReplay","_stickyColumnsReplayTimeout","_cachedCellWidths","_borderCellCss","_destroyed","clearStickyPositioning","rows","stickyDirections","includes","_removeFromStickyColumnReplayQueue","elementsToClear","row","nodeType","ELEMENT_NODE","from","children","_afterNextRender","write","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","replay","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","isRtl","end","lastStickyStart","lastIndexOf","firstStickyEnd","cellWidths","startPositions","endPositions","_updateStickyColumnReplayQueue","earlyRead","_getCellWidths","_getStickyStartColumnPositions","_getStickyEndColumnPositions","_addStickyStyle","w","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","_retrieveElementSize","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","disconnect","contains","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","cachedSize","clientRect","size","observe","box","params","rowsSet","Set","update","needsColumnUpdate","entry","newEntry","borderBoxSize","inlineSize","blockSize","contentRect","target","isCell","spec","afterNextRender","injector","klass","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","_CdkRecycleRows","CdkRecycleRows_Factory","_VIEW_REPEATER_STRATEGY","useClass","_RecycleViewRepeaterStrategy","DataRowOutlet","_DataRowOutlet","viewContainer","table","_rowOutlet","_outletAssigned","DataRowOutlet_Factory","HeaderRowOutlet","_HeaderRowOutlet","_headerRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","_FooterRowOutlet","_footerRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","_NoDataRowOutlet","_noDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","CdkTable","_CdkTable","_platform","Platform","_viewRepeater","_stickyPositioningListener","skipSelf","_document","DOCUMENT","_data","_onDestroy","_renderRows","_renderChangeSubscription","_columnDefsByName","_rowDefs","_headerRowDefs","_footerRowDefs","_dataDiffer","_defaultRowDef","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_customNoDataRow","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","_stickyStyler","stickyCssClass","needsPositionStickyOnElement","_isServer","_isShowingNoDataRow","_hasAllOutlets","_hasInitialized","_cellRoleInternal","tableRole","getAttribute","trackBy","_trackByFn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_multiTemplateDataRows","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","contentChanged","viewChange","BehaviorSubject","Number","MAX_VALUE","_contentColumnDefs","_contentRowDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_noDataRow","_injector","Injector","isBrowser","nodeName","_setupStickyStyler","_i","dataRow","dataIndex","ngAfterContentChecked","_canRender","_render","def","isDataSource","renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","_ViewRepeaterOperation","INSERTED","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","closestTableSection","display","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","_cacheRowDefs","_cacheColumnDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_observeRenderChanges","_checkStickyStates","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","defaultRowDefs","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","dataStream","connect","isObservable","of","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","renderIndex","count","last","even","odd","columnId","stickyCheckReducer","d","items","shouldShow","container","rootNode","CdkTable_Factory","CdkTable_ContentQueries","CdkTable_HostBindings","_DisposeViewRepeaterStrategy","useValue","CdkTable_Template","array","concat","section","uppercaseSection","toUpperCase","current","parentNode","CdkTextColumn","_CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","_CdkTableModule","CdkTableModule_Factory","ScrollingModule","MatTable_Conditional_2_Template","MatTable_Conditional_3_Template","MatTable_Conditional_4_Template","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatRecycleRows","_MatRecycleRows","MatRecycleRows_Factory","MatTable","_MatTable","ɵMatTable_BaseFactory","MatTable_Factory","ɵɵgetInheritedFactory","MatTable_HostBindings","MatTable_Template","MatCellDef","_MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatHeaderCellDef","_MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","_MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","_MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatHeaderCell","_MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatFooterCell","_MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatCell","_MatCell","ɵMatCell_BaseFactory","MatCell_Factory","ROW_TEMPLATE","MatHeaderRowDef","_MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatFooterRowDef","_MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","_MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatHeaderRow","_MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatFooterRow","_MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","_MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatNoDataRow","_MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatTextColumn","_MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTableModule","_MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","DataSource","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","filteredData","_filterData","_updateChangeSubscription","paginator","_paginator","sortingDataAccessor","sortHeaderId","_isNumberValue","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","transformedFilter","toLowerCase","Object","initialData","pageChange","combineLatest","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","BROWSER_STORAGE","localStorage","BrowserStorageService","_BrowserStorageService","storage","key","getItem","setItem","removeItem","LOCAL_STORAGE_KEY","ThemeManagerService","_ThemeManagerService","document","browserStorage","isDark","_window","defaultView","themeSignal","overflow","x","y","scrollbars","theme","autoHide","autoHideDelay","customScrollbarOptions","visibility","getStoredTheme","parse","setStoredTheme","meta","getPreferredTheme","storedTheme","log","matchMedia","matches","setTheme","documentElement","setMaterialTheme","addEventListener","href","getLinkElementForKey","removeStyle","existingLinkElement","getExistingLinkElementByKey","head","removeChild","changeTheme","scrollbarTheme","__spreadProps","__spreadValues","createLinkElementWithKey","getClassNameForKey","linkEl","createElement","appendChild","PaginatorI18nService","_PaginatorI18nService","amountPages","ActivePageService","_ActivePageService","pageTitle","backNavigation","toSignal","assertNotInReactiveContext","requiresCleanup","manualCleanup","assertInInjectionContext","cleanupRef","DestroyRef","equal","makeToSignalEqual","requireSync","kind","initialValue","sub","rejectErrors","RuntimeError","onDestroy","bind","computed","userEquality","is","ScreenSizeService","_ScreenSizeService","breakpointObserver","BreakpointObserver","compactBP","mediumBP","expandedBP","screenSize","result","isCompact","breakpoints","isMedium","isExpanded","shareReplay","bufferSize","refCount","tap","CountriesLibService","_CountriesLibService","http","HttpClient","apiURLCountriesLib","environment","apiURL","getCountriesLib","lang","LoadingOverlayService","_LoadingOverlayService","overlayRef","loadingCount","spinnerShown","show","showSpinner","createOverlay","hide","detach","dispose","positionStrategy","global","centerHorizontally","centerVertically","hasBackdrop","backdropClass","scrollStrategy","block","spinnerPortal","ComponentPortal","SpinnerComponent","attach","blankPortal","BlankOverlayComponent","loadingInterceptor","req","shouldShowSpinner","headers","loadingOverlayService","finalize","DynamicFabButtonComponent","_DynamicFabButtonComponent","isScrolling","input","matTooltip","newButtonString","newFabEvent","output","DynamicFabButtonComponent_Template","DynamicFabButtonComponent_Template_button_click_0_listener","CommonModule","MatFabButton","MatIconModule","MatIcon","className","filePath","lineNumber","clientName","PageToolbarComponent_Conditional_2_Conditional_4_Conditional_7_Template_button_click_0_listener","_r4","printEvent","PageToolbarComponent_Conditional_2_Conditional_4_Conditional_2_Template","PageToolbarComponent_Conditional_2_Conditional_4_Conditional_7_Template","PageToolbarComponent_Conditional_2_Conditional_4_Template_button_click_8_listener","deleteEvent","getDynamicPageTypeString","ɵɵpureFunction1","editMode","itemName","pageType","reuseProgram","PageToolbarComponent_Conditional_2_Template_button_click_1_listener","cancelEvent","PageToolbarComponent_Conditional_2_Conditional_4_Template","PageToolbarComponent_Conditional_2_Conditional_5_Template","PageToolbarComponent_Conditional_5_Template_button_click_0_listener","ɵɵi18n","PageToolbarComponent_Conditional_6_Template_button_click_0_listener","onSubmit","isLoading","PageToolbarComponent_Conditional_7_Conditional_0_Template_ui_dynamic_fab_button_newFabEvent_0_listener","_r7","PageToolbarComponent_Conditional_7_Conditional_1_Template_button_click_0_listener","_r8","newEvent","PageToolbarComponent_Conditional_7_Conditional_0_Template","PageToolbarComponent_Conditional_7_Conditional_1_Template","tmp_1_0","PageToolbarComponent","_PageToolbarComponent","router","Router","shareStateService","ShareStateService","screenSizeService","cancelButton","submitButton","newButton","isClientProgram","submitEvent","action","i18n_0","PageToolbarComponent_Conditional_2_Template","PageToolbarComponent_Conditional_3_Template","PageToolbarComponent_Conditional_5_Template","PageToolbarComponent_Conditional_6_Template","PageToolbarComponent_Conditional_7_Template","NgStyle","MatButton","MatDividerModule","MatDivider","MatChip_Conditional_3_Template","MatChip_Conditional_7_Template","MatChipOption_Conditional_3_Template","MatChipOption_Conditional_7_Template","MatChipRow_Conditional_0_Template","MatChipRow_Conditional_2_Template","MatChipRow_Conditional_4_Conditional_0_Template","MatChipRow_Conditional_4_Conditional_1_Template","MatChipRow_Conditional_4_Template","contentEditInput","MatChipRow_Conditional_5_Template","MatChipRow_Conditional_7_Template","_c5","_c6","MAT_CHIPS_DEFAULT_OPTIONS","separatorKeyCodes","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","MatChipAction","_MatChipAction","_parentChip","isInteractive","_isPrimary","_allowFocusWhenDisabled","_getDisabledAttribute","_getTabindex","_handleClick","_handlePrimaryActionInteraction","_isEditing","MatChipAction_Factory","MatChipAction_HostBindings","MatChipAction_click_HostBindingHandler","MatChipAction_keydown_HostBindingHandler","MatChipAvatar","_MatChipAvatar","MatChipAvatar_Factory","MatChipTrailingIcon","_MatChipTrailingIcon","ɵMatChipTrailingIcon_BaseFactory","MatChipTrailingIcon_Factory","MatChipRemove","_MatChipRemove","stopPropagation","ɵMatChipRemove_BaseFactory","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChip","_MatChip","_globalRippleOptions","MAT_RIPPLE_GLOBAL_OPTIONS","_isBasicChip","_hasFocusInternal","_pendingFocus","_actionChanges","_allLeadingIcons","_allTrailingIcons","_allRemoveIcons","_hasFocus","ariaDescription","_ariaDescriptionId","_chipListDisabled","_textElement","removable","highlighted","destroyed","basicChipAttrName","leadingIcon","trailingIcon","removeIcon","primaryAction","_rippleLoader","MatRippleLoader","animationMode","_monitorFocus","configureRipple","_isRippleDisabled","hasAttribute","tagName","setDisabled","destroyRipple","chip","_hasTrailingIcon","BACKSPACE","repeat","DELETE","_getSourceAction","_getActions","origin","hasFocus","run","MatChip_Factory","MatChip_ContentQueries","MatChip_Query","MatChip_HostBindings","MatChip_keydown_HostBindingHandler","ɵɵclassMap","MatChip_Template","MatChipOption","_MatChipOption","chipListSelectable","_chipListMultiple","_chipListHideSingleSelectionIndicator","selectable","_selectable","_setSelectedState","ariaSelected","selectViaInteraction","toggleSelected","_hasLeadingGraphic","ɵMatChipOption_BaseFactory","MatChipOption_Factory","MatChipOption_HostBindings","MatChipOption_Template","MatChipEditInput","_MatChipEditInput","initialize","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipEditInput_Factory","MatChipRow","_MatChipRow","_editStartPending","editable","edited","defaultEditInput","_onEditFinish","_handleFocus","_startEditing","_handleDoubleclick","_getEditInput","activeElement","body","MatChipRow_Factory","MatChipRow_ContentQueries","MatChipRow_Query","MatChipRow_HostBindings","MatChipRow_focus_HostBindingHandler","MatChipRow_dblclick_HostBindingHandler","MatChipRow_Template","MatChipSet","_MatChipSet","_lastDestroyedFocusedChipIndex","_defaultRole","chipFocusChanges","_getChipStream","chipDestroyedChanges","chipRemovedChanges","_syncChipsState","_chips","_explicitRole","_hasFocusedChip","_chipActions","QueryList","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","_originatesFromChip","_isValidIndex","_allowFocusEscape","previous","mappingFunction","currentElement","parentElement","chips","actions","reset","notifyOnChanges","FocusKeyManager","_redirectDestroyedChipFocus","chipArray","chipIndex","newIndex","chipToFocus","setPreviousItemActive","MatChipSet_Factory","MatChipSet_ContentQueries","MatChipSet_HostBindings","MatChipSet_keydown_HostBindingHandler","MatChipSet_Template","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatChipListbox","multi","_MatChipListbox","_syncListboxProperties","selectedChips","ariaOrientation","chipSelectionChanges","chipBlurChanges","_blur","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","_clearSelection","_selectValue","_markAsTouched","_keydown","TAB","skip","correspondingChip","ɵMatChipListbox_BaseFactory","MatChipListbox_Factory","MatChipListbox_ContentQueries","MatChipListbox_HostBindings","MatChipListbox_focus_HostBindingHandler","MatChipListbox_blur_HostBindingHandler","MatChipListbox_keydown_HostBindingHandler","MatChipListbox_Template","MatChipGridChange","MatChipGrid","_MatChipGrid","_chipInput","_ariaDescribedbyIds","registerInput","inputElement","_focusLastChip","eligibleActions","delta","MatChipGrid_Factory","MatChipGrid_ContentQueries","MatChipGrid_HostBindings","MatChipGrid_focus_HostBindingHandler","MatChipGrid_blur_HostBindingHandler","MatChipGrid_Template","MatChipInput","_MatChipInput","chipGrid","_chipGrid","addOnBlur","chipEnd","formField","_emitChipEnd","_focus","_isSeparatorKey","chipInput","_onInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","MatChipInput_input_HostBindingHandler","invalid","CHIP_DECLARATIONS","MatChipsModule","_MatChipsModule","MatChipsModule_Factory","createCache","t","n","s","u","e","c","r","cacheUpdateContextual","l","cacheUpdateIsolated","getCurrentCache","HTMLElement","round","abs","sign","cancelAnimationFrame","requestAnimationFrame","getApi","_","f","v","isUndefined","isNull","isNumber","isString","isBoolean","isFunction","isObject","isArrayLike","isPlainObject","isHTMLElement","isElement","Element","each","keys","inArray","concat2","prototype","apply","createOrKeepArray","isEmptyArray","deduplicateArray","runEachAndClear","runFn","h","g","S","m","O","$","C","H","E","capitalizeFirstLetter","String","equalWH","equalXY","equalTRBL","noop","selfClearTimeout","debounce","invokeFunctionToDebounce","mergeParms","flush","debouncedFn","arguments","v2","hasOwnProperty","call","assignDeep","removeUndefinedProperties","isEmptyObject","capNumber","getDomTokensArray","split","getAttr","hasAttr","setAttrs","removeAttrs","domTokenListAttr","domTokenListOperation","removeAttrClass","addAttrClass","addRemoveAttrClass","hasAttrClass","createDomTokenListClass","removeClass","addClass","querySelectorAll","findFirst","isBodyElement","contents","childNodes","getFocusedElement","liesBetween","removeElements","appendChildren","createDiv","createDOM","innerHTML","getCSSVal","getPropertyValue","validFiniteNumber","isFinite","parseToZeroOrNumber","parseFloat","roundCssNumber","numberToCssPx","setStyles","setProperty","getStyles","getComputedStyle","topRightBottomLeft","getTrasformTranslateValue","elementHasDimensions","offsetWidth","getClientRects","z","getElmWidthHeightProperty","getWindowSize","I","D","getFractionalSize","hasDimensions","domRectHasDimensions","domRectAppeared","removeEventListener","passive","capture","stopAndPrevent","scrollElementTo","scrollLeft","getElementScroll","getZeroScrollCoordinates","M","sanitizeScrollCoordinates","sanitizeAxis","isDefaultDirectionScrollCoordinates","getAxis","getScrollCoordinatesPercent","focusElement","preventScroll","manageListener","createEventListenerHub","removeEvent","addEvent","triggerEvent","opsStringify","getPropByPath","paddingAbsolute","showNativeOverlaidScrollbars","elementEvents","attributes","ignoreMutation","autoHideSuspend","dragScroll","clickScroll","pointers","getOptionsDiff","createOptionCheck","T","k","R","V","L","U","P","N","q","B","F","X","Y","W","J","G","K","Q","Z","tt","nt","ot","st","et","ct","rt","lt","it","at","ut","dt","ft","vt","pt","ht","gt","bt","wt","yt","St","getNonce","setNonce","mt","createEnvironment","getNativeScrollbarSize","getNativeScrollbarsHiding","firstChild","lastChild","nonce","padding","viewport","content","slot","cancel","nativeScrollbarsOverlaid","addZoomListener","devicePixelRatio","getEnvironment","resolveInitialization","staticInitializationElement","dynamicInitializationElement","cancelInitialization","Ot","addInstance","removeInstance","getInstance","createEventContentChange","updateElements","createDOMObserver","observerCallback","attributeName","oldValue","addedNodes","removedNodes","attributeOldValue","attributeFilter","subtree","childList","characterData","takeRecords","$t","Ct","addPlugins","registerPluginModuleInstances","instance","getStaticPluginModuleInstance","xt","Ht","getShowNativeOverlaidScrollbars","overflowIsVisible","createViewportOverflowState","getAxisOverflowStyle","zt","At","createSizeObserver","onSizeChangedCallbackProxy","ResizeObserverEntry","pop","createTrinsicObserver","isHeightIntrinsic","isIntersecting","intersectionRatio","triggerOnTrinsicChangedCallback","intersectionObserverCallback","root","onSizeChanged","createObserversSetup","getDirectionIsRTL","setDirection","onTrinsicChanged","onContentMutation","onHostMutation","Et","It","Dt","ignoreMutationFromOptions","createScrollbarsSetupElements","Mt","initScrollTimeline","axis","_addScrollPercentAnimation","Tt","animate","timeline","kt","getViewportPercent","Rt","Vt","getAxisValue","scrollbarStructureAddRemoveClass","scrollbarStyle","scrollbarsAddRemoveClass","refreshScrollbarsHandleLength","createScrollbarStyleFn","refreshScrollbarsHandleOffset","Lt","refreshScrollbarsScrollCoordinates","refreshScrollbarsScrollbarOffset","styleScrollbarPosition","getTranslateValue","generateScrollbarDOM","Ut","Pt","appendElements","Nt","qt","Bt","Ft","jt","Xt","Yt","Wt","Jt","Gt","createScrollbarsSetupEvents","Kt","scrollOffsetElementScrollBy","scrollBy","behavior","createInteractiveScrollEvents","createRelativeHandleMove","button","isPrimary","pointerType","getHandleOffset","releasePointerCapture","pointerId","setPointerCapture","deltaX","deltaY","deltaMode","createScrollbarsSetup","isHoverablePointerType","manageScrollbarsAutoHideInstantInteraction","Qt","manageScrollbarsAutoHide","manageAutoHideSuspension","onHostMouseEnter","Zt","tn","nn","sn","en","cn","rn","setScrollbarVisibility","createStructureSetupElements","ownerDocument","getDocumentWindow","elementHasOverflow","elementIsGenerated","ln","an","un","unwrap","prepareWrapUnwrapFocus","createTrinsicUpdateSegment","_n","createPaddingUpdateSegment","dn","createOverflowUpdateSegment","flexDirection","endsWith","writingMode","setMeasuringMode","getMeasuredScrollCoordinates","isTrusted","getOverflowAmount","createViewportOverflowStyleClassName","setViewportOverflowStyle","createAllOverflowStyleClassNames","vn","createStructureSetup","createSetups","updateHintsAreTruthy","pn","hn","gn","bn","wn","yn","OverlayScrollbars","validateOptions","updateHints","sizeChanged","directionChanged","heightIntrinsicChanged","overflowEdgeChanged","overflowAmountChanged","overflowStyleChanged","scrollCoordinatesChanged","contentMutation","hostMutation","appear","changedOptions","force","on","off","overflowEdge","overflowAmount","overflowStyle","hasOverflow","scrollCoordinates","directionRTL","translateScrollbarStructure","scrollbar","track","handle","translateScrollbarsSetupElement","clone","scrollOffsetElement","scrollEventElement","scrollbarHorizontal","scrollbarVertical","plugin","valid","env","scrollbarsSize","scrollbarsOverlaid","scrollbarsHiding","scrollTimeline","staticDefaultInitialization","staticDefaultOptions","getDefaultInitialization","setDefaultInitialization","getDefaultOptions","setDefaultOptions","createDefer","noop2","idleId","rafId","wnd","idleSupported","requestIdleCallback","rAF","cAF","rIdle","cIdle","cancelIdleCallback","callback","timeout","OverlayScrollbarsDirective","ngZone","instanceRef","requestDefer","cancelDefer","osInitialize","init","events","osInstance","optionsChange","eventsChange","curr","OverlayScrollbarsDirective_Factory","standalone","mergeEventListeners","emits","emitListener","eventListener","Boolean","OverlayScrollbarsComponent","targetRef","onInitialized","onUpdated","onDestroyed","onScroll","osDirective","getElement","targetElm","contentElm","contentRef","mergeEvents","originalEvents","dispatchEventIfHasObservers","updated","scroll","eventEmitter","observed","observers","OverlayScrollbarsComponent_Factory","OverlayScrollbarsComponent_Query","OverlayScrollbarsComponent_Template","read","OverlayscrollbarsModule","OverlayscrollbarsModule_Factory","declarations","_MatInternalFormField","__MatInternalFormField","labelPosition","_MatInternalFormField_Factory","_MatInternalFormField_HostBindings","_MatInternalFormField_Template","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","LOCALE_ID","NOT_IMPLEMENTED","DateAdapter","locale","_localeChanges","localeChanges","setTime","hours","minutes","seconds","getHours","date","getMinutes","getSeconds","parseTime","parseFormat","addSeconds","amount","getValidDateOrNull","isDateInstance","isValid","deserialize","setLocale","compareDate","second","getYear","getMonth","getDate","compareTime","sameDate","firstValid","secondValid","sameTime","clampDate","MAT_DATE_FORMATS","VERSION","Version","ISO_8601_REGEX","TIME_REGEX","valueFunction","valuesArray","NativeDateAdapter","_NativeDateAdapter","useUtcForDisplay","_matDateLocale","matDateLocale","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","Locale","firstDay","getWeekInfo","weekInfo","getNumDaysInMonth","_createDateWithOverflow","getTime","createDate","today","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","test","isNaN","NaN","inRange","setHours","userValue","_parseTimeString","withoutExtras","setFullYear","setUTCFullYear","setUTCHours","getMilliseconds","parsed","match","amPm","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","timeInput","hour","minute","monthYearLabel","dateA11yLabel","monthYearA11yLabel","timeOptionLabel","NativeDateModule","_NativeDateModule","NativeDateModule_Factory","MatNativeDateModule","_MatNativeDateModule","MatNativeDateModule_Factory","provideNativeDateAdapter","formats","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","disabledInteractive","TransitionCheckState","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","MatCheckboxChange","checked","_MatCheckbox","_animationMode","_inputElement","_createChangeEvent","isChecked","_getAnimationTargetElement","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaDescribedby","ariaExpanded","ariaControls","ariaOwns","_uniqueId","inputId","indeterminateChange","_labelElement","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_validatorChangeFn","_syncIndeterminate","_indeterminate","_checked","indeterminate","_transitionCheckState","Indeterminate","Checked","Unchecked","_onLabelTextChange","validate","registerOnValidatorChange","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","_emitChangeEvent","_handleInputClick","_onInteractionEvent","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","MatCheckbox_Factory","MatCheckbox_Query","MatCheckbox_HostBindings","NG_VALIDATORS","MatCheckbox_Template","MatCheckbox_Template_div_click_0_listener","MatCheckbox_Template_div_click_3_listener","MatCheckbox_Template_input_blur_4_listener","MatCheckbox_Template_input_click_4_listener","MatCheckbox_Template_input_change_4_listener","checkbox_r2","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","_MatCheckboxRequiredValidator","CheckboxRequiredValidator","ɵMatCheckboxRequiredValidator_BaseFactory","MatCheckboxRequiredValidator_Factory","_MatCheckboxRequiredValidatorModule","__MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","_MatCheckboxModule","MatCheckboxModule_Factory","MatProgressSpinner_ng_template_0_Template","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinner","_MatProgressSpinner","_noopAnimations","_color","_defaultColor","_determinateCircle","_forceAnimations","mode","strokeWidth","_diameter","_strokeWidth","viewBox","PI","_strokeDashOffset","MatProgressSpinner_Factory","MatProgressSpinner_Query","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","ɵɵtemplateRefExtractor","circle_r2","NgTemplateOutlet","MatSpinner","MatProgressSpinnerModule","_MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","_c43","a0","a1","MatSelectSearchComponent_mat_checkbox_4_Template","_r2","MatSelectSearchComponent_mat_checkbox_4_Template_mat_checkbox_change_0_listener","ctx_r2","_emitSelectAllBooleanToParent","matFormField","toggleAllCheckboxChecked","toggleAllCheckboxIndeterminate","toggleAllCheckboxTooltipMessage","toggleAllCheckboxTooltipPosition","MatSelectSearchComponent_mat_spinner_7_Template","MatSelectSearchComponent_button_8_ng_content_1_Template","MatSelectSearchComponent_button_8_ng_template_2_Template","closeSvgIcon","closeIcon","MatSelectSearchComponent_button_8_Template","MatSelectSearchComponent_button_8_Template_button_click_0_listener","_reset","defaultIcon_r5","clearIcon","MatSelectSearchComponent_div_11_ng_content_1_Template","MatSelectSearchComponent_div_11_ng_template_2_Template","noEntriesFoundLabel","MatSelectSearchComponent_div_11_Template","defaultNoEntriesFound_r6","noEntriesFound","MatSelectSearchClearDirective","_MatSelectSearchClearDirective","MatSelectSearchClearDirective_Factory","configurableDefaultOptions","MAT_SELECTSEARCH_DEFAULT_OPTIONS","MatSelectNoEntriesFoundDirective","_MatSelectNoEntriesFoundDirective","MatSelectNoEntriesFoundDirective_Factory","MatSelectSearchComponent","_MatSelectSearchComponent","matSelect","changeDetectorRef","matOption","placeholderLabel","clearSearchInput","searching","disableInitialFocus","enableClearOnEscapePressed","preventHomeEndKeyPropagation","disableScrollToActiveOnOptionsChanged","showToggleAllCheckbox","hideClearSearchButton","alwaysRestoreSelectedOptionsMulti","recreateValuesArray","toggleAll","searchSelectInput","innerSelectSearch","_formControl","_lastExternalInputValue","onTouched","_options$","optionsList$","optionsLength$","previousSelectedValues","FormControl","nonNullable","_showNoEntriesFound$","valueChanges","optionsLength","getOptionsLengthOffset","activeDescendant","applyDefaultOptions","delay","opened","updateInputWidth","previousFirstOption","currentFirstOption","keyManager","firstOptionIsChanged","showNoEntriesFound","initMultipleHandling","_isToggleAllCheckboxVisible","_handleKeyup","ariaActiveDescendantId","findIndex","unselectActiveDescendant","onBlur","restoreSelectedValues","optionValues","previousValue","panelElement","clientWidth","MatSelectSearchComponent_Factory","MatSelectSearchComponent_ContentQueries","MatSelectSearchComponent_Query","MatSelectSearchComponent_Template","MatSelectSearchComponent_Template_input_keydown_5_listener","MatSelectSearchComponent_Template_input_keyup_5_listener","MatSelectSearchComponent_Template_input_blur_5_listener","ɵɵpipe","ɵɵpureFunction2","ɵɵpipeBind1","NgIf","DefaultValueAccessor","NgControlStatus","FormControlDirective","AsyncPipe","NgxMatSelectSearchModule","_NgxMatSelectSearchModule","NgxMatSelectSearchModule_Factory","ReactiveFormsModule","UX_MODULE_MATERIAL","UsersModule","_UsersModule","RouterModule","forChild","usersRoutes","FormsModule","LoginComponent","jwtInterceptor","localStorageService","LocalstorageService","getToken","isAPIUrl","url","startsWith","setHeaders","Authorization","country_r1","ClientFullEditFormComponent_Conditional_58_Conditional_1_Defer_2_Template","ClientFullEditFormComponent_Conditional_58_Conditional_1_DeferPlaceholder_3_Template","ɵɵdefer","ClientFullEditFormComponent_Conditional_58_Conditional_1_Defer_4_DepsFn","ɵɵdeferEnableTimerScheduling","ClientFullEditFormComponent_Conditional_58_For_15_Template_mat_chip_row_removed_0_listener","qualification_r4","ctx_r4","removeQualification","ClientFullEditFormComponent_Conditional_58_For_15_Template_mat_chip_row_edited_0_listener","editQualification","ClientFullEditFormComponent_Conditional_58_For_23_Template_mat_chip_row_removed_0_listener","licence_r7","removeLicence","ClientFullEditFormComponent_Conditional_58_For_23_Template_mat_chip_row_edited_0_listener","editLicence","ClientFullEditFormComponent_Conditional_58_Conditional_1_Template","ClientFullEditFormComponent_Conditional_58_For_15_Template","ClientFullEditFormComponent_Conditional_58_Template_input_matChipInputTokenEnd_16_listener","addQualification","ClientFullEditFormComponent_Conditional_58_For_23_Template","ClientFullEditFormComponent_Conditional_58_Template_input_matChipInputTokenEnd_24_listener","addLicence","isUserForm","qualificationsFormCtrl","qualifications","separatorKeysCodes","qualificationsChipGrid_r8","licencesFormCtrl","licences","licencesChipGrid_r9","ClientFullEditFormComponent","_ClientFullEditFormComponent","controlContainer","ControlContainer","announcer","countriesLibService","isClient","countries","countryFilterCtrl","filteredCountries","COMMA","themeManager","_getCountries","filterCountries","_initForm","localeCompare","clientInfoForm","form","countryCtrl","setInitialValue","singleSelect","search","country","qualification","splice","licence","ClientFullEditFormComponent_Query","ClientFullEditFormComponent_Conditional_10_Template","ClientFullEditFormComponent_Conditional_15_Template","ClientFullEditFormComponent_Conditional_21_Template","ClientFullEditFormComponent_Conditional_26_Template","ClientFullEditFormComponent_For_56_Template","ClientFullEditFormComponent_Conditional_58_Template","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","ɵNgNoValidate","NgControlStatusGroup","FormControlName","FormGroupName","MatLabel","MatInput","MatError","AnimationMetadataType","AUTO_STYLE","definitions","Trigger","timings","Animate","sequence","steps","Sequence","tokens","Style","State","transition","stateChangeExpr","Transition","expr","animation","AnimationBuilder","_AnimationBuilder","AnimationBuilder_Factory","BrowserAnimationBuilder","AnimationFactory","_BrowserAnimationBuilder","animationModuleType","_nextAnimationId","rootRenderer","doc","typeData","createRenderer","isAnimationRenderer","build","issueAnimationCommand","BrowserAnimationFactory","BrowserAnimationBuilder_Factory","ɵɵinject","RendererFactory2","Document","RendererAnimationPlayer","parentPlayer","_started","_command","_listen","eventName","command","onDone","onStart","hasStarted","play","pause","restart","finish","setPosition","getPosition","unwrapAnimationRenderer","engine","players","totalTime","renderer","ɵtype","animationRenderer","NoopAnimationPlayer","_onDoneFns","_onStartFns","_onDestroyFns","_originalOnDoneFns","_originalOnStartFns","_finished","_position","duration","_onFinish","_onStart","triggerMicrotask","triggerCallback","phaseName","methods","AnimationGroupPlayer","_players","doneCount","destroyCount","startCount","total","player","time","timeAtPosition","longestPlayer","longestSoFar","newPlayerIsLongest","beforeDestroy","ɵPRE_STYLE","CdkDialogContainer_ng_template_0_Template","DialogConfig","viewContainerRef","disableClose","minWidth","minHeight","maxWidth","maxHeight","ariaDescribedBy","ariaLabelledBy","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","componentFactoryResolver","templateContext","throwDialogContentAlreadyAttachedError","CdkDialogContainer","_CdkDialogContainer","BasePortalOutlet","_focusTrapFactory","FocusTrapFactory","_config","_interactivityChecker","InteractivityChecker","_overlayRef","OverlayRef","_portalOutlet","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_isDestroyed","_addAriaLabelledBy","_removeAriaLabelledBy","_contentAttached","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","_restoreFocus","attachComponentPortal","portal","hasAttached","attachTemplatePortal","attachDomPortal","_recaptureFocus","_containsFocus","_forceFocus","isFocusable","deregisterBlur","deregisterMousedown","_focusByCssSelector","elementToFocus","focusedSuccessfully","focusInitialElement","_focusDialogContainer","focusConfig","focusTargetElement","_getFocusedElementPierceShadowDom","focusVia","backdropClick","CdkDialogContainer_Factory","CdkDialogContainer_Query","CdkPortalOutlet","CdkDialogContainer_HostBindings","CdkDialogContainer_Template","DialogRef","config","componentInstance","componentRef","containerInstance","closed","keydownEvents","outsidePointerEvents","_detachSubscription","focusOrigin","detachments","closedSubject","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","Dialog","_Dialog","_overlay","_parentDialog","_overlayContainer","OverlayContainer","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","openDialogs","afterOpened","afterAllClosed","_getAfterAllClosed","componentOrTemplateRef","getDialogById","overlayConfig","_getOverlayConfig","dialogRef","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","dialog","OverlayConfig","disposeOnNavigation","userInjector","containerType","containerPortal","containerRef","_createInjector","TemplatePortal","fallbackInjector","overlayContainer","getContainerElement","siblings","sibling","Dialog_Factory","DialogModule","_DialogModule","DialogModule_Factory","PortalModule","A11yModule","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","enterAnimationDuration","exitAnimationDuration","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","MatDialogContainer","_MatDialogContainer","_animationStateChanged","_animationsEnabled","_actionSectionCount","_hostElement","_enterAnimationDuration","parseCssTime","_exitAnimationDuration","_animationTimer","_startOpenAnimation","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","_waitForAnimationToComplete","_finishDialogOpen","_startExitAnimation","_finishDialogClose","_updateActionSectionCount","_clearAnimationClasses","_openAnimationDone","ref","location","ɵMatDialogContainer_BaseFactory","MatDialogContainer_Factory","MatDialogContainer_HostBindings","MatDialogContainer_Template","coerceNumberProperty","substring","MatDialogState","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_result","_closeFallbackTimeout","_state","OPEN","_closeDialogVia","dialogResult","detachBackdrop","CLOSING","afterClosed","beforeClosed","strategy","getState","CLOSED","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MatDialog","_MatDialog","_dialog","dialogConfigClass","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","MatDialog_Factory","MatDialogClose","_MatDialogClose","_matDialogClose","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","MatDialogLayoutSection","_MatDialogLayoutSection","_dialogRef","_onAdd","_onRemove","MatDialogLayoutSection_Factory","MatDialogTitle","_MatDialogTitle","ɵMatDialogTitle_BaseFactory","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","_MatDialogContent","MatDialogContent_Factory","ɵɵHostDirectivesFeature","CdkScrollable","hostDirectives","MatDialogActions","_MatDialogActions","align","ɵMatDialogActions_BaseFactory","MatDialogActions_Factory","MatDialogActions_HostBindings","DIRECTIVES","MatDialogModule","_MatDialogModule","MatDialogModule_Factory","DeleteConfirmationDialogComponent","_DeleteConfirmationDialogComponent","onConfirm","onClose","DeleteConfirmationDialogComponent_Template_button_click_9_listener","DeleteConfirmationDialogComponent_Template_button_click_11_listener","title","message","CDK_ACCORDION","CdkAccordion","_CdkAccordion","_openCloseAllActions","openAll","CdkAccordion_Factory","CdkAccordionItem","_CdkAccordionItem","accordion","_expansionDispatcher","UniqueSelectionDispatcher","_openCloseAllSubscription","Subscription","EMPTY","expandedChange","expanded","_expanded","accordionId","notify","_removeUniqueSelectionListener","_subscribeToOpenCloseAllActions","CdkAccordionItem_Factory","CdkAccordionModule","_CdkAccordionModule","CdkAccordionModule_Factory","MatExpansionPanel_ng_template_7_Template","MatExpansionPanelHeader_Conditional_4_Template","MAT_ACCORDION","MAT_EXPANSION_PANEL","MatExpansionPanelContent","_MatExpansionPanelContent","_template","_expansionPanel","MatExpansionPanelContent_Factory","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_MatExpansionPanel","_viewContainerRef","_cleanupTransitionEnd","hideToggle","_hideToggle","togglePosition","_togglePosition","afterExpand","afterCollapse","_inputChanges","_lazyContent","_body","_bodyWrapper","_portal","_headerId","_hasSpacing","displayMode","_getExpandedState","_setupAnimationEvents","focusedElement","bodyElement","_transitionEndListener","propertyName","MatExpansionPanel_Factory","MatExpansionPanel_ContentQueries","MatExpansionPanel_Query","MatExpansionPanel_HostBindings","MatExpansionPanel_Template","MatExpansionPanelActionRow","_MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","MatExpansionPanelHeader","_MatExpansionPanelHeader","_parentChangeSubscription","accordionHideToggleChange","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","_handleHeaderKeydown","_handleHeaderFocus","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","MatExpansionPanelHeader_Template","MatExpansionPanelDescription","_MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","_MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","_MatAccordion","_ownHeaders","_headers","header","withWrap","ɵMatAccordion_BaseFactory","MatAccordion_Factory","MatAccordion_ContentQueries","MatAccordion_HostBindings","MatExpansionModule","_MatExpansionModule","MatExpansionModule_Factory","selectedExercise_r2","weight","ProgramModalComponent_For_18_Conditional_33_For_4_Conditional_2_Template","equipment_r4","translations","selectedLang","ɵ$index_116_r5","ɵ$count_116_r6","ProgramModalComponent_For_18_Conditional_33_For_4_Template","equipments","ProgramModalComponent_For_18_Template_button_click_11_listener","showExerciseModal","ProgramModalComponent_For_18_Conditional_31_Template","ProgramModalComponent_For_18_Conditional_32_Template","ProgramModalComponent_For_18_Conditional_33_Template","ɵ$index_32_r7","images","mainImg","ɵɵsanitizeUrl","description","sets","reps","program","ProgramModalComponent","_ProgramModalComponent","exercisesService","ExercisesService","subscriptions","_getExercise","exerciseId","getExercise","exerciseCard","isProgramExercise","subscription","exercise","ExerciseModalComponent","fullExercise","ProgramModalComponent_For_18_Template","ProgramModalComponent_Conditional_19_Template","diagnosis","selectedExercises","ɵɵi18nStart","ClientFullEditProgramsComponent_For_15_th_1_Conditional_2_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_3_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_4_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_5_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_6_Template","ɵɵi18nEnd","column_r1","ClientFullEditProgramsComponent_For_15_td_2_Conditional_1_Conditional_1_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_1_Conditional_2_Template","element_r2","isProgramCompleted","ɵɵtextInterpolate2","ɵɵpipeBind2","dateRange","ClientFullEditProgramsComponent_For_15_td_2_Conditional_1_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_2_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_3_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_4_Template","ClientFullEditProgramsComponent_For_15_th_1_Template","ClientFullEditProgramsComponent_For_15_td_2_Template","ɵɵpropertyInterpolate","ClientFullEditProgramsComponent_td_18_Conditional_2_Template_button_click_0_listener","element_r5","ctx_r5","openEditClientProgramDialog","ClientFullEditProgramsComponent_td_18_Conditional_2_Template","ClientFullEditProgramsComponent_td_18_Template_button_click_3_listener","reuseEditProgram","ClientFullEditProgramsComponent_td_18_Template_button_click_6_listener","openDeleteConfirmationDialog","ClientFullEditProgramsComponent_td_18_Template_button_click_9_listener","expandedElement","ClientFullEditProgramsComponent_td_18_Conditional_10_Template","ClientFullEditProgramsComponent_td_18_Conditional_11_Template","ɵɵi18nExp","selectedExercise_r7","ClientFullEditProgramsComponent_td_20_For_4_Conditional_13_For_3_Conditional_2_Template","ɵ$index_160_r9","ɵ$count_160_r10","equipment_r8","selectedLanguage","ClientFullEditProgramsComponent_td_20_For_4_Conditional_13_For_3_Template","ClientFullEditProgramsComponent_td_20_For_4_Conditional_11_Template","ClientFullEditProgramsComponent_td_20_For_4_Conditional_12_Template","ClientFullEditProgramsComponent_td_20_For_4_Conditional_13_Template","ClientFullEditProgramsComponent_td_20_For_4_Template","element_r11","ClientFullEditProgramsComponent_tr_22_Template_tr_click_0_listener","element_r13","_r12","ClientFullEditProgramsComponent_Defer_26_Template_ui_basic_programs_table_getProgramsEvent_0_listener","_r14","getPrograms","ClientFullEditProgramsComponent_Defer_26_Template_ui_basic_programs_table_viewProgramEvent_0_listener","viewProgramModal","ClientFullEditProgramsComponent_Defer_26_Template_ui_basic_programs_table_addProgramToClientEvent_0_listener","addProgramToClient","dataSourceAllPrograms","ClientFullEditProgramsComponent","_ClientFullEditProgramsComponent","programsService","ProgramsService","datePipe","DatePipe","_snackBar","MatSnackBar","formGroupDirective","shareClientsDataService","ShareClientsDataService","clientsService","ClientsService","localstorageService","isFetchingData","columnsToDisplay","dataSourceClientsPrograms","columnsToDisplayWithExpand","selection","clientsPrograms","allPrograms","clientInfo","isBrandNewClientsProgram","_getUserLanguageToken","clientId","client","getClientsPrograms","adaptedProgram","programData","currentDate","programEndDate","programPosition","programId","programName","navigate","queryParams","deleteClientProgram","res","removeAt","isAllSelected","numSelected","numRows","toggleAllRows","createProgram","navigateByUrl","listOption","programsList","getProgram","isTemplate","startDate","endDate","newProgram","notes","templateProgramId","programs","updatedPrograms","updatedClient","firstName","lastName","email","phone","address","street","streetNumber","city","zipCode","updateClient","newAddedProgram","programsArray","ClientFullEditProgramsComponent_Template_button_click_7_listener","ClientFullEditProgramsComponent_For_15_Template","ClientFullEditProgramsComponent_th_17_Template","ClientFullEditProgramsComponent_td_18_Template","ClientFullEditProgramsComponent_td_20_Template","ClientFullEditProgramsComponent_tr_21_Template","ClientFullEditProgramsComponent_tr_22_Template","ClientFullEditProgramsComponent_tr_23_Template","ClientFullEditProgramsComponent_tr_24_Template","ClientFullEditProgramsComponent_Defer_26_Template","ClientFullEditProgramsComponent_DeferPlaceholder_27_Template","ClientFullEditProgramsComponent_Defer_28_DepsFn","ɵɵpureFunction0","MatButtonToggle_Conditional_2_Template","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY","hideMultipleSelectionIndicator","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","MatButtonToggleChange","_MatButtonToggleGroup","_changeDetector","_disabledInteractive","_rawValue","_buttonToggles","appearance","_markButtonsForCheck","vertical","_hideMultipleSelectionIndicator","_initializeTabIndex","buttonId","nextButton","_getNextButton","_syncButtonToggle","deferEvents","_updateModelValue","_isSelected","_isPrechecked","toggles","every","_markForCheck","MatButtonToggleGroup_Factory","MatButtonToggleGroup_ContentQueries","MatButtonToggle","MatButtonToggleGroup_HostBindings","MatButtonToggleGroup_keydown_HostBindingHandler","_MatButtonToggle","_buttonElement","buttonToggleGroup","_tabIndex","_appearance","toggleGroup","defaultTabIndex","newChecked","isSingleSelector","focusable","_getButtonName","MatButtonToggle_Factory","MatButtonToggle_Query","MatButtonToggle_HostBindings","MatButtonToggle_focus_HostBindingHandler","MatButtonToggle_Template","MatButtonToggle_Template_button_click_0_listener","button_r3","MatButtonToggleModule","_MatButtonToggleModule","MatButtonToggleModule_Factory","row_r2","ProgramsTableComponent_td_25_Conditional_1_Conditional_2_Template","ProgramsTableComponent_td_25_Conditional_1_Conditional_3_Template","row_r3","isAdminProgram","ProgramsTableComponent_td_25_Conditional_1_Template","ProgramsTableComponent_td_25_Conditional_2_Template","row_r4","ProgramsTableComponent_td_31_Conditional_2_Template_button_click_0_listener","row_r6","ctx_r6","ProgramsTableComponent_td_31_Conditional_3_Conditional_0_Template_button_click_0_listener","openEditProgram","isAdmin","ProgramsTableComponent_td_31_Conditional_3_Conditional_0_Template","ProgramsTableComponent_td_31_Conditional_4_Template_button_click_0_listener","_r9","ProgramsTableComponent_td_31_Conditional_5_Template_button_click_0_listener","_r10","ProgramsTableComponent_td_31_Conditional_6_Conditional_0_Template_button_click_0_listener","_r11","removeFromFavorites","ProgramsTableComponent_td_31_Conditional_6_Conditional_1_Template_button_click_0_listener","addToFavorites","ProgramsTableComponent_td_31_Conditional_6_Conditional_0_Template","ProgramsTableComponent_td_31_Conditional_6_Conditional_1_Template","isFavorite","ProgramsTableComponent_td_31_Conditional_2_Template","ProgramsTableComponent_td_31_Conditional_3_Template","ProgramsTableComponent_td_31_Conditional_4_Template","ProgramsTableComponent_td_31_Conditional_5_Template","ProgramsTableComponent_td_31_Conditional_6_Template","input_r13","ProgramsTableComponent","_ProgramsTableComponent","displayedColumns","mainProgramsList","getProgramsEvent","reuseEditProgramEvent","openEditProgramEvent","openDeleteConfirmationDialogEvent","favoriteProgram","removeFavoriteProgram","itemId","applyFilter","filterValue","ProgramsTableComponent_Query","ProgramsTableComponent_Template_input_keyup_4_listener","ɵɵtwoWayListener","ProgramsTableComponent_Template_mat_button_toggle_group_ngModelChange_7_listener","ɵɵtwoWayBindingSet","ProgramsTableComponent_Template_mat_button_toggle_group_change_7_listener","ProgramsTableComponent_Conditional_18_Template","ProgramsTableComponent_th_21_Template","ProgramsTableComponent_td_22_Template","ProgramsTableComponent_th_24_Template","ProgramsTableComponent_td_25_Template","ProgramsTableComponent_th_27_Template","ProgramsTableComponent_td_28_Template","ProgramsTableComponent_th_30_Template","ProgramsTableComponent_td_31_Template","ProgramsTableComponent_tr_32_Template","ProgramsTableComponent_tr_33_Template","ProgramsTableComponent_tr_34_Template","ɵɵtwoWayProperty","NgModel","client_r2","FilterSelectClientsComponent","_FilterSelectClientsComponent","clients","clientFilterCtrl","filteredClients","isIndeterminate","isClientProgramSignal","clientCtrl","getClient","getClients","clientsList","filterClients","toggleSelectAll","selectAllValue","val","patchValue","FilterSelectClientsComponent_Query","FilterSelectClientsComponent_Template_ngx_mat_select_search_toggleAll_8_listener","FilterSelectClientsComponent_For_12_Template","MatPrefix","SearchComponent_Conditional_4_Template_button_click_0_listener","clearSearch","SearchComponent","_SearchComponent","searchService","SearchService","shareDataService","ShareDataService","searchTerm","drawerOpen","filterData$","debounceTime","distinctUntilChanged","filterData","searchExercises","searchResult","updateSearchResults","toggleDrawer","drawerSignal","SearchComponent_Conditional_4_Template","SearchComponent_Template_button_click_5_listener","MatSuffix","BaseTreeControl","dataNodes","expansionModel","getLevel","isExpandable","getChildren","dataNode","_trackByValue","expand","toggleDescendants","collapseDescendants","expandDescendants","collapseAll","toBeProcessed","getDescendants","FlatTreeControl","results","expandAll","node","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","_CdkTreeNodeOutlet","_node","CdkTreeNodeOutlet_Factory","CdkTreeNodeOutletContext","level","CdkTreeNodeDef","_CdkTreeNodeDef","CdkTreeNodeDef_Factory","getTreeNoValidDataSourceError","getTreeMultipleDefaultNodeDefsError","getTreeMissingMatchingNodeDefError","getTreeControlMissingError","getMultipleTreeControlsError","CdkTree","_CdkTree","_defaultNodeDef","_dataSubscription","_levels","_parents","_ariaSets","treeControl","levelAccessor","childrenAccessor","expansionKey","_nodeOutlet","_nodeDefs","_expansionModel","_flattenedNodes","_nodeType","_nodes","_keyManagerNodes","_keyManagerFactory","TREE_KEY_MANAGER","_viewInit","_initializeKeyManager","_updateDefaultNodeDefinition","_subscribeToDataChanges","_checkTreeControlUsage","_initializeDataDiffer","defaultNodeDefs","_setNodeTypeIfUnset","newType","currentType","_getExpansionModel","_getRenderData","renderingData","_renderDataChanges","expansionChanges","_emitExpansionChanges","renderNodes","flattenedNodes","_computeRenderingData","convertedData","renderNodeChanges","_updateCachedData","_updateKeyManagerItems","nodes","_emitExpansionState","keyManagerNodes","_getExpansionKey","keyManagerOptions","typeAheadDebounceInterval","horizontalOrientation","_index","numTreeControls","dataDiffer","parentData","forEachOperation","adjustedPreviousIndex","insertNode","move","newData","_getNodeDef","nodeDef","nodeData","_getLevelAccessor","CdkTreeNode","mostRecentTreeNode","_getDescendants","child","_forEachExpansionKey","_getChildrenAccessor","_getDirectChildren","_findChildrenByLevel","coerceObservable","levelDelta","dataNodeLevel","expectedLevel","currentLevel","_registerNode","_unregisterNode","_getLevel","_getSetSize","_getAriaSet","_getPositionInSet","_getNodeParent","_getNodeChildren","_sendKeydownToKeyManager","Infinity","_getAllChildrenRecursively","allChildren","nextChildren","concatMap","parentKey","_findParentForNode","cachedNodes","parentIndex","parentLevel","_flattenNestedNodesWithExpansion","childKey","nestedNodes","_clearPreviousCache","_calculateParents","toToggle","observables","inner","CdkTree_Factory","CdkTree_ContentQueries","CdkTree_Query","CdkTree_HostBindings","CdkTree_keydown_HostBindingHandler","CdkTree_Template","_CdkTreeNode","_tree","_tabindex","_type","_role","_isExpandable","_inputIsExpandable","_inputIsExpanded","typeaheadLabel","activation","_dataChanges","_shouldFocus","_parentNodeAriaLevel","isLeafNode","_getAriaExpanded","getParentNodeAriaLevel","getParent","unfocus","activate","makeFocusable","_focusItem","focusItem","_setActiveItem","CdkTreeNode_Factory","CdkTreeNode_HostBindings","CdkTreeNode_click_HostBindingHandler","CdkTreeNode_focus_HostBindingHandler","nodeElement","isNodeElement","CdkNestedTreeNode","_CdkNestedTreeNode","_children","nodeOutlet","updateChildrenNodes","_clear","_getNodeOutlet","outlets","CdkNestedTreeNode_Factory","CdkNestedTreeNode_ContentQueries","cssUnitPattern","CdkTreeNodePadding","_CdkTreeNodePadding","_treeNode","_currentPadding","indentUnits","_level","_setLevelInput","indent","_indent","_setIndentInput","_setPadding","_paddingIndent","nodeLevel","forceChange","paddingProp","resetProp","units","parts","CdkTreeNodePadding_Factory","CdkTreeNodeToggle","_CdkTreeNodeToggle","recursive","CdkTreeNodeToggle_Factory","CdkTreeNodeToggle_HostBindings","CdkTreeNodeToggle_click_HostBindingHandler","CdkTreeNodeToggle_keydown_Enter_HostBindingHandler","CdkTreeNodeToggle_keydown_Space_HostBindingHandler","CdkTreeModule","_CdkTreeModule","CdkTreeModule_Factory","isNoopTreeKeyManager","_isNoopTreeKeyManager","MatTreeNode","_MatTreeNode","tabIndexInputBinding","_tabIndexInputBinding","_getTabindexAttribute","MatTreeNode_Factory","MatTreeNode_HostBindings","MatTreeNode_click_HostBindingHandler","MatTreeNodeDef","_MatTreeNodeDef","ɵMatTreeNodeDef_BaseFactory","MatTreeNodeDef_Factory","MatNestedTreeNode","_MatNestedTreeNode","ɵMatNestedTreeNode_BaseFactory","MatNestedTreeNode_Factory","MatTreeNodePadding","_MatTreeNodePadding","ɵMatTreeNodePadding_BaseFactory","MatTreeNodePadding_Factory","MatTreeNodeOutlet","_MatTreeNodeOutlet","MatTreeNodeOutlet_Factory","MatTree","_MatTree","ɵMatTree_BaseFactory","MatTree_Factory","MatTree_Query","MatTree_Template","MatTreeNodeToggle","_MatTreeNodeToggle","ɵMatTreeNodeToggle_BaseFactory","MatTreeNodeToggle_Factory","MAT_TREE_DIRECTIVES","MatTreeModule","_MatTreeModule","MatTreeModule_Factory","MatTreeFlattener","transformFunction","_flattenNode","resultNodes","parentMap","flatNode","childrenNodes","_flattenChildren","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","currentExpand","MatTreeFlatDataSource","_treeControl","_treeFlattener","_flattenedData","_expandedData","collectionViewer","SearchFilterComponent_For_9_For_1_Template_button_click_2_listener","localeName_r2","chipRemoveNode","SearchFilterComponent_For_9_For_1_Template","category_r4","localeNames","SearchFilterComponent_mat_tree_node_14_Template_mat_checkbox_ngModelChange_1_listener","node_r6","SearchFilterComponent_mat_tree_node_14_Template_mat_checkbox_change_1_listener","onCheckboxChange","localeName","node_r7","CATEGORIES","categoryName","categoryNameLocale","SearchFilterComponent","_SearchFilterComponent","bodyAreasService","BodyAreasService","movementsService","MovementsService","startingPositionsService","StartingPositionsService","equipmentService","EquipmentService","addRemoveDataService","AddRemoveDataService","toggleDrawerSignal","categoriesData","_transformer","expandable","treeFlattener","hasChild","_getBodyAreas","_getMovements","_getStartingPositions","_getEquipment","forkJoin","category","categoryChildren","nameValue","localeNameToRemove","indexToRemove","nodeToRemove","dataSignal","toggleChecked","valueChipRemove","localeNameChipRemove","removeDataItem","addDataItem","resetAll","getBodyAreas","bodyAreasList","bodyAreas","getMovements","movementsList","movements","getStartingPositions","startingPositionsList","startingPositions","getEquipments","equipmentList","equipment","SearchFilterComponent_Template_button_click_3_listener","SearchFilterComponent_For_9_Template","_forTrack0","SearchFilterComponent_Template_mat_chip_click_10_listener","SearchFilterComponent_mat_tree_node_14_Template","SearchFilterComponent_mat_tree_node_15_Template","ProgramOptionsBarComponent","_ProgramOptionsBarComponent","programDataService","ProgramDataService","Location","printProgramEvent","deleteProgram","deletedProgram","lastValueFrom","timer","back","printProgram","ProgramOptionsBarComponent_Template","ProgramOptionsBarComponent_Template_button_click_8_listener","ProgramOptionsBarComponent_Template_button_click_12_listener","ExerciseSearchBtnsWrapperComponent","_ExerciseSearchBtnsWrapperComponent","listOptionSignal","listOptionValue","effect","changeListOption","ExerciseSearchBtnsWrapperComponent_Template_ui_search_toggleDrawerSignal_1_listener","ExerciseSearchBtnsWrapperComponent_Template_mat_button_toggle_group_ngModelChange_2_listener","ExerciseSearchBtnsWrapperComponent_Template_mat_button_toggle_group_change_2_listener","isDash","thumbnail","videoSrc","isPlaying","progressValue","VideoPlayerComponent","_VideoPlayerComponent","isModal","mouseOver","video","videoPlayer","logVideoTime","currentTime","percent","toFixed","getIsModalIsPlayingStatus","onMouseEnter","interval","setInterval","clearInterval","progressInterval","hoverTimeout","playVideo","onMouseLeave","pauseVideo","once","loop","togglePlay","paused","VideoPlayerComponent_Query","VideoPlayerComponent_Conditional_1_Template","VideoPlayerComponent_Template_video_timeupdate_2_listener","VideoPlayerComponent_Template_video_click_2_listener","VideoPlayerComponent_Conditional_4_Template","VideoPlayerComponent_Conditional_7_Template","ɵɵpureFunction3","MatProgressBarModule","MatProgressBar","MatMenuItem_Conditional_4_Template","MatMenu_ng_template_0_Template","MatMenu_ng_template_0_Template_div_click_0_listener","MatMenu_ng_template_0_Template_div_animationstart_0_listener","_onAnimationStart","MatMenu_ng_template_0_Template_div_animationend_0_listener","_onAnimationDone","MatMenu_ng_template_0_Template_div_animationcancel_0_listener","_classList","_panelAnimationState","_isAnimating","MAT_MENU_PANEL","MatMenuItem","_MatMenuItem","_parentMenu","_hovered","_highlighted","_triggersSubmenu","addItem","_checkDisabled","_handleMouseEnter","cloneNode","icons","_setHighlighted","isHighlighted","_setTriggersSubmenu","triggersSubmenu","MatMenuItem_Factory","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","MatMenuItem_Template","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_CONTENT","MatMenuContent","_MatMenuContent","_appRef","ApplicationRef","_outlet","_attached","DomPortalOutlet","insertBefore","outletElement","isAttached","MatMenuContent_Factory","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","ENTER_ANIMATION","EXIT_ANIMATION","MatMenu","_MatMenu","_xPosition","_yPosition","_firstItemFocusRef","_exitFallbackTimeout","_allItems","_directDescendantItems","_animationDone","parentMenu","setPositionClasses","lazyContent","previousPanelClass","_previousPanelClass","newClassList","_updateDirectDescendants","focusedItem","itemsList","setNextItemActive","itemChanges","_item","setFocusOrigin","focusFirstItem","menuPanel","_resolvePanel","resetActiveItem","setElevation","_depth","posX","posY","isExit","_setIsOpen","isOpen","MatMenu_Factory","MatMenu_ContentQueries","MatMenu_Query","MatMenu_HostBindings","MatMenu_Template","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","passiveEventListenerOptions","PANELS_TO_TRIGGERS","MatMenuTrigger","_MatMenuTrigger","_menuItemInstance","_cleanupTouchstart","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_pendingRemoval","_parentMaterialMenu","_parentInnerPadding","_openedBy","_deprecatedMatMenuTriggerFor","menu","_menu","reason","_destroyMenu","menuData","menuOpened","onMenuOpen","menuClosed","onMenuClose","_bindEventWithOptions","isFakeTouchstartFromScreenReader","_handleHover","_ownsMenu","menuOpen","toggleMenu","closeMenu","openMenu","previousTrigger","_createOverlay","getConfig","_setPosition","_getPortal","_menuClosingActions","_setIsMenuOpen","withLockedPosition","reapplyLastPosition","_subscribeToPositions","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","positionChanges","connectionPair","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","offsetY","firstItem","withPositions","backdrop","parentClose","hover","_handleMousedown","isFakeMousedownFromScreenReader","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_click_HostBindingHandler","MatMenuTrigger_mousedown_HostBindingHandler","MatMenuTrigger_keydown_HostBindingHandler","MatMenuModule","_MatMenuModule","MatMenuModule_Factory","matMenuAnimations","transformMenu","opacity","fadeInItems","MatToolbarRow","_MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_MatToolbar","_toolbarRows","_checkToolbarMixedModes","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","_MatToolbarModule","MatToolbarModule_Factory","ToolbarButtonsComponent_Conditional_3_Conditional_0_Template_button_click_0_listener","onBack","ToolbarButtonsComponent_Conditional_3_Conditional_0_Template","ToolbarButtonsComponent_Conditional_3_Conditional_1_Template","ToolbarButtonsComponent_Conditional_4_Conditional_0_Template","ToolbarButtonsComponent_Conditional_4_Conditional_1_Template","menu_r4","profileThumbnail","ToolbarButtonsComponent_Conditional_9_Conditional_1_Template","ToolbarButtonsComponent_Conditional_9_Conditional_2_Template","ToolbarButtonsComponent","_ToolbarButtonsComponent","usersService","UsersService","authService","AuthService","activePageTitle","userName","getInitial","charAt","logoutUser","logout","ToolbarButtonsComponent_Conditional_3_Template","ToolbarButtonsComponent_Conditional_4_Template","ToolbarButtonsComponent_Conditional_5_Template","ToolbarButtonsComponent_Conditional_7_Template","ToolbarButtonsComponent_Conditional_8_Template","ToolbarButtonsComponent_Conditional_9_Template","ToolbarButtonsComponent_Conditional_17_Template","ToolbarButtonsComponent_Template_button_click_23_listener","tmp_7_0","tmp_11_0","RouterLink","FavoriteProgramsComponent_For_7_Conditional_7_Template_button_click_0_listener","program_r3","ctx_r3","FavoriteProgramsComponent_For_7_Conditional_3_Template","FavoriteProgramsComponent_For_7_Conditional_4_Template","FavoriteProgramsComponent_For_7_Conditional_7_Template","FavoriteProgramsComponent_For_7_Template_button_click_8_listener","FavoriteProgramsComponent","_FavoriteProgramsComponent","favoritePrograms","FavoriteProgramsComponent_For_7_Template","MatListModule","MatList","MatListItem","MatListItemIcon","MatListItemTitle","FavoriteExercisesComponent_For_7_Template_div_mouseenter_0_listener","videoPlayer_r2","FavoriteExercisesComponent_For_7_Template_div_mouseleave_0_listener","FavoriteExercisesComponent_For_7_Template_div_click_0_listener","exercise_r3","viewExercise","FavoriteExercisesComponent","_FavoriteExercisesComponent","favoriteExercises","FavoriteExercisesComponent_For_7_Template","_SpinnerComponent","SpinnerComponent_Template","_BlankOverlayComponent","BlankOverlayComponent_Template","_ExercisesService","apiURLExercises","apiURLMuscles","apiURLBodyAreas","apiURLMovements","apiURLStartingPositions","apiURLEquipments","getExercises","createExercise","exerciseData","post","updateExercise","put","deleteExercise","getMuscles","createMuscle","muscle","createBodyArea","bodyArea","createMovement","movement","createStartingPosition","startingPosition","createEquipment","MusclesService","_MusclesService","getMuscle","muscleId","updateMuscle","deleteMuscle","_BodyAreasService","getBodyArea","bodyAreaId","updateBodyArea","deleteBodyArea","_MovementsService","getMovement","movementId","updateMovement","deleteMovement","_StartingPositionsService","getStartingPosition","startingPositionId","updateStartingPosition","deleteStartingPosition","_EquipmentService","getEquipment","equipmentId","updateEquipment","deleteEquipment","LanguageNamePipe","_LanguageNamePipe","languageCode","languageMap","de","sr","pure","_SearchService","apiURLSearch","filters","langCode","requstBody","_ShareDataService","data$","searchedData$","asObservable","data2$","updateFilterResults","data2","_AddRemoveDataService","sharedDataService","itemIndex","updatedData","_ShareStateService","SelectedExercisesService","_SelectedExercisesService","addToSelected","selectedExercise","removeFromSelected","_ProgramDataService","ProgramClientsDataService","_ProgramClientsDataService","programClientsData","selectedClients","_ProgramsService","apiURLPrograms","HttpHeaders","updateProgram","IsClientValidService","_IsClientValidService","isClientValid","_ClientsService","apiURLClients","getClientsBasic","createClient","clientData","deleteClient","getClientProgram","getAllClientsPrograms","getAllClientsProgramsBasic","updateClientProgram","updatedProgram","positionParam","_ShareClientsDataService","DropListTransferItemService","_DropListTransferItemService","transferringItem","muscle_r1","bodyArea_r2","movement_r4","startingPosition_r5","equipment_r6","ExerciseModalComponent_Conditional_47_Conditional_1_Template_button_click_0_listener","ExerciseModalComponent_Conditional_47_Conditional_1_Template_button_mouseenter_0_listener","showHoverIcon","ExerciseModalComponent_Conditional_47_Conditional_1_Template_button_mouseleave_0_listener","isHovered","ExerciseModalComponent_Conditional_47_Conditional_2_Template_button_click_0_listener","ExerciseModalComponent_Conditional_47_Conditional_1_Template","ExerciseModalComponent_Conditional_47_Conditional_2_Template","_ExerciseModalComponent","selectedExercisesService","ExerciseModalComponent_Conditional_2_Template","ExerciseModalComponent_Conditional_3_Template","ExerciseModalComponent_For_22_Template","ExerciseModalComponent_For_28_Template","ExerciseModalComponent_For_34_Template","ExerciseModalComponent_For_40_Template","ExerciseModalComponent_For_46_Template","ExerciseModalComponent_Conditional_47_Template","ExerciseModalComponent_Conditional_48_Template","muscles","deepCloneNode","descendantsWithId","transferCanvasData","transferInputData","transferData","descendantElements","cloneElements","cloneUniqueId","getContext","drawImage","getMutableClientRect","rect","isInsideClientRect","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","scrollPosition","getViewportScrollPosition","handleScroll","_getEventTarget","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","scrollY","scrollX","getRootNode","wrapper","extendStyles","dest","importantProperties","removeProperty","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","combineTransforms","initialTransform","matchElementSize","sourceRect","getTransform","parseCssTimeUnitsToMs","multiplier","getTransformTransitionDurationInMs","computedStyle","transitionedProperties","parseCssPropertyValue","property","prop","propertyIndex","rawDurations","rawDelays","part","PreviewRef","_rootElement","_initialDomRect","_previewTemplate","_previewClass","_pickupPositionOnPage","_initialTransform","_zIndex","_previewEmbeddedView","_preview","_createPreview","supportsPopover","setTransform","getTransitionDuration","handler","previewConfig","previewClass","previewTemplate","preview","rootRect","matchSize","activeEventListenerOptions","activeCapturingEventOptions$1","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","_dragDropRegistry","_rootElementCleanups","_cleanupShadowRootSelectStart","_previewContainer","_placeholderRef","_pickupPositionInElement","_anchor","_passiveTransform","_activeTransform","_hasStartedDragging","_hasMoved","_initialContainer","_initialIndex","_parentPositions","_moveEvents","_pointerDirectionDelta","_pointerPositionAtLastDirectionChange","_lastKnownPointerPosition","_ownerSVGElement","_rootElementTapHighlight","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_lastTouchEventTime","_dragStartTime","_boundaryElement","_nativeInteractionsEnabled","_previewRect","_boundaryRect","_placeholderTemplate","_handles","_disabledHandles","_dropContainer","_parentDragRef","_cachedShadowRoot","lockAxis","dragStartDelay","scale","_toggleNativeDragInteractions","beforeStarted","started","released","ended","entered","exited","dropped","moved","constrainPosition","withRootElement","withParent","parentDragRef","registerDragItem","getPlaceholderElement","getRootElement","getVisibleElement","isDragging","withHandles","handles","coerceElement","disabledHandles","withPreviewTemplate","withPlaceholderTemplate","rootElement","_removeRootElementListeners","_pointerDown","_nativeDragStart","SVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeListeners","disableHandle","enableHandle","withDirection","_withDropContainer","getFreeDragPosition","setFreeDragPosition","_applyRootElementTransform","withPreviewContainer","_sortFromLastPointerPosition","_updateActiveDropContainer","_getConstrainedPointerPosition","targetHandle","_getTargetHandle","_initializeDragSequence","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","now","_getDragStartDelay","_endDragSequence","isReceiving","cancelable","_startDragSequence","constrainedPointerPosition","_updatePointerDirectionDelta","activeTransform","distance","_getDragDistance","_pointerUp","stopDragging","webkitTapHighlightColor","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","shadowRoot","_getShadowRoot","dropContainer","shadowDomSelectStart","_createPlaceholderElement","anchor","createComment","_getPreviewInsertionPoint","replaceChild","getItemIndex","getScrollableParents","referenceElement","isTouchSequence","isAuxiliaryMouseButton","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_getPointerPositionInElement","startDragging","isPointerOverContainer","_isOverContainer","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","placeholderRect","cleanupListener","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","cleanup","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","moveItemInArray","fromIndex","toIndex","clamp","to","copyArrayItem","currentArray","targetArray","SingleAxisSortStrategy","_sortPredicate","_itemPositions","_activeDraggables","orientation","_previousSwap","drag","overlaps","withItems","pointerDelta","_getItemIndexFromPointerPosition","isHorizontal","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","elementToOffset","transformAmount","activeDraggables","newPositionReference","_shouldEnterAsFirstChild","_cacheItemPositions","withSortPredicate","predicate","getActiveItemsSnapshot","updateOnScroll","withElementContainer","elementToMeasure","immediateSibling","itemPositions","reversed","lastItemRect","firstItemRect","MixedSortStrategy","_rootNode","_activeItems","_relatedNodes","nextSibling","previousSwap","toSwapWith","overlapElement","after","before","newOverlapElement","_getRootNode","elementFromPoint","enterIndex","_getClosestItemIndexToPointer","targetItem","elementAtPoint","minDistance","minIndex","hypot","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","AutoScrollVerticalDirection","AutoScrollHorizontalDirection","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_container","_isDragging","_sortStrategy","_domRect","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","NONE","_horizontalScrollDirection","_scrollNode","_stopScrollTimers","_scrollableElements","_initialScrollSnap","coercedElement","withOrientation","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","previousItems","draggedItems","connectedTo","withScrollableParents","oldContainerIndex","newContainerIndex","unshift","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_startScrollInterval","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","animationFrameScheduler","scrollStep","UP","DOWN","LEFT","RIGHT","_canReceive","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","capturingEventOptions","activeCapturingEventOptions","_ResetsLoader","__ResetsLoader","_ResetsLoader_Factory","_ResetsLoader_Template","DragDropRegistry","_DragDropRegistry","_styleLoader","_cleanupDocumentTouchmove","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","_domNodesToDirectives","_persistentTouchmoveListener","instances","endEventHandler","toBind","_preventDefaultWhileDragging","_clearGlobalListeners","streams","Observable","observer","registerDirectiveNode","dragRef","removeDirectiveNode","getDragDirectiveForNode","DragDropRegistry_Factory","DEFAULT_CONFIG","DragDrop","_DragDrop","createDrag","createDropList","DragDrop_Factory","CDK_DRAG_PARENT","assertElementNode","CDK_DRAG_HANDLE","CdkDragHandle","_CdkDragHandle","_parentDrag","_addHandle","_removeHandle","CdkDragHandle_Factory","CDK_DRAG_CONFIG","CDK_DROP_LIST","CdkDrag","_CdkDrag","_selfHandle","_dragRef","rootElementSelector","freeDragPosition","movedEvent","dragDrop","_assignDefaults","_dropListRef","_syncInputs","_handleEvents","_updateRootElement","_setupHandlesListener","rootSelectorChange","firstChange","_setPreviewTemplate","_resetPreviewTemplate","_setPlaceholderTemplate","_resetPlaceholderTemplate","_getBoundaryElement","boundary","parentDrag","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","handleElements","handleInstance","CdkDrag_Factory","CdkDrag_HostBindings","CDK_DROP_LIST_GROUP","CdkDropListGroup","_CdkDropListGroup","_items","CdkDropListGroup_Factory","CdkDropList","_CdkDropList","_scrollDispatcher","ScrollDispatcher","_group","_scrollableParentsResolved","_dropLists","elementContainerSelector","_unsortedItems","_setupInputSyncSubscription","_syncItemsWithRef","getSortedItems","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","coerceArray","correspondingDropList","list","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","listAutoScrollDisabled","listOrientation","CdkDropList_Factory","CdkDropList_HostBindings","CDK_DRAG_PREVIEW","CdkDragPreview","_CdkDragPreview","_drag","CdkDragPreview_Factory","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","_CdkDragPlaceholder","CdkDragPlaceholder_Factory","DRAG_DROP_DIRECTIVES","DragDropModule","_DragDropModule","DragDropModule_Factory","SelectedExpansionPanelComponent_For_4_Conditional_28_For_4_Conditional_2_Template","equipment_r3","ɵ$index_84_r4","ɵ$count_84_r5","SelectedExpansionPanelComponent_For_4_Conditional_28_For_4_Template","SelectedExpansionPanelComponent_For_4_div_1_Template","SelectedExpansionPanelComponent_For_4_Conditional_26_Template","SelectedExpansionPanelComponent_For_4_Conditional_27_Template","SelectedExpansionPanelComponent_For_4_Conditional_28_Template","SelectedExpansionPanelComponent_For_4_Template_button_click_30_listener","SelectedExpansionPanelComponent_For_4_Template_button_click_33_listener","SelectedExpansionPanelComponent_For_4_Template_input_ngModelChange_41_listener","SelectedExpansionPanelComponent_For_4_Template_textarea_ngModelChange_45_listener","SelectedExpansionPanelComponent_For_4_Template_input_ngModelChange_50_listener","SelectedExpansionPanelComponent_For_4_Template_input_ngModelChange_54_listener","SelectedExpansionPanelComponent_For_4_Template_input_ngModelChange_58_listener","SelectedExpansionPanelComponent_For_4_Template_input_ngModelChange_62_listener","ɵ$index_7_r7","SelectedExpansionPanelComponent","_SelectedExpansionPanelComponent","togglePanel","panelToToggle","panels","removedExercise","snackBarRef","onAction","undoRemove","SelectedExpansionPanelComponent_Query","SelectedExpansionPanelComponent_Template_div_cdkDropListDropped_1_listener","SelectedExpansionPanelComponent_For_4_Template","NumberValueAccessor","MaxLengthValidator","MinValidator","CdkTextareaAutosize","BasicProgramsTableComponent_td_19_Conditional_5_Template_button_click_0_listener","BasicProgramsTableComponent_td_19_Template_button_click_2_listener","BasicProgramsTableComponent_td_19_Conditional_5_Template","isClientTable_r7","input_r8","BasicProgramsTableComponent","_BasicProgramsTableComponent","viewProgramEvent","addProgramToClientEvent","BasicProgramsTableComponent_Query","ɵɵdeclareLet","BasicProgramsTableComponent_Conditional_4_Template","BasicProgramsTableComponent_Conditional_5_Template","BasicProgramsTableComponent_Template_input_keyup_9_listener","BasicProgramsTableComponent_th_15_Template","BasicProgramsTableComponent_td_16_Template","BasicProgramsTableComponent_th_18_Template","BasicProgramsTableComponent_td_19_Template","BasicProgramsTableComponent_tr_20_Template","BasicProgramsTableComponent_tr_21_Template","BasicProgramsTableComponent_tr_22_Template","ɵɵstoreLet","isClientTable_r9"],"ignoreList":[0,1,2,3,4,5,6,11,20,21,22,23,24,25,26,27,28,33,34,35,38,39,44,51,52,61,62,92],"sources":["node_modules/@angular/material/fesm2022/option-cb353f7a.mjs","node_modules/@angular/material/fesm2022/index-2f2536d6.mjs","node_modules/@angular/material/fesm2022/module-b0a3e0af.mjs","node_modules/@angular/material/fesm2022/paginator.mjs","node_modules/@angular/material/fesm2022/sort.mjs","node_modules/@angular/cdk/fesm2022/table.mjs","node_modules/@angular/material/fesm2022/table.mjs","libs/ui/src/lib/services/browser-storage.service.ts","libs/ui/src/lib/services/theme-manager.service.ts","libs/ui/src/lib/services/paginator-i18n.service.ts","libs/ui/src/lib/services/active-page.service.ts","node_modules/@angular/core/fesm2022/rxjs-interop.mjs","libs/ui/src/lib/services/screen-size.service.ts","libs/ui/src/lib/services/countries-lib.service.ts","libs/ui/src/lib/services/loading-overlay.service.ts","libs/ui/src/lib/services/loading.interceptor.ts","libs/ui/src/lib/components/dynamic-fab-button/dynamic-fab-button.component.ts","libs/ui/src/lib/components/dynamic-fab-button/dynamic-fab-button.component.html","libs/ui/src/lib/components/page-toolbar/page-toolbar.component.html","libs/ui/src/lib/components/page-toolbar/page-toolbar.component.ts","node_modules/@angular/material/fesm2022/chips.mjs","node_modules/overlayscrollbars/overlayscrollbars.mjs","node_modules/overlayscrollbars-ngx/fesm2020/overlayscrollbars-ngx.mjs","node_modules/@angular/material/fesm2022/internal-form-field-5960ea2e.mjs","node_modules/@angular/material/fesm2022/date-formats-b618acb8.mjs","node_modules/@angular/material/fesm2022/core.mjs","node_modules/@angular/material/fesm2022/checkbox.mjs","node_modules/@angular/material/fesm2022/progress-spinner.mjs","node_modules/ngx-mat-select-search/fesm2022/ngx-mat-select-search.mjs","libs/users/src/lib/users.module.ts","libs/users/src/lib/services/jwt.interceptor.ts","libs/ui/src/lib/components/client-full-edit-form/client-full-edit-form.component.html","libs/ui/src/lib/components/client-full-edit-form/client-full-edit-form.component.ts","node_modules/@angular/animations/fesm2022/animations.mjs","node_modules/@angular/cdk/fesm2022/dialog.mjs","node_modules/@angular/material/fesm2022/module-b3de5709.mjs","libs/ui/src/lib/components/deleteConfirmationDialog/deleteConfirmationDialog.component.ts","libs/ui/src/lib/components/deleteConfirmationDialog/deleteConfirmationDialog.component.html","node_modules/@angular/cdk/fesm2022/accordion.mjs","node_modules/@angular/material/fesm2022/expansion.mjs","libs/ui/src/lib/components/program-modal/program-modal.component.html","libs/ui/src/lib/components/program-modal/program-modal.component.ts","libs/ui/src/lib/components/client-full-edit-programs/client-full-edit-programs.component.html","libs/ui/src/lib/components/client-full-edit-programs/client-full-edit-programs.component.ts","node_modules/@angular/material/fesm2022/button-toggle.mjs","libs/ui/src/lib/components/programs-table/programs-table.component.html","libs/ui/src/lib/components/programs-table/programs-table.component.ts","libs/ui/src/lib/pages/filter-select-clients/filter-select-clients.component.html","libs/ui/src/lib/pages/filter-select-clients/filter-select-clients.component.ts","libs/ui/src/lib/pages/search/search.component.html","libs/ui/src/lib/pages/search/search.component.ts","node_modules/@angular/cdk/fesm2022/tree.mjs","node_modules/@angular/material/fesm2022/tree.mjs","libs/ui/src/lib/pages/search-filter/search-filter.component.html","libs/ui/src/lib/pages/search-filter/search-filter.component.ts","libs/ui/src/lib/pages/program-options-bar/program-options-bar.component.ts","libs/ui/src/lib/pages/program-options-bar/program-options-bar.component.html","libs/ui/src/lib/components/exercise-search-btns-wrapper/exercise-search-btns-wrapper.component.ts","libs/ui/src/lib/components/exercise-search-btns-wrapper/exercise-search-btns-wrapper.component.html","libs/ui/src/lib/components/video-player/video-player.component.html","libs/ui/src/lib/components/video-player/video-player.component.ts","node_modules/@angular/material/fesm2022/menu.mjs","node_modules/@angular/material/fesm2022/toolbar.mjs","libs/ui/src/lib/components/toolbar-buttons/toolbar-buttons.component.html","libs/ui/src/lib/components/toolbar-buttons/toolbar-buttons.component.ts","libs/ui/src/lib/components/favorite-programs/favorite-programs.component.html","libs/ui/src/lib/components/favorite-programs/favorite-programs.component.ts","libs/ui/src/lib/components/favorite-exercises/favorite-exercises.component.html","libs/ui/src/lib/components/favorite-exercises/favorite-exercises.component.ts","libs/ui/src/lib/components/spinner/spinner.component.ts","libs/ui/src/lib/components/blank-overlay/blank-overlay.component.ts","libs/exercises/src/lib/services/exercises.service.ts","libs/exercises/src/lib/services/categories/muscles.service.ts","libs/exercises/src/lib/services/categories/bodyareas.service.ts","libs/exercises/src/lib/services/categories/movements.service.ts","libs/exercises/src/lib/services/categories/starting-positions.service.ts","libs/exercises/src/lib/services/categories/equipment.service.ts","libs/exercises/src/lib/pipes/language-name.pipe.ts","libs/exercises/src/lib/services/search.service.ts","libs/exercises/src/lib/services/share-data.service.ts","libs/exercises/src/lib/services/add-remove-data.service.ts","libs/exercises/src/lib/services/share-state.service.ts","libs/exercises/src/lib/services/selected-exercises.service.ts","libs/exercises/src/lib/services/programs/program-data.service.ts","libs/exercises/src/lib/services/programs/program-clients-data.service.ts","libs/exercises/src/lib/services/programs/programs.service.ts","libs/exercises/src/lib/services/programs/isClientValid.service.ts","libs/exercises/src/lib/services/clients/clients.service.ts","libs/exercises/src/lib/services/clients/share-clients-data.service.ts","libs/exercises/src/lib/services/drop-list-transfer-item.service.ts","libs/exercises/src/lib/pages/exercise-modal/exercise-modal.component.html","libs/exercises/src/lib/pages/exercise-modal/exercise-modal.component.ts","node_modules/@angular/cdk/fesm2022/drag-drop.mjs","libs/exercises/src/lib/pages/selected-expansion-panel/selected-expansion-panel.component.html","libs/exercises/src/lib/pages/selected-expansion-panel/selected-expansion-panel.component.ts","libs/ui/src/lib/components/basic-programs-table/basic-programs-table.component.html","libs/ui/src/lib/components/basic-programs-table/basic-programs-table.component.ts"],"sourcesContent":["import { _IdGenerator } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ElementRef, ChangeDetectorRef, EventEmitter, isSignal, Output, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { M as MatRipple } from './ripple-5bdada85.mjs';\nimport { M as MatPseudoCheckbox } from './pseudo-checkbox-4a60d45e.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r0.group.label, \")\");\n  }\n}\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup {\n  /** Label for the option group. */\n  label;\n  /** whether the option group is disabled. */\n  disabled = false;\n  /** Unique id for the underlying label. */\n  _labelId = inject(_IdGenerator).getId('mat-optgroup-label-');\n  /** Whether the group is in inert a11y mode. */\n  _inert;\n  constructor() {\n    const parent = inject(MAT_OPTION_PARENT_COMPONENT, {\n      optional: true\n    });\n    this._inert = parent?.inertGroups ?? false;\n  }\n  static ɵfac = function MatOptgroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatOptgroup)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatOptgroup,\n    selectors: [[\"mat-optgroup\"]],\n    hostAttrs: [1, \"mat-mdc-optgroup\"],\n    hostVars: 3,\n    hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      }\n    },\n    inputs: {\n      label: \"label\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    exportAs: [\"matOptgroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_OPTGROUP,\n      useExisting: MatOptgroup\n    }])],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 4,\n    consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n    template: function MatOptgroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵprojection(4, 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"id\", ctx._labelId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n      }\n    },\n    styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color, var(--mat-sys-on-surface-variant));font-family:var(--mat-optgroup-label-text-font, var(--mat-sys-title-small-font));line-height:var(--mat-optgroup-label-text-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-optgroup-label-text-size, var(--mat-sys-title-small-size));letter-spacing:var(--mat-optgroup-label-text-tracking, var(--mat-sys-title-small-tracking));font-weight:var(--mat-optgroup-label-text-weight, var(--mat-sys-title-small-weight))}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;outline:none}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal;color:inherit}\"]\n    }]\n  }], () => [], {\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  source;\n  isUserInput;\n  constructor(/** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n  _element = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _parent = inject(MAT_OPTION_PARENT_COMPONENT, {\n    optional: true\n  });\n  group = inject(MAT_OPTGROUP, {\n    optional: true\n  });\n  _signalDisableRipple = false;\n  _selected = false;\n  _active = false;\n  _disabled = false;\n  _mostRecentViewValue = '';\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n  /** The form value of the option. */\n  value;\n  /** The unique ID of the option. */\n  id = inject(_IdGenerator).getId('mat-option-');\n  /** Whether the option is disabled. */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return this._signalDisableRipple ? this._parent.disableRipple() : !!this._parent?.disableRipple;\n  }\n  /** Whether to display checkmark for single-selection. */\n  get hideSingleSelectionIndicator() {\n    return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n  }\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  onSelectionChange = new EventEmitter();\n  /** Element containing the option's text. */\n  _text;\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  _stateChanges = new Subject();\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    this._signalDisableRipple = !!this._parent && isSignal(this._parent.disableRipple);\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._text?.nativeElement.textContent || '').trim();\n  }\n  /** Selects the option. */\n  select(emitEvent = true) {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n  /** Deselects the option. */\n  deselect(emitEvent = true) {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      if (emitEvent) {\n        this._emitSelectionChangeEvent();\n      }\n    }\n  }\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n  // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n  // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        if (this._mostRecentViewValue) {\n          this._stateChanges.next();\n        }\n        this._mostRecentViewValue = viewValue;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n  static ɵfac = function MatOption_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatOption)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatOption,\n    selectors: [[\"mat-option\"]],\n    viewQuery: function MatOption_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n    hostVars: 11,\n    hostBindings: function MatOption_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n          return ctx._selectViaInteraction();\n        })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n        i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      id: \"id\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      onSelectionChange: \"onSelectionChange\"\n    },\n    exportAs: [\"matOption\"],\n    ngContentSelectors: _c4,\n    decls: 8,\n    vars: 5,\n    consts: [[\"text\", \"\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n    template: function MatOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 1);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementStart(2, \"span\", 2, 0);\n        i0.ɵɵprojection(4, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelement(7, \"div\", 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.multiple ? 0 : -1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(!ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.group && ctx.group._inert ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n      }\n    },\n    dependencies: [MatPseudoCheckbox, MatRipple],\n    styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[class.mdc-list-item--selected]': 'selected',\n        '[class.mat-mdc-option-multiple]': 'multiple',\n        '[class.mat-mdc-option-active]': 'active',\n        '[class.mdc-list-item--disabled]': 'disabled',\n        '[id]': 'id',\n        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n        // [WAI ARIA Listbox authoring practices guide](\n        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n        // selected option has either aria-selected or aria-checked  set to true. All options that are\n        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n        // aria-selected implementation of Chips and List components.\n        //\n        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n        // every option as \"selected\" (#21491).\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-mdc-option mdc-list-item'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatPseudoCheckbox, MatRipple],\n      template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n@if (multiple) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n        aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n}\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n@if (!multiple && selected && !hideSingleSelectionIndicator) {\\n    <mat-pseudo-checkbox\\n        class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n}\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n@if (group && group._inert) {\\n    <span class=\\\"cdk-visually-hidden\\\">({{ group.label }})</span>\\n}\\n\\n<div class=\\\"mat-mdc-option-ripple mat-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-mdc-option{-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;min-height:48px;padding:0 16px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-option-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-option-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-option-label-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-option-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-option-label-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));outline:0}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color, var(--mat-sys-secondary-container))}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-option-selected-state-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}@media(forced-colors: active){.mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .mat-mdc-option.mdc-list-item--selected:not(:has(.mat-mdc-option-pseudo-checkbox))::after{right:auto;left:16px}}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [], {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text', {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nexport { MAT_OPTION_PARENT_COMPONENT as M, _countGroupLabelsBeforeOption as _, MatOption as a, MAT_OPTGROUP as b, MatOptionSelectionChange as c, _getOptionScrollPosition as d, MatOptgroup as e };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { M as MatRippleModule } from './index-a36e3c7c.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport { a as MatOption, e as MatOptgroup } from './option-cb353f7a.mjs';\nimport { M as MatPseudoCheckboxModule } from './pseudo-checkbox-module-31a58606.mjs';\nclass MatOptionModule {\n  static ɵfac = function MatOptionModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatOptionModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatOptionModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, MatOption, MatOptgroup],\n      exports: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\nexport { MatOptionModule as M };\n","import { Overlay, CdkConnectedOverlay, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, Renderer2, ANIMATION_MODULE_TYPE, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _IdGenerator, LiveAnnouncer, removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, ENTER, SPACE, A, ESCAPE, DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, takeUntil, take } from 'rxjs/operators';\nimport { NgClass } from '@angular/common';\nimport { M as MAT_FORM_FIELD, a as MatFormFieldControl } from './form-field-50ec956f.mjs';\nimport { _ as _countGroupLabelsBeforeOption, d as _getOptionScrollPosition, M as MAT_OPTION_PARENT_COMPONENT, a as MatOption, b as MAT_OPTGROUP } from './option-cb353f7a.mjs';\nimport { E as ErrorStateMatcher } from './error-options-aca21924.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-8f4ce1af.mjs';\nimport { M as MatOptionModule } from './index-2f2536d6.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport { M as MatFormFieldModule } from './module-0776ab9b.mjs';\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nfunction MatSelect_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatSelect_Conditional_5_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.triggerValue);\n  }\n}\nfunction MatSelect_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatSelect_Conditional_5_Conditional_1_Template, 1, 0)(2, MatSelect_Conditional_5_Conditional_2_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.customTrigger ? 1 : 2);\n  }\n}\nfunction MatSelect_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12, 1);\n    i0.ɵɵlistener(\"keydown\", function MatSelect_ng_template_10_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    });\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open \", ctx_r1._getPanelTheme(), \"\");\n    i0.ɵɵclassProp(\"mat-select-panel-animations-enabled\", !ctx_r1._animationsDisabled);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.panelClass);\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"-panel\")(\"aria-multiselectable\", ctx_r1.multiple)(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby());\n  }\n}\nfunction getMatSelectDynamicMultipleError() {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n  return Error('`compareWith` must be a function.');\n}\n\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n  source;\n  value;\n  constructor(/** Reference to the select that emitted the change event. */\n  source, /** Current value of the select that emitted the event. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nclass MatSelect {\n  _viewportRuler = inject(ViewportRuler);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _idGenerator = inject(_IdGenerator);\n  _renderer = inject(Renderer2);\n  _parentFormField = inject(MAT_FORM_FIELD, {\n    optional: true\n  });\n  ngControl = inject(NgControl, {\n    self: true,\n    optional: true\n  });\n  _liveAnnouncer = inject(LiveAnnouncer);\n  _defaultOptions = inject(MAT_SELECT_CONFIG, {\n    optional: true\n  });\n  _animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  }) === 'NoopAnimations';\n  _initialized = new Subject();\n  _cleanupDetach;\n  /** All of the defined select options. */\n  options;\n  // TODO(crisbeto): this is only necessary for the non-MDC select, but it's technically a\n  // public API so we have to keep it. It should be deprecated and removed eventually.\n  /** All of the defined groups of options. */\n  optionGroups;\n  /** User-supplied override of the trigger element. */\n  customTrigger;\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [{\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom',\n    panelClass: 'mat-mdc-select-panel-above'\n  }, {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom',\n    panelClass: 'mat-mdc-select-panel-above'\n  }];\n  /** Scrolls a particular option into the view. */\n  _scrollOptionIntoView(index) {\n    const option = this.options.toArray()[index];\n    if (option) {\n      const panel = this.panel.nativeElement;\n      const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n      const element = option._getHostElement();\n      if (index === 0 && labelCount === 1) {\n        // If we've got one group label before the option and we're at the top option,\n        // scroll the list to the top. This is better UX than scrolling the list to the\n        // top of the option, because it allows the user to read the top group's label.\n        panel.scrollTop = 0;\n      } else {\n        panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n      }\n    }\n  }\n  /** Called when the panel has been opened and the overlay has settled on its final position. */\n  _positioningSettled() {\n    this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n  }\n  /** Creates a change event object that should be emitted by the select. */\n  _getChangeEvent(value) {\n    return new MatSelectChange(this, value);\n  }\n  /** Factory function used to create a scroll strategy for this select. */\n  _scrollStrategyFactory = inject(MAT_SELECT_SCROLL_STRATEGY);\n  /** Whether or not the overlay panel is open. */\n  _panelOpen = false;\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  _compareWith = (o1, o2) => o1 === o2;\n  /** Unique id for this input. */\n  _uid = this._idGenerator.getId('mat-select-');\n  /** Current `aria-labelledby` value for the select trigger. */\n  _triggerAriaLabelledBy = null;\n  /**\n   * Keeps track of the previous form control assigned to the select.\n   * Used to detect if it has changed.\n   */\n  _previousControl;\n  /** Emits whenever the component is destroyed. */\n  _destroy = new Subject();\n  /** Tracks the error state of the select. */\n  _errorStateTracker;\n  /**\n   * Emits whenever the component state changes and should cause the parent\n   * form-field to update. Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  stateChanges = new Subject();\n  /**\n   * Disable the automatic labeling to avoid issues like #27241.\n   * @docs-private\n   */\n  disableAutomaticLabeling = true;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  userAriaDescribedBy;\n  /** Deals with the selection logic. */\n  _selectionModel;\n  /** Manages keyboard events for options in the panel. */\n  _keyManager;\n  /** Ideal origin for the overlay panel. */\n  _preferredOverlayOrigin;\n  /** Width of the overlay panel. */\n  _overlayWidth;\n  /** `View -> model callback called when value changes` */\n  _onChange = () => {};\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => {};\n  /** ID for the DOM node containing the select's value. */\n  _valueId = this._idGenerator.getId('mat-select-value-');\n  /** Strategy that will be used to handle scrolling while the select panel is open. */\n  _scrollStrategy;\n  _overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n  /** Whether the select is focused. */\n  get focused() {\n    return this._focused || this._panelOpen;\n  }\n  _focused = false;\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mat-select';\n  /** Trigger that opens the select. */\n  trigger;\n  /** Panel containing the select options. */\n  panel;\n  /** Overlay pane containing the options. */\n  _overlayDir;\n  /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n  panelClass;\n  /** Whether the select is disabled. */\n  disabled = false;\n  /** Whether ripples in the select are disabled. */\n  disableRipple = false;\n  /** Tab index of the select. */\n  tabIndex = 0;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncParentProperties();\n  }\n  _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /** Placeholder to be shown if no value has been selected. */\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  _placeholder;\n  /** Whether the component is required. */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  _required;\n  /** Whether the user should be allowed to select multiple options. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectDynamicMultipleError();\n    }\n    this._multiple = value;\n  }\n  _multiple = false;\n  /** Whether to center the active option over the trigger. */\n  disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  get compareWith() {\n    return this._compareWith;\n  }\n  set compareWith(fn) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  /** Value of the select control. */\n  get value() {\n    return this._value;\n  }\n  set value(newValue) {\n    const hasAssigned = this._assignValue(newValue);\n    if (hasAssigned) {\n      this._onChange(newValue);\n    }\n  }\n  _value;\n  /** Aria label of the select. */\n  ariaLabel = '';\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  ariaLabelledby;\n  /** Object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n  typeaheadDebounceInterval;\n  /**\n   * Function used to sort the values in a select in multiple mode.\n   * Follows the same logic as `Array.prototype.sort`.\n   */\n  sortComparator;\n  /** Unique id of the element. */\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  _id;\n  /** Whether the select is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  /**\n   * Width of the panel. If set to `auto`, the panel will match the trigger width.\n   * If set to null or an empty string, the panel will grow to match the longest option's text.\n   */\n  panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined' ? this._defaultOptions.panelWidth : 'auto';\n  /**\n   * By default selecting an option with a `null` or `undefined` value will reset the select's\n   * value. Enable this option if the reset behavior doesn't match your requirements and instead\n   * the nullable options should become selected. The value of this input can be controlled app-wide\n   * using the `MAT_SELECT_CONFIG` injection token.\n   */\n  canSelectNullableOptions = this._defaultOptions?.canSelectNullableOptions ?? false;\n  /** Combined stream of all of the child options' change events. */\n  optionSelectionChanges = defer(() => {\n    const options = this.options;\n    if (options) {\n      return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n    }\n    return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n  });\n  /** Event emitted when the select panel has been toggled. */\n  openedChange = new EventEmitter();\n  /** Event emitted when the select has been opened. */\n  _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n  /** Event emitted when the select has been closed. */\n  _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n  /** Event emitted when the selected value has been changed by the user. */\n  selectionChange = new EventEmitter();\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  constructor() {\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n    // Note that we only want to set this when the defaults pass it in, otherwise it should\n    // stay as `undefined` so that it falls back to the default in the key manager.\n    if (this._defaultOptions?.typeaheadDebounceInterval != null) {\n      this.typeaheadDebounceInterval = this._defaultOptions.typeaheadDebounceInterval;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    this._scrollStrategy = this._scrollStrategyFactory();\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n  }\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple);\n    this.stateChanges.next();\n    this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._changeDetectorRef.detectChanges();\n      }\n    });\n  }\n  ngAfterContentInit() {\n    this._initialized.next();\n    this._initialized.complete();\n    this._initKeyManager();\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n  ngDoCheck() {\n    const newAriaLabelledby = this._getTriggerAriaLabelledby();\n    const ngControl = this.ngControl;\n    // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n    // is computed as a result of a content query which can cause this binding to trigger a\n    // \"changed after checked\" error.\n    if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n      const element = this._elementRef.nativeElement;\n      this._triggerAriaLabelledBy = newAriaLabelledby;\n      if (newAriaLabelledby) {\n        element.setAttribute('aria-labelledby', newAriaLabelledby);\n      } else {\n        element.removeAttribute('aria-labelledby');\n      }\n    }\n    if (ngControl) {\n      // The disabled state might go out of sync if the form group is swapped out. See #17860.\n      if (this._previousControl !== ngControl.control) {\n        if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\n          this.disabled = ngControl.disabled;\n        }\n        this._previousControl = ngControl.control;\n      }\n      this.updateErrorState();\n    }\n  }\n  ngOnChanges(changes) {\n    // Updating the disabled state is handled by the input, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes['disabled'] || changes['userAriaDescribedBy']) {\n      this.stateChanges.next();\n    }\n    if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n      this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n    }\n  }\n  ngOnDestroy() {\n    this._cleanupDetach?.();\n    this._keyManager?.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n    this.stateChanges.complete();\n    this._clearFromModal();\n  }\n  /** Toggles the overlay panel open or closed. */\n  toggle() {\n    this.panelOpen ? this.close() : this.open();\n  }\n  /** Opens the overlay panel. */\n  open() {\n    if (!this._canOpen()) {\n      return;\n    }\n    // It's important that we read this as late as possible, because doing so earlier will\n    // return a different element since it's based on queries in the form field which may\n    // not have run yet. Also this needs to be assigned before we measure the overlay width.\n    if (this._parentFormField) {\n      this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n    }\n    this._cleanupDetach?.();\n    this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n    this._applyModalPanelOwnership();\n    this._panelOpen = true;\n    this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this._changeDetectorRef.detectChanges();\n      this._positioningSettled();\n    });\n    this._overlayDir.attachOverlay();\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n    // Required for the MDC form field to pick up when the overlay has been opened.\n    this.stateChanges.next();\n    // Simulate the animation event before we moved away from `@angular/animations`.\n    Promise.resolve().then(() => this.openedChange.emit(true));\n  }\n  /**\n   * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n   * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n   * panel. Track the modal we have changed so we can undo the changes on destroy.\n   */\n  _trackedModal = null;\n  /**\n   * If the autocomplete trigger is inside of an `aria-modal` element, connect\n   * that modal to the options panel with `aria-owns`.\n   *\n   * For some browser + screen reader combinations, when navigation is inside\n   * of an `aria-modal` element, the screen reader treats everything outside\n   * of that modal as hidden or invisible.\n   *\n   * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n   * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n   * from reaching the panel.\n   *\n   * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n   * the options panel. This effectively communicates to assistive technology that the\n   * options panel is part of the same interaction as the modal.\n   *\n   * At time of this writing, this issue is present in VoiceOver.\n   * See https://github.com/angular/components/issues/20694\n   */\n  _applyModalPanelOwnership() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    if (!modal) {\n      // Most commonly, the autocomplete trigger is not inside a modal.\n      return;\n    }\n    const panelId = `${this.id}-panel`;\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n    addAriaReferencedId(modal, 'aria-owns', panelId);\n    this._trackedModal = modal;\n  }\n  /** Clears the reference to the listbox overlay element from the modal it was added to. */\n  _clearFromModal() {\n    if (!this._trackedModal) {\n      // Most commonly, the autocomplete trigger is not used inside a modal.\n      return;\n    }\n    const panelId = `${this.id}-panel`;\n    removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    this._trackedModal = null;\n  }\n  /** Closes the overlay panel and focuses the host element. */\n  close() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._exitAndDetach();\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      // Required for the MDC form field to pick up when the overlay has been closed.\n      this.stateChanges.next();\n      // Simulate the animation event before we moved away from `@angular/animations`.\n      Promise.resolve().then(() => this.openedChange.emit(false));\n    }\n  }\n  /** Triggers the exit animation and detaches the overlay at the end. */\n  _exitAndDetach() {\n    if (this._animationsDisabled || !this.panel) {\n      this._detachOverlay();\n      return;\n    }\n    this._cleanupDetach?.();\n    this._cleanupDetach = () => {\n      cleanupEvent();\n      clearTimeout(exitFallbackTimer);\n      this._cleanupDetach = undefined;\n    };\n    const panel = this.panel.nativeElement;\n    const cleanupEvent = this._renderer.listen(panel, 'animationend', event => {\n      if (event.animationName === '_mat-select-exit') {\n        this._cleanupDetach?.();\n        this._detachOverlay();\n      }\n    });\n    // Since closing the overlay depends on the animation, we have a fallback in case the panel\n    // doesn't animate. This can happen in some internal tests that do `* {animation: none}`.\n    const exitFallbackTimer = setTimeout(() => {\n      this._cleanupDetach?.();\n      this._detachOverlay();\n    }, 200);\n    panel.classList.add('mat-select-panel-exit');\n  }\n  /** Detaches the current overlay directive. */\n  _detachOverlay() {\n    this._overlayDir.detachOverlay();\n    // Some of the overlay detachment logic depends on change detection.\n    // Mark for check to ensure that things get picked up in a timely manner.\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value) {\n    this._assignValue(value);\n  }\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** Whether or not the overlay panel is open. */\n  get panelOpen() {\n    return this._panelOpen;\n  }\n  /** The currently selected option. */\n  get selected() {\n    return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n  }\n  /** The value displayed in the trigger. */\n  get triggerValue() {\n    if (this.empty) {\n      return '';\n    }\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n  /** Refreshes the error state of the select. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** Whether the element is in RTL mode. */\n  _isRtl() {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n  /** Handles all keydown events on the select. */\n  _handleKeydown(event) {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n  /** Handles keyboard events while the select is closed. */\n  _handleClosedKeydown(event) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this._keyManager;\n    // Open the select on ALT + arrow key to match the native <select>\n    if (!manager.isTyping() && isOpenKey && !hasModifierKey(event) || (this.multiple || event.altKey) && isArrowKey) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else if (!this.multiple) {\n      const previouslySelectedOption = this.selected;\n      manager.onKeydown(event);\n      const selectedOption = this.selected;\n      // Since the value has changed, we need to announce it ourselves.\n      if (selectedOption && previouslySelectedOption !== selectedOption) {\n        // We set a duration on the live announcement, because we want the live element to be\n        // cleared after a while so that users can't navigate to it using the arrow keys.\n        this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n      }\n    }\n  }\n  /** Handles keyboard events when the selected is open. */\n  _handleOpenKeydown(event) {\n    const manager = this._keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem && !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n      this.options.forEach(option => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n  /** Handles keyboard events coming from the overlay. */\n  _handleOverlayKeydown(event) {\n    // TODO(crisbeto): prior to #30363 this was being handled inside the overlay directive, but we\n    // need control over the animation timing so we do it manually. We should remove the `keydown`\n    // listener from `.mat-mdc-select-panel` and handle all the events here. That may cause\n    // further test breakages so it's left for a follow-up.\n    if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n    this._keyManager?.cancelTypeahead();\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n  /** Returns the theme to be used on the panel. */\n  _getPanelTheme() {\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n  }\n  /** Whether the select has a value. */\n  get empty() {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n  _initializeSelection() {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl) {\n        this._value = this.ngControl.value;\n      }\n      this._setSelectionByValue(this._value);\n      this.stateChanges.next();\n    });\n  }\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  _setSelectionByValue(value) {\n    this.options.forEach(option => option.setInactiveStyles());\n    this._selectionModel.clear();\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonArrayValueError();\n      }\n      value.forEach(currentValue => this._selectOptionByValue(currentValue));\n      this._sortValues();\n    } else {\n      const correspondingOption = this._selectOptionByValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.updateActiveItem(correspondingOption);\n      } else if (!this.panelOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManager.updateActiveItem(-1);\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  _selectOptionByValue(value) {\n    const correspondingOption = this.options.find(option => {\n      // Skip options that are already in the model. This allows us to handle cases\n      // where the same primitive value is selected multiple times.\n      if (this._selectionModel.isSelected(option)) {\n        return false;\n      }\n      try {\n        // Treat null as a special reset value.\n        return (option.value != null || this.canSelectNullableOptions) && this._compareWith(option.value, value);\n      } catch (error) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n  /** Assigns a specific value to the select. Returns whether the value has changed. */\n  _assignValue(newValue) {\n    // Always re-assign an array, because it might have been mutated.\n    if (newValue !== this._value || this._multiple && Array.isArray(newValue)) {\n      if (this.options) {\n        this._setSelectionByValue(newValue);\n      }\n      this._value = newValue;\n      return true;\n    }\n    return false;\n  }\n  // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n  // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n  // recommendation.\n  //\n  // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n  // makes a few exceptions for compound widgets.\n  //\n  // From [Developing a Keyboard Interface](\n  // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n  //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n  //   Listbox...\"\n  //\n  // The user can focus disabled options using the keyboard, but the user cannot click disabled\n  // options.\n  _skipPredicate = option => {\n    if (this.panelOpen) {\n      // Support keyboard focusing disabled options in an ARIA listbox.\n      return false;\n    }\n    // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n    // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n    // closed.\n    return option.disabled;\n  };\n  /** Gets how wide the overlay panel should be. */\n  _getOverlayWidth(preferredOrigin) {\n    if (this.panelWidth === 'auto') {\n      const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin ? preferredOrigin.elementRef : preferredOrigin || this._elementRef;\n      return refToMeasure.nativeElement.getBoundingClientRect().width;\n    }\n    return this.panelWidth === null ? '' : this.panelWidth;\n  }\n  /** Syncs the parent state with the individual options. */\n  _syncParentProperties() {\n    if (this.options) {\n      for (const option of this.options) {\n        option._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead(this.typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withPageUpDown().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._skipPredicate);\n    this._keyManager.tabOut.subscribe(() => {\n      if (this.panelOpen) {\n        // Select the active item when tabbing away. This is consistent with how the native\n        // select behaves. Note that we only want to do this in single selection mode.\n        if (!this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.close();\n      }\n    });\n    this._keyManager.change.subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  _resetOptions() {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.source, event.isUserInput);\n      if (event.isUserInput && !this.multiple && this._panelOpen) {\n        this.close();\n        this.focus();\n      }\n    });\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges)).pipe(takeUntil(changedOrDestroyed)).subscribe(() => {\n      // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n      // be the result of an expression changing. We have to use `detectChanges` in order\n      // to avoid \"changed after checked\" errors (see #14793).\n      this._changeDetectorRef.detectChanges();\n      this.stateChanges.next();\n    });\n  }\n  /** Invoked when an option is clicked. */\n  _onSelect(option, isUserInput) {\n    const wasSelected = this._selectionModel.isSelected(option);\n    if (!this.canSelectNullableOptions && option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n      if (this.value != null) {\n        this._propagateChanges(option.value);\n      }\n    } else {\n      if (wasSelected !== option.selected) {\n        option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n      }\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n      if (this.multiple) {\n        this._sortValues();\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n    this.stateChanges.next();\n  }\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  _sortValues() {\n    if (this.multiple) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => {\n        return this.sortComparator ? this.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);\n      });\n      this.stateChanges.next();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges(fallbackValue) {\n    let valueToEmit;\n    if (this.multiple) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first *enabled* option.\n   */\n  _highlightCorrectOption() {\n    if (this._keyManager) {\n      if (this.empty) {\n        // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n        // because it activates the first option that passes the skip predicate, rather than the\n        // first *enabled* option.\n        let firstEnabledOptionIndex = -1;\n        for (let index = 0; index < this.options.length; index++) {\n          const option = this.options.get(index);\n          if (!option.disabled) {\n            firstEnabledOptionIndex = index;\n            break;\n          }\n        }\n        this._keyManager.setActiveItem(firstEnabledOptionIndex);\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n  /** Whether the panel is allowed to open. */\n  _canOpen() {\n    return !this._panelOpen && !this.disabled && this.options?.length > 0 && !!this._overlayDir;\n  }\n  /** Focuses the select element. */\n  focus(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Gets the aria-labelledby for the select panel. */\n  _getPanelAriaLabelledby() {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelId = this._parentFormField?.getLabelId() || null;\n    const labelExpression = labelId ? labelId + ' ' : '';\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant() {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n    return null;\n  }\n  /** Gets the aria-labelledby of the select component trigger. */\n  _getTriggerAriaLabelledby() {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelId = this._parentFormField?.getLabelId();\n    let value = (labelId ? labelId + ' ' : '') + this._valueId;\n    if (this.ariaLabelledby) {\n      value += ' ' + this.ariaLabelledby;\n    }\n    return value;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    if (ids.length) {\n      this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      this._elementRef.nativeElement.removeAttribute('aria-describedby');\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    this.focus();\n    this.open();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    // Since the panel doesn't overlap the trigger, we\n    // want the label to only float when there's a value.\n    return this.panelOpen || !this.empty || this.focused && !!this.placeholder;\n  }\n  static ɵfac = function MatSelect_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelect)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSelect,\n    selectors: [[\"mat-select\"]],\n    contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n      }\n    },\n    viewQuery: function MatSelect_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(CdkConnectedOverlay, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._overlayDir = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"mat-mdc-select\"],\n    hostVars: 19,\n    hostBindings: function MatSelect_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        })(\"focus\", function MatSelect_focus_HostBindingHandler() {\n          return ctx._onFocus();\n        })(\"blur\", function MatSelect_blur_HostBindingHandler() {\n          return ctx._onBlur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx.panelOpen ? ctx.id + \"-panel\" : null)(\"aria-expanded\", ctx.panelOpen)(\"aria-label\", ctx.ariaLabel || null)(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        i0.ɵɵclassProp(\"mat-mdc-select-disabled\", ctx.disabled)(\"mat-mdc-select-invalid\", ctx.errorState)(\"mat-mdc-select-required\", ctx.required)(\"mat-mdc-select-empty\", ctx.empty)(\"mat-mdc-select-multiple\", ctx.multiple);\n      }\n    },\n    inputs: {\n      userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n      panelClass: \"panelClass\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      placeholder: \"placeholder\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      disableOptionCentering: [2, \"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute],\n      compareWith: \"compareWith\",\n      value: \"value\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      errorStateMatcher: \"errorStateMatcher\",\n      typeaheadDebounceInterval: [2, \"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute],\n      sortComparator: \"sortComparator\",\n      id: \"id\",\n      panelWidth: \"panelWidth\",\n      canSelectNullableOptions: [2, \"canSelectNullableOptions\", \"canSelectNullableOptions\", booleanAttribute]\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      _openedStream: \"opened\",\n      _closedStream: \"closed\",\n      selectionChange: \"selectionChange\",\n      valueChange: \"valueChange\"\n    },\n    exportAs: [\"matSelect\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatSelect\n    }, {\n      provide: MAT_OPTION_PARENT_COMPONENT,\n      useExisting: MatSelect\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 11,\n    vars: 9,\n    consts: [[\"fallbackOverlayOrigin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [\"panel\", \"\"], [\"cdk-overlay-origin\", \"\", 1, \"mat-mdc-select-trigger\", 3, \"click\"], [1, \"mat-mdc-select-value\"], [1, \"mat-mdc-select-placeholder\", \"mat-mdc-select-min-line\"], [1, \"mat-mdc-select-value-text\"], [1, \"mat-mdc-select-arrow-wrapper\"], [1, \"mat-mdc-select-arrow\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M7 10l5 5 5-5z\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"backdropClick\", \"overlayKeydown\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayFlexibleDimensions\"], [1, \"mat-mdc-select-min-line\"], [\"role\", \"listbox\", \"tabindex\", \"-1\", 3, \"keydown\", \"ngClass\"]],\n    template: function MatSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵelementStart(0, \"div\", 2, 0);\n        i0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.open());\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, MatSelect_Conditional_4_Template, 2, 1, \"span\", 4)(5, MatSelect_Conditional_5_Template, 3, 1, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 8);\n        i0.ɵɵelement(9, \"path\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(10, MatSelect_ng_template_10_Template, 3, 10, \"ng-template\", 10);\n        i0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.close());\n        })(\"overlayKeydown\", function MatSelect_Template_ng_template_overlayKeydown_10_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleOverlayKeydown($event));\n        });\n      }\n      if (rf & 2) {\n        const fallbackOverlayOrigin_r4 = i0.ɵɵreference(1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"id\", ctx._valueId);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.empty ? 4 : 5);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"cdkConnectedOverlayDisableClose\", true)(\"cdkConnectedOverlayPanelClass\", ctx._overlayPanelClass)(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", ctx._preferredOverlayOrigin || fallbackOverlayOrigin_r4)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx._overlayWidth)(\"cdkConnectedOverlayFlexibleDimensions\", true);\n      }\n    },\n    dependencies: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n    styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelect, [{\n    type: Component,\n    args: [{\n      selector: 'mat-select',\n      exportAs: 'matSelect',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'combobox',\n        'aria-haspopup': 'listbox',\n        'class': 'mat-mdc-select',\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n        '[attr.aria-expanded]': 'panelOpen',\n        '[attr.aria-label]': 'ariaLabel || null',\n        '[attr.aria-required]': 'required.toString()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n        '[class.mat-mdc-select-disabled]': 'disabled',\n        '[class.mat-mdc-select-invalid]': 'errorState',\n        '[class.mat-mdc-select-required]': 'required',\n        '[class.mat-mdc-select-empty]': 'empty',\n        '[class.mat-mdc-select-multiple]': 'multiple',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatSelect\n      }, {\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatSelect\n      }],\n      imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass],\n      template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayDisableClose]=\\\"true\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  [cdkConnectedOverlayFlexibleDimensions]=\\\"true\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (overlayKeydown)=\\\"_handleOverlayKeydown($event)\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [class.mat-select-panel-animations-enabled]=\\\"!_animationsDisabled\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"@keyframes _mat-select-enter{from{opacity:0;transform:scaleY(0.8)}to{opacity:1;transform:none}}@keyframes _mat-select-exit{from{opacity:1}to{opacity:0}}.mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-sys-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-sys-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-disabled .mat-mdc-select-placeholder{color:var(--mat-select-disabled-trigger-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-sys-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}@media(forced-colors: active){.mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .mat-mdc-select-arrow svg{fill:GrayText}}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-sys-surface-container))}@media(forced-colors: active){div.mat-mdc-select-panel{outline:solid 1px}}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-select-panel-animations-enabled{animation:_mat-select-enter 120ms cubic-bezier(0, 0, 0.2, 1)}.mat-select-panel-animations-enabled.mat-select-panel-exit{animation:_mat-select-exit 100ms linear}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-form-field:not(.mat-form-field-animations-enabled) .mat-mdc-select-placeholder,._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform, translateY(-8px))}\"]\n    }]\n  }], () => [], {\n    options: [{\n      type: ContentChildren,\n      args: [MatOption, {\n        descendants: true\n      }]\n    }],\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    customTrigger: [{\n      type: ContentChild,\n      args: [MAT_SELECT_TRIGGER]\n    }],\n    userAriaDescribedBy: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    trigger: [{\n      type: ViewChild,\n      args: ['trigger']\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel']\n    }],\n    _overlayDir: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay]\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableOptionCentering: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    typeaheadDebounceInterval: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    sortComparator: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    panelWidth: [{\n      type: Input\n    }],\n    canSelectNullableOptions: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n  static ɵfac = function MatSelectTrigger_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectTrigger)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSelectTrigger,\n    selectors: [[\"mat-select-trigger\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SELECT_TRIGGER,\n      useExisting: MatSelectTrigger\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectTrigger, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-select-trigger',\n      providers: [{\n        provide: MAT_SELECT_TRIGGER,\n        useExisting: MatSelectTrigger\n      }]\n    }]\n  }], null, null);\n})();\nclass MatSelectModule {\n  static ɵfac = function MatSelectModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSelectModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n    imports: [OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule, MatFormFieldModule, MatOptionModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, MatSelect, MatSelectTrigger],\n      exports: [CdkScrollableModule, MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n      providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n    }]\n  }], null, null);\n})();\nexport { MatSelect as M, MatSelectModule as a, MAT_SELECT_SCROLL_STRATEGY as b, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY as c, MAT_SELECT_CONFIG as d, MAT_SELECT_SCROLL_STRATEGY_PROVIDER as e, MAT_SELECT_TRIGGER as f, MatSelectChange as g, MatSelectTrigger as h };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, inject, ChangeDetectorRef, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { k as MatFormField } from './form-field-50ec956f.mjs';\nimport { M as MatSelect, a as MatSelectModule } from './module-b0a3e0af.mjs';\nimport { M as MatTooltip, a as MatTooltipModule } from './module-087ecec3.mjs';\nimport { a as MatOption } from './option-cb353f7a.mjs';\nimport { a as MatIconButton } from './icon-button-655c4ed3.mjs';\nimport { h as MatButtonModule } from './module-6b33072b.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/platform';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/scrolling';\nimport '@angular/cdk/collections';\nimport '@angular/cdk/keycodes';\nimport '@angular/forms';\nimport './error-options-aca21924.mjs';\nimport './error-state-8f4ce1af.mjs';\nimport './index-2f2536d6.mjs';\nimport './index-a36e3c7c.mjs';\nimport './common-module-a39ee957.mjs';\nimport './ripple-5bdada85.mjs';\nimport '@angular/cdk/private';\nimport './pseudo-checkbox-module-31a58606.mjs';\nimport './pseudo-checkbox-4a60d45e.mjs';\nimport './module-0776ab9b.mjs';\nimport '@angular/cdk/observers';\nimport '@angular/cdk/portal';\nimport './structural-styles-326dcb39.mjs';\nimport './ripple-loader-dabcd93d.mjs';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nfunction MatPaginator_Conditional_2_Conditional_3_For_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pageSizeOption_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pageSizeOption_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", pageSizeOption_r3, \" \");\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 14)(1, \"mat-select\", 16, 0);\n    i0.ɵɵlistener(\"selectionChange\", function MatPaginator_Conditional_2_Conditional_3_Template_mat_select_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1._changePageSize($event.value));\n    });\n    i0.ɵɵrepeaterCreate(3, MatPaginator_Conditional_2_Conditional_3_For_4_Template, 2, 2, \"mat-option\", 17, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_2_Conditional_3_Template_div_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const selectRef_r4 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(selectRef_r4.open());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r1._formFieldAppearance)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.pageSize)(\"disabled\", ctx_r1.disabled)(\"aria-labelledby\", ctx_r1._pageSizeLabelId)(\"panelClass\", ctx_r1.selectConfig.panelClass || \"\")(\"disableOptionCentering\", ctx_r1.selectConfig.disableOptionCentering);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(ctx_r1._displayedPageSizeOptions);\n  }\n}\nfunction MatPaginator_Conditional_2_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\nfunction MatPaginator_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MatPaginator_Conditional_2_Conditional_3_Template, 6, 7, \"mat-form-field\", 14)(4, MatPaginator_Conditional_2_Conditional_4_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1._pageSizeLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1._intl.itemsPerPageLabel, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length > 1 ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1._displayedPageSizeOptions.length <= 1 ? 4 : -1);\n  }\n}\nfunction MatPaginator_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._buttonClicked(0, ctx_r1._previousButtonsDisabled()));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"disabled\", ctx_r1._previousButtonsDisabled())(\"tabindex\", ctx_r1._previousButtonsDisabled() ? -1 : null);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n  }\n}\nfunction MatPaginator_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function MatPaginator_Conditional_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._buttonClicked(ctx_r1.getNumberOfPages() - 1, ctx_r1._nextButtonsDisabled()));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 8);\n    i0.ɵɵelement(2, \"path\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r1._nextButtonsDisabled())(\"disabled\", ctx_r1._nextButtonsDisabled())(\"tabindex\", ctx_r1._nextButtonsDisabled() ? -1 : null);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1._intl.lastPageLabel);\n  }\n}\nclass MatPaginatorIntl {\n  /**\n   * Stream to emit from when labels are changed. Use this to notify components when the labels have\n   * changed after initialization.\n   */\n  changes = new Subject();\n  /** A label for the page size selector. */\n  itemsPerPageLabel = 'Items per page:';\n  /** A label for the button that increments the current page. */\n  nextPageLabel = 'Next page';\n  /** A label for the button that decrements the current page. */\n  previousPageLabel = 'Previous page';\n  /** A label for the button that moves to the first page. */\n  firstPageLabel = 'First page';\n  /** A label for the button that moves to the last page. */\n  lastPageLabel = 'Last page';\n  /** A label for the range of items within the current page and the length of the whole list. */\n  getRangeLabel = (page, pageSize, length) => {\n    if (length == 0 || pageSize == 0) {\n      return `0 of ${length}`;\n    }\n    length = Math.max(length, 0);\n    const startIndex = page * pageSize;\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n    return `${startIndex + 1} – ${endIndex} of ${length}`;\n  };\n  static ɵfac = function MatPaginatorIntl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginatorIntl)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatPaginatorIntl,\n    factory: MatPaginatorIntl.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatPaginatorIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n  // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n  provide: MatPaginatorIntl,\n  deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n  useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n  /** The current page index. */\n  pageIndex;\n  /**\n   * Index of the page that was selected previously.\n   * @breaking-change 8.0.0 To be made into a required property.\n   */\n  previousPageIndex;\n  /** The current page size. */\n  pageSize;\n  /** The current total number of items being paged. */\n  length;\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n  _intl = inject(MatPaginatorIntl);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  /** If set, styles the \"page size\" form field with the designated style. */\n  _formFieldAppearance;\n  /** ID for the DOM node containing the paginator's items per page label. */\n  _pageSizeLabelId = inject(_IdGenerator).getId('mat-paginator-page-size-label-');\n  _intlChanges;\n  _isInitialized = false;\n  _initializedStream = new ReplaySubject(1);\n  /**\n   * Theme color of the underlying form controls. This API is supported in M2\n   * themes only,it has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/paginator/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n  get pageIndex() {\n    return this._pageIndex;\n  }\n  set pageIndex(value) {\n    this._pageIndex = Math.max(value || 0, 0);\n    this._changeDetectorRef.markForCheck();\n  }\n  _pageIndex = 0;\n  /** The length of the total number of items that are being paginated. Defaulted to 0. */\n  get length() {\n    return this._length;\n  }\n  set length(value) {\n    this._length = value || 0;\n    this._changeDetectorRef.markForCheck();\n  }\n  _length = 0;\n  /** Number of items to display on a page. By default set to 50. */\n  get pageSize() {\n    return this._pageSize;\n  }\n  set pageSize(value) {\n    this._pageSize = Math.max(value || 0, 0);\n    this._updateDisplayedPageSizeOptions();\n  }\n  _pageSize;\n  /** The set of provided page size options to display to the user. */\n  get pageSizeOptions() {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value) {\n    this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n    this._updateDisplayedPageSizeOptions();\n  }\n  _pageSizeOptions = [];\n  /** Whether to hide the page size selection UI from the user. */\n  hidePageSize = false;\n  /** Whether to show the first/last buttons UI to the user. */\n  showFirstLastButtons = false;\n  /** Used to configure the underlying `MatSelect` inside the paginator. */\n  selectConfig = {};\n  /** Whether the paginator is disabled. */\n  disabled = false;\n  /** Event emitted when the paginator changes the page size or page index. */\n  page = new EventEmitter();\n  /** Displayed set of page size options. Will be sorted and include current page size. */\n  _displayedPageSizeOptions;\n  /** Emits when the paginator is initialized. */\n  initialized = this._initializedStream;\n  constructor() {\n    const _intl = this._intl;\n    const defaults = inject(MAT_PAGINATOR_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n    if (defaults) {\n      const {\n        pageSize,\n        pageSizeOptions,\n        hidePageSize,\n        showFirstLastButtons\n      } = defaults;\n      if (pageSize != null) {\n        this._pageSize = pageSize;\n      }\n      if (pageSizeOptions != null) {\n        this._pageSizeOptions = pageSizeOptions;\n      }\n      if (hidePageSize != null) {\n        this.hidePageSize = hidePageSize;\n      }\n      if (showFirstLastButtons != null) {\n        this.showFirstLastButtons = showFirstLastButtons;\n      }\n    }\n    this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._updateDisplayedPageSizeOptions();\n    this._initializedStream.next();\n  }\n  ngOnDestroy() {\n    this._initializedStream.complete();\n    this._intlChanges.unsubscribe();\n  }\n  /** Advances to the next page if it exists. */\n  nextPage() {\n    if (this.hasNextPage()) {\n      this._navigate(this.pageIndex + 1);\n    }\n  }\n  /** Move back to the previous page if it exists. */\n  previousPage() {\n    if (this.hasPreviousPage()) {\n      this._navigate(this.pageIndex - 1);\n    }\n  }\n  /** Move to the first page if not already there. */\n  firstPage() {\n    // hasPreviousPage being false implies at the start\n    if (this.hasPreviousPage()) {\n      this._navigate(0);\n    }\n  }\n  /** Move to the last page if not already there. */\n  lastPage() {\n    // hasNextPage being false implies at the end\n    if (this.hasNextPage()) {\n      this._navigate(this.getNumberOfPages() - 1);\n    }\n  }\n  /** Whether there is a previous page. */\n  hasPreviousPage() {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n  /** Whether there is a next page. */\n  hasNextPage() {\n    const maxPageIndex = this.getNumberOfPages() - 1;\n    return this.pageIndex < maxPageIndex && this.pageSize != 0;\n  }\n  /** Calculate the number of pages */\n  getNumberOfPages() {\n    if (!this.pageSize) {\n      return 0;\n    }\n    return Math.ceil(this.length / this.pageSize);\n  }\n  /**\n   * Changes the page size so that the first item displayed on the page will still be\n   * displayed using the new page size.\n   *\n   * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n   * switching so that the page size is 5 will set the third page as the current page so\n   * that the 10th item will still be displayed.\n   */\n  _changePageSize(pageSize) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n  /** Checks whether the buttons for going forwards should be disabled. */\n  _nextButtonsDisabled() {\n    return this.disabled || !this.hasNextPage();\n  }\n  /** Checks whether the buttons for going backwards should be disabled. */\n  _previousButtonsDisabled() {\n    return this.disabled || !this.hasPreviousPage();\n  }\n  /**\n   * Updates the list of page size options to display to the user. Includes making sure that\n   * the page size is an option and that the list is sorted.\n   */\n  _updateDisplayedPageSizeOptions() {\n    if (!this._isInitialized) {\n      return;\n    }\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n    }\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n  _emitPageEvent(previousPageIndex) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n  /** Navigates to a specific page index. */\n  _navigate(index) {\n    const previousIndex = this.pageIndex;\n    if (index !== previousIndex) {\n      this.pageIndex = index;\n      this._emitPageEvent(previousIndex);\n    }\n  }\n  /**\n   * Callback invoked when one of the navigation buttons is called.\n   * @param targetIndex Index to which the paginator should navigate.\n   * @param isDisabled Whether the button is disabled.\n   */\n  _buttonClicked(targetIndex, isDisabled) {\n    // Note that normally disabled buttons won't dispatch the click event, but the paginator ones\n    // do, because we're using `disabledInteractive` to allow them to be focusable. We need to\n    // check here to avoid the navigation.\n    if (!isDisabled) {\n      this._navigate(targetIndex);\n    }\n  }\n  static ɵfac = function MatPaginator_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginator)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPaginator,\n    selectors: [[\"mat-paginator\"]],\n    hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-paginator\"],\n    inputs: {\n      color: \"color\",\n      pageIndex: [2, \"pageIndex\", \"pageIndex\", numberAttribute],\n      length: [2, \"length\", \"length\", numberAttribute],\n      pageSize: [2, \"pageSize\", \"pageSize\", numberAttribute],\n      pageSizeOptions: \"pageSizeOptions\",\n      hidePageSize: [2, \"hidePageSize\", \"hidePageSize\", booleanAttribute],\n      showFirstLastButtons: [2, \"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute],\n      selectConfig: \"selectConfig\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      page: \"page\"\n    },\n    exportAs: [\"matPaginator\"],\n    decls: 14,\n    vars: 14,\n    consts: [[\"selectRef\", \"\"], [1, \"mat-mdc-paginator-outer-container\"], [1, \"mat-mdc-paginator-container\"], [1, \"mat-mdc-paginator-page-size\"], [1, \"mat-mdc-paginator-range-actions\"], [\"aria-live\", \"polite\", 1, \"mat-mdc-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"disabled\", \"tabindex\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-previous\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\", \"tabindex\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-next\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\", \"tabindex\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"disabled\", \"tabindex\"], [1, \"mat-mdc-paginator-page-size-label\"], [1, \"mat-mdc-paginator-page-size-select\", 3, \"appearance\", \"color\"], [1, \"mat-mdc-paginator-page-size-value\"], [\"hideSingleSelectionIndicator\", \"\", 3, \"selectionChange\", \"value\", \"disabled\", \"aria-labelledby\", \"panelClass\", \"disableOptionCentering\"], [3, \"value\"], [1, \"mat-mdc-paginator-touch-target\", 3, \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-first\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\", \"tabindex\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matTooltipPosition\", \"above\", \"disabledInteractive\", \"\", 1, \"mat-mdc-paginator-navigation-last\", 3, \"click\", \"matTooltip\", \"matTooltipDisabled\", \"disabled\", \"tabindex\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]],\n    template: function MatPaginator_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n        i0.ɵɵtemplate(2, MatPaginator_Conditional_2_Template, 5, 4, \"div\", 3);\n        i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, MatPaginator_Conditional_6_Template, 3, 5, \"button\", 6);\n        i0.ɵɵelementStart(7, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() {\n          return ctx._buttonClicked(ctx.pageIndex - 1, ctx._previousButtonsDisabled());\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 8);\n        i0.ɵɵelement(9, \"path\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(10, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() {\n          return ctx._buttonClicked(ctx.pageIndex + 1, ctx._nextButtonsDisabled());\n        });\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(11, \"svg\", 8);\n        i0.ɵɵelement(12, \"path\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, MatPaginator_Conditional_13_Template, 3, 5, \"button\", 12);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx.hidePageSize ? 2 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.showFirstLastButtons ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"disabled\", ctx._previousButtonsDisabled())(\"tabindex\", ctx._previousButtonsDisabled() ? -1 : null);\n        i0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"disabled\", ctx._nextButtonsDisabled())(\"tabindex\", ctx._nextButtonsDisabled() ? -1 : null);\n        i0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx.showFirstLastButtons ? 13 : -1);\n      }\n    },\n    dependencies: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n    styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-range-actions .mat-mdc-icon-button[aria-disabled]{color:GrayText}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginator, [{\n    type: Component,\n    args: [{\n      selector: 'mat-paginator',\n      exportAs: 'matPaginator',\n      host: {\n        'class': 'mat-mdc-paginator',\n        'role': 'group'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip],\n      template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <!--\\n      The buttons use `disabledInteractive` so that they can retain focus if they become disabled,\\n      otherwise focus is moved to the document body. However, users should not be able to navigate\\n      into these buttons, so `tabindex` is set to -1 when disabled.\\n      -->\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"_buttonClicked(0, _previousButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\"\\n                [tabindex]=\\\"_previousButtonsDisabled() ? -1 : null\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"_buttonClicked(pageIndex - 1, _previousButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              [tabindex]=\\\"_previousButtonsDisabled() ? -1 : null\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"_buttonClicked(pageIndex + 1, _nextButtonsDisabled())\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              matTooltipPosition=\\\"above\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              [tabindex]=\\\"_nextButtonsDisabled() ? -1 : null\\\"\\n              disabledInteractive>\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"_buttonClicked(getNumberOfPages() - 1, _nextButtonsDisabled())\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                matTooltipPosition=\\\"above\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\"\\n                [tabindex]=\\\"_nextButtonsDisabled() ? -1 : null\\\"\\n                disabledInteractive>\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-sys-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-sys-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-sys-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-sys-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height, 40px);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding, 8px)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-sys-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size, 56px)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}@media(forced-colors: active){.mat-mdc-icon-button[aria-disabled] .mat-mdc-paginator-icon,.mat-mdc-paginator-icon{fill:currentColor}.mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-range-actions .mat-mdc-icon-button[aria-disabled]{color:GrayText}}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display, block);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    pageIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    length: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageSizeOptions: [{\n      type: Input\n    }],\n    hidePageSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastButtons: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectConfig: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    page: [{\n      type: Output\n    }]\n  });\n})();\nclass MatPaginatorModule {\n  static ɵfac = function MatPaginatorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPaginatorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatPaginatorModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n      exports: [MatPaginator],\n      providers: [MAT_PAGINATOR_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, inject, ChangeDetectorRef, ElementRef, ANIMATION_MODULE_TYPE, signal, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { FocusMonitor, AriaDescriber } from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport '@angular/cdk/bidi';\n\n/** @docs-private */\nconst _c0 = [\"mat-sort-header\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatSortHeader_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 3);\n    i0.ɵɵelement(2, \"path\", 4);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction getSortDuplicateSortableIdError(id) {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n  _defaultOptions;\n  _initializedStream = new ReplaySubject(1);\n  /** Collection of all registered sortables that this directive manages. */\n  sortables = new Map();\n  /** Used to notify any child components listening to state changes. */\n  _stateChanges = new Subject();\n  /** The id of the most recently sorted MatSortable. */\n  active;\n  /**\n   * The direction to set when an MatSortable is initially sorted.\n   * May be overridden by the MatSortable's sort start.\n   */\n  start = 'asc';\n  /** The sort direction of the currently active MatSortable. */\n  get direction() {\n    return this._direction;\n  }\n  set direction(direction) {\n    if (direction && direction !== 'asc' && direction !== 'desc' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  _direction = '';\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   * May be overridden by the MatSortable's disable clear input.\n   */\n  disableClear;\n  /** Whether the sortable is disabled. */\n  disabled = false;\n  /** Event emitted when the user changes either the active sort or sort direction. */\n  sortChange = new EventEmitter();\n  /** Emits when the paginator is initialized. */\n  initialized = this._initializedStream;\n  constructor(_defaultOptions) {\n    this._defaultOptions = _defaultOptions;\n  }\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!sortable.id) {\n        throw getSortHeaderMissingIdError();\n      }\n      if (this.sortables.has(sortable.id)) {\n        throw getSortDuplicateSortableIdError(sortable.id);\n      }\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable) {\n    this.sortables.delete(sortable.id);\n  }\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable) {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n    this.sortChange.emit({\n      active: this.active,\n      direction: this.direction\n    });\n  }\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable) {\n    if (!sortable) {\n      return '';\n    }\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) {\n      nextDirectionIndex = 0;\n    }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n  ngOnInit() {\n    this._initializedStream.next();\n  }\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._initializedStream.complete();\n  }\n  static ɵfac = function MatSort_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSort)(i0.ɵɵdirectiveInject(MAT_SORT_DEFAULT_OPTIONS, 8));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSort,\n    selectors: [[\"\", \"matSort\", \"\"]],\n    hostAttrs: [1, \"mat-sort\"],\n    inputs: {\n      active: [0, \"matSortActive\", \"active\"],\n      start: [0, \"matSortStart\", \"start\"],\n      direction: [0, \"matSortDirection\", \"direction\"],\n      disableClear: [2, \"matSortDisableClear\", \"disableClear\", booleanAttribute],\n      disabled: [2, \"matSortDisabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      sortChange: \"matSortChange\"\n    },\n    exportAs: [\"matSort\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSort, [{\n    type: Directive,\n    args: [{\n      selector: '[matSort]',\n      exportAs: 'matSort',\n      host: {\n        'class': 'mat-sort'\n      }\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SORT_DEFAULT_OPTIONS]\n    }]\n  }], {\n    active: [{\n      type: Input,\n      args: ['matSortActive']\n    }],\n    start: [{\n      type: Input,\n      args: ['matSortStart']\n    }],\n    direction: [{\n      type: Input,\n      args: ['matSortDirection']\n    }],\n    disableClear: [{\n      type: Input,\n      args: [{\n        alias: 'matSortDisableClear',\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'matSortDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortChange: [{\n      type: Output,\n      args: ['matSortChange']\n    }]\n  });\n})();\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n  let sortOrder = ['asc', 'desc'];\n  if (start == 'desc') {\n    sortOrder.reverse();\n  }\n  if (!disableClear) {\n    sortOrder.push('');\n  }\n  return sortOrder;\n}\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes = new Subject();\n  static ɵfac = function MatSortHeaderIntl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSortHeaderIntl)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatSortHeaderIntl,\n    factory: MatSortHeaderIntl.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n  _intl = inject(MatSortHeaderIntl);\n  _sort = inject(MatSort, {\n    optional: true\n  });\n  _columnDef = inject('MAT_SORT_HEADER_COLUMN_DEF', {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _focusMonitor = inject(FocusMonitor);\n  _elementRef = inject(ElementRef);\n  _ariaDescriber = inject(AriaDescriber, {\n    optional: true\n  });\n  _renderChanges;\n  _animationModule = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  /**\n   * Indicates which state was just cleared from the sort header.\n   * Will be reset on the next interaction. Used for coordinating animations.\n   */\n  _recentlyCleared = signal(null);\n  /**\n   * The element with role=\"button\" inside this component's view. We need this\n   * in order to apply a description with AriaDescriber.\n   */\n  _sortButton;\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  id;\n  /** Sets the position of the arrow that displays when sorted. */\n  arrowPosition = 'after';\n  /** Overrides the sort start value of the containing MatSort for this MatSortable. */\n  start;\n  /** whether the sort header is disabled. */\n  disabled = false;\n  /**\n   * Description applied to MatSortHeader's button element with aria-describedby. This text should\n   * describe the action that will occur when the user clicks the sort header.\n   */\n  get sortActionDescription() {\n    return this._sortActionDescription;\n  }\n  set sortActionDescription(value) {\n    this._updateSortActionDescription(value);\n  }\n  // Default the action description to \"Sort\" because it's better than nothing.\n  // Without a description, the button's label comes from the sort header text content,\n  // which doesn't give any indication that it performs a sorting operation.\n  _sortActionDescription = 'Sort';\n  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n  disableClear;\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const defaultOptions = inject(MAT_SORT_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    // Note that we use a string token for the `_columnDef`, because the value is provided both by\n    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n    // and we want to avoid having the sort header depending on the CDK table because\n    // of this single reference.\n    if (!this._sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n    if (defaultOptions?.arrowPosition) {\n      this.arrowPosition = defaultOptions?.arrowPosition;\n    }\n  }\n  ngOnInit() {\n    if (!this.id && this._columnDef) {\n      this.id = this._columnDef.name;\n    }\n    this._sort.register(this);\n    this._renderChanges = merge(this._sort._stateChanges, this._sort.sortChange).subscribe(() => this._changeDetectorRef.markForCheck());\n    this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n    this._updateSortActionDescription(this._sortActionDescription);\n  }\n  ngAfterViewInit() {\n    // We use the focus monitor because we also want to style\n    // things differently based on the focus origin.\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(() => this._recentlyCleared.set(null));\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._sort.deregister(this);\n    this._renderChanges?.unsubscribe();\n    if (this._sortButton) {\n      this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n    }\n  }\n  /** Triggers the sort on this sort header and removes the indicator hint. */\n  _toggleOnInteraction() {\n    if (!this._isDisabled()) {\n      const wasSorted = this._isSorted();\n      const prevDirection = this._sort.direction;\n      this._sort.sort(this);\n      this._recentlyCleared.set(wasSorted && !this._isSorted() ? prevDirection : null);\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      event.preventDefault();\n      this._toggleOnInteraction();\n    }\n  }\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id && (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n  /**\n   * Gets the aria-sort attribute that should be applied to this sort header. If this header\n   * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n   * says that the aria-sort property should only be present on one header at a time, so removing\n   * ensures this is true.\n   */\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) {\n      return 'none';\n    }\n    return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n  /** Whether the arrow inside the sort header should be rendered. */\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n  _updateSortActionDescription(newDescription) {\n    // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n    // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n    // for every *cell* in the table, creating a lot of unnecessary noise.\n    // If _sortButton is undefined, the component hasn't been initialized yet so there's\n    // nothing to update in the DOM.\n    if (this._sortButton) {\n      // removeDescription will no-op if there is no existing message.\n      // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n      this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n      this._ariaDescriber?.describe(this._sortButton, newDescription);\n    }\n    this._sortActionDescription = newDescription;\n  }\n  static ɵfac = function MatSortHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSortHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSortHeader,\n    selectors: [[\"\", \"mat-sort-header\", \"\"]],\n    hostAttrs: [1, \"mat-sort-header\"],\n    hostVars: 3,\n    hostBindings: function MatSortHeader_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() {\n          return ctx._toggleOnInteraction();\n        })(\"keydown\", function MatSortHeader_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() {\n          return ctx._recentlyCleared.set(null);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        i0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n      }\n    },\n    inputs: {\n      id: [0, \"mat-sort-header\", \"id\"],\n      arrowPosition: \"arrowPosition\",\n      start: \"start\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      sortActionDescription: \"sortActionDescription\",\n      disableClear: [2, \"disableClear\", \"disableClear\", booleanAttribute]\n    },\n    exportAs: [\"matSortHeader\"],\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 17,\n    consts: [[1, \"mat-sort-header-container\", \"mat-focus-indicator\"], [1, \"mat-sort-header-content\"], [1, \"mat-sort-header-arrow\"], [\"viewBox\", \"0 -960 960 960\", \"focusable\", \"false\", \"aria-hidden\", \"true\"], [\"d\", \"M440-240v-368L296-464l-56-56 240-240 240 240-56 56-144-144v368h-80Z\"]],\n    template: function MatSortHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MatSortHeader_Conditional_3_Template, 3, 0, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition === \"before\")(\"mat-sort-header-descending\", ctx._sort.direction === \"desc\")(\"mat-sort-header-ascending\", ctx._sort.direction === \"asc\")(\"mat-sort-header-recently-cleared-ascending\", ctx._recentlyCleared() === \"asc\")(\"mat-sort-header-recently-cleared-descending\", ctx._recentlyCleared() === \"desc\")(\"mat-sort-header-animations-disabled\", ctx._animationModule === \"NoopAnimations\");\n        i0.ɵɵattribute(\"tabindex\", ctx._isDisabled() ? null : 0)(\"role\", ctx._isDisabled() ? null : \"button\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx._renderArrow() ? 3 : -1);\n      }\n    },\n    styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}@keyframes _mat-sort-header-recently-cleared-ascending{from{transform:translateY(0);opacity:1}to{transform:translateY(-25%);opacity:0}}@keyframes _mat-sort-header-recently-cleared-descending{from{transform:translateY(0) rotate(180deg);opacity:1}to{transform:translateY(25%) rotate(180deg);opacity:0}}.mat-sort-header-arrow{height:12px;width:12px;position:relative;transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1),opacity 225ms cubic-bezier(0.4, 0, 0.2, 1);opacity:0;overflow:visible;color:var(--mat-sort-arrow-color, var(--mat-sys-on-surface))}.mat-sort-header.cdk-keyboard-focused .mat-sort-header-arrow,.mat-sort-header.cdk-program-focused .mat-sort-header-arrow,.mat-sort-header:hover .mat-sort-header-arrow{opacity:.54}.mat-sort-header .mat-sort-header-sorted .mat-sort-header-arrow{opacity:1}.mat-sort-header-descending .mat-sort-header-arrow{transform:rotate(180deg)}.mat-sort-header-recently-cleared-ascending .mat-sort-header-arrow{transform:translateY(-25%)}.mat-sort-header-recently-cleared-ascending .mat-sort-header-arrow{transition:none;animation:_mat-sort-header-recently-cleared-ascending 225ms cubic-bezier(0.4, 0, 0.2, 1) forwards}.mat-sort-header-recently-cleared-descending .mat-sort-header-arrow{transition:none;animation:_mat-sort-header-recently-cleared-descending 225ms cubic-bezier(0.4, 0, 0.2, 1) forwards}.mat-sort-header-animations-disabled .mat-sort-header-arrow{transition-duration:0ms;animation-duration:0ms}.mat-sort-header-arrow svg{width:24px;height:24px;fill:currentColor;position:absolute;top:50%;left:50%;margin:-12px 0 0 -12px;transform:translateZ(0)}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortHeader, [{\n    type: Component,\n    args: [{\n      selector: '[mat-sort-header]',\n      exportAs: 'matSortHeader',\n      host: {\n        'class': 'mat-sort-header',\n        '(click)': '_toggleOnInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        '(mouseleave)': '_recentlyCleared.set(null)',\n        '[attr.aria-sort]': '_getAriaSortAttribute()',\n        '[class.mat-sort-header-disabled]': '_isDisabled()'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [class.mat-sort-header-descending]=\\\"this._sort.direction === 'desc'\\\"\\n     [class.mat-sort-header-ascending]=\\\"this._sort.direction === 'asc'\\\"\\n     [class.mat-sort-header-recently-cleared-ascending]=\\\"_recentlyCleared() === 'asc'\\\"\\n     [class.mat-sort-header-recently-cleared-descending]=\\\"_recentlyCleared() === 'desc'\\\"\\n     [class.mat-sort-header-animations-disabled]=\\\"_animationModule === 'NoopAnimations'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\">\\n      <svg viewBox=\\\"0 -960 960 960\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M440-240v-368L296-464l-56-56 240-240 240 240-56 56-144-144v368h-80Z\\\"/>\\n      </svg>\\n    </div>\\n  }\\n</div>\\n\",\n      styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}@keyframes _mat-sort-header-recently-cleared-ascending{from{transform:translateY(0);opacity:1}to{transform:translateY(-25%);opacity:0}}@keyframes _mat-sort-header-recently-cleared-descending{from{transform:translateY(0) rotate(180deg);opacity:1}to{transform:translateY(25%) rotate(180deg);opacity:0}}.mat-sort-header-arrow{height:12px;width:12px;position:relative;transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1),opacity 225ms cubic-bezier(0.4, 0, 0.2, 1);opacity:0;overflow:visible;color:var(--mat-sort-arrow-color, var(--mat-sys-on-surface))}.mat-sort-header.cdk-keyboard-focused .mat-sort-header-arrow,.mat-sort-header.cdk-program-focused .mat-sort-header-arrow,.mat-sort-header:hover .mat-sort-header-arrow{opacity:.54}.mat-sort-header .mat-sort-header-sorted .mat-sort-header-arrow{opacity:1}.mat-sort-header-descending .mat-sort-header-arrow{transform:rotate(180deg)}.mat-sort-header-recently-cleared-ascending .mat-sort-header-arrow{transform:translateY(-25%)}.mat-sort-header-recently-cleared-ascending .mat-sort-header-arrow{transition:none;animation:_mat-sort-header-recently-cleared-ascending 225ms cubic-bezier(0.4, 0, 0.2, 1) forwards}.mat-sort-header-recently-cleared-descending .mat-sort-header-arrow{transition:none;animation:_mat-sort-header-recently-cleared-descending 225ms cubic-bezier(0.4, 0, 0.2, 1) forwards}.mat-sort-header-animations-disabled .mat-sort-header-arrow{transition-duration:0ms;animation-duration:0ms}.mat-sort-header-arrow svg{width:24px;height:24px;fill:currentColor;position:absolute;top:50%;left:50%;margin:-12px 0 0 -12px;transform:translateZ(0)}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}\"]\n    }]\n  }], () => [], {\n    id: [{\n      type: Input,\n      args: ['mat-sort-header']\n    }],\n    arrowPosition: [{\n      type: Input\n    }],\n    start: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    sortActionDescription: [{\n      type: Input\n    }],\n    disableClear: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatSortModule {\n  static ɵfac = function MatSortModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSortModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSortModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n    imports: [MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSortModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatSort, MatSortHeader],\n      exports: [MatSort, MatSortHeader],\n      providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by MatSort.\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matSortAnimations = {\n  // Represents:\n  // trigger('indicator', [\n  //   state('active-asc, asc', style({transform: 'translateY(0px)'})),\n  //   // 10px is the height of the sort indicator, minus the width of the pointers\n  //   state('active-desc, desc', style({transform: 'translateY(10px)'})),\n  //   transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n  // ])\n  /** Animation that moves the sort indicator. */\n  indicator: {\n    type: 7,\n    name: 'indicator',\n    definitions: [{\n      type: 0,\n      name: 'active-asc, asc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translateY(0px)'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'active-desc, desc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translateY(10px)'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'active-asc <=> active-desc',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('leftPointer', [\n  //   state('active-asc, asc', style({transform: 'rotate(-45deg)'})),\n  //   state('active-desc, desc', style({transform: 'rotate(45deg)'})),\n  //   transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n  // ])\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: {\n    type: 7,\n    name: 'leftPointer',\n    definitions: [{\n      type: 0,\n      name: 'active-asc, asc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'rotate(-45deg)'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'active-desc, desc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'rotate(45deg)'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'active-asc <=> active-desc',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('rightPointer', [\n  //   state('active-asc, asc', style({transform: 'rotate(45deg)'})),\n  //   state('active-desc, desc', style({transform: 'rotate(-45deg)'})),\n  //   transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n  // ])\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: {\n    type: 7,\n    name: 'rightPointer',\n    definitions: [{\n      type: 0,\n      name: 'active-asc, asc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'rotate(45deg)'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'active-desc, desc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'rotate(-45deg)'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'active-asc <=> active-desc',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('arrowOpacity', [\n  //   state('desc-to-active, asc-to-active, active', style({opacity: 1})),\n  //   state('desc-to-hint, asc-to-hint, hint', style({opacity: 0.54})),\n  //   state(\n  //     'hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void',\n  //     style({opacity: 0}),\n  //   ),\n  //   // Transition between all states except for immediate transitions\n  //   transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n  //   transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n  // ])\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: {\n    type: 7,\n    name: 'arrowOpacity',\n    definitions: [{\n      type: 0,\n      name: 'desc-to-active, asc-to-active, active',\n      styles: {\n        type: 6,\n        styles: {\n          'opacity': 1\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'desc-to-hint, asc-to-hint, hint',\n      styles: {\n        type: 6,\n        styles: {\n          'opacity': 0.54\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void',\n      styles: {\n        type: 6,\n        styles: {\n          'opacity': 0\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: '* => asc, * => desc, * => active, * => hint, * => void',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '0ms'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* <=> *',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('arrowPosition', [\n  //   // Hidden Above => Hint Center\n  //   transition(\n  //     '* => desc-to-hint, * => desc-to-active',\n  //     animate(\n  //       SORT_ANIMATION_TRANSITION,\n  //       keyframes([style({transform: 'translateY(-25%)'}), style({transform: 'translateY(0)'})]),\n  //     ),\n  //   ),\n  //   // Hint Center => Hidden Below\n  //   transition(\n  //     '* => hint-to-desc, * => active-to-desc',\n  //     animate(\n  //       SORT_ANIMATION_TRANSITION,\n  //       keyframes([style({transform: 'translateY(0)'}), style({transform: 'translateY(25%)'})]),\n  //     ),\n  //   ),\n  //   // Hidden Below => Hint Center\n  //   transition(\n  //     '* => asc-to-hint, * => asc-to-active',\n  //     animate(\n  //       SORT_ANIMATION_TRANSITION,\n  //       keyframes([style({transform: 'translateY(25%)'}), style({transform: 'translateY(0)'})]),\n  //     ),\n  //   ),\n  //   // Hint Center => Hidden Above\n  //   transition(\n  //     '* => hint-to-asc, * => active-to-asc',\n  //     animate(\n  //       SORT_ANIMATION_TRANSITION,\n  //       keyframes([style({transform: 'translateY(0)'}), style({transform: 'translateY(-25%)'})]),\n  //     ),\n  //   ),\n  //   state(\n  //     'desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\n  //     style({transform: 'translateY(0)'}),\n  //   ),\n  //   state('hint-to-desc, active-to-desc, desc', style({transform: 'translateY(-25%)'})),\n  //   state('hint-to-asc, active-to-asc, asc', style({transform: 'translateY(25%)'})),\n  // ])\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: {\n    type: 7,\n    name: 'arrowPosition',\n    definitions: [{\n      type: 1,\n      expr: '* => desc-to-hint, * => desc-to-active',\n      animation: {\n        type: 4,\n        styles: {\n          type: 5,\n          'steps': [{\n            type: 6,\n            styles: {\n              transform: 'translateY(-25%)'\n            },\n            offset: null\n          }, {\n            type: 6,\n            styles: {\n              transform: 'translateY(0)'\n            },\n            offset: null\n          }]\n        },\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* => hint-to-desc, * => active-to-desc',\n      animation: {\n        type: 4,\n        styles: {\n          type: 5,\n          'steps': [{\n            type: 6,\n            styles: {\n              transform: 'translateY(0)'\n            },\n            offset: null\n          }, {\n            type: 6,\n            styles: {\n              transform: 'translateY(25%)'\n            },\n            offset: null\n          }]\n        },\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* => asc-to-hint, * => asc-to-active',\n      animation: {\n        type: 4,\n        styles: {\n          type: 5,\n          'steps': [{\n            type: 6,\n            styles: {\n              transform: 'translateY(25%)'\n            },\n            offset: null\n          }, {\n            type: 6,\n            styles: {\n              transform: 'translateY(0)'\n            },\n            offset: null\n          }]\n        },\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* => hint-to-asc, * => active-to-asc',\n      animation: {\n        type: 4,\n        styles: {\n          type: 5,\n          'steps': [{\n            type: 6,\n            styles: {\n              transform: 'translateY(0)'\n            },\n            offset: null\n          }, {\n            type: 6,\n            styles: {\n              transform: 'translateY(-25%)'\n            },\n            offset: null\n          }]\n        },\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }, {\n      type: 0,\n      name: 'desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translateY(0)'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'hint-to-desc, active-to-desc, desc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translateY(-25%)'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'hint-to-asc, active-to-asc, asc',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'translateY(25%)'\n        },\n        offset: null\n      }\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('allowChildren', [\n  //   transition('* <=> *', [query('@*', animateChild(), {optional: true})]),\n  // ])\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: {\n    type: 7,\n    name: 'allowChildren',\n    definitions: [{\n      type: 1,\n      expr: '* <=> *',\n      animation: [{\n        type: 11,\n        selector: '@*',\n        animation: {\n          type: 9,\n          options: null\n        },\n        options: {\n          optional: true\n        }\n      }],\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import { i as isDataSource } from './data-source-5320b6fd.mjs';\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction CdkTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction CdkTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 0);\n    i0.ɵɵelementContainer(3, 2)(4, 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CdkTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 2)(2, 3)(3, 4);\n  }\n}\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nexport { D as DataSource } from './data-source-5320b6fd.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, booleanAttribute, Input, ContentChild, ElementRef, NgZone, Injectable, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, afterNextRender, ChangeDetectorRef, EventEmitter, Injector, HostAttributeToken, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { b as _VIEW_REPEATER_STRATEGY, _ as _RecycleViewRepeaterStrategy, a as _ViewRepeaterOperation } from './recycle-view-repeater-strategy-c1712813.mjs';\nimport { _ as _DisposeViewRepeaterStrategy } from './dispose-view-repeater-strategy-b11b87ea.mjs';\nimport { D as Directionality } from './directionality-0a678adc.mjs';\nimport { P as Platform } from './platform-610a08ae.mjs';\nimport { V as ViewportRuler, a as ScrollingModule } from './scrolling-module-3dd0744a.mjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport './element-705567fe.mjs';\nimport './scrolling-61955dd1.mjs';\nimport './bidi-module-56dd006c.mjs';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n  /** @docs-private */\n  template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function CdkCellDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkCellDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkCellDef,\n    selectors: [[\"\", \"cdkCellDef\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellDef]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n  /** @docs-private */\n  template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function CdkHeaderCellDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkHeaderCellDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkHeaderCellDef,\n    selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderCellDef]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n  /** @docs-private */\n  template = inject(TemplateRef);\n  constructor() {}\n  static ɵfac = function CdkFooterCellDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkFooterCellDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkFooterCellDef,\n    selectors: [[\"\", \"cdkFooterCellDef\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterCellDef]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef {\n  _table = inject(CDK_TABLE, {\n    optional: true\n  });\n  _hasStickyChanged = false;\n  /** Unique name for this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._setNameInput(name);\n  }\n  _name;\n  /** Whether the cell is sticky. */\n  get sticky() {\n    return this._sticky;\n  }\n  set sticky(value) {\n    if (value !== this._sticky) {\n      this._sticky = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  _sticky = false;\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n  get stickyEnd() {\n    return this._stickyEnd;\n  }\n  set stickyEnd(value) {\n    if (value !== this._stickyEnd) {\n      this._stickyEnd = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  _stickyEnd = false;\n  /** @docs-private */\n  cell;\n  /** @docs-private */\n  headerCell;\n  /** @docs-private */\n  footerCell;\n  /**\n   * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n   * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n   * do not match are replaced by the '-' character.\n   */\n  cssClassFriendlyName;\n  /**\n   * Class name for cells in this column.\n   * @docs-private\n   */\n  _columnCssClassName;\n  constructor() {}\n  /** Whether the sticky state has changed. */\n  hasStickyChanged() {\n    const hasStickyChanged = this._hasStickyChanged;\n    this.resetStickyChanged();\n    return hasStickyChanged;\n  }\n  /** Resets the sticky changed state. */\n  resetStickyChanged() {\n    this._hasStickyChanged = false;\n  }\n  /**\n   * Overridable method that sets the css classes that will be added to every cell in this\n   * column.\n   * In the future, columnCssClassName will change from type string[] to string and this\n   * will set a single string value.\n   * @docs-private\n   */\n  _updateColumnCssClassName() {\n    this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setNameInput(value) {\n    // If the directive is set without a name (updated programmatically), then this setter will\n    // trigger with an empty string and should not overwrite the programmatically set value.\n    if (value) {\n      this._name = value;\n      this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n      this._updateColumnCssClassName();\n    }\n  }\n  static ɵfac = function CdkColumnDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkColumnDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkColumnDef,\n    selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n    contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n      }\n    },\n    inputs: {\n      name: [0, \"cdkColumnDef\", \"name\"],\n      sticky: [2, \"sticky\", \"sticky\", booleanAttribute],\n      stickyEnd: [2, \"stickyEnd\", \"stickyEnd\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n      useExisting: CdkColumnDef\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkColumnDef]',\n      providers: [{\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: CdkColumnDef\n      }]\n    }]\n  }], () => [], {\n    name: [{\n      type: Input,\n      args: ['cdkColumnDef']\n    }],\n    sticky: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stickyEnd: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    cell: [{\n      type: ContentChild,\n      args: [CdkCellDef]\n    }],\n    headerCell: [{\n      type: ContentChild,\n      args: [CdkHeaderCellDef]\n    }],\n    footerCell: [{\n      type: ContentChild,\n      args: [CdkFooterCellDef]\n    }]\n  });\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n  }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n  constructor() {\n    super(inject(CdkColumnDef), inject(ElementRef));\n  }\n  static ɵfac = function CdkHeaderCell_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkHeaderCell)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkHeaderCell,\n    selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n    hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-header-cell, th[cdk-header-cell]',\n      host: {\n        'class': 'cdk-header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], () => [], null);\n})();\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n  constructor() {\n    const columnDef = inject(CdkColumnDef);\n    const elementRef = inject(ElementRef);\n    super(columnDef, elementRef);\n    const role = columnDef._table?._getCellRole();\n    if (role) {\n      elementRef.nativeElement.setAttribute('role', role);\n    }\n  }\n  static ɵfac = function CdkFooterCell_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkFooterCell)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkFooterCell,\n    selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n    hostAttrs: [1, \"cdk-footer-cell\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n      host: {\n        'class': 'cdk-footer-cell'\n      }\n    }]\n  }], () => [], null);\n})();\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n  constructor() {\n    const columnDef = inject(CdkColumnDef);\n    const elementRef = inject(ElementRef);\n    super(columnDef, elementRef);\n    const role = columnDef._table?._getCellRole();\n    if (role) {\n      elementRef.nativeElement.setAttribute('role', role);\n    }\n  }\n  static ɵfac = function CdkCell_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkCell)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkCell,\n    selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n    hostAttrs: [1, \"cdk-cell\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCell, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-cell, td[cdk-cell]',\n      host: {\n        'class': 'cdk-cell'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * @docs-private\n */\nclass _Schedule {\n  tasks = [];\n  endTasks = [];\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n  _currentSchedule = null;\n  _ngZone = inject(NgZone);\n  constructor() {}\n  /**\n   * Schedules the specified task to run at the end of the current VM turn.\n   */\n  schedule(task) {\n    this._createScheduleIfNeeded();\n    this._currentSchedule.tasks.push(task);\n  }\n  /**\n   * Schedules the specified task to run after other scheduled tasks at the end of the current\n   * VM turn.\n   */\n  scheduleEnd(task) {\n    this._createScheduleIfNeeded();\n    this._currentSchedule.endTasks.push(task);\n  }\n  _createScheduleIfNeeded() {\n    if (this._currentSchedule) {\n      return;\n    }\n    this._currentSchedule = new _Schedule();\n    this._ngZone.runOutsideAngular(() =>\n    // TODO(mmalerba): Scheduling this using something that runs less frequently\n    //  (e.g. requestAnimationFrame, setTimeout, etc.) causes noticeable jank with the column\n    //  resizer. We should audit the usages of schedule / scheduleEnd in that component and see\n    //  if we can refactor it so that we don't need to flush the tasks quite so frequently.\n    queueMicrotask(() => {\n      while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n        const schedule = this._currentSchedule;\n        // Capture new tasks scheduled by the current set of tasks.\n        this._currentSchedule = new _Schedule();\n        for (const task of schedule.tasks) {\n          task();\n        }\n        for (const task of schedule.endTasks) {\n          task();\n        }\n      }\n      this._currentSchedule = null;\n    }));\n  }\n  static ɵfac = function _CoalescedStyleScheduler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _CoalescedStyleScheduler)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: _CoalescedStyleScheduler,\n    factory: _CoalescedStyleScheduler.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\n    type: Injectable\n  }], () => [], null);\n})();\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n  template = inject(TemplateRef);\n  _differs = inject(IterableDiffers);\n  /** The columns to be displayed on this row. */\n  columns;\n  /** Differ used to check if any changes were made to the columns. */\n  _columnsDiffer;\n  constructor() {}\n  ngOnChanges(changes) {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property or an empty array if none is provided.\n    if (!this._columnsDiffer) {\n      const columns = changes['columns'] && changes['columns'].currentValue || [];\n      this._columnsDiffer = this._differs.find(columns).create();\n      this._columnsDiffer.diff(columns);\n    }\n  }\n  /**\n   * Returns the difference between the current columns and the columns from the last diff, or null\n   * if there is no difference.\n   */\n  getColumnsDiff() {\n    return this._columnsDiffer.diff(this.columns);\n  }\n  /** Gets this row def's relevant cell template from the provided column def. */\n  extractCellTemplate(column) {\n    if (this instanceof CdkHeaderRowDef) {\n      return column.headerCell.template;\n    }\n    if (this instanceof CdkFooterRowDef) {\n      return column.footerCell.template;\n    } else {\n      return column.cell.template;\n    }\n  }\n  static ɵfac = function BaseRowDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BaseRowDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BaseRowDef,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseRowDef, [{\n    type: Directive\n  }], () => [], null);\n})();\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends BaseRowDef {\n  _table = inject(CDK_TABLE, {\n    optional: true\n  });\n  _hasStickyChanged = false;\n  /** Whether the row is sticky. */\n  get sticky() {\n    return this._sticky;\n  }\n  set sticky(value) {\n    if (value !== this._sticky) {\n      this._sticky = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  _sticky = false;\n  constructor() {\n    super(inject(TemplateRef), inject(IterableDiffers));\n  }\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n  /** Whether the sticky state has changed. */\n  hasStickyChanged() {\n    const hasStickyChanged = this._hasStickyChanged;\n    this.resetStickyChanged();\n    return hasStickyChanged;\n  }\n  /** Resets the sticky changed state. */\n  resetStickyChanged() {\n    this._hasStickyChanged = false;\n  }\n  static ɵfac = function CdkHeaderRowDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkHeaderRowDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkHeaderRowDef,\n    selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n    inputs: {\n      columns: [0, \"cdkHeaderRowDef\", \"columns\"],\n      sticky: [2, \"cdkHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkHeaderRowDef]',\n      inputs: [{\n        name: 'columns',\n        alias: 'cdkHeaderRowDef'\n      }]\n    }]\n  }], () => [], {\n    sticky: [{\n      type: Input,\n      args: [{\n        alias: 'cdkHeaderRowDefSticky',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends BaseRowDef {\n  _table = inject(CDK_TABLE, {\n    optional: true\n  });\n  _hasStickyChanged = false;\n  /** Whether the row is sticky. */\n  get sticky() {\n    return this._sticky;\n  }\n  set sticky(value) {\n    if (value !== this._sticky) {\n      this._sticky = value;\n      this._hasStickyChanged = true;\n    }\n  }\n  _sticky = false;\n  constructor() {\n    super(inject(TemplateRef), inject(IterableDiffers));\n  }\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n  }\n  /** Whether the sticky state has changed. */\n  hasStickyChanged() {\n    const hasStickyChanged = this._hasStickyChanged;\n    this.resetStickyChanged();\n    return hasStickyChanged;\n  }\n  /** Resets the sticky changed state. */\n  resetStickyChanged() {\n    this._hasStickyChanged = false;\n  }\n  static ɵfac = function CdkFooterRowDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkFooterRowDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkFooterRowDef,\n    selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n    inputs: {\n      columns: [0, \"cdkFooterRowDef\", \"columns\"],\n      sticky: [2, \"cdkFooterRowDefSticky\", \"sticky\", booleanAttribute]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkFooterRowDef]',\n      inputs: [{\n        name: 'columns',\n        alias: 'cdkFooterRowDef'\n      }]\n    }]\n  }], () => [], {\n    sticky: [{\n      type: Input,\n      args: [{\n        alias: 'cdkFooterRowDefSticky',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n  _table = inject(CDK_TABLE, {\n    optional: true\n  });\n  /**\n   * Function that should return true if this row template should be used for the provided index\n   * and row data. If left undefined, this row will be considered the default row template to use\n   * when no other when functions return true for the data.\n   * For every row, there must be at least one when function that passes or an undefined to default.\n   */\n  when;\n  constructor() {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    super(inject(TemplateRef), inject(IterableDiffers));\n  }\n  static ɵfac = function CdkRowDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkRowDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkRowDef,\n    selectors: [[\"\", \"cdkRowDef\", \"\"]],\n    inputs: {\n      columns: [0, \"cdkRowDefColumns\", \"columns\"],\n      when: [0, \"cdkRowDefWhen\", \"when\"]\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkRowDef]',\n      inputs: [{\n        name: 'columns',\n        alias: 'cdkRowDefColumns'\n      }, {\n        name: 'when',\n        alias: 'cdkRowDefWhen'\n      }]\n    }]\n  }], () => [], null);\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n  _viewContainer = inject(ViewContainerRef);\n  /** The ordered list of cells to render within this outlet's view container */\n  cells;\n  /** The data context to be provided to each cell */\n  context;\n  /**\n   * Static property containing the latest constructed instance of this class.\n   * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n   * createEmbeddedView. After one of these components are created, this property will provide\n   * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n   * construct the cells with the provided context.\n   */\n  static mostRecentCellOutlet = null;\n  constructor() {\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n  ngOnDestroy() {\n    // If this was the last outlet being rendered in the view, remove the reference\n    // from the static property after it has been destroyed to avoid leaking memory.\n    if (CdkCellOutlet.mostRecentCellOutlet === this) {\n      CdkCellOutlet.mostRecentCellOutlet = null;\n    }\n  }\n  static ɵfac = function CdkCellOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkCellOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkCellOutlet,\n    selectors: [[\"\", \"cdkCellOutlet\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkCellOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkCellOutlet]'\n    }]\n  }], () => [], null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n  static ɵfac = function CdkHeaderRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkHeaderRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkHeaderRow,\n    selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function CdkHeaderRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkCellOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-header-row, tr[cdk-header-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n  static ɵfac = function CdkFooterRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkFooterRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkFooterRow,\n    selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function CdkFooterRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkCellOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-footer-row, tr[cdk-footer-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-footer-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n  static ɵfac = function CdkRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkRow,\n    selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function CdkRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkCellOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkRow, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-row, tr[cdk-row]',\n      template: CDK_ROW_TEMPLATE,\n      host: {\n        'class': 'cdk-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n  templateRef = inject(TemplateRef);\n  _contentClassName = 'cdk-no-data-row';\n  constructor() {}\n  static ɵfac = function CdkNoDataRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkNoDataRow)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkNoDataRow,\n    selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkNoDataRow]'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Directions that can be used when setting sticky positioning.\n * @docs-private\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n  _isNativeHtmlTable;\n  _stickCellCss;\n  direction;\n  _coalescedStyleScheduler;\n  _isBrowser;\n  _needsPositionStickyOnElement;\n  _positionListener;\n  _tableInjector;\n  _elemSizeCache = new WeakMap();\n  _resizeObserver = globalThis?.ResizeObserver ? new globalThis.ResizeObserver(entries => this._updateCachedSizes(entries)) : null;\n  _updatedStickyColumnsParamsToReplay = [];\n  _stickyColumnsReplayTimeout = null;\n  _cachedCellWidths = [];\n  _borderCellCss;\n  _destroyed = false;\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   * @param _tableInjector The table's Injector.\n   */\n  constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener, _tableInjector) {\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._tableInjector = _tableInjector;\n    this._borderCellCss = {\n      'top': `${_stickCellCss}-border-elem-top`,\n      'bottom': `${_stickCellCss}-border-elem-bottom`,\n      'left': `${_stickCellCss}-border-elem-left`,\n      'right': `${_stickCellCss}-border-elem-right`\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows, stickyDirections) {\n    if (stickyDirections.includes('left') || stickyDirections.includes('right')) {\n      this._removeFromStickyColumnReplayQueue(rows);\n    }\n    const elementsToClear = [];\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n      elementsToClear.push(row, ...Array.from(row.children));\n    }\n    // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n    this._afterNextRender({\n      write: () => {\n        for (const element of elementsToClear) {\n          this._removeStickyStyle(element, stickyDirections);\n        }\n      }\n    });\n  }\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n   *     column cell. If `false` cached widths will be used instead.\n   * @param replay Whether to enqueue this call for replay after a ResizeObserver update.\n   */\n  updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true, replay = true) {\n    // Don't cache any state if none of the columns are sticky.\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n      this._positionListener?.stickyColumnsUpdated({\n        sizes: []\n      });\n      this._positionListener?.stickyEndColumnsUpdated({\n        sizes: []\n      });\n      return;\n    }\n    // Coalesce with sticky row updates (and potentially other changes like column resize).\n    const firstRow = rows[0];\n    const numCells = firstRow.children.length;\n    const isRtl = this.direction === 'rtl';\n    const start = isRtl ? 'right' : 'left';\n    const end = isRtl ? 'left' : 'right';\n    const lastStickyStart = stickyStartStates.lastIndexOf(true);\n    const firstStickyEnd = stickyEndStates.indexOf(true);\n    let cellWidths;\n    let startPositions;\n    let endPositions;\n    if (replay) {\n      this._updateStickyColumnReplayQueue({\n        rows: [...rows],\n        stickyStartStates: [...stickyStartStates],\n        stickyEndStates: [...stickyEndStates]\n      });\n    }\n    this._afterNextRender({\n      earlyRead: () => {\n        cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n      },\n      write: () => {\n        for (const row of rows) {\n          for (let i = 0; i < numCells; i++) {\n            const cell = row.children[i];\n            if (stickyStartStates[i]) {\n              this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n            }\n            if (stickyEndStates[i]) {\n              this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n            }\n          }\n        }\n        if (this._positionListener && cellWidths.some(w => !!w)) {\n          this._positionListener.stickyColumnsUpdated({\n            sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map((width, index) => stickyStartStates[index] ? width : null)\n          });\n          this._positionListener.stickyEndColumnsUpdated({\n            sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null).reverse()\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick, stickyStates, position) {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n    // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n    // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n    // sticky states need to be reversed as well.\n    const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n    const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n    // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n    const stickyOffsets = [];\n    const stickyCellHeights = [];\n    const elementsToStick = [];\n    // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n    this._afterNextRender({\n      earlyRead: () => {\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n          if (!states[rowIndex]) {\n            continue;\n          }\n          stickyOffsets[rowIndex] = stickyOffset;\n          const row = rows[rowIndex];\n          elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n          const height = this._retrieveElementSize(row).height;\n          stickyOffset += height;\n          stickyCellHeights[rowIndex] = height;\n        }\n      },\n      write: () => {\n        const borderedRowIndex = states.lastIndexOf(true);\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n          if (!states[rowIndex]) {\n            continue;\n          }\n          const offset = stickyOffsets[rowIndex];\n          const isBorderedRowIndex = rowIndex === borderedRowIndex;\n          for (const element of elementsToStick[rowIndex]) {\n            this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n          }\n        }\n        if (position === 'top') {\n          this._positionListener?.stickyHeaderRowsUpdated({\n            sizes: stickyCellHeights,\n            offsets: stickyOffsets,\n            elements: elementsToStick\n          });\n        } else {\n          this._positionListener?.stickyFooterRowsUpdated({\n            sizes: stickyCellHeights,\n            offsets: stickyOffsets,\n            elements: elementsToStick\n          });\n        }\n      }\n    });\n  }\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement, stickyStates) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n    // Coalesce with other sticky updates (and potentially other changes like column resize).\n    this._afterNextRender({\n      write: () => {\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n          if (stickyStates.some(state => !state)) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n          } else {\n            this._addStickyStyle(tfoot, 'bottom', 0, false);\n          }\n        }\n      }\n    });\n  }\n  /** Triggered by the table's OnDestroy hook. */\n  destroy() {\n    if (this._stickyColumnsReplayTimeout) {\n      clearTimeout(this._stickyColumnsReplayTimeout);\n    }\n    this._resizeObserver?.disconnect();\n    this._destroyed = true;\n  }\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element, stickyDirections) {\n    if (!element.classList.contains(this._stickCellCss)) {\n      return;\n    }\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n      element.classList.remove(this._borderCellCss[dir]);\n    }\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n    const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element, dir, dirValue, isBorderElement) {\n    element.classList.add(this._stickCellCss);\n    if (isBorderElement) {\n      element.classList.add(this._borderCellCss[dir]);\n    }\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element) {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1\n    };\n    let zIndex = 0;\n    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n    return zIndex ? `${zIndex}` : '';\n  }\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row, recalculateCellWidths = true) {\n    if (!recalculateCellWidths && this._cachedCellWidths.length) {\n      return this._cachedCellWidths;\n    }\n    const cellWidths = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      const cell = firstRowCells[i];\n      cellWidths.push(this._retrieveElementSize(cell).width);\n    }\n    this._cachedCellWidths = cellWidths;\n    return cellWidths;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Retreives the most recently observed size of the specified element from the cache, or\n   * meaures it directly if not yet cached.\n   */\n  _retrieveElementSize(element) {\n    const cachedSize = this._elemSizeCache.get(element);\n    if (cachedSize) {\n      return cachedSize;\n    }\n    const clientRect = element.getBoundingClientRect();\n    const size = {\n      width: clientRect.width,\n      height: clientRect.height\n    };\n    if (!this._resizeObserver) {\n      return size;\n    }\n    this._elemSizeCache.set(element, size);\n    this._resizeObserver.observe(element, {\n      box: 'border-box'\n    });\n    return size;\n  }\n  /**\n   * Conditionally enqueue the requested sticky update and clear previously queued updates\n   * for the same rows.\n   */\n  _updateStickyColumnReplayQueue(params) {\n    this._removeFromStickyColumnReplayQueue(params.rows);\n    // No need to replay if a flush is pending.\n    if (!this._stickyColumnsReplayTimeout) {\n      this._updatedStickyColumnsParamsToReplay.push(params);\n    }\n  }\n  /** Remove updates for the specified rows from the queue. */\n  _removeFromStickyColumnReplayQueue(rows) {\n    const rowsSet = new Set(rows);\n    for (const update of this._updatedStickyColumnsParamsToReplay) {\n      update.rows = update.rows.filter(row => !rowsSet.has(row));\n    }\n    this._updatedStickyColumnsParamsToReplay = this._updatedStickyColumnsParamsToReplay.filter(update => !!update.rows.length);\n  }\n  /** Update _elemSizeCache with the observed sizes. */\n  _updateCachedSizes(entries) {\n    let needsColumnUpdate = false;\n    for (const entry of entries) {\n      const newEntry = entry.borderBoxSize?.length ? {\n        width: entry.borderBoxSize[0].inlineSize,\n        height: entry.borderBoxSize[0].blockSize\n      } : {\n        width: entry.contentRect.width,\n        height: entry.contentRect.height\n      };\n      if (newEntry.width !== this._elemSizeCache.get(entry.target)?.width && isCell(entry.target)) {\n        needsColumnUpdate = true;\n      }\n      this._elemSizeCache.set(entry.target, newEntry);\n    }\n    if (needsColumnUpdate && this._updatedStickyColumnsParamsToReplay.length) {\n      if (this._stickyColumnsReplayTimeout) {\n        clearTimeout(this._stickyColumnsReplayTimeout);\n      }\n      this._stickyColumnsReplayTimeout = setTimeout(() => {\n        if (this._destroyed) {\n          return;\n        }\n        for (const update of this._updatedStickyColumnsParamsToReplay) {\n          this.updateStickyColumns(update.rows, update.stickyStartStates, update.stickyEndStates, true, false);\n        }\n        this._updatedStickyColumnsParamsToReplay = [];\n        this._stickyColumnsReplayTimeout = null;\n      }, 0);\n    }\n  }\n  /**\n   * Invoke afterNextRender with the table's injector, falling back to CoalescedStyleScheduler\n   * if the injector was not provided.\n   */\n  _afterNextRender(spec) {\n    if (this._tableInjector) {\n      afterNextRender(spec, {\n        injector: this._tableInjector\n      });\n    } else {\n      this._coalescedStyleScheduler.schedule(() => {\n        spec.earlyRead?.();\n        spec.write();\n      });\n    }\n  }\n}\nfunction isCell(element) {\n  return ['cdk-cell', 'cdk-header-cell', 'cdk-footer-cell'].some(klass => element.classList.contains(klass));\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(`Could not find a matching row definition for the` + `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n  static ɵfac = function CdkRecycleRows_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkRecycleRows)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkRecycleRows,\n    selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _RecycleViewRepeaterStrategy\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkRecycleRows, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n  viewContainer = inject(ViewContainerRef);\n  elementRef = inject(ElementRef);\n  constructor() {\n    const table = inject(CDK_TABLE);\n    table._rowOutlet = this;\n    table._outletAssigned();\n  }\n  static ɵfac = function DataRowOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DataRowOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DataRowOutlet,\n    selectors: [[\"\", \"rowOutlet\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[rowOutlet]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n  viewContainer = inject(ViewContainerRef);\n  elementRef = inject(ElementRef);\n  constructor() {\n    const table = inject(CDK_TABLE);\n    table._headerRowOutlet = this;\n    table._outletAssigned();\n  }\n  static ɵfac = function HeaderRowOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || HeaderRowOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: HeaderRowOutlet,\n    selectors: [[\"\", \"headerRowOutlet\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeaderRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[headerRowOutlet]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n  viewContainer = inject(ViewContainerRef);\n  elementRef = inject(ElementRef);\n  constructor() {\n    const table = inject(CDK_TABLE);\n    table._footerRowOutlet = this;\n    table._outletAssigned();\n  }\n  static ɵfac = function FooterRowOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || FooterRowOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: FooterRowOutlet,\n    selectors: [[\"\", \"footerRowOutlet\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FooterRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[footerRowOutlet]'\n    }]\n  }], () => [], null);\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n  viewContainer = inject(ViewContainerRef);\n  elementRef = inject(ElementRef);\n  constructor() {\n    const table = inject(CDK_TABLE);\n    table._noDataRowOutlet = this;\n    table._outletAssigned();\n  }\n  static ɵfac = function NoDataRowOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NoDataRowOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NoDataRowOutlet,\n    selectors: [[\"\", \"noDataRowOutlet\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoDataRowOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[noDataRowOutlet]'\n    }]\n  }], () => [], null);\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE =\n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"/>\n  <ng-content select=\"colgroup, col\"/>\n\n  <!--\n    Unprojected content throws a hydration error so we need this to capture it.\n    It gets removed on the client so it doesn't affect the layout.\n  -->\n  @if (_isServer) {\n    <ng-content/>\n  }\n\n  @if (_isNativeHtmlTable) {\n    <thead role=\"rowgroup\">\n      <ng-container headerRowOutlet/>\n    </thead>\n    <tbody role=\"rowgroup\">\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n    </tbody>\n    <tfoot role=\"rowgroup\">\n      <ng-container footerRowOutlet/>\n    </tfoot>\n  } @else {\n    <ng-container headerRowOutlet/>\n    <ng-container rowOutlet/>\n    <ng-container noDataRowOutlet/>\n    <ng-container footerRowOutlet/>\n  }\n`;\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n  _differs = inject(IterableDiffers);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _platform = inject(Platform);\n  _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n  _coalescedStyleScheduler = inject(_COALESCED_STYLE_SCHEDULER);\n  _viewportRuler = inject(ViewportRuler);\n  _stickyPositioningListener = inject(STICKY_POSITIONING_LISTENER, {\n    optional: true,\n    skipSelf: true\n  });\n  _document = inject(DOCUMENT);\n  /** Latest data provided by the data source. */\n  _data;\n  /** Subject that emits when the component has been destroyed. */\n  _onDestroy = new Subject();\n  /** List of the rendered rows as identified by their `RenderRow` object. */\n  _renderRows;\n  /** Subscription that listens for the data provided by the data source. */\n  _renderChangeSubscription;\n  /**\n   * Map of all the user's defined columns (header, data, and footer cell template) identified by\n   * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n   * any custom column definitions added to `_customColumnDefs`.\n   */\n  _columnDefsByName = new Map();\n  /**\n   * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n   * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n   */\n  _rowDefs;\n  /**\n   * Set of all header row definitions that can be used by this table. Populated by the rows\n   * gathered by using `ContentChildren` as well as any custom row definitions added to\n   * `_customHeaderRowDefs`.\n   */\n  _headerRowDefs;\n  /**\n   * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n   * using `ContentChildren` as well as any custom row definitions added to\n   * `_customFooterRowDefs`.\n   */\n  _footerRowDefs;\n  /** Differ used to find the changes in the data provided by the data source. */\n  _dataDiffer;\n  /** Stores the row definition that does not have a when predicate. */\n  _defaultRowDef;\n  /**\n   * Column definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * column definitions as *its* content child.\n   */\n  _customColumnDefs = new Set();\n  /**\n   * Data row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * built-in data rows as *its* content child.\n   */\n  _customRowDefs = new Set();\n  /**\n   * Header row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * built-in header rows as *its* content child.\n   */\n  _customHeaderRowDefs = new Set();\n  /**\n   * Footer row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n   * built-in footer row as *its* content child.\n   */\n  _customFooterRowDefs = new Set();\n  /** No data row that was defined outside of the direct content children of the table. */\n  _customNoDataRow;\n  /**\n   * Whether the header row definition has been changed. Triggers an update to the header row after\n   * content is checked. Initialized as true so that the table renders the initial set of rows.\n   */\n  _headerRowDefChanged = true;\n  /**\n   * Whether the footer row definition has been changed. Triggers an update to the footer row after\n   * content is checked. Initialized as true so that the table renders the initial set of rows.\n   */\n  _footerRowDefChanged = true;\n  /**\n   * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n   * change.\n   */\n  _stickyColumnStylesNeedReset = true;\n  /**\n   * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n   * `false`, cached values will be used instead. This is only applicable to tables with\n   * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n   */\n  _forceRecalculateCellWidths = true;\n  /**\n   * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n   * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n   * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n   * and row template matches, which allows the `IterableDiffer` to check rows by reference\n   * and understand which rows are added/moved/removed.\n   *\n   * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n   * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n   * contains an array of created pairs. The array is necessary to handle cases where the data\n   * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n   * stored.\n   */\n  _cachedRenderRowsMap = new Map();\n  /** Whether the table is applied to a native `<table>`. */\n  _isNativeHtmlTable;\n  /**\n   * Utility class that is responsible for applying the appropriate sticky positioning styles to\n   * the table's rows and cells.\n   */\n  _stickyStyler;\n  /**\n   * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n   * table subclasses.\n   */\n  stickyCssClass = 'cdk-table-sticky';\n  /**\n   * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n   * the position is set in a selector associated with the value of stickyCssClass. May be\n   * overridden by table subclasses\n   */\n  needsPositionStickyOnElement = true;\n  /** Whether the component is being rendered on the server. */\n  _isServer;\n  /** Whether the no data row is currently showing anything. */\n  _isShowingNoDataRow = false;\n  /** Whether the table has rendered out all the outlets for the first time. */\n  _hasAllOutlets = false;\n  /** Whether the table is done initializing. */\n  _hasInitialized = false;\n  /** Aria role to apply to the table's cells based on the table's own role. */\n  _getCellRole() {\n    // Perform this lazily in case the table's role was updated by a directive after construction.\n    if (this._cellRoleInternal === undefined) {\n      // Note that we set `role=\"cell\"` even on native `td` elements,\n      // because some browsers seem to require it. See #29784.\n      const tableRole = this._elementRef.nativeElement.getAttribute('role');\n      return tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n    }\n    return this._cellRoleInternal;\n  }\n  _cellRoleInternal = undefined;\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  get trackBy() {\n    return this._trackByFn;\n  }\n  set trackBy(fn) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n      console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._trackByFn = fn;\n  }\n  _trackByFn;\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If a data array is provided, the table must be notified when the array's objects are\n   * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n   * render the diff since the last table render. If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the connect function and trigger updates when that stream emits new data array\n   * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n   * subscriptions registered during the connect process).\n   */\n  get dataSource() {\n    return this._dataSource;\n  }\n  set dataSource(dataSource) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  _dataSource;\n  /**\n   * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n   * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n   * dataobject will render the first row that evaluates its when predicate to true, in the order\n   * defined in the table, or otherwise the default row which does not have a when predicate.\n   */\n  get multiTemplateDataRows() {\n    return this._multiTemplateDataRows;\n  }\n  set multiTemplateDataRows(value) {\n    this._multiTemplateDataRows = value;\n    // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n    // this setter will be invoked before the row outlet has been defined hence the null check.\n    if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n      this._forceRenderDataRows();\n      this.updateStickyColumnStyles();\n    }\n  }\n  _multiTemplateDataRows = false;\n  /**\n   * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n   * and optimize rendering sticky styles for native tables. No-op for flex tables.\n   */\n  get fixedLayout() {\n    return this._fixedLayout;\n  }\n  set fixedLayout(value) {\n    this._fixedLayout = value;\n    // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n    this._forceRecalculateCellWidths = true;\n    this._stickyColumnStylesNeedReset = true;\n  }\n  _fixedLayout = false;\n  /**\n   * Emits when the table completes rendering a set of data rows based on the latest data from the\n   * data source, even if the set of rows is empty.\n   */\n  contentChanged = new EventEmitter();\n  // TODO(andrewseguin): Remove max value as the end index\n  //   and instead calculate the view on init and scroll.\n  /**\n   * Stream containing the latest information on what rows are being displayed on screen.\n   * Can be used by the data source to as a heuristic of what data should be provided.\n   *\n   * @docs-private\n   */\n  viewChange = new BehaviorSubject({\n    start: 0,\n    end: Number.MAX_VALUE\n  });\n  // Outlets in the table's template where the header, data rows, and footer will be inserted.\n  _rowOutlet;\n  _headerRowOutlet;\n  _footerRowOutlet;\n  _noDataRowOutlet;\n  /**\n   * The column definitions provided by the user that contain what the header, data, and footer\n   * cells should render for each column.\n   */\n  _contentColumnDefs;\n  /** Set of data row definitions that were provided to the table as content children. */\n  _contentRowDefs;\n  /** Set of header row definitions that were provided to the table as content children. */\n  _contentHeaderRowDefs;\n  /** Set of footer row definitions that were provided to the table as content children. */\n  _contentFooterRowDefs;\n  /** Row definition that will only be rendered if there's no data in the table. */\n  _noDataRow;\n  _injector = inject(Injector);\n  constructor() {\n    const role = inject(new HostAttributeToken('role'), {\n      optional: true\n    });\n    if (!role) {\n      this._elementRef.nativeElement.setAttribute('role', 'table');\n    }\n    this._isServer = !this._platform.isBrowser;\n    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n  }\n  ngOnInit() {\n    this._setupStickyStyler();\n    // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n    // the user has provided a custom trackBy, return the result of that function as evaluated\n    // with the values of the `RenderRow`'s data and index.\n    this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n      return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n    });\n    this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this._forceRecalculateCellWidths = true;\n    });\n  }\n  ngAfterContentInit() {\n    this._hasInitialized = true;\n  }\n  ngAfterContentChecked() {\n    // Only start re-rendering in `ngAfterContentChecked` after the first render.\n    if (this._canRender()) {\n      this._render();\n    }\n  }\n  ngOnDestroy() {\n    this._stickyStyler?.destroy();\n    [this._rowOutlet?.viewContainer, this._headerRowOutlet?.viewContainer, this._footerRowOutlet?.viewContainer, this._cachedRenderRowsMap, this._customColumnDefs, this._customRowDefs, this._customHeaderRowDefs, this._customFooterRowDefs, this._columnDefsByName].forEach(def => {\n      def?.clear();\n    });\n    this._headerRowDefs = [];\n    this._footerRowDefs = [];\n    this._defaultRowDef = null;\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n  }\n  /**\n   * Renders rows based on the table's latest set of data, which was either provided directly as an\n   * input or retrieved through an Observable stream (directly or from a DataSource).\n   * Checks for differences in the data since the last diff to perform only the necessary\n   * changes (add/remove/move rows).\n   *\n   * If the table's data source is a DataSource or Observable, this will be invoked automatically\n   * each time the provided Observable stream emits a new data array. Otherwise if your data is\n   * an array, this function will need to be called to render any changes.\n   */\n  renderRows() {\n    this._renderRows = this._getAllRenderRows();\n    const changes = this._dataDiffer.diff(this._renderRows);\n    if (!changes) {\n      this._updateNoDataRow();\n      this.contentChanged.next();\n      return;\n    }\n    const viewContainer = this._rowOutlet.viewContainer;\n    this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, change => {\n      if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n        this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n      }\n    });\n    // Update the meta context of a row's context data (index, count, first, last, ...)\n    this._updateRowIndexContext();\n    // Update rows that did not get added/removed/moved but may have had their identity changed,\n    // e.g. if trackBy matched data on some property but the actual data reference changed.\n    changes.forEachIdentityChange(record => {\n      const rowView = viewContainer.get(record.currentIndex);\n      rowView.context.$implicit = record.item.data;\n    });\n    this._updateNoDataRow();\n    this.contentChanged.next();\n    this.updateStickyColumnStyles();\n  }\n  /** Adds a column definition that was not included as part of the content children. */\n  addColumnDef(columnDef) {\n    this._customColumnDefs.add(columnDef);\n  }\n  /** Removes a column definition that was not included as part of the content children. */\n  removeColumnDef(columnDef) {\n    this._customColumnDefs.delete(columnDef);\n  }\n  /** Adds a row definition that was not included as part of the content children. */\n  addRowDef(rowDef) {\n    this._customRowDefs.add(rowDef);\n  }\n  /** Removes a row definition that was not included as part of the content children. */\n  removeRowDef(rowDef) {\n    this._customRowDefs.delete(rowDef);\n  }\n  /** Adds a header row definition that was not included as part of the content children. */\n  addHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.add(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n  /** Removes a header row definition that was not included as part of the content children. */\n  removeHeaderRowDef(headerRowDef) {\n    this._customHeaderRowDefs.delete(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n  /** Adds a footer row definition that was not included as part of the content children. */\n  addFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.add(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n  /** Removes a footer row definition that was not included as part of the content children. */\n  removeFooterRowDef(footerRowDef) {\n    this._customFooterRowDefs.delete(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n  /** Sets a no data row definition that was not included as a part of the content children. */\n  setNoDataRow(noDataRow) {\n    this._customNoDataRow = noDataRow;\n  }\n  /**\n   * Updates the header sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n   * automatically called when the header row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyHeaderRowStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    // Hide the thead element if there are no header rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    if (this._isNativeHtmlTable) {\n      const thead = closestTableSection(this._headerRowOutlet, 'thead');\n      if (thead) {\n        thead.style.display = headerRows.length ? '' : 'none';\n      }\n    }\n    const stickyStates = this._headerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n    this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._headerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n   * automatically called when the footer row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyFooterRowStyles() {\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    if (this._isNativeHtmlTable) {\n      const tfoot = closestTableSection(this._footerRowOutlet, 'tfoot');\n      if (tfoot) {\n        tfoot.style.display = footerRows.length ? '' : 'none';\n      }\n    }\n    const stickyStates = this._footerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n    this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n    this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._footerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n  /**\n   * Updates the column sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the left and right. Then sticky styles are added for the left and right according\n   * to the column definitions for each cell in each row. This is automatically called when\n   * the data source provides a new set of data or when a column definition changes its sticky\n   * input. May be called manually for cases where the cell content changes outside of these events.\n   */\n  updateStickyColumnStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const dataRows = this._getRenderedRows(this._rowOutlet);\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n    // In a table using a fixed layout, row content won't affect column width, so sticky styles\n    // don't need to be cleared unless either the sticky column config changes or one of the row\n    // defs change.\n    if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n      // Clear the left and right positioning from all columns in the table across all rows since\n      // sticky columns span across all table sections (header, data, footer)\n      this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n      this._stickyColumnStylesNeedReset = false;\n    }\n    // Update the sticky styles for each header row depending on the def's sticky state\n    headerRows.forEach((headerRow, i) => {\n      this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n    });\n    // Update the sticky styles for each data row depending on its def's sticky state\n    this._rowDefs.forEach(rowDef => {\n      // Collect all the rows rendered with this row definition.\n      const rows = [];\n      for (let i = 0; i < dataRows.length; i++) {\n        if (this._renderRows[i].rowDef === rowDef) {\n          rows.push(dataRows[i]);\n        }\n      }\n      this._addStickyColumnStyles(rows, rowDef);\n    });\n    // Update the sticky styles for each footer row depending on the def's sticky state\n    footerRows.forEach((footerRow, i) => {\n      this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n    });\n    // Reset the dirty state of the sticky input change since it has been used.\n    Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n  }\n  /** Invoked whenever an outlet is created and has been assigned to the table. */\n  _outletAssigned() {\n    // Trigger the first render once all outlets have been assigned. We do it this way, as\n    // opposed to waiting for the next `ngAfterContentChecked`, because we don't know when\n    // the next change detection will happen.\n    // Also we can't use queries to resolve the outlets, because they're wrapped in a\n    // conditional, so we have to rely on them being assigned via DI.\n    if (!this._hasAllOutlets && this._rowOutlet && this._headerRowOutlet && this._footerRowOutlet && this._noDataRowOutlet) {\n      this._hasAllOutlets = true;\n      // In some setups this may fire before `ngAfterContentInit`\n      // so we need a check here. See #28538.\n      if (this._canRender()) {\n        this._render();\n      }\n    }\n  }\n  /** Whether the table has all the information to start rendering. */\n  _canRender() {\n    return this._hasAllOutlets && this._hasInitialized;\n  }\n  /** Renders the table if its state has changed. */\n  _render() {\n    // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n    this._cacheRowDefs();\n    this._cacheColumnDefs();\n    // Make sure that the user has at least added header, footer, or data row def.\n    if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingRowDefsError();\n    }\n    // Render updates if the list of columns have been changed for the header, row, or footer defs.\n    const columnsChanged = this._renderUpdatedColumns();\n    const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n    // Ensure sticky column styles are reset if set to `true` elsewhere.\n    this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n    this._forceRecalculateCellWidths = rowDefsChanged;\n    // If the header row definition has been changed, trigger a render to the header row.\n    if (this._headerRowDefChanged) {\n      this._forceRenderHeaderRows();\n      this._headerRowDefChanged = false;\n    }\n    // If the footer row definition has been changed, trigger a render to the footer row.\n    if (this._footerRowDefChanged) {\n      this._forceRenderFooterRows();\n      this._footerRowDefChanged = false;\n    }\n    // If there is a data source and row definitions, connect to the data source unless a\n    // connection has already been made.\n    if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    } else if (this._stickyColumnStylesNeedReset) {\n      // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n      // called when it row data arrives. Otherwise, we need to call it proactively.\n      this.updateStickyColumnStyles();\n    }\n    this._checkStickyStates();\n  }\n  /**\n   * Get the list of RenderRow objects to render according to the current list of data and defined\n   * row definitions. If the previous list already contained a particular pair, it should be reused\n   * so that the differ equates their references.\n   */\n  _getAllRenderRows() {\n    const renderRows = [];\n    // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n    // new cache while unused ones can be picked up by garbage collection.\n    const prevCachedRenderRows = this._cachedRenderRowsMap;\n    this._cachedRenderRowsMap = new Map();\n    // For each data object, get the list of rows that should be rendered, represented by the\n    // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n    for (let i = 0; i < this._data.length; i++) {\n      let data = this._data[i];\n      const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n      if (!this._cachedRenderRowsMap.has(data)) {\n        this._cachedRenderRowsMap.set(data, new WeakMap());\n      }\n      for (let j = 0; j < renderRowsForData.length; j++) {\n        let renderRow = renderRowsForData[j];\n        const cache = this._cachedRenderRowsMap.get(renderRow.data);\n        if (cache.has(renderRow.rowDef)) {\n          cache.get(renderRow.rowDef).push(renderRow);\n        } else {\n          cache.set(renderRow.rowDef, [renderRow]);\n        }\n        renderRows.push(renderRow);\n      }\n    }\n    return renderRows;\n  }\n  /**\n   * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n   * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n   * `(T, CdkRowDef)` pair.\n   */\n  _getRenderRowsForData(data, dataIndex, cache) {\n    const rowDefs = this._getRowDefs(data, dataIndex);\n    return rowDefs.map(rowDef => {\n      const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n      if (cachedRenderRows.length) {\n        const dataRow = cachedRenderRows.shift();\n        dataRow.dataIndex = dataIndex;\n        return dataRow;\n      } else {\n        return {\n          data,\n          rowDef,\n          dataIndex\n        };\n      }\n    });\n  }\n  /** Update the map containing the content's column definitions. */\n  _cacheColumnDefs() {\n    this._columnDefsByName.clear();\n    const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n    columnDefs.forEach(columnDef => {\n      if (this._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableDuplicateColumnNameError(columnDef.name);\n      }\n      this._columnDefsByName.set(columnDef.name, columnDef);\n    });\n  }\n  /** Update the list of all available row definitions that can be used. */\n  _cacheRowDefs() {\n    this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n    this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n    this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n    // After all row definitions are determined, find the row definition to be considered default.\n    const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n    if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMultipleDefaultRowDefsError();\n    }\n    this._defaultRowDef = defaultRowDefs[0];\n  }\n  /**\n   * Check if the header, data, or footer rows have changed what columns they want to display or\n   * whether the sticky states have changed for the header or footer. If there is a diff, then\n   * re-render that section.\n   */\n  _renderUpdatedColumns() {\n    const columnsDiffReducer = (acc, def) => {\n      // The differ should be run for every column, even if `acc` is already\n      // true (see #29922)\n      const diff = !!def.getColumnsDiff();\n      return acc || diff;\n    };\n    // Force re-render data rows if the list of column definitions have changed.\n    const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n    if (dataColumnsChanged) {\n      this._forceRenderDataRows();\n    }\n    // Force re-render header/footer rows if the list of column definitions have changed.\n    const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n    if (headerColumnsChanged) {\n      this._forceRenderHeaderRows();\n    }\n    const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n    if (footerColumnsChanged) {\n      this._forceRenderFooterRows();\n    }\n    return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n  }\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the row outlet. Otherwise start listening for new data.\n   */\n  _switchDataSource(dataSource) {\n    this._data = [];\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n    // Stop listening for data from the previous data source.\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n      this._renderChangeSubscription = null;\n    }\n    if (!dataSource) {\n      if (this._dataDiffer) {\n        this._dataDiffer.diff([]);\n      }\n      if (this._rowOutlet) {\n        this._rowOutlet.viewContainer.clear();\n      }\n    }\n    this._dataSource = dataSource;\n  }\n  /** Set up a subscription for the data provided by the data source. */\n  _observeRenderChanges() {\n    // If no data source has been set, there is nothing to observe for changes.\n    if (!this.dataSource) {\n      return;\n    }\n    let dataStream;\n    if (isDataSource(this.dataSource)) {\n      dataStream = this.dataSource.connect(this);\n    } else if (isObservable(this.dataSource)) {\n      dataStream = this.dataSource;\n    } else if (Array.isArray(this.dataSource)) {\n      dataStream = of(this.dataSource);\n    }\n    if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableUnknownDataSourceError();\n    }\n    this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n      this._data = data || [];\n      this.renderRows();\n    });\n  }\n  /**\n   * Clears any existing content in the header row outlet and creates a new embedded view\n   * in the outlet using the header row definition.\n   */\n  _forceRenderHeaderRows() {\n    // Clear the header row outlet if any content exists.\n    if (this._headerRowOutlet.viewContainer.length > 0) {\n      this._headerRowOutlet.viewContainer.clear();\n    }\n    this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n    this.updateStickyHeaderRowStyles();\n  }\n  /**\n   * Clears any existing content in the footer row outlet and creates a new embedded view\n   * in the outlet using the footer row definition.\n   */\n  _forceRenderFooterRows() {\n    // Clear the footer row outlet if any content exists.\n    if (this._footerRowOutlet.viewContainer.length > 0) {\n      this._footerRowOutlet.viewContainer.clear();\n    }\n    this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n    this.updateStickyFooterRowStyles();\n  }\n  /** Adds the sticky column styles for the rows according to the columns' stick states. */\n  _addStickyColumnStyles(rows, rowDef) {\n    const columnDefs = Array.from(rowDef?.columns || []).map(columnName => {\n      const columnDef = this._columnDefsByName.get(columnName);\n      if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnName);\n      }\n      return columnDef;\n    });\n    const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n    const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n    this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n  }\n  /** Gets the list of rows that have been rendered in the row outlet. */\n  _getRenderedRows(rowOutlet) {\n    const renderedRows = [];\n    for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n      const viewRef = rowOutlet.viewContainer.get(i);\n      renderedRows.push(viewRef.rootNodes[0]);\n    }\n    return renderedRows;\n  }\n  /**\n   * Get the matching row definitions that should be used for this row data. If there is only\n   * one row definition, it is returned. Otherwise, find the row definitions that has a when\n   * predicate that returns true with the data. If none return true, return the default row\n   * definition.\n   */\n  _getRowDefs(data, dataIndex) {\n    if (this._rowDefs.length == 1) {\n      return [this._rowDefs[0]];\n    }\n    let rowDefs = [];\n    if (this.multiTemplateDataRows) {\n      rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n    } else {\n      let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n      if (rowDef) {\n        rowDefs.push(rowDef);\n      }\n    }\n    if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingMatchingRowDefError(data);\n    }\n    return rowDefs;\n  }\n  _getEmbeddedViewArgs(renderRow, index) {\n    const rowDef = renderRow.rowDef;\n    const context = {\n      $implicit: renderRow.data\n    };\n    return {\n      templateRef: rowDef.template,\n      context,\n      index\n    };\n  }\n  /**\n   * Creates a new row template in the outlet and fills it with the set of cell templates.\n   * Optionally takes a context to provide to the row and cells, as well as an optional index\n   * of where to place the new row template in the outlet.\n   */\n  _renderRow(outlet, rowDef, index, context = {}) {\n    // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n    const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n    this._renderCellTemplateForItem(rowDef, context);\n    return view;\n  }\n  _renderCellTemplateForItem(rowDef, context) {\n    for (let cellTemplate of this._getCellTemplates(rowDef)) {\n      if (CdkCellOutlet.mostRecentCellOutlet) {\n        CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Updates the index-related context for each row to reflect any changes in the index of the rows,\n   * e.g. first/last/even/odd.\n   */\n  _updateRowIndexContext() {\n    const viewContainer = this._rowOutlet.viewContainer;\n    for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n      const viewRef = viewContainer.get(renderIndex);\n      const context = viewRef.context;\n      context.count = count;\n      context.first = renderIndex === 0;\n      context.last = renderIndex === count - 1;\n      context.even = renderIndex % 2 === 0;\n      context.odd = !context.even;\n      if (this.multiTemplateDataRows) {\n        context.dataIndex = this._renderRows[renderIndex].dataIndex;\n        context.renderIndex = renderIndex;\n      } else {\n        context.index = this._renderRows[renderIndex].dataIndex;\n      }\n    }\n  }\n  /** Gets the column definitions for the provided row def. */\n  _getCellTemplates(rowDef) {\n    if (!rowDef || !rowDef.columns) {\n      return [];\n    }\n    return Array.from(rowDef.columns, columnId => {\n      const column = this._columnDefsByName.get(columnId);\n      if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnId);\n      }\n      return rowDef.extractCellTemplate(column);\n    });\n  }\n  /**\n   * Forces a re-render of the data rows. Should be called in cases where there has been an input\n   * change that affects the evaluation of which rows should be rendered, e.g. toggling\n   * `multiTemplateDataRows` or adding/removing row definitions.\n   */\n  _forceRenderDataRows() {\n    this._dataDiffer.diff([]);\n    this._rowOutlet.viewContainer.clear();\n    this.renderRows();\n  }\n  /**\n   * Checks if there has been a change in sticky states since last check and applies the correct\n   * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n   * during a change detection and after the inputs are settled (after content check).\n   */\n  _checkStickyStates() {\n    const stickyCheckReducer = (acc, d) => {\n      return acc || d.hasStickyChanged();\n    };\n    // Note that the check needs to occur for every definition since it notifies the definition\n    // that it can reset its dirty state. Using another operator like `some` may short-circuit\n    // remaining definitions and leave them in an unchecked state.\n    if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyHeaderRowStyles();\n    }\n    if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyFooterRowStyles();\n    }\n    if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n      this._stickyColumnStylesNeedReset = true;\n      this.updateStickyColumnStyles();\n    }\n  }\n  /**\n   * Creates the sticky styler that will be used for sticky rows and columns. Listens\n   * for directionality changes and provides the latest direction to the styler. Re-applies column\n   * stickiness when directionality changes.\n   */\n  _setupStickyStyler() {\n    const direction = this._dir ? this._dir.value : 'ltr';\n    this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener, this._injector);\n    (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(value => {\n      this._stickyStyler.direction = value;\n      this.updateStickyColumnStyles();\n    });\n  }\n  /** Filters definitions that belong to this table from a QueryList. */\n  _getOwnDefs(items) {\n    return items.filter(item => !item._table || item._table === this);\n  }\n  /** Creates or removes the no data row, depending on whether any data is being shown. */\n  _updateNoDataRow() {\n    const noDataRow = this._customNoDataRow || this._noDataRow;\n    if (!noDataRow) {\n      return;\n    }\n    const shouldShow = this._rowOutlet.viewContainer.length === 0;\n    if (shouldShow === this._isShowingNoDataRow) {\n      return;\n    }\n    const container = this._noDataRowOutlet.viewContainer;\n    if (shouldShow) {\n      const view = container.createEmbeddedView(noDataRow.templateRef);\n      const rootNode = view.rootNodes[0];\n      // Only add the attributes if we have a single root node since it's hard\n      // to figure out which one to add it to when there are multiple.\n      if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n        rootNode.setAttribute('role', 'row');\n        rootNode.classList.add(noDataRow._contentClassName);\n      }\n    } else {\n      container.clear();\n    }\n    this._isShowingNoDataRow = shouldShow;\n    this._changeDetectorRef.markForCheck();\n  }\n  static ɵfac = function CdkTable_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTable)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkTable,\n    selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n    contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n        i0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n      }\n    },\n    hostAttrs: [1, \"cdk-table\"],\n    hostVars: 2,\n    hostBindings: function CdkTable_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n      }\n    },\n    inputs: {\n      trackBy: \"trackBy\",\n      dataSource: \"dataSource\",\n      multiTemplateDataRows: [2, \"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute],\n      fixedLayout: [2, \"fixedLayout\", \"fixedLayout\", booleanAttribute]\n    },\n    outputs: {\n      contentChanged: \"contentChanged\"\n    },\n    exportAs: [\"cdkTable\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_TABLE,\n      useExisting: CdkTable\n    }, {\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _DisposeViewRepeaterStrategy\n    }, {\n      provide: _COALESCED_STYLE_SCHEDULER,\n      useClass: _CoalescedStyleScheduler\n    },\n    // Prevent nested tables from seeing this table's StickyPositioningListener.\n    {\n      provide: STICKY_POSITIONING_LISTENER,\n      useValue: null\n    }])],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 2,\n    consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n    template: function CdkTable_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n        i0.ɵɵtemplate(2, CdkTable_Conditional_2_Template, 1, 0)(3, CdkTable_Conditional_3_Template, 7, 0)(4, CdkTable_Conditional_4_Template, 4, 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isServer ? 2 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._isNativeHtmlTable ? 3 : 4);\n      }\n    },\n    dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n    styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTable, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-table, table[cdk-table]',\n      exportAs: 'cdkTable',\n      template: CDK_TABLE_TEMPLATE,\n      host: {\n        'class': 'cdk-table',\n        '[class.cdk-table-fixed-layout]': 'fixedLayout'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: CDK_TABLE,\n        useExisting: CdkTable\n      }, {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"]\n    }]\n  }], () => [], {\n    trackBy: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    multiTemplateDataRows: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    fixedLayout: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    _contentColumnDefs: [{\n      type: ContentChildren,\n      args: [CdkColumnDef, {\n        descendants: true\n      }]\n    }],\n    _contentRowDefs: [{\n      type: ContentChildren,\n      args: [CdkRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentHeaderRowDefs: [{\n      type: ContentChildren,\n      args: [CdkHeaderRowDef, {\n        descendants: true\n      }]\n    }],\n    _contentFooterRowDefs: [{\n      type: ContentChildren,\n      args: [CdkFooterRowDef, {\n        descendants: true\n      }]\n    }],\n    _noDataRow: [{\n      type: ContentChild,\n      args: [CdkNoDataRow]\n    }]\n  });\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n/**\n * Finds the closest table section to an outlet. We can't use `HTMLElement.closest` for this,\n * because the node representing the outlet is a comment.\n */\nfunction closestTableSection(outlet, section) {\n  const uppercaseSection = section.toUpperCase();\n  let current = outlet.viewContainer.element.nativeElement;\n  while (current) {\n    // 1 is an element node.\n    const nodeName = current.nodeType === 1 ? current.nodeName : null;\n    if (nodeName === uppercaseSection) {\n      return current;\n    } else if (nodeName === 'TABLE') {\n      // Stop traversing past the `table` node.\n      break;\n    }\n    current = current.parentNode;\n  }\n  return null;\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n  _table = inject(CdkTable, {\n    optional: true\n  });\n  _options = inject(TEXT_COLUMN_OPTIONS, {\n    optional: true\n  });\n  /** Column name that should be used to reference this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._name = name;\n    // With Ivy, inputs can be initialized before static query results are\n    // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n    this._syncColumnDefName();\n  }\n  _name;\n  /**\n   * Text label that should be used for the column header. If this property is not\n   * set, the header text will default to the column name with its first letter capitalized.\n   */\n  headerText;\n  /**\n   * Accessor function to retrieve the data rendered for each cell. If this\n   * property is not set, the data cells will render the value found in the data's property matching\n   * the column's name. For example, if the column is named `id`, then the rendered value will be\n   * value defined by the data's `id` property.\n   */\n  dataAccessor;\n  /** Alignment of the cell values. */\n  justify = 'start';\n  /** @docs-private */\n  columnDef;\n  /**\n   * The column cell is provided to the column during `ngOnInit` with a static query.\n   * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n   * column definition was provided in the same view as the table, which is not the case with this\n   * component.\n   * @docs-private\n   */\n  cell;\n  /**\n   * The column headerCell is provided to the column during `ngOnInit` with a static query.\n   * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n   * column definition was provided in the same view as the table, which is not the case with this\n   * component.\n   * @docs-private\n   */\n  headerCell;\n  constructor() {\n    this._options = this._options || {};\n  }\n  ngOnInit() {\n    this._syncColumnDefName();\n    if (this.headerText === undefined) {\n      this.headerText = this._createDefaultHeaderText();\n    }\n    if (!this.dataAccessor) {\n      this.dataAccessor = this._options.defaultDataAccessor || ((data, name) => data[name]);\n    }\n    if (this._table) {\n      // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n      // since the columnDef will not pick up its content by the time the table finishes checking\n      // its content and initializing the rows.\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n      this._table.addColumnDef(this.columnDef);\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getTableTextColumnMissingParentTableError();\n    }\n  }\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n  /**\n   * Creates a default header text. Use the options' header text transformation function if one\n   * has been provided. Otherwise simply capitalize the column name.\n   */\n  _createDefaultHeaderText() {\n    const name = this.name;\n    if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableTextColumnMissingNameError();\n    }\n    if (this._options && this._options.defaultHeaderTextTransform) {\n      return this._options.defaultHeaderTextTransform(name);\n    }\n    return name[0].toUpperCase() + name.slice(1);\n  }\n  /** Synchronizes the column definition name with the text column name. */\n  _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n  static ɵfac = function CdkTextColumn_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTextColumn)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkTextColumn,\n    selectors: [[\"cdk-text-column\"]],\n    viewQuery: function CdkTextColumn_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CdkColumnDef, 7);\n        i0.ɵɵviewQuery(CdkCellDef, 7);\n        i0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n      }\n    },\n    inputs: {\n      name: \"name\",\n      headerText: \"headerText\",\n      dataAccessor: \"dataAccessor\",\n      justify: \"justify\"\n    },\n    decls: 3,\n    vars: 0,\n    consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n    template: function CdkTextColumn_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        i0.ɵɵelementContainerEnd();\n      }\n    },\n    dependencies: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-text-column',\n      template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell]\n    }]\n  }], () => [], {\n    name: [{\n      type: Input\n    }],\n    headerText: [{\n      type: Input\n    }],\n    dataAccessor: [{\n      type: Input\n    }],\n    justify: [{\n      type: Input\n    }],\n    columnDef: [{\n      type: ViewChild,\n      args: [CdkColumnDef, {\n        static: true\n      }]\n    }],\n    cell: [{\n      type: ViewChild,\n      args: [CdkCellDef, {\n        static: true\n      }]\n    }],\n    headerCell: [{\n      type: ViewChild,\n      args: [CdkHeaderCellDef, {\n        static: true\n      }]\n    }]\n  });\n})();\nconst EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\nclass CdkTableModule {\n  static ɵfac = function CdkTableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTableModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkTableModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [ScrollingModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTableModule, [{\n    type: NgModule,\n    args: [{\n      exports: EXPORTED_DECLARATIONS,\n      imports: [ScrollingModule, ...EXPORTED_DECLARATIONS]\n    }]\n  }], null, null);\n})();\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n * @deprecated Implement the `CanStick` interface instead.\n * @breaking-change 19.0.0\n */\nfunction mixinHasStickyInput(base) {\n  return class extends base {\n    /** Whether sticky positioning should be applied. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(v) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    _sticky = false;\n    /** Whether the sticky input has changed since it was last checked. */\n    _hasStickyChanged = false;\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    constructor(...args) {\n      super(...args);\n    }\n  };\n}\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, booleanAttribute, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkCellOutlet, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction MatTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 2);\n    i0.ɵɵelementContainer(3, 3)(4, 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 3)(2, 4)(3, 5);\n  }\n}\nfunction MatTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction MatTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nclass MatRecycleRows {\n  static ɵfac = function MatRecycleRows_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatRecycleRows)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatRecycleRows,\n    selectors: [[\"mat-table\", \"recycleRows\", \"\"], [\"table\", \"mat-table\", \"\", \"recycleRows\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _RecycleViewRepeaterStrategy\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRecycleRows, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n      providers: [{\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _RecycleViewRepeaterStrategy\n      }]\n    }]\n  }], null, null);\n})();\nclass MatTable extends CdkTable {\n  /** Overrides the sticky CSS class set by the `CdkTable`. */\n  stickyCssClass = 'mat-mdc-table-sticky';\n  /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n  needsPositionStickyOnElement = false;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTable_BaseFactory;\n    return function MatTable_Factory(__ngFactoryType__) {\n      return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = i0.ɵɵgetInheritedFactory(MatTable)))(__ngFactoryType__ || MatTable);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTable,\n    selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-table\", \"mdc-data-table__table\"],\n    hostVars: 2,\n    hostBindings: function MatTable_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-table-fixed-layout\", ctx.fixedLayout);\n      }\n    },\n    exportAs: [\"matTable\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTable,\n      useExisting: MatTable\n    }, {\n      provide: CDK_TABLE,\n      useExisting: MatTable\n    }, {\n      provide: _COALESCED_STYLE_SCHEDULER,\n      useClass: _CoalescedStyleScheduler\n    },\n    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n    //  is only included in the build if used.\n    {\n      provide: _VIEW_REPEATER_STRATEGY,\n      useClass: _DisposeViewRepeaterStrategy\n    },\n    // Prevent nested tables from seeing this table's StickyPositioningListener.\n    {\n      provide: STICKY_POSITIONING_LISTENER,\n      useValue: null\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 5,\n    vars: 2,\n    consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"role\", \"rowgroup\", 1, \"mdc-data-table__content\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n    template: function MatTable_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n        i0.ɵɵtemplate(2, MatTable_Conditional_2_Template, 1, 0)(3, MatTable_Conditional_3_Template, 7, 0)(4, MatTable_Conditional_4_Template, 4, 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isServer ? 2 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._isNativeHtmlTable ? 3 : 4);\n      }\n    },\n    dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n    styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-sys-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-sys-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-sys-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-sys-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-sys-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mdc-data-table__row:last-child>.mat-mdc-header-cell{border-bottom:none}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child>.mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTable, [{\n    type: Component,\n    args: [{\n      selector: 'mat-table, table[mat-table]',\n      exportAs: 'matTable',\n      template: `\n    <ng-content select=\"caption\"/>\n    <ng-content select=\"colgroup, col\"/>\n\n    <!--\n      Unprojected content throws a hydration error so we need this to capture it.\n      It gets removed on the client so it doesn't affect the layout.\n    -->\n    @if (_isServer) {\n      <ng-content/>\n    }\n\n    @if (_isNativeHtmlTable) {\n      <thead role=\"rowgroup\">\n        <ng-container headerRowOutlet/>\n      </thead>\n      <tbody class=\"mdc-data-table__content\" role=\"rowgroup\">\n        <ng-container rowOutlet/>\n        <ng-container noDataRowOutlet/>\n      </tbody>\n      <tfoot role=\"rowgroup\">\n        <ng-container footerRowOutlet/>\n      </tfoot>\n    } @else {\n      <ng-container headerRowOutlet/>\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n      <ng-container footerRowOutlet/>\n    }\n  `,\n      host: {\n        'class': 'mat-mdc-table mdc-data-table__table',\n        '[class.mdc-table-fixed-layout]': 'fixedLayout'\n      },\n      providers: [{\n        provide: CdkTable,\n        useExisting: MatTable\n      }, {\n        provide: CDK_TABLE,\n        useExisting: MatTable\n      }, {\n        provide: _COALESCED_STYLE_SCHEDULER,\n        useClass: _CoalescedStyleScheduler\n      },\n      // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n      //  is only included in the build if used.\n      {\n        provide: _VIEW_REPEATER_STRATEGY,\n        useClass: _DisposeViewRepeaterStrategy\n      },\n      // Prevent nested tables from seeing this table's StickyPositioningListener.\n      {\n        provide: STICKY_POSITIONING_LISTENER,\n        useValue: null\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n      styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-sys-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-sys-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-sys-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-sys-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-sys-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mdc-data-table__row:last-child>.mat-mdc-header-cell{border-bottom:none}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child>.mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatCellDef_BaseFactory;\n    return function MatCellDef_Factory(__ngFactoryType__) {\n      return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatCellDef)))(__ngFactoryType__ || MatCellDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCellDef,\n    selectors: [[\"\", \"matCellDef\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkCellDef,\n      useExisting: MatCellDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matCellDef]',\n      providers: [{\n        provide: CdkCellDef,\n        useExisting: MatCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatHeaderCellDef_BaseFactory;\n    return function MatHeaderCellDef_Factory(__ngFactoryType__) {\n      return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(__ngFactoryType__ || MatHeaderCellDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatHeaderCellDef,\n    selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkHeaderCellDef,\n      useExisting: MatHeaderCellDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderCellDef]',\n      providers: [{\n        provide: CdkHeaderCellDef,\n        useExisting: MatHeaderCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatFooterCellDef_BaseFactory;\n    return function MatFooterCellDef_Factory(__ngFactoryType__) {\n      return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCellDef)))(__ngFactoryType__ || MatFooterCellDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFooterCellDef,\n    selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkFooterCellDef,\n      useExisting: MatFooterCellDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterCellDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterCellDef]',\n      providers: [{\n        provide: CdkFooterCellDef,\n        useExisting: MatFooterCellDef\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  get name() {\n    return this._name;\n  }\n  set name(name) {\n    this._setNameInput(name);\n  }\n  /**\n   * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n   * In the future, this will only add \"mat-column-\" and columnCssClassName\n   * will change from type string[] to string.\n   * @docs-private\n   */\n  _updateColumnCssClassName() {\n    super._updateColumnCssClassName();\n    this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatColumnDef_BaseFactory;\n    return function MatColumnDef_Factory(__ngFactoryType__) {\n      return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatColumnDef)))(__ngFactoryType__ || MatColumnDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatColumnDef,\n    selectors: [[\"\", \"matColumnDef\", \"\"]],\n    inputs: {\n      name: [0, \"matColumnDef\", \"name\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkColumnDef,\n      useExisting: MatColumnDef\n    }, {\n      provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n      useExisting: MatColumnDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatColumnDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matColumnDef]',\n      providers: [{\n        provide: CdkColumnDef,\n        useExisting: MatColumnDef\n      }, {\n        provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n        useExisting: MatColumnDef\n      }]\n    }]\n  }], null, {\n    name: [{\n      type: Input,\n      args: ['matColumnDef']\n    }]\n  });\n})();\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatHeaderCell_BaseFactory;\n    return function MatHeaderCell_Factory(__ngFactoryType__) {\n      return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCell)))(__ngFactoryType__ || MatHeaderCell);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatHeaderCell,\n    selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n    hostAttrs: [\"role\", \"columnheader\", 1, \"mat-mdc-header-cell\", \"mdc-data-table__header-cell\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-header-cell, th[mat-header-cell]',\n      host: {\n        'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n        'role': 'columnheader'\n      }\n    }]\n  }], null, null);\n})();\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatFooterCell_BaseFactory;\n    return function MatFooterCell_Factory(__ngFactoryType__) {\n      return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCell)))(__ngFactoryType__ || MatFooterCell);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFooterCell,\n    selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-footer-cell\", \"mdc-data-table__cell\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-footer-cell, td[mat-footer-cell]',\n      host: {\n        'class': 'mat-mdc-footer-cell mdc-data-table__cell'\n      }\n    }]\n  }], null, null);\n})();\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatCell_BaseFactory;\n    return function MatCell_Factory(__ngFactoryType__) {\n      return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatCell)))(__ngFactoryType__ || MatCell);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCell,\n    selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-cell\", \"mdc-data-table__cell\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCell, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-cell, td[mat-cell]',\n      host: {\n        'class': 'mat-mdc-cell mdc-data-table__cell'\n      }\n    }]\n  }], null, null);\n})();\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatHeaderRowDef_BaseFactory;\n    return function MatHeaderRowDef_Factory(__ngFactoryType__) {\n      return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(__ngFactoryType__ || MatHeaderRowDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatHeaderRowDef,\n    selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n    inputs: {\n      columns: [0, \"matHeaderRowDef\", \"columns\"],\n      sticky: [2, \"matHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkHeaderRowDef,\n      useExisting: MatHeaderRowDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matHeaderRowDef]',\n      providers: [{\n        provide: CdkHeaderRowDef,\n        useExisting: MatHeaderRowDef\n      }],\n      inputs: [{\n        name: 'columns',\n        alias: 'matHeaderRowDef'\n      }, {\n        name: 'sticky',\n        alias: 'matHeaderRowDefSticky',\n        transform: booleanAttribute\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatFooterRowDef_BaseFactory;\n    return function MatFooterRowDef_Factory(__ngFactoryType__) {\n      return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRowDef)))(__ngFactoryType__ || MatFooterRowDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFooterRowDef,\n    selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n    inputs: {\n      columns: [0, \"matFooterRowDef\", \"columns\"],\n      sticky: [2, \"matFooterRowDefSticky\", \"sticky\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkFooterRowDef,\n      useExisting: MatFooterRowDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matFooterRowDef]',\n      providers: [{\n        provide: CdkFooterRowDef,\n        useExisting: MatFooterRowDef\n      }],\n      inputs: [{\n        name: 'columns',\n        alias: 'matFooterRowDef'\n      }, {\n        name: 'sticky',\n        alias: 'matFooterRowDefSticky',\n        transform: booleanAttribute\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatRowDef_BaseFactory;\n    return function MatRowDef_Factory(__ngFactoryType__) {\n      return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatRowDef)))(__ngFactoryType__ || MatRowDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatRowDef,\n    selectors: [[\"\", \"matRowDef\", \"\"]],\n    inputs: {\n      columns: [0, \"matRowDefColumns\", \"columns\"],\n      when: [0, \"matRowDefWhen\", \"when\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkRowDef,\n      useExisting: MatRowDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRowDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matRowDef]',\n      providers: [{\n        provide: CdkRowDef,\n        useExisting: MatRowDef\n      }],\n      inputs: [{\n        name: 'columns',\n        alias: 'matRowDefColumns'\n      }, {\n        name: 'when',\n        alias: 'matRowDefWhen'\n      }]\n    }]\n  }], null, null);\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatHeaderRow_BaseFactory;\n    return function MatHeaderRow_Factory(__ngFactoryType__) {\n      return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRow)))(__ngFactoryType__ || MatHeaderRow);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatHeaderRow,\n    selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-header-row\", \"mdc-data-table__header-row\"],\n    exportAs: [\"matHeaderRow\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkHeaderRow,\n      useExisting: MatHeaderRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function MatHeaderRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkCellOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHeaderRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-header-row, tr[mat-header-row]',\n      template: ROW_TEMPLATE,\n      host: {\n        'class': 'mat-mdc-header-row mdc-data-table__header-row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matHeaderRow',\n      providers: [{\n        provide: CdkHeaderRow,\n        useExisting: MatHeaderRow\n      }],\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatFooterRow_BaseFactory;\n    return function MatFooterRow_Factory(__ngFactoryType__) {\n      return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRow)))(__ngFactoryType__ || MatFooterRow);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatFooterRow,\n    selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-footer-row\", \"mdc-data-table__row\"],\n    exportAs: [\"matFooterRow\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkFooterRow,\n      useExisting: MatFooterRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function MatFooterRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkCellOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFooterRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-footer-row, tr[mat-footer-row]',\n      template: ROW_TEMPLATE,\n      host: {\n        'class': 'mat-mdc-footer-row mdc-data-table__row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matFooterRow',\n      providers: [{\n        provide: CdkFooterRow,\n        useExisting: MatFooterRow\n      }],\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatRow_BaseFactory;\n    return function MatRow_Factory(__ngFactoryType__) {\n      return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatRow)))(__ngFactoryType__ || MatRow);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatRow,\n    selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-row\", \"mdc-data-table__row\"],\n    exportAs: [\"matRow\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkRow,\n      useExisting: MatRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkCellOutlet\", \"\"]],\n    template: function MatRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkCellOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-row, tr[mat-row]',\n      template: ROW_TEMPLATE,\n      host: {\n        'class': 'mat-mdc-row mdc-data-table__row',\n        'role': 'row'\n      },\n      // See note on CdkTable for explanation on why this uses the default change detection strategy.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matRow',\n      providers: [{\n        provide: CdkRow,\n        useExisting: MatRow\n      }],\n      imports: [CdkCellOutlet]\n    }]\n  }], null, null);\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n  _contentClassName = 'mat-mdc-no-data-row';\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatNoDataRow_BaseFactory;\n    return function MatNoDataRow_Factory(__ngFactoryType__) {\n      return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatNoDataRow)))(__ngFactoryType__ || MatNoDataRow);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatNoDataRow,\n    selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkNoDataRow,\n      useExisting: MatNoDataRow\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNoDataRow, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matNoDataRow]',\n      providers: [{\n        provide: CdkNoDataRow,\n        useExisting: MatNoDataRow\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTextColumn_BaseFactory;\n    return function MatTextColumn_Factory(__ngFactoryType__) {\n      return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = i0.ɵɵgetInheritedFactory(MatTextColumn)))(__ngFactoryType__ || MatTextColumn);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTextColumn,\n    selectors: [[\"mat-text-column\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 0,\n    consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n    template: function MatTextColumn_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        i0.ɵɵelementContainerEnd();\n      }\n    },\n    dependencies: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTextColumn, [{\n    type: Component,\n    args: [{\n      selector: 'mat-text-column',\n      template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      // Change detection is intentionally not set to OnPush. This component's template will be provided\n      // to the table to be inserted into its view. This is problematic when change detection runs since\n      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n      // mean's the template in the table's view will not have the updated value (and in fact will cause\n      // an ExpressionChangedAfterItHasBeenCheckedError).\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell]\n    }]\n  }], null, null);\n})();\nconst EXPORTED_DECLARATIONS = [\n// Table\nMatTable, MatRecycleRows,\n// Template defs\nMatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef,\n// Cell directives\nMatHeaderCell, MatCell, MatFooterCell,\n// Row directives\nMatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];\nclass MatTableModule {\n  static ɵfac = function MatTableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTableModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatTableModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CdkTableModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkTableModule, ...EXPORTED_DECLARATIONS],\n      exports: [MatCommonModule, EXPORTED_DECLARATIONS]\n    }]\n  }], null, null);\n})();\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n  /** Stream that emits when a new data array is set on the data source. */\n  _data;\n  /** Stream emitting render data to the table (depends on ordered data changes). */\n  _renderData = new BehaviorSubject([]);\n  /** Stream that emits when a new filter string is set on the data source. */\n  _filter = new BehaviorSubject('');\n  /** Used to react to internal changes of the paginator that are made by the data source itself. */\n  _internalPageChanges = new Subject();\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription = null;\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData;\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() {\n    return this._data.value;\n  }\n  set data(data) {\n    data = Array.isArray(data) ? data : [];\n    this._data.next(data);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(data);\n    }\n  }\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter() {\n    return this._filter.value;\n  }\n  set filter(filter) {\n    this._filter.next(filter);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(this.data);\n    }\n  }\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort() {\n    return this._sort;\n  }\n  set sort(sort) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  _sort;\n  /**\n   * Instance of the paginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the paginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator() {\n    return this._paginator;\n  }\n  set paginator(paginator) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  _paginator;\n  /**\n   * Data accessor function that is used for accessing data properties for sorting through\n   * the default sortData function.\n   * This default function assumes that the sort header IDs (which defaults to the column name)\n   * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n   * May be set to a custom function for different behavior.\n   * @param data Data object that is being accessed.\n   * @param sortHeaderId The name of the column that represents the data.\n   */\n  sortingDataAccessor = (data, sortHeaderId) => {\n    const value = data[sortHeaderId];\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n      // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we leave them as strings.\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n      return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n    }\n    return value;\n  };\n  /**\n   * Gets a sorted copy of the data array based on the state of the MatSort. Called\n   * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n   * By default, the function retrieves the active sort and its direction and compares data\n   * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n   * of data ordering.\n   * @param data The array of data that should be sorted.\n   * @param sort The connected MatSort that holds the current sort state.\n   */\n  sortData = (data, sort) => {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!active || direction == '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let valueA = this.sortingDataAccessor(a, active);\n      let valueB = this.sortingDataAccessor(b, active);\n      // If there are data in the column that can be converted to a number,\n      // it must be ensured that the rest of the data\n      // is of the same type so as not to order incorrectly.\n      const valueAType = typeof valueA;\n      const valueBType = typeof valueB;\n      if (valueAType !== valueBType) {\n        if (valueAType === 'number') {\n          valueA += '';\n        }\n        if (valueBType === 'number') {\n          valueB += '';\n        }\n      }\n      // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n      // one value exists while the other doesn't. In this case, existing value should come last.\n      // This avoids inconsistent results when comparing values to undefined/null.\n      // If neither value exists, return 0 (equal).\n      let comparatorResult = 0;\n      if (valueA != null && valueB != null) {\n        // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n        if (valueA > valueB) {\n          comparatorResult = 1;\n        } else if (valueA < valueB) {\n          comparatorResult = -1;\n        }\n      } else if (valueA != null) {\n        comparatorResult = 1;\n      } else if (valueB != null) {\n        comparatorResult = -1;\n      }\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\n    });\n  };\n  /**\n   * Checks if a data object matches the data source's filter string. By default, each data object\n   * is converted to a string of its properties and returns true if the filter has\n   * at least one occurrence in that string. By default, the filter string has its whitespace\n   * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n   * filter matching.\n   * @param data Data object used to check against the filter.\n   * @param filter Filter string that has been set on the data source.\n   * @returns Whether the filter matches against the data\n   */\n  filterPredicate = (data, filter) => {\n    // Transform the filter by converting it to lowercase and removing whitespace.\n    const transformedFilter = filter.trim().toLowerCase();\n    // Loops over the values in the array and returns true if any of them match the filter string\n    return Object.values(data).some(value => `${value}`.toLowerCase().includes(transformedFilter));\n  };\n  constructor(initialData = []) {\n    super();\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n    const pageChange = this._paginator ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) : of(null);\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterPredicate function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterPredicate.\n    // May be overridden for customization.\n    this.filteredData = this.filter == null || this.filter === '' ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n    if (this.paginator) {\n      this._updatePaginator(this.filteredData.length);\n    }\n    return this.filteredData;\n  }\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data) {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) {\n      return data;\n    }\n    return this.sortData(data.slice(), this.sort);\n  }\n  /**\n   * Returns a paged slice of the provided data array according to the provided paginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data) {\n    if (!this.paginator) {\n      return data;\n    }\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice(startIndex, startIndex + this.paginator.pageSize);\n  }\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength) {\n    Promise.resolve().then(() => {\n      const paginator = this.paginator;\n      if (!paginator) {\n        return;\n      }\n      paginator.length = filteredDataLength;\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n        if (newPageIndex !== paginator.pageIndex) {\n          paginator.pageIndex = newPageIndex;\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() {\n    if (!this._renderChangesSubscription) {\n      this._updateChangeSubscription();\n    }\n    return this._renderData;\n  }\n  /**\n   * Used by the MatTable. Called when it disconnects from the data source.\n   * @docs-private\n   */\n  disconnect() {\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = null;\n  }\n}\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n","import { Injectable, InjectionToken, inject } from '@angular/core';\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage,\n});\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrowserStorageService {\n  storage = inject<Storage>(BROWSER_STORAGE);\n\n\n  get(key: string) {\n    return this.storage.getItem(key);\n  }\n\n  set(key: string, value: string) {\n    this.storage.setItem(key, value);\n  }\n\n  remove(key: string) {\n    this.storage.removeItem(key);\n  }\n\n  clear() {\n    this.storage.clear();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject, signal } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { take } from 'rxjs/operators';\nimport { BrowserStorageService } from './browser-storage.service';\n\nconst LOCAL_STORAGE_KEY = 'themeMode';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeManagerService {\n  private document = inject(DOCUMENT);\n  private browserStorage = inject(BrowserStorageService);\n  // private _isDarkSub = new BehaviorSubject(false);\n  // isDark$ = this._isDarkSub.asObservable();\n  isDark = signal<boolean>(false);\n  private _window = this.document.defaultView;\n\n  themeSignal = signal<any>({\n    // paddingAbsolute: false,\n    // showNativeOverlaidScrollbars: false,\n    // update: {\n    //   elementEvents: [['img', 'load']],\n    //   debounce: [0, 33],\n    //   attributes: null,\n    //   ignoreMutation: null\n    // },\n    overflow: {\n      x: 'hidden',\n      y: 'scroll',\n    },\n    scrollbars: {\n      theme: 'os-theme-light',\n      // visibility: 'auto',\n      autoHide: 'leave',\n      autoHideDelay: 100,\n      // autoHideSuspend: false,\n      // dragScroll: true,\n      // clickScroll: true,\n      // pointers: ['mouse', 'touch', 'pen']\n    },\n  });\n\n  // Custom options for a specific element\n  customScrollbarOptions = signal({\n    overflow: {\n      x: 'hidden',\n      y: 'hidden',\n    },\n    scrollbars: {\n      theme: 'os-theme-light',\n      autoHide: 'leave',\n      autoHideDelay: 100,\n      visibility: 'hidden',\n    },\n  });\n\n  constructor() {\n    this.setTheme(this.getPreferredTheme());\n    if (this._window !== null && this._window.matchMedia) {\n      this._window\n        .matchMedia('(prefers-color-scheme: dark)')\n        .addEventListener('change', () => {\n          const storedTheme = this.getStoredTheme();\n          if (storedTheme !== 'light' && storedTheme !== 'dark') {\n            this.setTheme(this.getPreferredTheme());\n          }\n        });\n    }\n  }\n\n  getStoredTheme = () =>\n    JSON.parse(this.browserStorage.get(LOCAL_STORAGE_KEY) ?? '{}').theme;\n\n  setStoredTheme = (theme: string) => {\n    const meta = JSON.parse(this.browserStorage.get(LOCAL_STORAGE_KEY) ?? '{}');\n    meta.theme = theme;\n    this.browserStorage.set(LOCAL_STORAGE_KEY, JSON.stringify(meta));\n  };\n\n  getPreferredTheme = (): 'dark' | 'light' => {\n    const storedTheme = this.getStoredTheme();\n    console.log(storedTheme);\n    if (storedTheme) {\n      return storedTheme;\n    }\n\n    if (this._window !== null && this._window.matchMedia) {\n      console.log(\n        this._window.matchMedia('(prefers-color-scheme: dark)').matches,\n      );\n\n      return this._window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light';\n    }\n    return 'light';\n  };\n\n  setTheme = (theme: string) => {\n    if (this._window !== null && this._window.matchMedia) {\n      if (\n        theme === 'auto' &&\n        this._window.matchMedia('(prefers-color-scheme: dark)').matches\n      ) {\n        this.document.documentElement.setAttribute('data-bs-theme', 'dark');\n        // this._isDarkSub.next(true);\n        this.isDark.set(true);\n      } else {\n        this.document.documentElement.setAttribute('data-bs-theme', theme);\n        // this._isDarkSub.next(theme === 'dark');\n        this.isDark.set(theme === 'dark');\n      }\n      this.setMaterialTheme();\n    }\n  };\n\n  setMaterialTheme() {\n    // this.isDark$.pipe(take(1)).subscribe(isDark => {\n    if (this.isDark()) {\n      const href = 'dark-theme.css';\n      getLinkElementForKey('dark-theme').setAttribute('href', href);\n      this.document.documentElement.classList.add('dark-theme');\n    } else {\n      this.removeStyle('dark-theme');\n      this.document.documentElement.classList.remove('dark-theme');\n    }\n    // });\n  }\n\n  removeStyle(key: string) {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      this.document.head.removeChild(existingLinkElement);\n    }\n  }\n\n  changeTheme(theme: string) {\n    this.setStoredTheme(theme);\n    this.setTheme(theme);\n    this.themeSignal.update(options => {\n      let scrollbarTheme = '';\n      if (theme === 'auto') scrollbarTheme = 'light';\n      if (theme === 'dark') scrollbarTheme = 'light';\n      if (theme === 'light') scrollbarTheme = 'dark';\n      return {\n        ...options,\n        scrollbars: {\n          ...options.scrollbars,\n          theme: `os-theme-${scrollbarTheme}`,\n        },\n      };\n    });\n  }\n}\n\nfunction getLinkElementForKey(key: string) {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string) {\n  return document.head.querySelector(\n    `link[rel=\"stylesheet\"].${getClassNameForKey(key)}`,\n  );\n}\n\nfunction createLinkElementWithKey(key: string) {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string) {\n  return `style-manager-${key}`;\n}\n","import { Injectable } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class PaginatorI18nService implements MatPaginatorIntl {\n  changes = new Subject<void>();\n\n  // For internationalization, the `$localize` function from\n  // the `@angular/localize` package can be used.\n  firstPageLabel = $localize`:@@Paginator.firstPage:First page`;\n  itemsPerPageLabel = $localize`:@@Paginator.itemsPerPage:Items per page:`;\n  lastPageLabel = $localize`:@@Paginator.lastPage:Last page`;\n\n  // You can set labels to an arbitrary string too, or dynamically compute\n  // it through other third-party internationalization libraries.\n  nextPageLabel = 'Next page';\n  previousPageLabel = 'Previous page';\n\n  getRangeLabel(page: number, pageSize: number, length: number): string {\n    if (length === 0) {\n      return $localize`:@@Paginator.singlePageRange:Page 1 of 1`;\n    }\n    const amountPages = Math.ceil(length / pageSize);\n    return $localize`:@@Paginator.pageRange:Page ${page + 1} of ${amountPages}`;\n  }\n}\n","import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActivePageService {\n  pageTitle = signal<string>('Dashboard');\n\n  backNavigation = signal<boolean>(false);\n}\n","/**\n * @license Angular v19.2.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { assertInInjectionContext, inject, DestroyRef, ɵRuntimeError as _RuntimeError, ɵgetOutputDestroyRef as _getOutputDestroyRef, Injector, effect, untracked, ɵmicrotaskEffect as _microtaskEffect, assertNotInReactiveContext, signal, computed, PendingTasks, resource } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Operator which completes the Observable when the calling context (component, directive, service,\n * etc) is destroyed.\n *\n * @param destroyRef optionally, the `DestroyRef` representing the current context. This can be\n *     passed explicitly to use `takeUntilDestroyed` outside of an [injection\n * context](guide/di/dependency-injection-context). Otherwise, the current `DestroyRef` is injected.\n *\n * @publicApi\n */\nfunction takeUntilDestroyed(destroyRef) {\n  if (!destroyRef) {\n    assertInInjectionContext(takeUntilDestroyed);\n    destroyRef = inject(DestroyRef);\n  }\n  const destroyed$ = new Observable(observer => {\n    const unregisterFn = destroyRef.onDestroy(observer.next.bind(observer));\n    return unregisterFn;\n  });\n  return source => {\n    return source.pipe(takeUntil(destroyed$));\n  };\n}\n\n/**\n * Implementation of `OutputRef` that emits values from\n * an RxJS observable source.\n *\n * @internal\n */\nclass OutputFromObservableRef {\n  source;\n  destroyed = false;\n  destroyRef = inject(DestroyRef);\n  constructor(source) {\n    this.source = source;\n    this.destroyRef.onDestroy(() => {\n      this.destroyed = true;\n    });\n  }\n  subscribe(callbackFn) {\n    if (this.destroyed) {\n      throw new _RuntimeError(953 /* ɵRuntimeErrorCode.OUTPUT_REF_DESTROYED */, ngDevMode && 'Unexpected subscription to destroyed `OutputRef`. ' + 'The owning directive/component is destroyed.');\n    }\n    // Stop yielding more values when the directive/component is already destroyed.\n    const subscription = this.source.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\n      next: value => callbackFn(value)\n    });\n    return {\n      unsubscribe: () => subscription.unsubscribe()\n    };\n  }\n}\n/**\n * Declares an Angular output that is using an RxJS observable as a source\n * for events dispatched to parent subscribers.\n *\n * The behavior for an observable as source is defined as followed:\n *    1. New values are forwarded to the Angular output (next notifications).\n *    2. Errors notifications are not handled by Angular. You need to handle these manually.\n *       For example by using `catchError`.\n *    3. Completion notifications stop the output from emitting new values.\n *\n * @usageNotes\n * Initialize an output in your directive by declaring a\n * class field and initializing it with the `outputFromObservable()` function.\n *\n * ```ts\n * @Directive({..})\n * export class MyDir {\n *   nameChange$ = <some-observable>;\n *   nameChange = outputFromObservable(this.nameChange$);\n * }\n * ```\n *\n * @publicApi\n */\nfunction outputFromObservable(observable, opts) {\n  ngDevMode && assertInInjectionContext(outputFromObservable);\n  return new OutputFromObservableRef(observable);\n}\n\n/**\n * Converts an Angular output declared via `output()` or `outputFromObservable()`\n * to an observable.\n *\n * You can subscribe to the output via `Observable.subscribe` then.\n *\n * @publicApi\n */\nfunction outputToObservable(ref) {\n  const destroyRef = _getOutputDestroyRef(ref);\n  return new Observable(observer => {\n    // Complete the observable upon directive/component destroy.\n    // Note: May be `undefined` if an `EventEmitter` is declared outside\n    // of an injection context.\n    destroyRef?.onDestroy(() => observer.complete());\n    const subscription = ref.subscribe(v => observer.next(v));\n    return () => subscription.unsubscribe();\n  });\n}\n\n/**\n * Exposes the value of an Angular `Signal` as an RxJS `Observable`.\n *\n * The signal's value will be propagated into the `Observable`'s subscribers using an `effect`.\n *\n * `toObservable` must be called in an injection context unless an injector is provided via options.\n *\n * @developerPreview\n */\nfunction toObservable(source, options) {\n  !options?.injector && assertInInjectionContext(toObservable);\n  const injector = options?.injector ?? inject(Injector);\n  const subject = new ReplaySubject(1);\n  const watcher = effect(() => {\n    let value;\n    try {\n      value = source();\n    } catch (err) {\n      untracked(() => subject.error(err));\n      return;\n    }\n    untracked(() => subject.next(value));\n  }, {\n    injector,\n    manualCleanup: true\n  });\n  injector.get(DestroyRef).onDestroy(() => {\n    watcher.destroy();\n    subject.complete();\n  });\n  return subject.asObservable();\n}\nfunction toObservableMicrotask(source, options) {\n  !options?.injector && assertInInjectionContext(toObservable);\n  const injector = options?.injector ?? inject(Injector);\n  const subject = new ReplaySubject(1);\n  const watcher = _microtaskEffect(() => {\n    let value;\n    try {\n      value = source();\n    } catch (err) {\n      untracked(() => subject.error(err));\n      return;\n    }\n    untracked(() => subject.next(value));\n  }, {\n    injector,\n    manualCleanup: true\n  });\n  injector.get(DestroyRef).onDestroy(() => {\n    watcher.destroy();\n    subject.complete();\n  });\n  return subject.asObservable();\n}\n\n/**\n * Get the current value of an `Observable` as a reactive `Signal`.\n *\n * `toSignal` returns a `Signal` which provides synchronous reactive access to values produced\n * by the given `Observable`, by subscribing to that `Observable`. The returned `Signal` will always\n * have the most recent value emitted by the subscription, and will throw an error if the\n * `Observable` errors.\n *\n * With `requireSync` set to `true`, `toSignal` will assert that the `Observable` produces a value\n * immediately upon subscription. No `initialValue` is needed in this case, and the returned signal\n * does not include an `undefined` type.\n *\n * By default, the subscription will be automatically cleaned up when the current [injection\n * context](guide/di/dependency-injection-context) is destroyed. For example, when `toSignal` is\n * called during the construction of a component, the subscription will be cleaned up when the\n * component is destroyed. If an injection context is not available, an explicit `Injector` can be\n * passed instead.\n *\n * If the subscription should persist until the `Observable` itself completes, the `manualCleanup`\n * option can be specified instead, which disables the automatic subscription teardown. No injection\n * context is needed in this configuration as well.\n *\n * @developerPreview\n */\nfunction toSignal(source, options) {\n  ngDevMode && assertNotInReactiveContext(toSignal, 'Invoking `toSignal` causes new subscriptions every time. ' + 'Consider moving `toSignal` outside of the reactive context and read the signal value where needed.');\n  const requiresCleanup = !options?.manualCleanup;\n  requiresCleanup && !options?.injector && assertInInjectionContext(toSignal);\n  const cleanupRef = requiresCleanup ? options?.injector?.get(DestroyRef) ?? inject(DestroyRef) : null;\n  const equal = makeToSignalEqual(options?.equal);\n  // Note: T is the Observable value type, and U is the initial value type. They don't have to be\n  // the same - the returned signal gives values of type `T`.\n  let state;\n  if (options?.requireSync) {\n    // Initially the signal is in a `NoValue` state.\n    state = signal({\n      kind: 0 /* StateKind.NoValue */\n    }, {\n      equal\n    });\n  } else {\n    // If an initial value was passed, use it. Otherwise, use `undefined` as the initial value.\n    state = signal({\n      kind: 1 /* StateKind.Value */,\n      value: options?.initialValue\n    }, {\n      equal\n    });\n  }\n  // Note: This code cannot run inside a reactive context (see assertion above). If we'd support\n  // this, we would subscribe to the observable outside of the current reactive context, avoiding\n  // that side-effect signal reads/writes are attribute to the current consumer. The current\n  // consumer only needs to be notified when the `state` signal changes through the observable\n  // subscription. Additional context (related to async pipe):\n  // https://github.com/angular/angular/pull/50522.\n  const sub = source.subscribe({\n    next: value => state.set({\n      kind: 1 /* StateKind.Value */,\n      value\n    }),\n    error: error => {\n      if (options?.rejectErrors) {\n        // Kick the error back to RxJS. It will be caught and rethrown in a macrotask, which causes\n        // the error to end up as an uncaught exception.\n        throw error;\n      }\n      state.set({\n        kind: 2 /* StateKind.Error */,\n        error\n      });\n    }\n    // Completion of the Observable is meaningless to the signal. Signals don't have a concept of\n    // \"complete\".\n  });\n  if (options?.requireSync && state().kind === 0 /* StateKind.NoValue */) {\n    throw new _RuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, (typeof ngDevMode === 'undefined' || ngDevMode) && '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n  }\n  // Unsubscribe when the current context is destroyed, if requested.\n  cleanupRef?.onDestroy(sub.unsubscribe.bind(sub));\n  // The actual returned signal is a `computed` of the `State` signal, which maps the various states\n  // to either values or errors.\n  return computed(() => {\n    const current = state();\n    switch (current.kind) {\n      case 1 /* StateKind.Value */:\n        return current.value;\n      case 2 /* StateKind.Error */:\n        throw current.error;\n      case 0 /* StateKind.NoValue */:\n        // This shouldn't really happen because the error is thrown on creation.\n        throw new _RuntimeError(601 /* ɵRuntimeErrorCode.REQUIRE_SYNC_WITHOUT_SYNC_EMIT */, (typeof ngDevMode === 'undefined' || ngDevMode) && '`toSignal()` called with `requireSync` but `Observable` did not emit synchronously.');\n    }\n  }, {\n    equal: options?.equal\n  });\n}\nfunction makeToSignalEqual(userEquality = Object.is) {\n  return (a, b) => a.kind === 1 /* StateKind.Value */ && b.kind === 1 /* StateKind.Value */ && userEquality(a.value, b.value);\n}\n\n/**\n * Operator which makes the application unstable until the observable emits, complets, errors, or is unsubscribed.\n *\n * Use this operator in observables whose subscriptions are important for rendering and should be included in SSR serialization.\n *\n * @param injector The `Injector` to use during creation. If this is not provided, the current injection context will be used instead (via `inject`).\n *\n * @experimental\n */\nfunction pendingUntilEvent(injector) {\n  if (injector === undefined) {\n    assertInInjectionContext(pendingUntilEvent);\n    injector = inject(Injector);\n  }\n  const taskService = injector.get(PendingTasks);\n  return sourceObservable => {\n    return new Observable(originalSubscriber => {\n      // create a new task on subscription\n      const removeTask = taskService.add();\n      let cleanedUp = false;\n      function cleanupTask() {\n        if (cleanedUp) {\n          return;\n        }\n        removeTask();\n        cleanedUp = true;\n      }\n      const innerSubscription = sourceObservable.subscribe({\n        next: v => {\n          originalSubscriber.next(v);\n          cleanupTask();\n        },\n        complete: () => {\n          originalSubscriber.complete();\n          cleanupTask();\n        },\n        error: e => {\n          originalSubscriber.error(e);\n          cleanupTask();\n        }\n      });\n      innerSubscription.add(() => {\n        originalSubscriber.unsubscribe();\n        cleanupTask();\n      });\n      return innerSubscription;\n    });\n  };\n}\nfunction rxResource(opts) {\n  opts?.injector || assertInInjectionContext(rxResource);\n  return resource({\n    ...opts,\n    loader: undefined,\n    stream: params => {\n      let sub;\n      // Track the abort listener so it can be removed if the Observable completes (as a memory\n      // optimization).\n      const onAbort = () => sub.unsubscribe();\n      params.abortSignal.addEventListener('abort', onAbort);\n      // Start off stream as undefined.\n      const stream = signal({\n        value: undefined\n      });\n      let resolve;\n      const promise = new Promise(r => resolve = r);\n      function send(value) {\n        stream.set(value);\n        resolve?.(stream);\n        resolve = undefined;\n      }\n      sub = opts.loader(params).subscribe({\n        next: value => send({\n          value\n        }),\n        error: error => send({\n          error\n        }),\n        complete: () => {\n          if (resolve) {\n            send({\n              error: new Error('Resource completed before producing a value')\n            });\n          }\n          params.abortSignal.removeEventListener('abort', onAbort);\n        }\n      });\n      return promise;\n    }\n  });\n}\nexport { outputFromObservable, outputToObservable, pendingUntilEvent, rxResource, takeUntilDestroyed, toObservable, toSignal, toObservableMicrotask as ɵtoObservableMicrotask };\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { inject, Injectable, signal } from '@angular/core';\nimport { map, Observable, shareReplay, tap } from 'rxjs';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\ntype ScreenSize = {\n  isCompact: boolean;\n  isMedium: boolean;\n  isExpanded: boolean;\n  //  islargeBP: boolean;\n  //  isextraLargeBP: boolean;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenSizeService {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  // Breakpoints\n  private compactBP = '(max-width: 599px)';\n  private mediumBP = '(min-width: 600px) and (max-width: 839px)';\n  private expandedBP = '(min-width: 840px) and (max-width: 1199px)';\n  // private largeBP = '(min-width: 1200px) and (max-width: 1599px)';\n  // private extraLargeBP = '(min-width: 1600px)';\n\n  screenSize = toSignal(\n    this.breakpointObserver\n      .observe([this.compactBP, this.mediumBP, this.expandedBP])\n      .pipe(\n        map(result => ({\n          isCompact: result.breakpoints[this.compactBP],\n          isMedium: result.breakpoints[this.mediumBP],\n          isExpanded: result.breakpoints[this.expandedBP],\n        })),\n        shareReplay({ bufferSize: 1, refCount: true }),\n        tap(result => console.log(result)),\n      ),\n  );\n}\n","import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\n\ninterface Country {\n  id: string;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountriesLibService {\n  private http = inject(HttpClient);\n\n  apiURLCountriesLib = environment.apiURL + 'countriesLib';\n\n  getCountriesLib(lang: string): Observable<Country[]> {\n    return this.http.get<Country[]>(`${this.apiURLCountriesLib}/${lang}`);\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { BlankOverlayComponent, SpinnerComponent } from '@slowautomobile/ui';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingOverlayService {\n  private overlay = inject(Overlay);\n\n  private overlayRef: OverlayRef | null = null;\n\n  private loadingCount = 0;\n  private spinnerShown = false;\n\n show(showSpinner: boolean = true): void {\n    this.loadingCount++;\n\n    if (this.loadingCount === 1) {\n      this.createOverlay(showSpinner);\n      this.spinnerShown = showSpinner;\n    }\n  }\n\n  hide(): void {\n    this.loadingCount = Math.max(0, this.loadingCount - 1);\n\n    if (this.loadingCount === 0 && this.overlayRef) {\n      this.overlayRef.detach();\n      this.overlayRef.dispose();\n      this.overlayRef = null;\n      this.spinnerShown = false;\n    }\n  }\n\n  private createOverlay(showSpinner: boolean): void {\n    const positionStrategy = this.overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n    });\n\n    if (showSpinner) {\n      const spinnerPortal = new ComponentPortal(SpinnerComponent);\n      this.overlayRef.attach(spinnerPortal);\n    } else {\n      const blankPortal = new ComponentPortal(BlankOverlayComponent);\n      this.overlayRef.attach(blankPortal);\n    }\n  }\n}\n","import { HttpInterceptorFn } from '@angular/common/http';\nimport { LoadingOverlayService } from './loading-overlay.service';\nimport { inject } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { environment } from '@env/environment';\n\nexport const loadingInterceptor: HttpInterceptorFn = (req, next) => {\n\n   // Default: hide spinner\n  let shouldShowSpinner = false;\nconsole.log('x-show-spinner value:', req.headers.get('x-show-spinner'));\n  // Check if header exists and is explicitly set to 'true'\n  if (req.headers.has('x-show-spinner')) {\n    shouldShowSpinner = req.headers.get('x-show-spinner') === 'true';\n  console.log('show spinner: ', shouldShowSpinner);\n  }\n\n  \n  const loadingOverlayService = inject(LoadingOverlayService);\n  loadingOverlayService.show(shouldShowSpinner);\n\n  return next(req).pipe(finalize(() => loadingOverlayService.hide()));\n};\n","import { Component, input, output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n    selector: 'ui-dynamic-fab-button',\n    imports: [CommonModule, MatButtonModule, MatIconModule, MatTooltipModule],\n    templateUrl: './dynamic-fab-button.component.html',\n    styleUrl: './dynamic-fab-button.component.scss'\n})\nexport class DynamicFabButtonComponent {\n  isScrolling = input.required<boolean>();\n  matTooltip = input<string>('');\n  newButtonString = input<string>('');\n\n  readonly newFabEvent = output<void>();\n}\n","<button\n  mat-fab\n  class=\"floating-fab-button\"\n  [extended]=\"!isScrolling()\"\n  [matTooltip]=\"matTooltip()\"\n  (click)=\"newFabEvent.emit()\"\n>\n  <mat-icon>add</mat-icon>\n  {{ isScrolling() ? '' : newButtonString() }}\n</button>\n","<div class=\"page-toolbar-container\">\n  <div>\n    @if (editMode) {\n      <div class=\"title-edit-mode\">\n        <button\n          mat-icon-button\n          matTooltip=\"Back\"\n          i18n-matTooltip=\"@@PageToolbar.backBtnTooltip\"\n          aria-label=\"Arrow back icon button\"\n          i18n-aria-label=\"@@PageToolbar.backButtonAriaLabel\"\n          (click)=\"cancelEvent.emit()\"\n        >\n          <mat-icon>arrow_back</mat-icon>\n        </button>\n        @if (itemName) {\n          <span class=\"mat-title-large\">{{\n            getDynamicPageTypeString('edit')\n          }}</span>\n          @if (clientName) {\n            <span class=\"edit-client-name mat-title-large\">\n              {{ clientName }} /\n            </span>\n          }\n          <span\n            class=\"edit-program-name mat-title-large\"\n            [ngStyle]=\"{ 'flex-grow': editMode ? '0' : '1' }\"\n            >{{ itemName }}</span\n          >\n          <div class=\"program-options-wrapper\">\n            <mat-divider\n              vertical\n              style=\"display: inline-block; height: 24px\"\n            ></mat-divider>\n            <!-- Disabled in DEMO ! ! ! -->\n            <!-- <button\n              mat-icon-button\n              matTooltip=\"Send mail\"\n              i18n-matTooltip=\"@@PageToolbar.emailBtnTooltip\"\n              aria-label=\"Email icon button\"\n              i18n-aria-label=\"@@PageToolbar.emailBtnAriaLabel\"\n            >\n              <mat-icon>mail_outline</mat-icon>\n            </button>\n            <button\n              mat-icon-button\n              matTooltip=\"Share\"\n              i18n-matTooltip=\"@@PageToolbar.shareBtnTooltip\"\n              aria-label=\"Share icon button\"\n              i18n-aria-label=\"@@PageToolbar.shareBtnAriaLabel\"\n            >\n              <mat-icon>share</mat-icon>\n            </button> -->\n            @if (pageType !== 'client') {\n              <button\n                mat-icon-button\n                matTooltip=\"Print\"\n                i18n-matTooltip=\"@@PageToolbar.printBtnTooltip\"\n                aria-label=\"Print icon button\"\n                i18n-aria-label=\"@@PageToolbar.printBtnAriaLabel\"\n                (click)=\"printEvent.emit()\"\n              >\n                <mat-icon>print_outline</mat-icon>\n              </button>\n            }\n            <button\n              mat-icon-button\n              [matTooltip]=\"getDynamicPageTypeString('delete')\"\n              i18n-matTooltip=\"@@PageToolbar.deleteBtnTooltip\"\n              aria-label=\"Delete icon button\"\n              i18n-aria-label=\"@@PageToolbar.deleteBtnAriaLabel\"\n              (click)=\"deleteEvent.emit()\"\n              [disabled]=\"reuseProgram\"\n            >\n              <mat-icon>delete_outline</mat-icon>\n            </button>\n          </div>\n        } @else {\n          <span class=\"mat-title-large\">{{\n            pageType === 'exercise'\n              ? getDynamicPageTypeString('exercise')\n              : getDynamicPageTypeString('new')\n          }}</span>\n        }\n      </div>\n    } @else {\n      <h2 class=\"hide-page-title\">{{ pageTitle }}</h2>\n    }\n  </div>\n\n  <div class=\"toolbar-btns\">\n    @if (cancelButton) {\n      <button\n        class=\"custom-btn\"\n        mat-stroked-button\n        color=\"primary\"\n        (click)=\"cancelEvent.emit()\"\n        i18n=\"@@PageToolbar.cancelBtn\"\n      >\n        Cancel\n      </button>\n    }\n\n    @if (submitButton) {\n      <button\n        class=\"custom-btn\"\n        [class.spinner]=\"isLoading()\"\n        [disabled]=\"isLoading()\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"onSubmit()\"\n        i18n=\"@@PageToolbar.saveBtn\"\n      >\n        Save\n      </button>\n    }\n    @if (newButton) {\n      @if (screenSize()?.isCompact) {\n        <ui-dynamic-fab-button\n          [isScrolling]=\"isScrolling()\"\n          [matTooltip]=\"getDynamicPageTypeString('new')\"\n          (newFabEvent)=\"newFabEvent()\"\n          [newButtonString]=\"newButtonString\"\n        />\n      } @else {\n        <button\n          class=\"custom-btn\"\n          mat-flat-button\n          color=\"primary\"\n          [matTooltip]=\"getDynamicPageTypeString('new')\"\n          (click)=\"newEvent.emit()\"\n        >\n          <mat-icon>add</mat-icon>\n          {{ newButtonString }}\n        </button>\n      }\n    }\n\n    <!-- Insert custom content from parent component -->\n    <ng-content></ng-content>\n  </div>\n</div>\n","/// <reference types=\"@angular/localize\" />\n\nimport { Component, inject, Input, signal, output } from '@angular/core';\nimport { CommonModule, NgStyle } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Router } from '@angular/router';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ShareStateService } from '@slowautomobile/exercises';\nimport { ScreenSizeService } from '../../services/screen-size.service';\nimport { DynamicFabButtonComponent } from '../dynamic-fab-button/dynamic-fab-button.component';\n\n@Component({\n  selector: 'ui-page-toolbar',\n  imports: [\n    CommonModule,\n    NgStyle,\n    MatButtonModule,\n    MatTooltipModule,\n    MatDividerModule,\n    MatIconModule,\n    DynamicFabButtonComponent,\n  ],\n  templateUrl: './page-toolbar.component.html',\n  styleUrl: './page-toolbar.component.scss',\n})\nexport class PageToolbarComponent {\n  router = inject(Router);\n  private shareStateService = inject(ShareStateService);\n  private screenSizeService = inject(ScreenSizeService);\n\n  screenSize = this.screenSizeService.screenSize;\n  newButtonString = $localize`:@@PageToolbar.newBtn:New`;\n  isLoading = this.shareStateService.isLoading;\n\n  isScrolling = signal<boolean>(false);\n\n  @Input() pageTitle?: string;\n  @Input() pageType?: string;\n  @Input() cancelButton = false;\n  @Input() submitButton = false;\n  @Input() newButton = false;\n  @Input() editMode = false;\n  @Input() itemName = '';\n  @Input() clientName = '';\n  @Input() isClientProgram = false;\n  @Input() reuseProgram = false;\n\n  readonly submitEvent = output<void>();\n  readonly newEvent = output<void>();\n  readonly cancelEvent = output<void>();\n  readonly deleteEvent = output<void>();\n  readonly printEvent = output<void>();\n\n  onSubmit() {\n    this.submitEvent.emit();\n  }\n\n  getDynamicPageTypeString(action: string) {\n    // Result will be 'Edit/new/delete program' or 'Edit/new/delete client' (localized)\n    if (this.pageType === 'client') {\n      switch (action) {\n        case 'new':\n          return $localize`:@@PageToolbar.addNewTypeClient:New client`;\n        case 'edit':\n          return $localize`:@@PageToolbar.editPageTypeClient:Edit client / `;\n        case 'delete':\n          return $localize`:@@PageToolbar.deleteNewTypeClient:Delete client`;\n        default:\n          return '';\n      }\n    } else {\n      switch (action) {\n        case 'new':\n          return $localize`:@@PageToolbar.addNewTypeProgram:New program`;\n        case 'edit':\n          return $localize`:@@PageToolbar.editPageTypeProgram:Edit program / `;\n        case 'delete':\n          return $localize`:@@PageToolbar.deleteNewTypeProgram:Delete program`;\n        case 'exercise':\n          return $localize`:@@ExerciseModal.exerciseDetails:Exercise details`;\n        default:\n          return '';\n      }\n    }\n  }\n\n  newFabEvent() {\n    this.newEvent.emit();\n  }\n}\n","import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, NgZone, EventEmitter, Injector, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-5bdada85.mjs';\nimport { M as MatRippleLoader } from './ripple-loader-dabcd93d.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { E as ErrorStateMatcher } from './error-options-aca21924.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-8f4ce1af.mjs';\nimport { a as MatFormFieldControl, M as MAT_FORM_FIELD } from './form-field-50ec956f.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport { M as MatRippleModule } from './index-a36e3c7c.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChip_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipOption_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 9);\n    i0.ɵɵelement(4, \"path\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width, 1px);border-radius:var(--mdc-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size, 24px);height:var(--mdc-chip-with-avatar-avatar-size, 24px);font-size:var(--mdc-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 8px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mdc-chip-with-icon-icon-size, 18px);height:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}\";\nconst _c3 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"\", \"matChipEditInput\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"mat-chip-avatar, [matChipAvatar]\", \"[matChipEditInput]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipRow_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n}\nfunction MatChipRow_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction MatChipRow_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatChipRow_Conditional_4_Conditional_0_Template, 1, 0)(1, MatChipRow_Conditional_4_Conditional_1_Template, 1, 0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.contentEditInput ? 0 : 1);\n  }\n}\nfunction MatChipRow_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatChipRow_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [\"*\"];\nconst _c6 = \".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    separatorKeyCodes: [ENTER]\n  })\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n  _elementRef = inject(ElementRef);\n  _parentChip = inject(MAT_CHIP);\n  /** Whether the action is interactive. */\n  isInteractive = true;\n  /** Whether this is the primary action in the chip. */\n  _isPrimary = true;\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip?.disabled || false;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Tab index of the action. */\n  tabIndex = -1;\n  /**\n   * Private API to allow focusing this chip when it is disabled.\n   */\n  _allowFocusWhenDisabled = false;\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n      this._elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  static ɵfac = function MatChipAction_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAction)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAction,\n    selectors: [[\"\", \"matChipAction\", \"\"]],\n    hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n    hostVars: 9,\n    hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n      }\n    },\n    inputs: {\n      isInteractive: \"isInteractive\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? -1 : numberAttribute(value)],\n      _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], () => [], {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? -1 : numberAttribute(value)\n      }]\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static ɵfac = function MatChipAvatar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAvatar)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAvatar,\n    selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n    hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_AVATAR,\n      useExisting: MatChipAvatar\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  /**\n   * MDC considers all trailing actions as a remove icon,\n   * but we support non-interactive trailing icons.\n   */\n  isInteractive = false;\n  _isPrimary = false;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipTrailingIcon_BaseFactory;\n    return function MatChipTrailingIcon_Factory(__ngFactoryType__) {\n      return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(__ngFactoryType__ || MatChipTrailingIcon);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipTrailingIcon,\n    selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n    hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_TRAILING_ICON,\n      useExisting: MatChipTrailingIcon\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n  _isPrimary = false;\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipRemove_BaseFactory;\n    return function MatChipRemove_Factory(__ngFactoryType__) {\n      return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(__ngFactoryType__ || MatChipRemove);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipRemove,\n    selectors: [[\"\", \"matChipRemove\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    hostVars: 1,\n    hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_REMOVE,\n      useExisting: MatChipRemove\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  _focusMonitor = inject(FocusMonitor);\n  _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n    optional: true\n  });\n  _document = inject(DOCUMENT);\n  /** Emits when the chip is focused. */\n  _onFocus = new Subject();\n  /** Emits when the chip is blurred. */\n  _onBlur = new Subject();\n  /** Whether this chip is a basic (unstyled) chip. */\n  _isBasicChip;\n  /** Role for the root of the chip. */\n  role = null;\n  /** Whether the chip has focus. */\n  _hasFocusInternal = false;\n  /** Whether moving focus into the chip is pending. */\n  _pendingFocus;\n  /** Subscription to changes in the chip's actions. */\n  _actionChanges;\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled;\n  /** All avatars present in the chip. */\n  _allLeadingIcons;\n  /** All trailing icons present in the chip. */\n  _allTrailingIcons;\n  /** All remove icons present in the chip. */\n  _allRemoveIcons;\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-');\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA label for the content of the chip. */\n  ariaLabel = null;\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA description for the content of the chip. */\n  ariaDescription = null;\n  /** Id of a span that contains this chip's aria description. */\n  _ariaDescriptionId = `${this.id}-aria-description`;\n  /** Whether the chip list is disabled. */\n  _chipListDisabled = false;\n  _textElement;\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value;\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the chip. This API is supported in M2 themes only, it has no\n   * effect in M3 themes. For color customization in M3, see https://material.angular.io/components/chips/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  removable = true;\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n  highlighted = false;\n  /** Whether the ripple effect is disabled or not. */\n  disableRipple = false;\n  /** Whether the chip is disabled. */\n  get disabled() {\n    return this._disabled || this._chipListDisabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Emitted when a chip is to be removed. */\n  removed = new EventEmitter();\n  /** Emitted when the chip is destroyed. */\n  destroyed = new EventEmitter();\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip';\n  /** The chip's leading icon. */\n  leadingIcon;\n  /** The chip's trailing icon. */\n  trailingIcon;\n  /** The chip's trailing remove icon. */\n  removeIcon;\n  /** Action receiving the primary set of user interactions. */\n  primaryAction;\n  /**\n   * Handles the lazy creation of the MatChip ripple.\n   * Used to improve initial load time of large applications.\n   */\n  _rippleLoader = inject(MatRippleLoader);\n  _injector = inject(Injector);\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    const animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled()\n    });\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    const element = this._elementRef.nativeElement;\n    this._isBasicChip = element.hasAttribute(this.basicChipAttrName) || element.tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove() {\n    if (this.removable) {\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!this._globalRippleOptions?.disabled;\n  }\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    // Ignore backspace events where the user is holding down the key\n    // so that we don't accidentally remove too many chips.\n    if (event.keyCode === BACKSPACE && !event.repeat || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus to the next item. To work around the issue, we defer marking the chip\n          // as not focused until after the next render.\n          this._changeDetectorRef.markForCheck();\n          setTimeout(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n  static ɵfac = function MatChip_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChip)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChip,\n    selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n    contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n      }\n    },\n    viewQuery: function MatChip_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipAction, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\"],\n    hostVars: 31,\n    hostBindings: function MatChip_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      role: \"role\",\n      id: \"id\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaDescription: [0, \"aria-description\", \"ariaDescription\"],\n      value: \"value\",\n      color: \"color\",\n      removable: [2, \"removable\", \"removable\", booleanAttribute],\n      highlighted: [2, \"highlighted\", \"highlighted\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      removed: \"removed\",\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"matChip\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP,\n      useExisting: MatChip\n    }])],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n        i0.ɵɵtemplate(3, MatChip_Conditional_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(7, MatChip_Conditional_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"isInteractive\", false);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width, 1px);border-radius:var(--mdc-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size, 24px);height:var(--mdc-chip-with-avatar-avatar-size, 24px);font-size:var(--mdc-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 8px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mdc-chip-with-icon-icon-size, 18px);height:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width, 1px);border-radius:var(--mdc-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size, 24px);height:var(--mdc-chip-with-avatar-avatar-size, 24px);font-size:var(--mdc-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 8px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mdc-chip-with-icon-icon-size, 18px);height:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [], {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    highlighted: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  source;\n  selected;\n  isUserInput;\n  constructor(/** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the chip list is selectable. */\n  chipListSelectable = true;\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple = false;\n  /** Whether the chip list hides single-selection indicator. */\n  _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  _selectable = true;\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(value, false, true);\n  }\n  _selected = false;\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip-option';\n  /** Emitted when the chip is selected or deselected. */\n  selectionChange = new EventEmitter();\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipOption_BaseFactory;\n    return function MatChipOption_Factory(__ngFactoryType__) {\n      return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(__ngFactoryType__ || MatChipOption);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipOption,\n    selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n    hostVars: 37,\n    hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      selected: [2, \"selected\", \"selected\", booleanAttribute]\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipOption\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipOption\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 10,\n    vars: 8,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"]],\n    template: function MatChipOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n        i0.ɵɵtemplate(3, MatChipOption_Conditional_3_Template, 5, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(7, MatChipOption_Conditional_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"_allowFocusWhenDisabled\", true);\n        i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasLeadingGraphic() ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx.ariaDescription);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width, 1px);border-radius:var(--mdc-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size, 24px);height:var(--mdc-chip-with-avatar-avatar-size, 24px);font-size:var(--mdc-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 8px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mdc-chip-with-icon-icon-size, 18px);height:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n  _elementRef = inject(ElementRef);\n  _document = inject(DOCUMENT);\n  constructor() {}\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  static ɵfac = function MatChipEditInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipEditInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEditInput,\n    selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n    hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n  basicChipAttrName = 'mat-basic-chip-row';\n  /**\n   * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n   * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n   * while the editing action is being initialized.\n   */\n  _editStartPending = false;\n  editable = false;\n  /** Emitted when the chip is edited. */\n  edited = new EventEmitter();\n  /** The default chip edit input that is used if none is projected into this chip row. */\n  defaultEditInput;\n  /** The projected chip edit input. */\n  contentEditInput;\n  _isEditing = false;\n  constructor() {\n    super();\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Defer initializing the input until after it has been added to the DOM.\n    afterNextRender(() => {\n      this._getEditInput().initialize(value);\n      this._editStartPending = false;\n    }, {\n      injector: this._injector\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n  static ɵfac = function MatChipRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipRow,\n    selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n    contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n      }\n    },\n    viewQuery: function MatChipRow_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n    hostVars: 27,\n    hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n          return ctx._handleDoubleclick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      editable: \"editable\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipRow\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"disabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [\"matChipEditInput\", \"\"]],\n    template: function MatChipRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵtemplate(0, MatChipRow_Conditional_0_Template, 1, 0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtemplate(2, MatChipRow_Conditional_2_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtemplate(4, MatChipRow_Conditional_4_Template, 2, 1)(5, MatChipRow_Conditional_5_Template, 1, 0);\n        i0.ɵɵelement(6, \"span\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, MatChipRow_Conditional_7_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementStart(8, \"span\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(!ctx._isEditing ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 2 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isEditing ? 4 : 5);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx.ariaDescription);\n      }\n    },\n    dependencies: [MatChipAction, MatChipEditInput],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus()',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction, MatChipEditInput],\n      template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width, 1px);border-radius:var(--mdc-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size, 24px);height:var(--mdc-chip-with-avatar-avatar-size, 24px);font-size:var(--mdc-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius, 8px);height:var(--mdc-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mdc-chip-with-icon-icon-size, 18px);height:var(--mdc-chip-with-icon-icon-size, 18px);font-size:var(--mdc-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [], {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Index of the last destroyed chip that had focus. */\n  _lastDestroyedFocusedChipIndex = null;\n  /** Used to manage focus within the chip list. */\n  _keyManager;\n  /** Subject that emits when the component has been destroyed. */\n  _destroyed = new Subject();\n  /** Role to use if it hasn't been overwritten by the user. */\n  _defaultRole = 'presentation';\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' destroy events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n  get chipRemovedChanges() {\n    return this._getChipStream(chip => chip.removed);\n  }\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n  }\n  _disabled = false;\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  /** Tabindex of the chip set. */\n  tabIndex = 0;\n  set role(value) {\n    this._explicitRole = value;\n  }\n  _explicitRole = null;\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  /** The chips that are part of this chip set. */\n  _chips;\n  /** Flat list of all the actions contained within the chips. */\n  _chipActions = new QueryList();\n  constructor() {}\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    this._chips?.forEach(chip => {\n      chip._chipListDisabled = this._disabled;\n      chip._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    const previous = this._elementRef.nativeElement.tabIndex;\n    if (previous !== -1) {\n      // Set the tabindex directly on the element, instead of going through\n      // the data binding, because we aren't guaranteed that change detection\n      // will run quickly enough to allow focus to escape.\n      this._elementRef.nativeElement.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this._elementRef.nativeElement.tabIndex = previous);\n    }\n  }\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n  static ɵfac = function MatChipSet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipSet)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipSet,\n    selectors: [[\"mat-chip-set\"]],\n    contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n    hostVars: 1,\n    hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      role: \"role\",\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipSet_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    role: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  source;\n  value;\n  constructor(/** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n  /**\n   * Function when touched. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  /**\n   * Function when changed. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onChange = () => {};\n  // TODO: MDC uses `grid` here\n  _defaultRole = 'listbox';\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._syncListboxProperties();\n  }\n  _multiple = false;\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /** Orientation of the chip list. */\n  ariaOrientation = 'horizontal';\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._syncListboxProperties();\n  }\n  _selectable = true;\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  compareWith = (o1, o2) => o1 === o2;\n  /** Whether this chip listbox is required. */\n  required = false;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncListboxProperties();\n  }\n  _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    if (this._chips && this._chips.length) {\n      this._setSelectionByValue(value, false);\n    }\n    this._value = value;\n  }\n  _value;\n  /** Event emitted when the selected chip listbox value has been changed by the user. */\n  change = new EventEmitter();\n  _chips = undefined;\n  ngAfterContentInit() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.value !== undefined) {\n        Promise.resolve().then(() => {\n          this._setSelectionByValue(this.value, false);\n        });\n      }\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    if (value != null) {\n      this.value = value;\n    } else {\n      this.value = undefined;\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipListbox_BaseFactory;\n    return function MatChipListbox_Factory(__ngFactoryType__) {\n      return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(__ngFactoryType__ || MatChipListbox);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipListbox,\n    selectors: [[\"mat-chip-listbox\"]],\n    contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n    hostVars: 10,\n    hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabIndex\", ctx.disabled || ctx.empty ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      ariaOrientation: [0, \"aria-orientation\", \"ariaOrientation\"],\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      compareWith: \"compareWith\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      value: \"value\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipListbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  source;\n  value;\n  constructor(/** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  controlType = 'mat-chip-grid';\n  /** The chip input to add more chips */\n  _chipInput;\n  _defaultRole = 'grid';\n  _errorStateTracker;\n  /**\n   * List of element ids to propagate to the chipInput's aria-describedby attribute.\n   */\n  _ariaDescribedbyIds = [];\n  /**\n   * Function when touched. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  /**\n   * Function when changed. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onChange = () => {};\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  _placeholder;\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  _required;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value = [];\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** Emits when the chip grid value has been changed by the user. */\n  change = new EventEmitter();\n  /**\n   * Emits whenever the raw value of the chip-grid changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  _chips = undefined;\n  /**\n   * Emits whenever the component state changes and should cause the parent\n   * form-field to update. Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  stateChanges = new Subject();\n  /** Whether the chip grid is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor() {\n    super();\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else {\n      const activeItem = this._keyManager.activeItem;\n      if (activeItem) {\n        activeItem.focus();\n      } else {\n        this._keyManager.setFirstItemActive();\n      }\n    }\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** Refreshes the error state of the chip grid. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const activeItem = this._keyManager.activeItem;\n    if (keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (activeItem) {\n          this._keyManager.setActiveItem(activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      // The up and down arrows are supposed to navigate between the individual rows in the grid.\n      // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n      // flag as the active action and moving focus between them ourseles instead of delegating\n      // to the key manager. For more information, see #29359 and:\n      // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n      if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n        const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n        const currentIndex = eligibleActions.indexOf(activeItem);\n        const delta = event.keyCode === UP_ARROW ? -1 : 1;\n        event.preventDefault();\n        if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n          this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n        }\n      } else {\n        super._handleKeydown(event);\n      }\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  static ɵfac = function MatChipGrid_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipGrid)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipGrid,\n    selectors: [[\"mat-chip-grid\"]],\n    contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n    hostVars: 10,\n    hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n          return ctx._blur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.disabled || ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      placeholder: \"placeholder\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      value: \"value\",\n      errorStateMatcher: \"errorStateMatcher\"\n    },\n    outputs: {\n      change: \"change\",\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatChipGrid\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipGrid_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n  _elementRef = inject(ElementRef);\n  /** Whether the control is focused. */\n  focused = false;\n  /** Register input for chip list */\n  get chipGrid() {\n    return this._chipGrid;\n  }\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n  _chipGrid;\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  addOnBlur = false;\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  separatorKeyCodes;\n  /** Emitted when a chip is to be added. */\n  chipEnd = new EventEmitter();\n  /** The input's placeholder text. */\n  placeholder = '';\n  /** Unique id for the input. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  /** The native input element to which this directive is attached. */\n  inputElement;\n  constructor() {\n    const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n    const formField = inject(MAT_FORM_FIELD, {\n      optional: true\n    });\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (this.empty && event.keyCode === BACKSPACE) {\n      // Ignore events where the user is holding down backspace\n      // so that we don't accidentally remove too many chips.\n      if (!event.repeat) {\n        this._chipGrid._focusLastChip();\n      }\n      event.preventDefault();\n    } else {\n      this._emitChipEnd(event);\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event) && !event.repeat) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n  static ɵfac = function MatChipInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipInput,\n    selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n    hostVars: 6,\n    hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n          return ctx._focus();\n        })(\"input\", function MatChipInput_input_HostBindingHandler() {\n          return ctx._onInput();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n      }\n    },\n    inputs: {\n      chipGrid: [0, \"matChipInputFor\", \"chipGrid\"],\n      addOnBlur: [2, \"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute],\n      separatorKeyCodes: [0, \"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n      placeholder: \"placeholder\",\n      id: \"id\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      chipEnd: \"matChipInputTokenEnd\"\n    },\n    exportAs: [\"matChipInput\", \"matChipInputFor\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], () => [], {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputAddOnBlur',\n        transform: booleanAttribute\n      }]\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {\n  static ɵfac = function MatChipsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatChipsModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ErrorStateMatcher, {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      }\n    }],\n    imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n","/*!\n * OverlayScrollbars\n * Version: 2.10.0\n *\n * Copyright (c) Rene Haas | KingSora.\n * https://github.com/KingSora\n *\n * Released under the MIT license.\n */\nconst createCache = (t, n) => {\n  const {\n    o: o,\n    i: s,\n    u: e\n  } = t;\n  let c = o;\n  let r;\n  const cacheUpdateContextual = (t, n) => {\n    const o = c;\n    const l = t;\n    const i = n || (s ? !s(o, l) : o !== l);\n    if (i || e) {\n      c = l;\n      r = o;\n    }\n    return [c, i, r];\n  };\n  const cacheUpdateIsolated = t => cacheUpdateContextual(n(c, r), t);\n  const getCurrentCache = t => [c, !!t, r];\n  return [n ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache];\n};\nconst t = typeof window !== \"undefined\" && typeof HTMLElement !== \"undefined\" && !!window.document;\nconst n = t ? window : {};\nconst o = Math.max;\nconst s = Math.min;\nconst e = Math.round;\nconst c = Math.abs;\nconst r = Math.sign;\nconst l = n.cancelAnimationFrame;\nconst i = n.requestAnimationFrame;\nconst a = n.setTimeout;\nconst u = n.clearTimeout;\nconst getApi = t => typeof n[t] !== \"undefined\" ? n[t] : void 0;\nconst _ = getApi(\"MutationObserver\");\nconst d = getApi(\"IntersectionObserver\");\nconst f = getApi(\"ResizeObserver\");\nconst v = getApi(\"ScrollTimeline\");\nconst isUndefined = t => t === void 0;\nconst isNull = t => t === null;\nconst isNumber = t => typeof t === \"number\";\nconst isString = t => typeof t === \"string\";\nconst isBoolean = t => typeof t === \"boolean\";\nconst isFunction = t => typeof t === \"function\";\nconst isArray = t => Array.isArray(t);\nconst isObject = t => typeof t === \"object\" && !isArray(t) && !isNull(t);\nconst isArrayLike = t => {\n  const n = !!t && t.length;\n  const o = isNumber(n) && n > -1 && n % 1 == 0;\n  return isArray(t) || !isFunction(t) && o ? n > 0 && isObject(t) ? n - 1 in t : true : false;\n};\nconst isPlainObject = t => !!t && t.constructor === Object;\nconst isHTMLElement = t => t instanceof HTMLElement;\nconst isElement = t => t instanceof Element;\nconst animationCurrentTime = () => performance.now();\nconst animateNumber = (t, n, s, e, c) => {\n  let r = 0;\n  const a = animationCurrentTime();\n  const u = o(0, s);\n  const frame = s => {\n    const l = animationCurrentTime();\n    const _ = l - a;\n    const d = _ >= u;\n    const f = s ? 1 : 1 - (o(0, a + u - l) / u || 0);\n    const v = (n - t) * (isFunction(c) ? c(f, f * u, 0, 1, u) : f) + t;\n    const p = d || f === 1;\n    e && e(v, f, p);\n    r = p ? 0 : i(() => frame());\n  };\n  frame();\n  return t => {\n    l(r);\n    t && frame(t);\n  };\n};\nfunction each(t, n) {\n  if (isArrayLike(t)) {\n    for (let o = 0; o < t.length; o++) {\n      if (n(t[o], o, t) === false) {\n        break;\n      }\n    }\n  } else if (t) {\n    each(Object.keys(t), o => n(t[o], o, t));\n  }\n  return t;\n}\nconst inArray = (t, n) => t.indexOf(n) >= 0;\nconst concat = (t, n) => t.concat(n);\nconst push = (t, n, o) => {\n  !o && !isString(n) && isArrayLike(n) ? Array.prototype.push.apply(t, n) : t.push(n);\n  return t;\n};\nconst from = t => Array.from(t || []);\nconst createOrKeepArray = t => {\n  if (isArray(t)) {\n    return t;\n  }\n  return !isString(t) && isArrayLike(t) ? from(t) : [t];\n};\nconst isEmptyArray = t => !!t && !t.length;\nconst deduplicateArray = t => from(new Set(t));\nconst runEachAndClear = (t, n, o) => {\n  const runFn = t => t ? t.apply(void 0, n || []) : true;\n  each(t, runFn);\n  !o && (t.length = 0);\n};\nconst p = \"paddingTop\";\nconst h = \"paddingRight\";\nconst g = \"paddingLeft\";\nconst b = \"paddingBottom\";\nconst w = \"marginLeft\";\nconst y = \"marginRight\";\nconst S = \"marginBottom\";\nconst m = \"overflowX\";\nconst O = \"overflowY\";\nconst $ = \"width\";\nconst C = \"height\";\nconst x = \"visible\";\nconst H = \"hidden\";\nconst E = \"scroll\";\nconst capitalizeFirstLetter = t => {\n  const n = String(t || \"\");\n  return n ? n[0].toUpperCase() + n.slice(1) : \"\";\n};\nconst equal = (t, n, o, s) => {\n  if (t && n) {\n    let e = true;\n    each(o, o => {\n      const c = s ? s(t[o]) : t[o];\n      const r = s ? s(n[o]) : n[o];\n      if (c !== r) {\n        e = false;\n      }\n    });\n    return e;\n  }\n  return false;\n};\nconst equalWH = (t, n) => equal(t, n, [\"w\", \"h\"]);\nconst equalXY = (t, n) => equal(t, n, [\"x\", \"y\"]);\nconst equalTRBL = (t, n) => equal(t, n, [\"t\", \"r\", \"b\", \"l\"]);\nconst noop = () => {};\nconst bind = (t, ...n) => t.bind(0, ...n);\nconst selfClearTimeout = t => {\n  let n;\n  const o = t ? a : i;\n  const s = t ? u : l;\n  return [e => {\n    s(n);\n    n = o(() => e(), isFunction(t) ? t() : t);\n  }, () => s(n)];\n};\nconst debounce = (t, n) => {\n  const {\n    _: o,\n    v: s,\n    p: e,\n    S: c\n  } = n || {};\n  let r;\n  let _;\n  let d;\n  let f;\n  let v = noop;\n  const p = function invokeFunctionToDebounce(n) {\n    v();\n    u(r);\n    f = r = _ = void 0;\n    v = noop;\n    t.apply(this, n);\n  };\n  const mergeParms = t => c && _ ? c(_, t) : t;\n  const flush = () => {\n    if (v !== noop) {\n      p(mergeParms(d) || d);\n    }\n  };\n  const h = function debouncedFn() {\n    const t = from(arguments);\n    const n = isFunction(o) ? o() : o;\n    const c = isNumber(n) && n >= 0;\n    if (c) {\n      const o = isFunction(s) ? s() : s;\n      const c = isNumber(o) && o >= 0;\n      const h = n > 0 ? a : i;\n      const g = n > 0 ? u : l;\n      const b = mergeParms(t);\n      const w = b || t;\n      const y = p.bind(0, w);\n      let S;\n      v();\n      if (e && !f) {\n        y();\n        f = true;\n        S = h(() => f = void 0, n);\n      } else {\n        S = h(y, n);\n        if (c && !r) {\n          r = a(flush, o);\n        }\n      }\n      v = () => g(S);\n      _ = d = w;\n    } else {\n      p(t);\n    }\n  };\n  h.m = flush;\n  return h;\n};\nconst hasOwnProperty = (t, n) => Object.prototype.hasOwnProperty.call(t, n);\nconst keys = t => t ? Object.keys(t) : [];\nconst assignDeep = (t, n, o, s, e, c, r) => {\n  const l = [n, o, s, e, c, r];\n  if ((typeof t !== \"object\" || isNull(t)) && !isFunction(t)) {\n    t = {};\n  }\n  each(l, n => {\n    each(n, (o, s) => {\n      const e = n[s];\n      if (t === e) {\n        return true;\n      }\n      const c = isArray(e);\n      if (e && isPlainObject(e)) {\n        const n = t[s];\n        let o = n;\n        if (c && !isArray(n)) {\n          o = [];\n        } else if (!c && !isPlainObject(n)) {\n          o = {};\n        }\n        t[s] = assignDeep(o, e);\n      } else {\n        t[s] = c ? e.slice() : e;\n      }\n    });\n  });\n  return t;\n};\nconst removeUndefinedProperties = (t, n) => each(assignDeep({}, t), (t, o, s) => {\n  if (t === void 0) {\n    delete s[o];\n  } else if (n && t && isPlainObject(t)) {\n    s[o] = removeUndefinedProperties(t, n);\n  }\n});\nconst isEmptyObject = t => !keys(t).length;\nconst capNumber = (t, n, e) => o(t, s(n, e));\nconst getDomTokensArray = t => deduplicateArray((isArray(t) ? t : (t || \"\").split(\" \")).filter(t => t));\nconst getAttr = (t, n) => t && t.getAttribute(n);\nconst hasAttr = (t, n) => t && t.hasAttribute(n);\nconst setAttrs = (t, n, o) => {\n  each(getDomTokensArray(n), n => {\n    t && t.setAttribute(n, String(o || \"\"));\n  });\n};\nconst removeAttrs = (t, n) => {\n  each(getDomTokensArray(n), n => t && t.removeAttribute(n));\n};\nconst domTokenListAttr = (t, n) => {\n  const o = getDomTokensArray(getAttr(t, n));\n  const s = bind(setAttrs, t, n);\n  const domTokenListOperation = (t, n) => {\n    const s = new Set(o);\n    each(getDomTokensArray(t), t => {\n      s[n](t);\n    });\n    return from(s).join(\" \");\n  };\n  return {\n    O: t => s(domTokenListOperation(t, \"delete\")),\n    $: t => s(domTokenListOperation(t, \"add\")),\n    C: t => {\n      const n = getDomTokensArray(t);\n      return n.reduce((t, n) => t && o.includes(n), n.length > 0);\n    }\n  };\n};\nconst removeAttrClass = (t, n, o) => {\n  domTokenListAttr(t, n).O(o);\n  return bind(addAttrClass, t, n, o);\n};\nconst addAttrClass = (t, n, o) => {\n  domTokenListAttr(t, n).$(o);\n  return bind(removeAttrClass, t, n, o);\n};\nconst addRemoveAttrClass = (t, n, o, s) => (s ? addAttrClass : removeAttrClass)(t, n, o);\nconst hasAttrClass = (t, n, o) => domTokenListAttr(t, n).C(o);\nconst createDomTokenListClass = t => domTokenListAttr(t, \"class\");\nconst removeClass = (t, n) => {\n  createDomTokenListClass(t).O(n);\n};\nconst addClass = (t, n) => {\n  createDomTokenListClass(t).$(n);\n  return bind(removeClass, t, n);\n};\nconst find = (t, n) => {\n  const o = n ? isElement(n) && n : document;\n  return o ? from(o.querySelectorAll(t)) : [];\n};\nconst findFirst = (t, n) => {\n  const o = n ? isElement(n) && n : document;\n  return o && o.querySelector(t);\n};\nconst is = (t, n) => isElement(t) && t.matches(n);\nconst isBodyElement = t => is(t, \"body\");\nconst contents = t => t ? from(t.childNodes) : [];\nconst parent = t => t && t.parentElement;\nconst closest = (t, n) => isElement(t) && t.closest(n);\nconst getFocusedElement = t => (t || document).activeElement;\nconst liesBetween = (t, n, o) => {\n  const s = closest(t, n);\n  const e = t && findFirst(o, s);\n  const c = closest(e, n) === s;\n  return s && e ? s === t || e === t || c && closest(closest(t, o), n) !== s : false;\n};\nconst removeElements = t => {\n  each(createOrKeepArray(t), t => {\n    const n = parent(t);\n    t && n && n.removeChild(t);\n  });\n};\nconst appendChildren = (t, n) => bind(removeElements, t && n && each(createOrKeepArray(n), n => {\n  n && t.appendChild(n);\n}));\nconst createDiv = t => {\n  const n = document.createElement(\"div\");\n  setAttrs(n, \"class\", t);\n  return n;\n};\nconst createDOM = t => {\n  const n = createDiv();\n  n.innerHTML = t.trim();\n  return each(contents(n), t => removeElements(t));\n};\nconst getCSSVal = (t, n) => t.getPropertyValue(n) || t[n] || \"\";\nconst validFiniteNumber = t => {\n  const n = t || 0;\n  return isFinite(n) ? n : 0;\n};\nconst parseToZeroOrNumber = t => validFiniteNumber(parseFloat(t || \"\"));\nconst roundCssNumber = t => Math.round(t * 1e4) / 1e4;\nconst numberToCssPx = t => `${roundCssNumber(validFiniteNumber(t))}px`;\nfunction setStyles(t, n) {\n  t && n && each(n, (n, o) => {\n    try {\n      const s = t.style;\n      const e = isNull(n) || isBoolean(n) ? \"\" : isNumber(n) ? numberToCssPx(n) : n;\n      if (o.indexOf(\"--\") === 0) {\n        s.setProperty(o, e);\n      } else {\n        s[o] = e;\n      }\n    } catch (s) {}\n  });\n}\nfunction getStyles(t, o, s) {\n  const e = isString(o);\n  let c = e ? \"\" : {};\n  if (t) {\n    const r = n.getComputedStyle(t, s) || t.style;\n    c = e ? getCSSVal(r, o) : from(o).reduce((t, n) => {\n      t[n] = getCSSVal(r, n);\n      return t;\n    }, c);\n  }\n  return c;\n}\nconst topRightBottomLeft = (t, n, o) => {\n  const s = n ? `${n}-` : \"\";\n  const e = o ? `-${o}` : \"\";\n  const c = `${s}top${e}`;\n  const r = `${s}right${e}`;\n  const l = `${s}bottom${e}`;\n  const i = `${s}left${e}`;\n  const a = getStyles(t, [c, r, l, i]);\n  return {\n    t: parseToZeroOrNumber(a[c]),\n    r: parseToZeroOrNumber(a[r]),\n    b: parseToZeroOrNumber(a[l]),\n    l: parseToZeroOrNumber(a[i])\n  };\n};\nconst getTrasformTranslateValue = (t, n) => `translate${isObject(t) ? `(${t.x},${t.y})` : `${n ? \"X\" : \"Y\"}(${t})`}`;\nconst elementHasDimensions = t => !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length);\nconst z = {\n  w: 0,\n  h: 0\n};\nconst getElmWidthHeightProperty = (t, n) => n ? {\n  w: n[`${t}Width`],\n  h: n[`${t}Height`]\n} : z;\nconst getWindowSize = t => getElmWidthHeightProperty(\"inner\", t || n);\nconst I = bind(getElmWidthHeightProperty, \"offset\");\nconst A = bind(getElmWidthHeightProperty, \"client\");\nconst D = bind(getElmWidthHeightProperty, \"scroll\");\nconst getFractionalSize = t => {\n  const n = parseFloat(getStyles(t, $)) || 0;\n  const o = parseFloat(getStyles(t, C)) || 0;\n  return {\n    w: n - e(n),\n    h: o - e(o)\n  };\n};\nconst getBoundingClientRect = t => t.getBoundingClientRect();\nconst hasDimensions = t => !!t && elementHasDimensions(t);\nconst domRectHasDimensions = t => !!(t && (t[C] || t[$]));\nconst domRectAppeared = (t, n) => {\n  const o = domRectHasDimensions(t);\n  const s = domRectHasDimensions(n);\n  return !s && o;\n};\nconst removeEventListener = (t, n, o, s) => {\n  each(getDomTokensArray(n), n => {\n    t && t.removeEventListener(n, o, s);\n  });\n};\nconst addEventListener = (t, n, o, s) => {\n  var e;\n  const c = (e = s && s.H) != null ? e : true;\n  const r = s && s.I || false;\n  const l = s && s.A || false;\n  const i = {\n    passive: c,\n    capture: r\n  };\n  return bind(runEachAndClear, getDomTokensArray(n).map(n => {\n    const s = l ? e => {\n      removeEventListener(t, n, s, r);\n      o && o(e);\n    } : o;\n    t && t.addEventListener(n, s, i);\n    return bind(removeEventListener, t, n, s, r);\n  }));\n};\nconst stopPropagation = t => t.stopPropagation();\nconst preventDefault = t => t.preventDefault();\nconst stopAndPrevent = t => stopPropagation(t) || preventDefault(t);\nconst scrollElementTo = (t, n) => {\n  const {\n    x: o,\n    y: s\n  } = isNumber(n) ? {\n    x: n,\n    y: n\n  } : n || {};\n  isNumber(o) && (t.scrollLeft = o);\n  isNumber(s) && (t.scrollTop = s);\n};\nconst getElementScroll = t => ({\n  x: t.scrollLeft,\n  y: t.scrollTop\n});\nconst getZeroScrollCoordinates = () => ({\n  D: {\n    x: 0,\n    y: 0\n  },\n  M: {\n    x: 0,\n    y: 0\n  }\n});\nconst sanitizeScrollCoordinates = (t, n) => {\n  const {\n    D: o,\n    M: s\n  } = t;\n  const {\n    w: e,\n    h: l\n  } = n;\n  const sanitizeAxis = (t, n, o) => {\n    let s = r(t) * o;\n    let e = r(n) * o;\n    if (s === e) {\n      const o = c(t);\n      const r = c(n);\n      e = o > r ? 0 : e;\n      s = o < r ? 0 : s;\n    }\n    s = s === e ? 0 : s;\n    return [s + 0, e + 0];\n  };\n  const [i, a] = sanitizeAxis(o.x, s.x, e);\n  const [u, _] = sanitizeAxis(o.y, s.y, l);\n  return {\n    D: {\n      x: i,\n      y: u\n    },\n    M: {\n      x: a,\n      y: _\n    }\n  };\n};\nconst isDefaultDirectionScrollCoordinates = ({\n  D: t,\n  M: n\n}) => {\n  const getAxis = (t, n) => t === 0 && t <= n;\n  return {\n    x: getAxis(t.x, n.x),\n    y: getAxis(t.y, n.y)\n  };\n};\nconst getScrollCoordinatesPercent = ({\n  D: t,\n  M: n\n}, o) => {\n  const getAxis = (t, n, o) => capNumber(0, 1, (t - o) / (t - n) || 0);\n  return {\n    x: getAxis(t.x, n.x, o.x),\n    y: getAxis(t.y, n.y, o.y)\n  };\n};\nconst focusElement = t => {\n  if (t && t.focus) {\n    t.focus({\n      preventScroll: true\n    });\n  }\n};\nconst manageListener = (t, n) => {\n  each(createOrKeepArray(n), t);\n};\nconst createEventListenerHub = t => {\n  const n = new Map();\n  const removeEvent = (t, o) => {\n    if (t) {\n      const s = n.get(t);\n      manageListener(t => {\n        if (s) {\n          s[t ? \"delete\" : \"clear\"](t);\n        }\n      }, o);\n    } else {\n      n.forEach(t => {\n        t.clear();\n      });\n      n.clear();\n    }\n  };\n  const addEvent = (t, o) => {\n    if (isString(t)) {\n      const s = n.get(t) || new Set();\n      n.set(t, s);\n      manageListener(t => {\n        isFunction(t) && s.add(t);\n      }, o);\n      return bind(removeEvent, t, o);\n    }\n    if (isBoolean(o) && o) {\n      removeEvent();\n    }\n    const s = keys(t);\n    const e = [];\n    each(s, n => {\n      const o = t[n];\n      o && push(e, addEvent(n, o));\n    });\n    return bind(runEachAndClear, e);\n  };\n  const triggerEvent = (t, o) => {\n    each(from(n.get(t)), t => {\n      if (o && !isEmptyArray(o)) {\n        t.apply(0, o);\n      } else {\n        t();\n      }\n    });\n  };\n  addEvent(t || {});\n  return [addEvent, removeEvent, triggerEvent];\n};\nconst opsStringify = t => JSON.stringify(t, (t, n) => {\n  if (isFunction(n)) {\n    throw 0;\n  }\n  return n;\n});\nconst getPropByPath = (t, n) => t ? `${n}`.split(\".\").reduce((t, n) => t && hasOwnProperty(t, n) ? t[n] : void 0, t) : void 0;\nconst M = {\n  paddingAbsolute: false,\n  showNativeOverlaidScrollbars: false,\n  update: {\n    elementEvents: [[\"img\", \"load\"]],\n    debounce: [0, 33],\n    attributes: null,\n    ignoreMutation: null\n  },\n  overflow: {\n    x: \"scroll\",\n    y: \"scroll\"\n  },\n  scrollbars: {\n    theme: \"os-theme-dark\",\n    visibility: \"auto\",\n    autoHide: \"never\",\n    autoHideDelay: 1300,\n    autoHideSuspend: false,\n    dragScroll: true,\n    clickScroll: false,\n    pointers: [\"mouse\", \"touch\", \"pen\"]\n  }\n};\nconst getOptionsDiff = (t, n) => {\n  const o = {};\n  const s = concat(keys(n), keys(t));\n  each(s, s => {\n    const e = t[s];\n    const c = n[s];\n    if (isObject(e) && isObject(c)) {\n      assignDeep(o[s] = {}, getOptionsDiff(e, c));\n      if (isEmptyObject(o[s])) {\n        delete o[s];\n      }\n    } else if (hasOwnProperty(n, s) && c !== e) {\n      let t = true;\n      if (isArray(e) || isArray(c)) {\n        try {\n          if (opsStringify(e) === opsStringify(c)) {\n            t = false;\n          }\n        } catch (r) {}\n      }\n      if (t) {\n        o[s] = c;\n      }\n    }\n  });\n  return o;\n};\nconst createOptionCheck = (t, n, o) => s => [getPropByPath(t, s), o || getPropByPath(n, s) !== void 0];\nconst T = `data-overlayscrollbars`;\nconst k = \"os-environment\";\nconst R = `${k}-scrollbar-hidden`;\nconst V = `${T}-initialize`;\nconst L = \"noClipping\";\nconst U = `${T}-body`;\nconst P = T;\nconst N = \"host\";\nconst q = `${T}-viewport`;\nconst B = m;\nconst F = O;\nconst j = \"arrange\";\nconst X = \"measuring\";\nconst Y = \"scrolling\";\nconst W = \"scrollbarHidden\";\nconst J = \"noContent\";\nconst G = `${T}-padding`;\nconst K = `${T}-content`;\nconst Q = \"os-size-observer\";\nconst Z = `${Q}-appear`;\nconst tt = `${Q}-listener`;\nconst nt = `${tt}-scroll`;\nconst ot = `${tt}-item`;\nconst st = `${ot}-final`;\nconst et = \"os-trinsic-observer\";\nconst ct = \"os-theme-none\";\nconst rt = \"os-scrollbar\";\nconst lt = `${rt}-rtl`;\nconst it = `${rt}-horizontal`;\nconst at = `${rt}-vertical`;\nconst ut = `${rt}-track`;\nconst _t = `${rt}-handle`;\nconst dt = `${rt}-visible`;\nconst ft = `${rt}-cornerless`;\nconst vt = `${rt}-interaction`;\nconst pt = `${rt}-unusable`;\nconst ht = `${rt}-auto-hide`;\nconst gt = `${ht}-hidden`;\nconst bt = `${rt}-wheel`;\nconst wt = `${ut}-interactive`;\nconst yt = `${_t}-interactive`;\nlet St;\nconst getNonce = () => St;\nconst setNonce = t => {\n  St = t;\n};\nlet mt;\nconst createEnvironment = () => {\n  const getNativeScrollbarSize = (t, n, o) => {\n    appendChildren(document.body, t);\n    appendChildren(document.body, t);\n    const s = A(t);\n    const e = I(t);\n    const c = getFractionalSize(n);\n    o && removeElements(t);\n    return {\n      x: e.h - s.h + c.h,\n      y: e.w - s.w + c.w\n    };\n  };\n  const getNativeScrollbarsHiding = t => {\n    let n = false;\n    const o = addClass(t, R);\n    try {\n      n = getStyles(t, \"scrollbar-width\") === \"none\" || getStyles(t, \"display\", \"::-webkit-scrollbar\") === \"none\";\n    } catch (s) {}\n    o();\n    return n;\n  };\n  const t = `.${k}{scroll-behavior:auto!important;position:fixed;opacity:0;visibility:hidden;overflow:scroll;height:200px;width:200px;z-index:-1}.${k} div{width:200%;height:200%;margin:10px 0}.${R}{scrollbar-width:none!important}.${R}::-webkit-scrollbar,.${R}::-webkit-scrollbar-corner{appearance:none!important;display:none!important;width:0!important;height:0!important}`;\n  const o = createDOM(`<div class=\"${k}\"><div></div><style>${t}</style></div>`);\n  const s = o[0];\n  const e = s.firstChild;\n  const c = s.lastChild;\n  const r = getNonce();\n  if (r) {\n    c.nonce = r;\n  }\n  const [l,, i] = createEventListenerHub();\n  const [a, u] = createCache({\n    o: getNativeScrollbarSize(s, e),\n    i: equalXY\n  }, bind(getNativeScrollbarSize, s, e, true));\n  const [_] = u();\n  const d = getNativeScrollbarsHiding(s);\n  const f = {\n    x: _.x === 0,\n    y: _.y === 0\n  };\n  const p = {\n    elements: {\n      host: null,\n      padding: !d,\n      viewport: t => d && isBodyElement(t) && t,\n      content: false\n    },\n    scrollbars: {\n      slot: true\n    },\n    cancel: {\n      nativeScrollbarsOverlaid: false,\n      body: null\n    }\n  };\n  const h = assignDeep({}, M);\n  const g = bind(assignDeep, {}, h);\n  const b = bind(assignDeep, {}, p);\n  const w = {\n    T: _,\n    k: f,\n    R: d,\n    V: !!v,\n    L: bind(l, \"r\"),\n    U: b,\n    P: t => assignDeep(p, t) && b(),\n    N: g,\n    q: t => assignDeep(h, t) && g(),\n    B: assignDeep({}, p),\n    F: assignDeep({}, h)\n  };\n  removeAttrs(s, \"style\");\n  removeElements(s);\n  addEventListener(n, \"resize\", () => {\n    i(\"r\", []);\n  });\n  if (isFunction(n.matchMedia) && !d && (!f.x || !f.y)) {\n    const addZoomListener = t => {\n      const o = n.matchMedia(`(resolution: ${n.devicePixelRatio}dppx)`);\n      addEventListener(o, \"change\", () => {\n        t();\n        addZoomListener(t);\n      }, {\n        A: true\n      });\n    };\n    addZoomListener(() => {\n      const [t, n] = a();\n      assignDeep(w.T, t);\n      i(\"r\", [n]);\n    });\n  }\n  return w;\n};\nconst getEnvironment = () => {\n  if (!mt) {\n    mt = createEnvironment();\n  }\n  return mt;\n};\nconst resolveInitialization = (t, n) => isFunction(n) ? n.apply(0, t) : n;\nconst staticInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return c || n.apply(0, t);\n};\nconst dynamicInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return !!c && (isHTMLElement(c) ? c : n.apply(0, t));\n};\nconst cancelInitialization = (t, n) => {\n  const {\n    nativeScrollbarsOverlaid: o,\n    body: s\n  } = n || {};\n  const {\n    k: e,\n    R: c,\n    U: r\n  } = getEnvironment();\n  const {\n    nativeScrollbarsOverlaid: l,\n    body: i\n  } = r().cancel;\n  const a = o != null ? o : l;\n  const u = isUndefined(s) ? i : s;\n  const _ = (e.x || e.y) && a;\n  const d = t && (isNull(u) ? !c : u);\n  return !!_ || !!d;\n};\nconst Ot = new WeakMap();\nconst addInstance = (t, n) => {\n  Ot.set(t, n);\n};\nconst removeInstance = t => {\n  Ot.delete(t);\n};\nconst getInstance = t => Ot.get(t);\nconst createEventContentChange = (t, n, o) => {\n  let s = false;\n  const e = o ? new WeakMap() : false;\n  const destroy = () => {\n    s = true;\n  };\n  const updateElements = c => {\n    if (e && o) {\n      const r = o.map(n => {\n        const [o, s] = n || [];\n        const e = s && o ? (c || find)(o, t) : [];\n        return [e, s];\n      });\n      each(r, o => each(o[0], c => {\n        const r = o[1];\n        const l = e.get(c) || [];\n        const i = t.contains(c);\n        if (i && r) {\n          const t = addEventListener(c, r, o => {\n            if (s) {\n              t();\n              e.delete(c);\n            } else {\n              n(o);\n            }\n          });\n          e.set(c, push(l, t));\n        } else {\n          runEachAndClear(l);\n          e.delete(c);\n        }\n      }));\n    }\n  };\n  updateElements();\n  return [destroy, updateElements];\n};\nconst createDOMObserver = (t, n, o, s) => {\n  let e = false;\n  const {\n    j: c,\n    X: r,\n    Y: l,\n    W: i,\n    J: a,\n    G: u\n  } = s || {};\n  const d = debounce(() => e && o(true), {\n    _: 33,\n    v: 99\n  });\n  const [f, v] = createEventContentChange(t, d, l);\n  const p = c || [];\n  const h = r || [];\n  const g = concat(p, h);\n  const observerCallback = (e, c) => {\n    if (!isEmptyArray(c)) {\n      const r = a || noop;\n      const l = u || noop;\n      const _ = [];\n      const d = [];\n      let f = false;\n      let p = false;\n      each(c, o => {\n        const {\n          attributeName: e,\n          target: c,\n          type: a,\n          oldValue: u,\n          addedNodes: v,\n          removedNodes: g\n        } = o;\n        const b = a === \"attributes\";\n        const w = a === \"childList\";\n        const y = t === c;\n        const S = b && e;\n        const m = S && getAttr(c, e || \"\");\n        const O = isString(m) ? m : null;\n        const $ = S && u !== O;\n        const C = inArray(h, e) && $;\n        if (n && (w || !y)) {\n          const n = b && $;\n          const a = n && i && is(c, i);\n          const d = a ? !r(c, e, u, O) : !b || n;\n          const f = d && !l(o, !!a, t, s);\n          each(v, t => push(_, t));\n          each(g, t => push(_, t));\n          p = p || f;\n        }\n        if (!n && y && $ && !r(c, e, u, O)) {\n          push(d, e);\n          f = f || C;\n        }\n      });\n      v(t => deduplicateArray(_).reduce((n, o) => {\n        push(n, find(t, o));\n        return is(o, t) ? push(n, o) : n;\n      }, []));\n      if (n) {\n        !e && p && o(false);\n        return [false];\n      }\n      if (!isEmptyArray(d) || f) {\n        const t = [deduplicateArray(d), f];\n        !e && o.apply(0, t);\n        return t;\n      }\n    }\n  };\n  const b = new _(bind(observerCallback, false));\n  return [() => {\n    b.observe(t, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: g,\n      subtree: n,\n      childList: n,\n      characterData: n\n    });\n    e = true;\n    return () => {\n      if (e) {\n        f();\n        b.disconnect();\n        e = false;\n      }\n    };\n  }, () => {\n    if (e) {\n      d.m();\n      return observerCallback(true, b.takeRecords());\n    }\n  }];\n};\nconst $t = {};\nconst Ct = {};\nconst addPlugins = t => {\n  each(t, t => each(t, (n, o) => {\n    $t[o] = t[o];\n  }));\n};\nconst registerPluginModuleInstances = (t, n, o) => keys(t).map(s => {\n  const {\n    static: e,\n    instance: c\n  } = t[s];\n  const [r, l, i] = o || [];\n  const a = o ? c : e;\n  if (a) {\n    const t = o ? a(r, l, n) : a(n);\n    return (i || Ct)[s] = t;\n  }\n});\nconst getStaticPluginModuleInstance = t => Ct[t];\nconst xt = \"__osOptionsValidationPlugin\";\nconst Ht = \"__osSizeObserverPlugin\";\nconst Et = /* @__PURE__ */(() => ({\n  [Ht]: {\n    static: () => (t, n, o) => {\n      const s = 3333333;\n      const e = \"scroll\";\n      const c = createDOM(`<div class=\"${ot}\" dir=\"ltr\"><div class=\"${ot}\"><div class=\"${st}\"></div></div><div class=\"${ot}\"><div class=\"${st}\" style=\"width: 200%; height: 200%\"></div></div></div>`);\n      const r = c[0];\n      const a = r.lastChild;\n      const u = r.firstChild;\n      const _ = u == null ? void 0 : u.firstChild;\n      let d = I(r);\n      let f = d;\n      let v = false;\n      let p;\n      const reset = () => {\n        scrollElementTo(u, s);\n        scrollElementTo(a, s);\n      };\n      const onResized = t => {\n        p = 0;\n        if (v) {\n          d = f;\n          n(t === true);\n        }\n      };\n      const onScroll = t => {\n        f = I(r);\n        v = !t || !equalWH(f, d);\n        if (t) {\n          stopPropagation(t);\n          if (v && !p) {\n            l(p);\n            p = i(onResized);\n          }\n        } else {\n          onResized(t === false);\n        }\n        reset();\n      };\n      const h = [appendChildren(t, c), addEventListener(u, e, onScroll), addEventListener(a, e, onScroll)];\n      addClass(t, nt);\n      setStyles(_, {\n        [$]: s,\n        [C]: s\n      });\n      i(reset);\n      return [o ? bind(onScroll, false) : reset, h];\n    }\n  }\n}))();\nconst getShowNativeOverlaidScrollbars = (t, n) => {\n  const {\n    k: o\n  } = n;\n  const [s, e] = t(\"showNativeOverlaidScrollbars\");\n  return [s && o.x && o.y, e];\n};\nconst overflowIsVisible = t => t.indexOf(x) === 0;\nconst createViewportOverflowState = (t, n) => {\n  const getAxisOverflowStyle = (t, n, o, s) => {\n    const e = t === x ? H : t.replace(`${x}-`, \"\");\n    const c = overflowIsVisible(t);\n    const r = overflowIsVisible(o);\n    if (!n && !s) {\n      return H;\n    }\n    if (c && r) {\n      return x;\n    }\n    if (c) {\n      const t = n ? x : H;\n      return n && s ? e : t;\n    }\n    const l = r && s ? x : H;\n    return n ? e : l;\n  };\n  const o = {\n    x: getAxisOverflowStyle(n.x, t.x, n.y, t.y),\n    y: getAxisOverflowStyle(n.y, t.y, n.x, t.x)\n  };\n  return {\n    K: o,\n    Z: {\n      x: o.x === E,\n      y: o.y === E\n    }\n  };\n};\nconst zt = \"__osScrollbarsHidingPlugin\";\nconst It = /* @__PURE__ */(() => ({\n  [zt]: {\n    static: () => ({\n      tt: (t, n, o, s, e) => {\n        const {\n          nt: c,\n          ot: r\n        } = t;\n        const {\n          R: l,\n          k: i,\n          T: a\n        } = s;\n        const u = !c && !l && (i.x || i.y);\n        const [_] = getShowNativeOverlaidScrollbars(e, s);\n        const readViewportOverflowState = () => {\n          const getStatePerAxis = t => {\n            const n = getStyles(r, t);\n            const o = n === E;\n            return [n, o];\n          };\n          const [t, n] = getStatePerAxis(m);\n          const [o, s] = getStatePerAxis(O);\n          return {\n            K: {\n              x: t,\n              y: o\n            },\n            Z: {\n              x: n,\n              y: s\n            }\n          };\n        };\n        const _getViewportOverflowHideOffset = t => {\n          const {\n            Z: n\n          } = t;\n          const o = l || _ ? 0 : 42;\n          const getHideOffsetPerAxis = (t, n, s) => {\n            const e = t ? o : s;\n            const c = n && !l ? e : 0;\n            const r = t && !!o;\n            return [c, r];\n          };\n          const [s, e] = getHideOffsetPerAxis(i.x, n.x, a.x);\n          const [c, r] = getHideOffsetPerAxis(i.y, n.y, a.y);\n          return {\n            st: {\n              x: s,\n              y: c\n            },\n            et: {\n              x: e,\n              y: r\n            }\n          };\n        };\n        const _hideNativeScrollbars = (t, {\n          ct: o\n        }, s) => {\n          if (!c) {\n            const e = assignDeep({}, {\n              [y]: 0,\n              [S]: 0,\n              [w]: 0\n            });\n            const {\n              st: c,\n              et: r\n            } = _getViewportOverflowHideOffset(t);\n            const {\n              x: l,\n              y: i\n            } = r;\n            const {\n              x: a,\n              y: u\n            } = c;\n            const {\n              rt: _\n            } = n;\n            const d = o ? w : y;\n            const f = o ? g : h;\n            const v = _[d];\n            const p = _[S];\n            const m = _[f];\n            const O = _[b];\n            e[$] = `calc(100% + ${u + v * -1}px)`;\n            e[d] = -u + v;\n            e[S] = -a + p;\n            if (s) {\n              e[f] = m + (i ? u : 0);\n              e[b] = O + (l ? a : 0);\n            }\n            return e;\n          }\n        };\n        const _arrangeViewport = (t, s, e) => {\n          if (u) {\n            const {\n              rt: c\n            } = n;\n            const {\n              st: l,\n              et: i\n            } = _getViewportOverflowHideOffset(t);\n            const {\n              x: a,\n              y: u\n            } = i;\n            const {\n              x: _,\n              y: d\n            } = l;\n            const {\n              ct: f\n            } = o;\n            const v = f ? h : g;\n            const p = c[v];\n            const b = c.paddingTop;\n            const w = s.w + e.w;\n            const y = s.h + e.h;\n            const S = {\n              w: d && u ? `${d + w - p}px` : \"\",\n              h: _ && a ? `${_ + y - b}px` : \"\"\n            };\n            setStyles(r, {\n              \"--os-vaw\": S.w,\n              \"--os-vah\": S.h\n            });\n          }\n          return u;\n        };\n        const _undoViewportArrange = t => {\n          if (u) {\n            const s = t || readViewportOverflowState();\n            const {\n              rt: e\n            } = n;\n            const {\n              et: c\n            } = _getViewportOverflowHideOffset(s);\n            const {\n              x: l,\n              y: i\n            } = c;\n            const a = {};\n            const assignProps = t => each(t, t => {\n              a[t] = e[t];\n            });\n            if (l) {\n              assignProps([S, p, b]);\n            }\n            if (i) {\n              assignProps([w, y, g, h]);\n            }\n            const _ = getStyles(r, keys(a));\n            const d = removeAttrClass(r, q, j);\n            setStyles(r, a);\n            return [() => {\n              setStyles(r, assignDeep({}, _, _hideNativeScrollbars(s, o, u)));\n              d();\n            }, s];\n          }\n          return [noop];\n        };\n        return {\n          lt: _getViewportOverflowHideOffset,\n          it: _arrangeViewport,\n          ut: _undoViewportArrange,\n          _t: _hideNativeScrollbars\n        };\n      }\n    })\n  }\n}))();\nconst At = \"__osClickScrollPlugin\";\nconst Dt = /* @__PURE__ */(() => ({\n  [At]: {\n    static: () => (t, n, o, s) => {\n      let e = false;\n      let c = noop;\n      const r = 133;\n      const l = 222;\n      const [i, a] = selfClearTimeout(r);\n      const u = Math.sign(n);\n      const _ = o * u;\n      const d = _ / 2;\n      const easing = t => 1 - (1 - t) * (1 - t);\n      const easedEndPressAnimation = (n, o) => animateNumber(n, o, l, t, easing);\n      const linearPressAnimation = (o, s) => animateNumber(o, n - _, r * s, (o, s, e) => {\n        t(o);\n        if (e) {\n          c = easedEndPressAnimation(o, n);\n        }\n      });\n      const f = animateNumber(0, _, l, (r, l, a) => {\n        t(r);\n        if (a) {\n          s(e);\n          if (!e) {\n            const t = n - r;\n            const s = Math.sign(t - d) === u;\n            s && i(() => {\n              const s = t - _;\n              const e = Math.sign(s) === u;\n              c = e ? linearPressAnimation(r, Math.abs(s) / o) : easedEndPressAnimation(r, n);\n            });\n          }\n        }\n      }, easing);\n      return t => {\n        e = true;\n        if (t) {\n          f();\n        }\n        a();\n        c();\n      };\n    }\n  }\n}))();\nconst createSizeObserver = (t, n, o) => {\n  const {\n    dt: s\n  } = o || {};\n  const e = getStaticPluginModuleInstance(Ht);\n  const [c] = createCache({\n    o: false,\n    u: true\n  });\n  return () => {\n    const o = [];\n    const r = createDOM(`<div class=\"${Q}\"><div class=\"${tt}\"></div></div>`);\n    const l = r[0];\n    const i = l.firstChild;\n    const onSizeChangedCallbackProxy = t => {\n      const o = t instanceof ResizeObserverEntry;\n      let s = false;\n      let e = false;\n      if (o) {\n        const [n,, o] = c(t.contentRect);\n        const r = domRectHasDimensions(n);\n        e = domRectAppeared(n, o);\n        s = !e && !r;\n      } else {\n        e = t === true;\n      }\n      if (!s) {\n        n({\n          ft: true,\n          dt: e\n        });\n      }\n    };\n    if (f) {\n      const t = new f(t => onSizeChangedCallbackProxy(t.pop()));\n      t.observe(i);\n      push(o, () => {\n        t.disconnect();\n      });\n    } else if (e) {\n      const [t, n] = e(i, onSizeChangedCallbackProxy, s);\n      push(o, concat([addClass(l, Z), addEventListener(l, \"animationstart\", t)], n));\n    } else {\n      return noop;\n    }\n    return bind(runEachAndClear, push(o, appendChildren(t, l)));\n  };\n};\nconst createTrinsicObserver = (t, n) => {\n  let o;\n  const isHeightIntrinsic = t => t.h === 0 || t.isIntersecting || t.intersectionRatio > 0;\n  const s = createDiv(et);\n  const [e] = createCache({\n    o: false\n  });\n  const triggerOnTrinsicChangedCallback = (t, o) => {\n    if (t) {\n      const s = e(isHeightIntrinsic(t));\n      const [, c] = s;\n      return c && !o && n(s) && [s];\n    }\n  };\n  const intersectionObserverCallback = (t, n) => triggerOnTrinsicChangedCallback(n.pop(), t);\n  return [() => {\n    const n = [];\n    if (d) {\n      o = new d(bind(intersectionObserverCallback, false), {\n        root: t\n      });\n      o.observe(s);\n      push(n, () => {\n        o.disconnect();\n      });\n    } else {\n      const onSizeChanged = () => {\n        const t = I(s);\n        triggerOnTrinsicChangedCallback(t);\n      };\n      push(n, createSizeObserver(s, onSizeChanged)());\n      onSizeChanged();\n    }\n    return bind(runEachAndClear, push(n, appendChildren(t, s)));\n  }, () => o && intersectionObserverCallback(true, o.takeRecords())];\n};\nconst createObserversSetup = (t, n, o, s) => {\n  let e;\n  let c;\n  let r;\n  let l;\n  let i;\n  let a;\n  const u = `[${P}]`;\n  const _ = `[${q}]`;\n  const d = [\"id\", \"class\", \"style\", \"open\", \"wrap\", \"cols\", \"rows\"];\n  const {\n    vt: v,\n    ht: p,\n    ot: h,\n    gt: g,\n    bt: b,\n    nt: w,\n    wt: y,\n    yt: S,\n    St: m,\n    Ot: O\n  } = t;\n  const getDirectionIsRTL = t => getStyles(t, \"direction\") === \"rtl\";\n  const $ = {\n    $t: false,\n    ct: getDirectionIsRTL(v)\n  };\n  const C = getEnvironment();\n  const x = getStaticPluginModuleInstance(zt);\n  const [H] = createCache({\n    i: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  }, () => {\n    const s = x && x.tt(t, n, $, C, o).ut;\n    const e = y && w;\n    const c = !e && hasAttrClass(p, P, L);\n    const r = !w && S(j);\n    const l = r && getElementScroll(g);\n    const i = l && O();\n    const a = m(X, c);\n    const u = r && s && s()[0];\n    const _ = D(h);\n    const d = getFractionalSize(h);\n    u && u();\n    scrollElementTo(g, l);\n    i && i();\n    c && a();\n    return {\n      w: _.w + d.w,\n      h: _.h + d.h\n    };\n  });\n  const E = debounce(s, {\n    _: () => e,\n    v: () => c,\n    S(t, n) {\n      const [o] = t;\n      const [s] = n;\n      return [concat(keys(o), keys(s)).reduce((t, n) => {\n        t[n] = o[n] || s[n];\n        return t;\n      }, {})];\n    }\n  });\n  const setDirection = t => {\n    const n = getDirectionIsRTL(v);\n    assignDeep(t, {\n      Ct: a !== n\n    });\n    assignDeep($, {\n      ct: n\n    });\n    a = n;\n  };\n  const onTrinsicChanged = (t, n) => {\n    const [o, e] = t;\n    const c = {\n      xt: e\n    };\n    assignDeep($, {\n      $t: o\n    });\n    !n && s(c);\n    return c;\n  };\n  const onSizeChanged = ({\n    ft: t,\n    dt: n\n  }) => {\n    const o = t && !n;\n    const e = !o && C.R ? E : s;\n    const c = {\n      ft: t || n,\n      dt: n\n    };\n    setDirection(c);\n    e(c);\n  };\n  const onContentMutation = (t, n) => {\n    const [, o] = H();\n    const e = {\n      Ht: o\n    };\n    setDirection(e);\n    const c = t ? s : E;\n    o && !n && c(e);\n    return e;\n  };\n  const onHostMutation = (t, n, o) => {\n    const s = {\n      Et: n\n    };\n    setDirection(s);\n    if (n && !o) {\n      E(s);\n    }\n    return s;\n  };\n  const [z, I] = b ? createTrinsicObserver(p, onTrinsicChanged) : [];\n  const A = !w && createSizeObserver(p, onSizeChanged, {\n    dt: true\n  });\n  const [M, T] = createDOMObserver(p, false, onHostMutation, {\n    X: d,\n    j: d\n  });\n  const k = w && f && new f(t => {\n    const n = t[t.length - 1].contentRect;\n    onSizeChanged({\n      ft: true,\n      dt: domRectAppeared(n, i)\n    });\n    i = n;\n  });\n  const R = debounce(() => {\n    const [, t] = H();\n    s({\n      Ht: t\n    });\n  }, {\n    _: 222,\n    p: true\n  });\n  return [() => {\n    k && k.observe(p);\n    const t = A && A();\n    const n = z && z();\n    const o = M();\n    const s = C.L(t => {\n      if (t) {\n        E({\n          zt: t\n        });\n      } else {\n        R();\n      }\n    });\n    return () => {\n      k && k.disconnect();\n      t && t();\n      n && n();\n      l && l();\n      o();\n      s();\n    };\n  }, ({\n    It: t,\n    At: n,\n    Dt: o\n  }) => {\n    const s = {};\n    const [i] = t(\"update.ignoreMutation\");\n    const [a, f] = t(\"update.attributes\");\n    const [v, p] = t(\"update.elementEvents\");\n    const [g, y] = t(\"update.debounce\");\n    const S = p || f;\n    const m = n || o;\n    const ignoreMutationFromOptions = t => isFunction(i) && i(t);\n    if (S) {\n      r && r();\n      l && l();\n      const [t, n] = createDOMObserver(b || h, true, onContentMutation, {\n        j: concat(d, a || []),\n        Y: v,\n        W: u,\n        G: (t, n) => {\n          const {\n            target: o,\n            attributeName: s\n          } = t;\n          const e = !n && s && !w ? liesBetween(o, u, _) : false;\n          return e || !!closest(o, `.${rt}`) || !!ignoreMutationFromOptions(t);\n        }\n      });\n      l = t();\n      r = n;\n    }\n    if (y) {\n      E.m();\n      if (isArray(g)) {\n        const t = g[0];\n        const n = g[1];\n        e = isNumber(t) && t;\n        c = isNumber(n) && n;\n      } else if (isNumber(g)) {\n        e = g;\n        c = false;\n      } else {\n        e = false;\n        c = false;\n      }\n    }\n    if (m) {\n      const t = T();\n      const n = I && I();\n      const o = r && r();\n      t && assignDeep(s, onHostMutation(t[0], t[1], m));\n      n && assignDeep(s, onTrinsicChanged(n[0], m));\n      o && assignDeep(s, onContentMutation(o[0], m));\n    }\n    setDirection(s);\n    return s;\n  }, $];\n};\nconst createScrollbarsSetupElements = (t, n, o, s) => {\n  const e = \"--os-viewport-percent\";\n  const c = \"--os-scroll-percent\";\n  const r = \"--os-scroll-direction\";\n  const {\n    U: l\n  } = getEnvironment();\n  const {\n    scrollbars: i\n  } = l();\n  const {\n    slot: a\n  } = i;\n  const {\n    vt: u,\n    ht: _,\n    ot: d,\n    Mt: f,\n    gt: p,\n    wt: h,\n    nt: g\n  } = n;\n  const {\n    scrollbars: b\n  } = f ? {} : t;\n  const {\n    slot: w\n  } = b || {};\n  const y = [];\n  const S = [];\n  const m = [];\n  const O = dynamicInitializationElement([u, _, d], () => g && h ? u : _, a, w);\n  const initScrollTimeline = t => {\n    if (v) {\n      const n = new v({\n        source: p,\n        axis: t\n      });\n      const _addScrollPercentAnimation = t => {\n        const o = t.Tt.animate({\n          clear: [\"left\"],\n          [c]: [0, 1]\n        }, {\n          timeline: n\n        });\n        return () => o.cancel();\n      };\n      return {\n        kt: _addScrollPercentAnimation\n      };\n    }\n  };\n  const $ = {\n    x: initScrollTimeline(\"x\"),\n    y: initScrollTimeline(\"y\")\n  };\n  const getViewportPercent = () => {\n    const {\n      Rt: t,\n      Vt: n\n    } = o;\n    const getAxisValue = (t, n) => capNumber(0, 1, t / (t + n) || 0);\n    return {\n      x: getAxisValue(n.x, t.x),\n      y: getAxisValue(n.y, t.y)\n    };\n  };\n  const scrollbarStructureAddRemoveClass = (t, n, o) => {\n    const s = o ? addClass : removeClass;\n    each(t, t => {\n      s(t.Tt, n);\n    });\n  };\n  const scrollbarStyle = (t, n) => {\n    each(t, t => {\n      const [o, s] = n(t);\n      setStyles(o, s);\n    });\n  };\n  const scrollbarsAddRemoveClass = (t, n, o) => {\n    const s = isBoolean(o);\n    const e = s ? o : true;\n    const c = s ? !o : true;\n    e && scrollbarStructureAddRemoveClass(S, t, n);\n    c && scrollbarStructureAddRemoveClass(m, t, n);\n  };\n  const refreshScrollbarsHandleLength = () => {\n    const t = getViewportPercent();\n    const createScrollbarStyleFn = t => n => [n.Tt, {\n      [e]: roundCssNumber(t) + \"\"\n    }];\n    scrollbarStyle(S, createScrollbarStyleFn(t.x));\n    scrollbarStyle(m, createScrollbarStyleFn(t.y));\n  };\n  const refreshScrollbarsHandleOffset = () => {\n    if (!v) {\n      const {\n        Lt: t\n      } = o;\n      const n = getScrollCoordinatesPercent(t, getElementScroll(p));\n      const createScrollbarStyleFn = t => n => [n.Tt, {\n        [c]: roundCssNumber(t) + \"\"\n      }];\n      scrollbarStyle(S, createScrollbarStyleFn(n.x));\n      scrollbarStyle(m, createScrollbarStyleFn(n.y));\n    }\n  };\n  const refreshScrollbarsScrollCoordinates = () => {\n    const {\n      Lt: t\n    } = o;\n    const n = isDefaultDirectionScrollCoordinates(t);\n    const createScrollbarStyleFn = t => n => [n.Tt, {\n      [r]: t ? \"0\" : \"1\"\n    }];\n    scrollbarStyle(S, createScrollbarStyleFn(n.x));\n    scrollbarStyle(m, createScrollbarStyleFn(n.y));\n  };\n  const refreshScrollbarsScrollbarOffset = () => {\n    if (g && !h) {\n      const {\n        Rt: t,\n        Lt: n\n      } = o;\n      const s = isDefaultDirectionScrollCoordinates(n);\n      const e = getScrollCoordinatesPercent(n, getElementScroll(p));\n      const styleScrollbarPosition = n => {\n        const {\n          Tt: o\n        } = n;\n        const c = parent(o) === d && o;\n        const getTranslateValue = (t, n, o) => {\n          const s = n * t;\n          return numberToCssPx(o ? s : -s);\n        };\n        return [c, c && {\n          transform: getTrasformTranslateValue({\n            x: getTranslateValue(e.x, t.x, s.x),\n            y: getTranslateValue(e.y, t.y, s.y)\n          })\n        }];\n      };\n      scrollbarStyle(S, styleScrollbarPosition);\n      scrollbarStyle(m, styleScrollbarPosition);\n    }\n  };\n  const generateScrollbarDOM = t => {\n    const n = t ? \"x\" : \"y\";\n    const o = t ? it : at;\n    const e = createDiv(`${rt} ${o}`);\n    const c = createDiv(ut);\n    const r = createDiv(_t);\n    const l = {\n      Tt: e,\n      Ut: c,\n      Pt: r\n    };\n    const i = $[n];\n    push(t ? S : m, l);\n    push(y, [appendChildren(e, c), appendChildren(c, r), bind(removeElements, e), i && i.kt(l), s(l, scrollbarsAddRemoveClass, t)]);\n    return l;\n  };\n  const C = bind(generateScrollbarDOM, true);\n  const x = bind(generateScrollbarDOM, false);\n  const appendElements = () => {\n    appendChildren(O, S[0].Tt);\n    appendChildren(O, m[0].Tt);\n    return bind(runEachAndClear, y);\n  };\n  C();\n  x();\n  return [{\n    Nt: refreshScrollbarsHandleLength,\n    qt: refreshScrollbarsHandleOffset,\n    Bt: refreshScrollbarsScrollCoordinates,\n    Ft: refreshScrollbarsScrollbarOffset,\n    jt: scrollbarsAddRemoveClass,\n    Xt: {\n      Yt: S,\n      Wt: C,\n      Jt: bind(scrollbarStyle, S)\n    },\n    Gt: {\n      Yt: m,\n      Wt: x,\n      Jt: bind(scrollbarStyle, m)\n    }\n  }, appendElements];\n};\nconst createScrollbarsSetupEvents = (t, n, o, s) => (r, l, i) => {\n  const {\n    ht: u,\n    ot: _,\n    nt: d,\n    gt: f,\n    Kt: v,\n    Ot: p\n  } = n;\n  const {\n    Tt: h,\n    Ut: g,\n    Pt: b\n  } = r;\n  const [w, y] = selfClearTimeout(333);\n  const [S, m] = selfClearTimeout(444);\n  const scrollOffsetElementScrollBy = t => {\n    isFunction(f.scrollBy) && f.scrollBy({\n      behavior: \"smooth\",\n      left: t.x,\n      top: t.y\n    });\n  };\n  const createInteractiveScrollEvents = () => {\n    const n = \"pointerup pointercancel lostpointercapture\";\n    const s = `client${i ? \"X\" : \"Y\"}`;\n    const r = i ? $ : C;\n    const l = i ? \"left\" : \"top\";\n    const a = i ? \"w\" : \"h\";\n    const u = i ? \"x\" : \"y\";\n    const createRelativeHandleMove = (t, n) => s => {\n      const {\n        Rt: e\n      } = o;\n      const c = I(g)[a] - I(b)[a];\n      const r = n * s / c;\n      const l = r * e[u];\n      scrollElementTo(f, {\n        [u]: t + l\n      });\n    };\n    const _ = [];\n    return addEventListener(g, \"pointerdown\", o => {\n      const i = closest(o.target, `.${_t}`) === b;\n      const d = i ? b : g;\n      const h = t.scrollbars;\n      const w = h[i ? \"dragScroll\" : \"clickScroll\"];\n      const {\n        button: y,\n        isPrimary: O,\n        pointerType: $\n      } = o;\n      const {\n        pointers: C\n      } = h;\n      const x = y === 0 && O && w && (C || []).includes($);\n      if (x) {\n        runEachAndClear(_);\n        m();\n        const t = !i && (o.shiftKey || w === \"instant\");\n        const h = bind(getBoundingClientRect, b);\n        const y = bind(getBoundingClientRect, g);\n        const getHandleOffset = (t, n) => (t || h())[l] - (n || y())[l];\n        const O = e(getBoundingClientRect(f)[r]) / I(f)[a] || 1;\n        const $ = createRelativeHandleMove(getElementScroll(f)[u], 1 / O);\n        const C = o[s];\n        const x = h();\n        const H = y();\n        const E = x[r];\n        const z = getHandleOffset(x, H) + E / 2;\n        const A = C - H[l];\n        const D = i ? 0 : A - z;\n        const releasePointerCapture = t => {\n          runEachAndClear(k);\n          d.releasePointerCapture(t.pointerId);\n        };\n        const M = i || t;\n        const T = p();\n        const k = [addEventListener(v, n, releasePointerCapture), addEventListener(v, \"selectstart\", t => preventDefault(t), {\n          H: false\n        }), addEventListener(g, n, releasePointerCapture), M && addEventListener(g, \"pointermove\", t => $(D + (t[s] - C))), M && (() => {\n          const t = getElementScroll(f);\n          T();\n          const n = getElementScroll(f);\n          const o = {\n            x: n.x - t.x,\n            y: n.y - t.y\n          };\n          if (c(o.x) > 3 || c(o.y) > 3) {\n            p();\n            scrollElementTo(f, t);\n            scrollOffsetElementScrollBy(o);\n            S(T);\n          }\n        })];\n        d.setPointerCapture(o.pointerId);\n        if (t) {\n          $(D);\n        } else if (!i) {\n          const t = getStaticPluginModuleInstance(At);\n          if (t) {\n            const n = t($, D, E, t => {\n              if (t) {\n                T();\n              } else {\n                push(k, T);\n              }\n            });\n            push(k, n);\n            push(_, bind(n, true));\n          }\n        }\n      }\n    });\n  };\n  let O = true;\n  return bind(runEachAndClear, [addEventListener(b, \"pointermove pointerleave\", s), addEventListener(h, \"pointerenter\", () => {\n    l(vt, true);\n  }), addEventListener(h, \"pointerleave pointercancel\", () => {\n    l(vt, false);\n  }), !d && addEventListener(h, \"mousedown\", () => {\n    const t = getFocusedElement();\n    if (hasAttr(t, q) || hasAttr(t, P) || t === document.body) {\n      a(bind(focusElement, _), 25);\n    }\n  }), addEventListener(h, \"wheel\", t => {\n    const {\n      deltaX: n,\n      deltaY: o,\n      deltaMode: s\n    } = t;\n    if (O && s === 0 && parent(h) === u) {\n      scrollOffsetElementScrollBy({\n        x: n,\n        y: o\n      });\n    }\n    O = false;\n    l(bt, true);\n    w(() => {\n      O = true;\n      l(bt);\n    });\n    preventDefault(t);\n  }, {\n    H: false,\n    I: true\n  }), addEventListener(h, \"pointerdown\", bind(addEventListener, v, \"click\", stopAndPrevent, {\n    A: true,\n    I: true,\n    H: false\n  }), {\n    I: true\n  }), createInteractiveScrollEvents(), y, m]);\n};\nconst createScrollbarsSetup = (t, n, o, s, e, c) => {\n  let r;\n  let l;\n  let i;\n  let a;\n  let u;\n  let _ = noop;\n  let d = 0;\n  const isHoverablePointerType = t => t.pointerType === \"mouse\";\n  const [f, v] = selfClearTimeout();\n  const [p, h] = selfClearTimeout(100);\n  const [g, b] = selfClearTimeout(100);\n  const [w, y] = selfClearTimeout(() => d);\n  const [S, m] = createScrollbarsSetupElements(t, e, s, createScrollbarsSetupEvents(n, e, s, t => isHoverablePointerType(t) && manageScrollbarsAutoHideInstantInteraction()));\n  const {\n    ht: O,\n    Qt: $,\n    wt: C\n  } = e;\n  const {\n    jt: H,\n    Nt: z,\n    qt: I,\n    Bt: A,\n    Ft: D\n  } = S;\n  const manageScrollbarsAutoHide = (t, n) => {\n    y();\n    if (t) {\n      H(gt);\n    } else {\n      const t = bind(H, gt, true);\n      if (d > 0 && !n) {\n        w(t);\n      } else {\n        t();\n      }\n    }\n  };\n  const manageScrollbarsAutoHideInstantInteraction = () => {\n    if (i ? !r : !a) {\n      manageScrollbarsAutoHide(true);\n      p(() => {\n        manageScrollbarsAutoHide(false);\n      });\n    }\n  };\n  const manageAutoHideSuspension = t => {\n    H(ht, t, true);\n    H(ht, t, false);\n  };\n  const onHostMouseEnter = t => {\n    if (isHoverablePointerType(t)) {\n      r = i;\n      i && manageScrollbarsAutoHide(true);\n    }\n  };\n  const M = [y, h, b, v, () => _(), addEventListener(O, \"pointerover\", onHostMouseEnter, {\n    A: true\n  }), addEventListener(O, \"pointerenter\", onHostMouseEnter), addEventListener(O, \"pointerleave\", t => {\n    if (isHoverablePointerType(t)) {\n      r = false;\n      i && manageScrollbarsAutoHide(false);\n    }\n  }), addEventListener(O, \"pointermove\", t => {\n    isHoverablePointerType(t) && l && manageScrollbarsAutoHideInstantInteraction();\n  }), addEventListener($, \"scroll\", t => {\n    f(() => {\n      I();\n      manageScrollbarsAutoHideInstantInteraction();\n    });\n    c(t);\n    D();\n  })];\n  return [() => bind(runEachAndClear, push(M, m())), ({\n    It: t,\n    Dt: n,\n    Zt: e,\n    tn: c\n  }) => {\n    const {\n      nn: r,\n      sn: f,\n      en: v,\n      cn: p\n    } = c || {};\n    const {\n      Ct: h,\n      dt: b\n    } = e || {};\n    const {\n      ct: w\n    } = o;\n    const {\n      k: y\n    } = getEnvironment();\n    const {\n      K: S,\n      rn: m\n    } = s;\n    const [O, M] = t(\"showNativeOverlaidScrollbars\");\n    const [T, k] = t(\"scrollbars.theme\");\n    const [R, V] = t(\"scrollbars.visibility\");\n    const [L, U] = t(\"scrollbars.autoHide\");\n    const [P, N] = t(\"scrollbars.autoHideSuspend\");\n    const [q] = t(\"scrollbars.autoHideDelay\");\n    const [B, F] = t(\"scrollbars.dragScroll\");\n    const [j, X] = t(\"scrollbars.clickScroll\");\n    const [Y, W] = t(\"overflow\");\n    const J = b && !n;\n    const G = m.x || m.y;\n    const K = r || f || p || h || n;\n    const Q = v || V || W;\n    const Z = O && y.x && y.y;\n    const setScrollbarVisibility = (t, n, o) => {\n      const s = t.includes(E) && (R === x || R === \"auto\" && n === E);\n      H(dt, s, o);\n      return s;\n    };\n    d = q;\n    if (J) {\n      if (P && G) {\n        manageAutoHideSuspension(false);\n        _();\n        g(() => {\n          _ = addEventListener($, \"scroll\", bind(manageAutoHideSuspension, true), {\n            A: true\n          });\n        });\n      } else {\n        manageAutoHideSuspension(true);\n      }\n    }\n    if (M) {\n      H(ct, Z);\n    }\n    if (k) {\n      H(u);\n      H(T, true);\n      u = T;\n    }\n    if (N && !P) {\n      manageAutoHideSuspension(true);\n    }\n    if (U) {\n      l = L === \"move\";\n      i = L === \"leave\";\n      a = L === \"never\";\n      manageScrollbarsAutoHide(a, true);\n    }\n    if (F) {\n      H(yt, B);\n    }\n    if (X) {\n      H(wt, !!j);\n    }\n    if (Q) {\n      const t = setScrollbarVisibility(Y.x, S.x, true);\n      const n = setScrollbarVisibility(Y.y, S.y, false);\n      const o = t && n;\n      H(ft, !o);\n    }\n    if (K) {\n      I();\n      z();\n      D();\n      p && A();\n      H(pt, !m.x, true);\n      H(pt, !m.y, false);\n      H(lt, w && !C);\n    }\n  }, {}, S];\n};\nconst createStructureSetupElements = t => {\n  const o = getEnvironment();\n  const {\n    U: s,\n    R: e\n  } = o;\n  const {\n    elements: c\n  } = s();\n  const {\n    padding: r,\n    viewport: l,\n    content: i\n  } = c;\n  const a = isHTMLElement(t);\n  const u = a ? {} : t;\n  const {\n    elements: _\n  } = u;\n  const {\n    padding: d,\n    viewport: f,\n    content: v\n  } = _ || {};\n  const p = a ? t : u.target;\n  const h = isBodyElement(p);\n  const g = p.ownerDocument;\n  const b = g.documentElement;\n  const getDocumentWindow = () => g.defaultView || n;\n  const w = bind(staticInitializationElement, [p]);\n  const y = bind(dynamicInitializationElement, [p]);\n  const S = bind(createDiv, \"\");\n  const $ = bind(w, S, l);\n  const C = bind(y, S, i);\n  const elementHasOverflow = t => {\n    const n = I(t);\n    const o = D(t);\n    const s = getStyles(t, m);\n    const e = getStyles(t, O);\n    return o.w - n.w > 0 && !overflowIsVisible(s) || o.h - n.h > 0 && !overflowIsVisible(e);\n  };\n  const x = $(f);\n  const H = x === p;\n  const E = H && h;\n  const z = !H && C(v);\n  const A = !H && x === z;\n  const M = E ? b : x;\n  const T = E ? M : p;\n  const k = !H && y(S, r, d);\n  const R = !A && z;\n  const L = [R, M, k, T].map(t => isHTMLElement(t) && !parent(t) && t);\n  const elementIsGenerated = t => t && inArray(L, t);\n  const B = !elementIsGenerated(M) && elementHasOverflow(M) ? M : p;\n  const F = E ? b : M;\n  const j = E ? g : M;\n  const X = {\n    vt: p,\n    ht: T,\n    ot: M,\n    ln: k,\n    bt: R,\n    gt: F,\n    Qt: j,\n    an: h ? b : B,\n    Kt: g,\n    wt: h,\n    Mt: a,\n    nt: H,\n    un: getDocumentWindow,\n    yt: t => hasAttrClass(M, q, t),\n    St: (t, n) => addRemoveAttrClass(M, q, t, n),\n    Ot: () => addRemoveAttrClass(F, q, Y, true)\n  };\n  const {\n    vt: J,\n    ht: Q,\n    ln: Z,\n    ot: tt,\n    bt: nt\n  } = X;\n  const ot = [() => {\n    removeAttrs(Q, [P, V]);\n    removeAttrs(J, V);\n    if (h) {\n      removeAttrs(b, [V, P]);\n    }\n  }];\n  let st = contents([nt, tt, Z, Q, J].find(t => t && !elementIsGenerated(t)));\n  const et = E ? J : nt || tt;\n  const ct = bind(runEachAndClear, ot);\n  const appendElements = () => {\n    const t = getDocumentWindow();\n    const n = getFocusedElement();\n    const unwrap = t => {\n      appendChildren(parent(t), contents(t));\n      removeElements(t);\n    };\n    const prepareWrapUnwrapFocus = t => addEventListener(t, \"focusin focusout focus blur\", stopAndPrevent, {\n      I: true,\n      H: false\n    });\n    const o = \"tabindex\";\n    const s = getAttr(tt, o);\n    const c = prepareWrapUnwrapFocus(n);\n    setAttrs(Q, P, H ? \"\" : N);\n    setAttrs(Z, G, \"\");\n    setAttrs(tt, q, \"\");\n    setAttrs(nt, K, \"\");\n    if (!H) {\n      setAttrs(tt, o, s || \"-1\");\n      h && setAttrs(b, U, \"\");\n    }\n    appendChildren(et, st);\n    appendChildren(Q, Z);\n    appendChildren(Z || Q, !H && tt);\n    appendChildren(tt, nt);\n    push(ot, [c, () => {\n      const t = getFocusedElement();\n      const n = elementIsGenerated(tt);\n      const e = n && t === tt ? J : t;\n      const c = prepareWrapUnwrapFocus(e);\n      removeAttrs(Z, G);\n      removeAttrs(nt, K);\n      removeAttrs(tt, q);\n      h && removeAttrs(b, U);\n      s ? setAttrs(tt, o, s) : removeAttrs(tt, o);\n      elementIsGenerated(nt) && unwrap(nt);\n      n && unwrap(tt);\n      elementIsGenerated(Z) && unwrap(Z);\n      focusElement(e);\n      c();\n    }]);\n    if (e && !H) {\n      addAttrClass(tt, q, W);\n      push(ot, bind(removeAttrs, tt, q));\n    }\n    focusElement(!H && h && n === J && t.top === t ? tt : n);\n    c();\n    st = 0;\n    return ct;\n  };\n  return [X, appendElements, ct];\n};\nconst createTrinsicUpdateSegment = ({\n  bt: t\n}) => ({\n  Zt: n,\n  _n: o,\n  Dt: s\n}) => {\n  const {\n    xt: e\n  } = n || {};\n  const {\n    $t: c\n  } = o;\n  const r = t && (e || s);\n  if (r) {\n    setStyles(t, {\n      [C]: c && \"100%\"\n    });\n  }\n};\nconst createPaddingUpdateSegment = ({\n  ht: t,\n  ln: n,\n  ot: o,\n  nt: s\n}, e) => {\n  const [c, r] = createCache({\n    i: equalTRBL,\n    o: topRightBottomLeft()\n  }, bind(topRightBottomLeft, t, \"padding\", \"\"));\n  return ({\n    It: t,\n    Zt: l,\n    _n: i,\n    Dt: a\n  }) => {\n    let [u, _] = r(a);\n    const {\n      R: d\n    } = getEnvironment();\n    const {\n      ft: f,\n      Ht: v,\n      Ct: m\n    } = l || {};\n    const {\n      ct: O\n    } = i;\n    const [C, x] = t(\"paddingAbsolute\");\n    const H = a || v;\n    if (f || _ || H) {\n      [u, _] = c(a);\n    }\n    const E = !s && (x || m || _);\n    if (E) {\n      const t = !C || !n && !d;\n      const s = u.r + u.l;\n      const c = u.t + u.b;\n      const r = {\n        [y]: t && !O ? -s : 0,\n        [S]: t ? -c : 0,\n        [w]: t && O ? -s : 0,\n        top: t ? -u.t : 0,\n        right: t ? O ? -u.r : \"auto\" : 0,\n        left: t ? O ? \"auto\" : -u.l : 0,\n        [$]: t && `calc(100% + ${s}px)`\n      };\n      const l = {\n        [p]: t ? u.t : 0,\n        [h]: t ? u.r : 0,\n        [b]: t ? u.b : 0,\n        [g]: t ? u.l : 0\n      };\n      setStyles(n || o, r);\n      setStyles(o, l);\n      assignDeep(e, {\n        ln: u,\n        dn: !t,\n        rt: n ? l : assignDeep({}, r, l)\n      });\n    }\n    return {\n      fn: E\n    };\n  };\n};\nconst createOverflowUpdateSegment = (t, s) => {\n  const e = getEnvironment();\n  const {\n    ht: c,\n    ln: r,\n    ot: l,\n    nt: a,\n    Qt: u,\n    gt: _,\n    wt: d,\n    St: f,\n    un: v\n  } = t;\n  const {\n    R: p\n  } = e;\n  const h = d && a;\n  const g = bind(o, 0);\n  const b = {\n    display: () => false,\n    direction: t => t !== \"ltr\",\n    flexDirection: t => t.endsWith(\"-reverse\"),\n    writingMode: t => t !== \"horizontal-tb\"\n  };\n  const w = keys(b);\n  const y = {\n    i: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  };\n  const S = {\n    i: equalXY,\n    o: {}\n  };\n  const setMeasuringMode = t => {\n    f(X, !h && t);\n  };\n  const getMeasuredScrollCoordinates = t => {\n    const n = w.some(n => {\n      const o = t[n];\n      return o && b[n](o);\n    });\n    if (!n) {\n      return {\n        D: {\n          x: 0,\n          y: 0\n        },\n        M: {\n          x: 1,\n          y: 1\n        }\n      };\n    }\n    setMeasuringMode(true);\n    const o = getElementScroll(_);\n    const s = f(J, true);\n    const e = addEventListener(u, E, t => {\n      const n = getElementScroll(_);\n      if (t.isTrusted && n.x === o.x && n.y === o.y) {\n        stopPropagation(t);\n      }\n    }, {\n      I: true,\n      A: true\n    });\n    scrollElementTo(_, {\n      x: 0,\n      y: 0\n    });\n    s();\n    const c = getElementScroll(_);\n    const r = D(_);\n    scrollElementTo(_, {\n      x: r.w,\n      y: r.h\n    });\n    const l = getElementScroll(_);\n    scrollElementTo(_, {\n      x: l.x - c.x < 1 && -r.w,\n      y: l.y - c.y < 1 && -r.h\n    });\n    const a = getElementScroll(_);\n    scrollElementTo(_, o);\n    i(() => e());\n    return {\n      D: c,\n      M: a\n    };\n  };\n  const getOverflowAmount = (t, o) => {\n    const s = n.devicePixelRatio % 1 !== 0 ? 1 : 0;\n    const e = {\n      w: g(t.w - o.w),\n      h: g(t.h - o.h)\n    };\n    return {\n      w: e.w > s ? e.w : 0,\n      h: e.h > s ? e.h : 0\n    };\n  };\n  const [m, O] = createCache(y, bind(getFractionalSize, l));\n  const [$, C] = createCache(y, bind(D, l));\n  const [z, I] = createCache(y);\n  const [M] = createCache(S);\n  const [T, k] = createCache(y);\n  const [R] = createCache(S);\n  const [V] = createCache({\n    i: (t, n) => equal(t, n, w),\n    o: {}\n  }, () => hasDimensions(l) ? getStyles(l, w) : {});\n  const [U, N] = createCache({\n    i: (t, n) => equalXY(t.D, n.D) && equalXY(t.M, n.M),\n    o: getZeroScrollCoordinates()\n  });\n  const q = getStaticPluginModuleInstance(zt);\n  const createViewportOverflowStyleClassName = (t, n) => {\n    const o = n ? B : F;\n    return `${o}${capitalizeFirstLetter(t)}`;\n  };\n  const setViewportOverflowStyle = t => {\n    const createAllOverflowStyleClassNames = t => [x, H, E].map(n => createViewportOverflowStyleClassName(n, t));\n    const n = createAllOverflowStyleClassNames(true).concat(createAllOverflowStyleClassNames()).join(\" \");\n    f(n);\n    f(keys(t).map(n => createViewportOverflowStyleClassName(t[n], n === \"x\")).join(\" \"), true);\n  };\n  return ({\n    It: n,\n    Zt: o,\n    _n: i,\n    Dt: a\n  }, {\n    fn: u\n  }) => {\n    const {\n      ft: _,\n      Ht: d,\n      Ct: b,\n      dt: w,\n      zt: y\n    } = o || {};\n    const S = q && q.tt(t, s, i, e, n);\n    const {\n      it: x,\n      ut: H,\n      _t: E\n    } = S || {};\n    const [D, B] = getShowNativeOverlaidScrollbars(n, e);\n    const [F, j] = n(\"overflow\");\n    const X = overflowIsVisible(F.x);\n    const Y = overflowIsVisible(F.y);\n    const J = true;\n    let K = O(a);\n    let Q = C(a);\n    let Z = I(a);\n    let tt = k(a);\n    if (B && p) {\n      f(W, !D);\n    }\n    {\n      if (hasAttrClass(c, P, L)) {\n        setMeasuringMode(true);\n      }\n      const [t] = H ? H() : [];\n      const [n] = K = m(a);\n      const [o] = Q = $(a);\n      const s = A(l);\n      const e = h && getWindowSize(v());\n      const r = {\n        w: g(o.w + n.w),\n        h: g(o.h + n.h)\n      };\n      const i = {\n        w: g((e ? e.w : s.w + g(s.w - o.w)) + n.w),\n        h: g((e ? e.h : s.h + g(s.h - o.h)) + n.h)\n      };\n      t && t();\n      tt = T(i);\n      Z = z(getOverflowAmount(r, i), a);\n    }\n    const [nt, ot] = tt;\n    const [st, et] = Z;\n    const [ct, rt] = Q;\n    const [lt, it] = K;\n    const [at, ut] = M({\n      x: st.w > 0,\n      y: st.h > 0\n    });\n    const _t = X && Y && (at.x || at.y) || X && at.x && !at.y || Y && at.y && !at.x;\n    const dt = u || b || y || it || rt || ot || et || j || B || J;\n    const ft = createViewportOverflowState(at, F);\n    const [vt, pt] = R(ft.K);\n    const [ht, gt] = V(a);\n    const bt = b || w || gt || ut || a;\n    const [wt, yt] = bt ? U(getMeasuredScrollCoordinates(ht), a) : N();\n    if (dt) {\n      pt && setViewportOverflowStyle(ft.K);\n      if (E && x) {\n        setStyles(l, E(ft, i, x(ft, ct, lt)));\n      }\n    }\n    setMeasuringMode(false);\n    addRemoveAttrClass(c, P, L, _t);\n    addRemoveAttrClass(r, G, L, _t);\n    assignDeep(s, {\n      K: vt,\n      Vt: {\n        x: nt.w,\n        y: nt.h\n      },\n      Rt: {\n        x: st.w,\n        y: st.h\n      },\n      rn: at,\n      Lt: sanitizeScrollCoordinates(wt, st)\n    });\n    return {\n      en: pt,\n      nn: ot,\n      sn: et,\n      cn: yt || et,\n      vn: bt\n    };\n  };\n};\nconst createStructureSetup = t => {\n  const [n, o, s] = createStructureSetupElements(t);\n  const e = {\n    ln: {\n      t: 0,\n      r: 0,\n      b: 0,\n      l: 0\n    },\n    dn: false,\n    rt: {\n      [y]: 0,\n      [S]: 0,\n      [w]: 0,\n      [p]: 0,\n      [h]: 0,\n      [b]: 0,\n      [g]: 0\n    },\n    Vt: {\n      x: 0,\n      y: 0\n    },\n    Rt: {\n      x: 0,\n      y: 0\n    },\n    K: {\n      x: H,\n      y: H\n    },\n    rn: {\n      x: false,\n      y: false\n    },\n    Lt: getZeroScrollCoordinates()\n  };\n  const {\n    vt: c,\n    gt: r,\n    nt: l,\n    Ot: i\n  } = n;\n  const {\n    R: a,\n    k: u\n  } = getEnvironment();\n  const _ = !a && (u.x || u.y);\n  const d = [createTrinsicUpdateSegment(n), createPaddingUpdateSegment(n, e), createOverflowUpdateSegment(n, e)];\n  return [o, t => {\n    const n = {};\n    const o = _;\n    const s = o && getElementScroll(r);\n    const e = s && i();\n    each(d, o => {\n      assignDeep(n, o(t, n) || {});\n    });\n    scrollElementTo(r, s);\n    e && e();\n    !l && scrollElementTo(c, 0);\n    return n;\n  }, e, n, s];\n};\nconst createSetups = (t, n, o, s, e) => {\n  let c = false;\n  const r = createOptionCheck(n, {});\n  const [l, i, a, u, _] = createStructureSetup(t);\n  const [d, f, v] = createObserversSetup(u, a, r, t => {\n    update({}, t);\n  });\n  const [p, h,, g] = createScrollbarsSetup(t, n, v, a, u, e);\n  const updateHintsAreTruthy = t => keys(t).some(n => !!t[n]);\n  const update = (t, e) => {\n    if (o()) {\n      return false;\n    }\n    const {\n      pn: r,\n      Dt: l,\n      At: a,\n      hn: u\n    } = t;\n    const _ = r || {};\n    const d = !!l || !c;\n    const p = {\n      It: createOptionCheck(n, _, d),\n      pn: _,\n      Dt: d\n    };\n    if (u) {\n      h(p);\n      return false;\n    }\n    const g = e || f(assignDeep({}, p, {\n      At: a\n    }));\n    const b = i(assignDeep({}, p, {\n      _n: v,\n      Zt: g\n    }));\n    h(assignDeep({}, p, {\n      Zt: g,\n      tn: b\n    }));\n    const w = updateHintsAreTruthy(g);\n    const y = updateHintsAreTruthy(b);\n    const S = w || y || !isEmptyObject(_) || d;\n    c = true;\n    S && s(t, {\n      Zt: g,\n      tn: b\n    });\n    return S;\n  };\n  return [() => {\n    const {\n      an: t,\n      gt: n,\n      Ot: o\n    } = u;\n    const s = getElementScroll(t);\n    const e = [d(), l(), p()];\n    const c = o();\n    scrollElementTo(n, s);\n    c();\n    return bind(runEachAndClear, e);\n  }, update, () => ({\n    gn: v,\n    bn: a\n  }), {\n    wn: u,\n    yn: g\n  }, _];\n};\nconst OverlayScrollbars = (t, n, o) => {\n  const {\n    N: s\n  } = getEnvironment();\n  const e = isHTMLElement(t);\n  const c = e ? t : t.target;\n  const r = getInstance(c);\n  if (n && !r) {\n    let r = false;\n    const l = [];\n    const i = {};\n    const validateOptions = t => {\n      const n = removeUndefinedProperties(t, true);\n      const o = getStaticPluginModuleInstance(xt);\n      return o ? o(n, true) : n;\n    };\n    const a = assignDeep({}, s(), validateOptions(n));\n    const [u, _, d] = createEventListenerHub();\n    const [f, v, p] = createEventListenerHub(o);\n    const triggerEvent = (t, n) => {\n      p(t, n);\n      d(t, n);\n    };\n    const [h, g, b, w, y] = createSetups(t, a, () => r, ({\n      pn: t,\n      Dt: n\n    }, {\n      Zt: o,\n      tn: s\n    }) => {\n      const {\n        ft: e,\n        Ct: c,\n        xt: r,\n        Ht: l,\n        Et: i,\n        dt: a\n      } = o;\n      const {\n        nn: u,\n        sn: _,\n        en: d,\n        cn: f\n      } = s;\n      triggerEvent(\"updated\", [S, {\n        updateHints: {\n          sizeChanged: !!e,\n          directionChanged: !!c,\n          heightIntrinsicChanged: !!r,\n          overflowEdgeChanged: !!u,\n          overflowAmountChanged: !!_,\n          overflowStyleChanged: !!d,\n          scrollCoordinatesChanged: !!f,\n          contentMutation: !!l,\n          hostMutation: !!i,\n          appear: !!a\n        },\n        changedOptions: t || {},\n        force: !!n\n      }]);\n    }, t => triggerEvent(\"scroll\", [S, t]));\n    const destroy = t => {\n      removeInstance(c);\n      runEachAndClear(l);\n      r = true;\n      triggerEvent(\"destroyed\", [S, t]);\n      _();\n      v();\n    };\n    const S = {\n      options(t, n) {\n        if (t) {\n          const o = n ? s() : {};\n          const e = getOptionsDiff(a, assignDeep(o, validateOptions(t)));\n          if (!isEmptyObject(e)) {\n            assignDeep(a, e);\n            g({\n              pn: e\n            });\n          }\n        }\n        return assignDeep({}, a);\n      },\n      on: f,\n      off: (t, n) => {\n        t && n && v(t, n);\n      },\n      state() {\n        const {\n          gn: t,\n          bn: n\n        } = b();\n        const {\n          ct: o\n        } = t;\n        const {\n          Vt: s,\n          Rt: e,\n          K: c,\n          rn: l,\n          ln: i,\n          dn: a,\n          Lt: u\n        } = n;\n        return assignDeep({}, {\n          overflowEdge: s,\n          overflowAmount: e,\n          overflowStyle: c,\n          hasOverflow: l,\n          scrollCoordinates: {\n            start: u.D,\n            end: u.M\n          },\n          padding: i,\n          paddingAbsolute: a,\n          directionRTL: o,\n          destroyed: r\n        });\n      },\n      elements() {\n        const {\n          vt: t,\n          ht: n,\n          ln: o,\n          ot: s,\n          bt: e,\n          gt: c,\n          Qt: r\n        } = w.wn;\n        const {\n          Xt: l,\n          Gt: i\n        } = w.yn;\n        const translateScrollbarStructure = t => {\n          const {\n            Pt: n,\n            Ut: o,\n            Tt: s\n          } = t;\n          return {\n            scrollbar: s,\n            track: o,\n            handle: n\n          };\n        };\n        const translateScrollbarsSetupElement = t => {\n          const {\n            Yt: n,\n            Wt: o\n          } = t;\n          const s = translateScrollbarStructure(n[0]);\n          return assignDeep({}, s, {\n            clone: () => {\n              const t = translateScrollbarStructure(o());\n              g({\n                hn: true\n              });\n              return t;\n            }\n          });\n        };\n        return assignDeep({}, {\n          target: t,\n          host: n,\n          padding: o || s,\n          viewport: s,\n          content: e || s,\n          scrollOffsetElement: c,\n          scrollEventElement: r,\n          scrollbarHorizontal: translateScrollbarsSetupElement(l),\n          scrollbarVertical: translateScrollbarsSetupElement(i)\n        });\n      },\n      update: t => g({\n        Dt: t,\n        At: true\n      }),\n      destroy: bind(destroy, false),\n      plugin: t => i[keys(t)[0]]\n    };\n    push(l, [y]);\n    addInstance(c, S);\n    registerPluginModuleInstances($t, OverlayScrollbars, [S, u, i]);\n    if (cancelInitialization(w.wn.wt, !e && t.cancel)) {\n      destroy(true);\n      return S;\n    }\n    push(l, h());\n    triggerEvent(\"initialized\", [S]);\n    S.update();\n    return S;\n  }\n  return r;\n};\nOverlayScrollbars.plugin = t => {\n  const n = isArray(t);\n  const o = n ? t : [t];\n  const s = o.map(t => registerPluginModuleInstances(t, OverlayScrollbars)[0]);\n  addPlugins(o);\n  return n ? s : s[0];\n};\nOverlayScrollbars.valid = t => {\n  const n = t && t.elements;\n  const o = isFunction(n) && n();\n  return isPlainObject(o) && !!getInstance(o.target);\n};\nOverlayScrollbars.env = () => {\n  const {\n    T: t,\n    k: n,\n    R: o,\n    V: s,\n    B: e,\n    F: c,\n    U: r,\n    P: l,\n    N: i,\n    q: a\n  } = getEnvironment();\n  return assignDeep({}, {\n    scrollbarsSize: t,\n    scrollbarsOverlaid: n,\n    scrollbarsHiding: o,\n    scrollTimeline: s,\n    staticDefaultInitialization: e,\n    staticDefaultOptions: c,\n    getDefaultInitialization: r,\n    setDefaultInitialization: l,\n    getDefaultOptions: i,\n    setDefaultOptions: a\n  });\n};\nOverlayScrollbars.nonce = setNonce;\nexport { Dt as ClickScrollPlugin, OverlayScrollbars, It as ScrollbarsHidingPlugin, Et as SizeObserverPlugin };\n","import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Component, Output, ViewChild, NgModule } from '@angular/core';\nimport { OverlayScrollbars } from 'overlayscrollbars';\n\n/* eslint-disable @typescript-eslint/consistent-type-imports */\nconst _c0 = [\"content\"];\nconst _c1 = [\"*\"];\nconst createDefer = () => {\n  /* istanbul ignore next */\n  if (typeof window === 'undefined') {\n    // mock ssr calls with \"noop\"\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const noop = () => {};\n    return [noop, noop];\n  }\n  let idleId;\n  let rafId;\n  const wnd = window;\n  const idleSupported = typeof wnd.requestIdleCallback === 'function';\n  const rAF = wnd.requestAnimationFrame;\n  const cAF = wnd.cancelAnimationFrame;\n  const rIdle = idleSupported ? wnd.requestIdleCallback : rAF;\n  const cIdle = idleSupported ? wnd.cancelIdleCallback : cAF;\n  const clear = () => {\n    cIdle(idleId);\n    cAF(rafId);\n  };\n  return [(callback, options) => {\n    clear();\n    idleId = rIdle(idleSupported ? () => {\n      clear();\n      // inside idle its best practice to use rAF to change DOM for best performance\n      rafId = rAF(callback);\n    } : callback,\n    // @ts-ignore\n    typeof options === 'object' ? options : {\n      timeout: 2233\n    });\n  }, clear];\n};\nclass OverlayScrollbarsDirective {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.instanceRef = null;\n    const [requestDefer, cancelDefer] = createDefer();\n    this.requestDefer = requestDefer;\n    this.cancelDefer = cancelDefer;\n  }\n  osInitialize(target) {\n    this.ngZone.runOutsideAngular(() => {\n      const init = () => {\n        this.instanceRef = OverlayScrollbars(target, this.options || {}, /* istanbul ignore next */\n        this.events || {});\n      };\n      if (this.defer) {\n        this.requestDefer(init, this.defer);\n      } else {\n        init();\n      }\n    });\n  }\n  osInstance() {\n    return this.instanceRef;\n  }\n  ngOnChanges(changes) {\n    const optionsChange = changes.options;\n    const eventsChange = changes.events;\n    if (optionsChange) {\n      const curr = optionsChange.currentValue;\n      this.options = curr;\n      if (OverlayScrollbars.valid(this.instanceRef)) {\n        this.instanceRef.options(curr || {}, true);\n      }\n    }\n    /* istanbul ignore else */\n    if (eventsChange) {\n      const curr = eventsChange.currentValue;\n      this.events = curr;\n      if (OverlayScrollbars.valid(this.instanceRef)) {\n        this.instanceRef.on(/* istanbul ignore next */\n        curr || {}, true);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.cancelDefer();\n  }\n}\nOverlayScrollbarsDirective.ɵfac = function OverlayScrollbarsDirective_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || OverlayScrollbarsDirective)(i0.ɵɵdirectiveInject(i0.NgZone));\n};\nOverlayScrollbarsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: OverlayScrollbarsDirective,\n  selectors: [[\"\", \"overlayScrollbars\", \"\"]],\n  inputs: {\n    options: \"options\",\n    events: \"events\",\n    defer: \"defer\"\n  },\n  standalone: false,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayScrollbarsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[overlayScrollbars]' // https://angular.io/guide/styleguide#directive-selectors\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input,\n      args: ['options']\n    }],\n    events: [{\n      type: Input,\n      args: ['events']\n    }],\n    defer: [{\n      type: Input,\n      args: ['defer']\n    }]\n  });\n})();\n\n/* eslint-disable @typescript-eslint/consistent-type-imports */\nconst mergeEventListeners = (emits, events) => Object.keys(emits).reduce((obj, name) => {\n  const emitListener = emits[name];\n  const eventListener = events[name];\n  /* istanbul ignore next */\n  obj[name] = [emitListener, ...(Array.isArray(eventListener) ? eventListener : [eventListener]).filter(Boolean)];\n  return obj;\n}, {});\nclass OverlayScrollbarsComponent {\n  constructor(ngZone, targetRef) {\n    this.ngZone = ngZone;\n    this.targetRef = targetRef;\n    this.onInitialized = new EventEmitter();\n    this.onUpdated = new EventEmitter();\n    this.onDestroyed = new EventEmitter();\n    this.onScroll = new EventEmitter();\n  }\n  osInstance() {\n    return this.osDirective.osInstance();\n  }\n  getElement() {\n    return this.targetRef.nativeElement;\n  }\n  ngAfterViewInit() {\n    const targetElm = this.getElement();\n    const contentElm = this.contentRef.nativeElement;\n    /* istanbul ignore else */\n    if (targetElm && contentElm) {\n      this.osDirective.osInitialize({\n        target: targetElm,\n        elements: {\n          viewport: contentElm,\n          content: contentElm\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.osDirective?.osInstance()?.destroy();\n  }\n  mergeEvents(originalEvents) {\n    return mergeEventListeners({\n      initialized: (...args) => this.dispatchEventIfHasObservers(this.onInitialized, args),\n      updated: (...args) => this.dispatchEventIfHasObservers(this.onUpdated, args),\n      destroyed: (...args) => this.dispatchEventIfHasObservers(this.onDestroyed, args),\n      scroll: (...args) => this.dispatchEventIfHasObservers(this.onScroll, args)\n    }, originalEvents || {});\n  }\n  dispatchEventIfHasObservers(eventEmitter, args) {\n    // `observed` is available since RxJS@7.2 because `observers` is being deprecated.\n    if (eventEmitter.observed || eventEmitter.observers.length > 0) {\n      // This is required to re-enter the Angular zone to call the event handler in the Angular\n      // zone too. This will not re-enter the Angular zone if emitter doesn't have any observers,\n      // for instance, it's being listened: `<overlay-scrollbars (osInitialized)=\"...\"`.\n      // Events are dispatched outside of the Angular zone because instance is created in the\n      // `<root>` zone, see `OverlayScrollbarsDirective#osInitialize`.\n      this.ngZone.run(() => eventEmitter.emit(args));\n    }\n  }\n}\nOverlayScrollbarsComponent.ɵfac = function OverlayScrollbarsComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || OverlayScrollbarsComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nOverlayScrollbarsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OverlayScrollbarsComponent,\n  selectors: [[\"overlay-scrollbars\"], [\"\", \"overlay-scrollbars\", \"\"]],\n  viewQuery: function OverlayScrollbarsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c0, 5, OverlayScrollbarsDirective);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.osDirective = _t.first);\n    }\n  },\n  hostAttrs: [\"data-overlayscrollbars-initialize\", \"\"],\n  inputs: {\n    options: \"options\",\n    events: \"events\",\n    defer: \"defer\"\n  },\n  outputs: {\n    onInitialized: \"osInitialized\",\n    onUpdated: \"osUpdated\",\n    onDestroyed: \"osDestroyed\",\n    onScroll: \"osScroll\"\n  },\n  standalone: false,\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 3,\n  consts: [[\"content\", \"\"], [\"overlayScrollbars\", \"\", \"data-overlayscrollbars-contents\", \"\", 3, \"options\", \"events\", \"defer\"]],\n  template: function OverlayScrollbarsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 1, 0);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"options\", ctx.options)(\"events\", ctx.mergeEvents(ctx.events))(\"defer\", ctx.defer);\n    }\n  },\n  dependencies: [OverlayScrollbarsDirective],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayScrollbarsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'overlay-scrollbars, [overlay-scrollbars]',\n      host: {\n        'data-overlayscrollbars-initialize': ''\n      },\n      template: `\n    <div\n      overlayScrollbars\n      data-overlayscrollbars-contents=\"\"\n      [options]=\"options\"\n      [events]=\"mergeEvents(events)\"\n      [defer]=\"defer\"\n      #content\n    >\n      <ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    options: [{\n      type: Input,\n      args: ['options']\n    }],\n    events: [{\n      type: Input,\n      args: ['events']\n    }],\n    defer: [{\n      type: Input,\n      args: ['defer']\n    }],\n    onInitialized: [{\n      type: Output,\n      args: ['osInitialized']\n    }],\n    onUpdated: [{\n      type: Output,\n      args: ['osUpdated']\n    }],\n    onDestroyed: [{\n      type: Output,\n      args: ['osDestroyed']\n    }],\n    onScroll: [{\n      type: Output,\n      args: ['osScroll']\n    }],\n    contentRef: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    osDirective: [{\n      type: ViewChild,\n      args: ['content', {\n        read: OverlayScrollbarsDirective\n      }]\n    }]\n  });\n})();\nclass OverlayscrollbarsModule {}\nOverlayscrollbarsModule.ɵfac = function OverlayscrollbarsModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || OverlayscrollbarsModule)();\n};\nOverlayscrollbarsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OverlayscrollbarsModule\n});\nOverlayscrollbarsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayscrollbarsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [OverlayScrollbarsComponent, OverlayScrollbarsDirective],\n      exports: [OverlayScrollbarsComponent, OverlayScrollbarsDirective]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsDirective, OverlayscrollbarsModule };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nconst _c0 = [\"mat-internal-form-field\", \"\"];\nconst _c1 = [\"*\"];\nclass _MatInternalFormField {\n  /** Position of the label relative to the content. */\n  labelPosition;\n  static ɵfac = function _MatInternalFormField_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _MatInternalFormField)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _MatInternalFormField,\n    selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n    hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n    hostVars: 2,\n    hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n      }\n    },\n    inputs: {\n      labelPosition: \"labelPosition\"\n    },\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function _MatInternalFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatInternalFormField, [{\n    type: Component,\n    args: [{\n      selector: 'div[mat-internal-form-field]',\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mdc-form-field mat-internal-form-field',\n        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"'\n      },\n      styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\"]\n    }]\n  }], null, {\n    labelPosition: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }]\n  });\n})();\nexport { _MatInternalFormField as _ };\n","import { InjectionToken, inject, LOCALE_ID } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\nconst NOT_IMPLEMENTED = 'Method not implemented';\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  /** The locale to use for all dates. */\n  locale;\n  _localeChanges = new Subject();\n  /** A stream that emits when the locale changes. */\n  localeChanges = this._localeChanges;\n  /**\n   * Sets the time of one date to the time of another.\n   * @param target Date whose time will be set.\n   * @param hours New hours to set on the date object.\n   * @param minutes New minutes to set on the date object.\n   * @param seconds New seconds to set on the date object.\n   */\n  setTime(target, hours, minutes, seconds) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Gets the hours component of the given date.\n   * @param date The date to extract the hours from.\n   */\n  getHours(date) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Gets the minutes component of the given date.\n   * @param date The date to extract the minutes from.\n   */\n  getMinutes(date) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Gets the seconds component of the given date.\n   * @param date The date to extract the seconds from.\n   */\n  getSeconds(date) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Parses a date with a specific time from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   */\n  parseTime(value, parseFormat) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Adds an amount of seconds to the specified date.\n   * @param date Date to which to add the seconds.\n   * @param amount Amount of seconds to add to the date.\n   */\n  addSeconds(date, amount) {\n    throw new Error(NOT_IMPLEMENTED);\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Compares the time values of two dates.\n   * @param first First date to compare.\n   * @param second Second date to compare.\n   * @returns 0 if the times are equal, a number less than 0 if the first time is earlier,\n   *     a number greater than 0 if the first time is later.\n   */\n  compareTime(first, second) {\n    return this.getHours(first) - this.getHours(second) || this.getMinutes(first) - this.getMinutes(second) || this.getSeconds(first) - this.getSeconds(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Checks if the times of two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the times of the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameTime(first, second) {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareTime(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\nexport { DateAdapter as D, MAT_DATE_LOCALE as M, MAT_DATE_FORMATS as a, MAT_DATE_LOCALE_FACTORY as b };\n","export { _ as _MatInternalFormField } from './internal-form-field-5960ea2e.mjs';\nimport * as i0 from '@angular/core';\nimport { Version, inject, Injectable, NgModule } from '@angular/core';\nexport { a as MATERIAL_SANITY_CHECKS, M as MatCommonModule } from './common-module-a39ee957.mjs';\nexport { _ as _ErrorStateTracker } from './error-state-8f4ce1af.mjs';\nimport { D as DateAdapter, M as MAT_DATE_LOCALE, a as MAT_DATE_FORMATS } from './date-formats-b618acb8.mjs';\nexport { D as DateAdapter, a as MAT_DATE_FORMATS, M as MAT_DATE_LOCALE, b as MAT_DATE_LOCALE_FACTORY } from './date-formats-b618acb8.mjs';\nexport { E as ErrorStateMatcher, S as ShowOnDirtyErrorStateMatcher } from './error-options-aca21924.mjs';\nexport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nexport { M as MatLine, a as MatLineModule, s as setLines } from './line-11b0093d.mjs';\nexport { b as MAT_OPTGROUP, M as MAT_OPTION_PARENT_COMPONENT, e as MatOptgroup, a as MatOption, c as MatOptionSelectionChange, _ as _countGroupLabelsBeforeOption, d as _getOptionScrollPosition } from './option-cb353f7a.mjs';\nexport { M as MatOptionModule } from './index-2f2536d6.mjs';\nexport { M as MatRippleLoader } from './ripple-loader-dabcd93d.mjs';\nexport { a as MAT_RIPPLE_GLOBAL_OPTIONS, M as MatRipple, c as RippleRef, R as RippleRenderer, b as RippleState, d as defaultRippleAnimationConfig } from './ripple-5bdada85.mjs';\nexport { M as MatRippleModule } from './index-a36e3c7c.mjs';\nexport { M as MatPseudoCheckbox } from './pseudo-checkbox-4a60d45e.mjs';\nexport { M as MatPseudoCheckboxModule } from './pseudo-checkbox-module-31a58606.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/cdk/keycodes';\nimport '@angular/cdk/private';\nimport '@angular/common';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\n\n/** Current version of Angular Material. */\nconst VERSION = new Version('19.2.6');\n\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n/**\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n * @docs-private\n */\nclass AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings with an out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Matches a time string. Supported formats:\n * - {{hours}}:{{minutes}}\n * - {{hours}}:{{minutes}}:{{seconds}}\n * - {{hours}}:{{minutes}} AM/PM\n * - {{hours}}:{{minutes}}:{{seconds}} AM/PM\n * - {{hours}}.{{minutes}}\n * - {{hours}}.{{minutes}}.{{seconds}}\n * - {{hours}}.{{minutes}} AM/PM\n * - {{hours}}.{{minutes}}.{{seconds}} AM/PM\n */\nconst TIME_REGEX = /^(\\d?\\d)[:.](\\d?\\d)(?:[:.](\\d?\\d))?\\s*(AM|PM)?$/i;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  useUtcForDisplay = false;\n  /** The injected locale. */\n  _matDateLocale = inject(MAT_DATE_LOCALE, {\n    optional: true\n  });\n  constructor() {\n    super();\n    const matDateLocale = inject(MAT_DATE_LOCALE, {\n      optional: true\n    });\n    if (matDateLocale !== undefined) {\n      this._matDateLocale = matDateLocale;\n    }\n    super.setLocale(this._matDateLocale);\n  }\n  getYear(date) {\n    return date.getFullYear();\n  }\n  getMonth(date) {\n    return date.getMonth();\n  }\n  getDate(date) {\n    return date.getDate();\n  }\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      month: style,\n      timeZone: 'utc'\n    });\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      day: 'numeric',\n      timeZone: 'utc'\n    });\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      weekday: style,\n      timeZone: 'utc'\n    });\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      year: 'numeric',\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  getFirstDayOfWeek() {\n    // At the time of writing `Intl.Locale` isn't available\n    // in the internal types so we need to cast to `any`.\n    if (typeof Intl !== 'undefined' && Intl.Locale) {\n      const locale = new Intl.Locale(this.locale);\n      // Some browsers implement a `getWeekInfo` method while others have a `weekInfo` getter.\n      // Note that this isn't supported in all browsers so we need to null check it.\n      const firstDay = (locale.getWeekInfo?.() || locale.weekInfo)?.firstDay ?? 0;\n      // `weekInfo.firstDay` is a number between 1 and 7 where, starting from Monday,\n      // whereas our representation is 0 to 6 where 0 is Sunday so we need to normalize it.\n      return firstDay === 7 ? 0 : firstDay;\n    }\n    // Default to Sunday if the browser doesn't provide the week information.\n    return 0;\n  }\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return new Date();\n  }\n  parse(value, parseFormat) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      ...displayFormat,\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  invalid() {\n    return new Date(NaN);\n  }\n  setTime(target, hours, minutes, seconds) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!inRange(hours, 0, 23)) {\n        throw Error(`Invalid hours \"${hours}\". Hours value must be between 0 and 23.`);\n      }\n      if (!inRange(minutes, 0, 59)) {\n        throw Error(`Invalid minutes \"${minutes}\". Minutes value must be between 0 and 59.`);\n      }\n      if (!inRange(seconds, 0, 59)) {\n        throw Error(`Invalid seconds \"${seconds}\". Seconds value must be between 0 and 59.`);\n      }\n    }\n    const clone = this.clone(target);\n    clone.setHours(hours, minutes, seconds, 0);\n    return clone;\n  }\n  getHours(date) {\n    return date.getHours();\n  }\n  getMinutes(date) {\n    return date.getMinutes();\n  }\n  getSeconds(date) {\n    return date.getSeconds();\n  }\n  parseTime(userValue, parseFormat) {\n    if (typeof userValue !== 'string') {\n      return userValue instanceof Date ? new Date(userValue.getTime()) : null;\n    }\n    const value = userValue.trim();\n    if (value.length === 0) {\n      return null;\n    }\n    // Attempt to parse the value directly.\n    let result = this._parseTimeString(value);\n    // Some locales add extra characters around the time, but are otherwise parseable\n    // (e.g. `00:05 ч.` in bg-BG). Try replacing all non-number and non-colon characters.\n    if (result === null) {\n      const withoutExtras = value.replace(/[^0-9:(AM|PM)]/gi, '').trim();\n      if (withoutExtras.length > 0) {\n        result = this._parseTimeString(withoutExtras);\n      }\n    }\n    return result || this.invalid();\n  }\n  addSeconds(date, amount) {\n    return new Date(date.getTime() + amount * 1000);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n  /**\n   * Attempts to parse a time string into a date object. Returns null if it cannot be parsed.\n   * @param value Time string to parse.\n   */\n  _parseTimeString(value) {\n    // Note: we can technically rely on the browser for the time parsing by generating\n    // an ISO string and appending the string to the end of it. We don't do it, because\n    // browsers aren't consistent in what they support. Some examples:\n    // - Safari doesn't support AM/PM.\n    // - Firefox produces a valid date object if the time string has overflows (e.g. 12:75) while\n    //   other browsers produce an invalid date.\n    // - Safari doesn't allow padded numbers.\n    const parsed = value.toUpperCase().match(TIME_REGEX);\n    if (parsed) {\n      let hours = parseInt(parsed[1]);\n      const minutes = parseInt(parsed[2]);\n      let seconds = parsed[3] == null ? undefined : parseInt(parsed[3]);\n      const amPm = parsed[4];\n      if (hours === 12) {\n        hours = amPm === 'AM' ? 0 : hours;\n      } else if (amPm === 'PM') {\n        hours += 12;\n      }\n      if (inRange(hours, 0, 23) && inRange(minutes, 0, 59) && (seconds == null || inRange(seconds, 0, 59))) {\n        return this.setTime(this.today(), hours, minutes, seconds || 0);\n      }\n    }\n    return null;\n  }\n  static ɵfac = function NativeDateAdapter_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NativeDateAdapter)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NativeDateAdapter,\n    factory: NativeDateAdapter.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], () => [], null);\n})();\n/** Checks whether a number is within a certain range. */\nfunction inRange(value, min, max) {\n  return !isNaN(value) && value >= min && value <= max;\n}\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null,\n    timeInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    timeInput: {\n      hour: 'numeric',\n      minute: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    },\n    timeOptionLabel: {\n      hour: 'numeric',\n      minute: 'numeric'\n    }\n  }\n};\nclass NativeDateModule {\n  static ɵfac = function NativeDateModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NativeDateModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NativeDateModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [{\n      provide: DateAdapter,\n      useClass: NativeDateAdapter\n    }]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\nclass MatNativeDateModule {\n  static ɵfac = function MatNativeDateModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatNativeDateModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatNativeDateModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideNativeDateAdapter()]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideNativeDateAdapter()]\n    }]\n  }], null, null);\n})();\nfunction provideNativeDateAdapter(formats = MAT_NATIVE_DATE_FORMATS) {\n  return [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: formats\n  }];\n}\nexport { AnimationCurves, AnimationDurations, MAT_NATIVE_DATE_FORMATS, MatNativeDateModule, NativeDateAdapter, NativeDateModule, VERSION, provideNativeDateAdapter };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, inject, ElementRef, ChangeDetectorRef, NgZone, ANIMATION_MODULE_TYPE, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _MatInternalFormField } from './internal-form-field-5960ea2e.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { M as MatRipple } from './ripple-5bdada85.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n    disabledInteractive: false\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatCheckbox),\n  multi: true\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n  /** The source checkbox of the event. */\n  source;\n  /** The new `checked` value of the checkbox. */\n  checked;\n}\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _options = inject(MAT_CHECKBOX_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Focuses the checkbox. */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n  /** Creates the change event that will be emitted by the checkbox. */\n  _createChangeEvent(isChecked) {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = isChecked;\n    return event;\n  }\n  /** Gets the element on which to add the animation CSS classes. */\n  _getAnimationTargetElement() {\n    return this._inputElement?.nativeElement;\n  }\n  /** CSS classes to add when transitioning between the different checkbox states. */\n  _animationClasses = {\n    uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n    uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n    checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n    checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n    indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n    indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n  };\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  ariaLabel = '';\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  ariaLabelledby = null;\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  ariaDescribedby;\n  /**\n   * Users can specify the `aria-expanded` attribute which will be forwarded to the input element\n   */\n  ariaExpanded;\n  /**\n   * Users can specify the `aria-controls` attribute which will be forwarded to the input element\n   */\n  ariaControls;\n  /** Users can specify the `aria-owns` attribute which will be forwarded to the input element */\n  ariaOwns;\n  _uniqueId;\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  id;\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  /** Whether the checkbox is required. */\n  required;\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n  labelPosition = 'after';\n  /** Name value will be applied to the input element if present */\n  name = null;\n  /** Event emitted when the checkbox's `checked` value changes. */\n  change = new EventEmitter();\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  indeterminateChange = new EventEmitter();\n  /** The value attribute of the native input element */\n  value;\n  /** Whether the checkbox has a ripple. */\n  disableRipple;\n  /** The native `<input type=\"checkbox\">` element */\n  _inputElement;\n  /** The native `<label>` element */\n  _labelElement;\n  /** Tabindex for the checkbox. */\n  tabIndex;\n  // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n  // the lack of type checking previously and assigning random strings.\n  /**\n   * Theme color of the checkbox. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/checkbox/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether the checkbox should remain interactive when it is disabled. */\n  disabledInteractive;\n  /**\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  _currentAnimationClass = '';\n  _currentCheckState = TransitionCheckState.Init;\n  _controlValueAccessorChangeFn = () => {};\n  _validatorChangeFn = () => {};\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-checkbox-');\n    this.disabledInteractive = this._options?.disabledInteractive ?? false;\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorChangeFn();\n    }\n  }\n  ngAfterViewInit() {\n    this._syncIndeterminate(this._indeterminate);\n  }\n  /** Whether the checkbox is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _checked = false;\n  /** Whether the checkbox is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _disabled = false;\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  get indeterminate() {\n    return this._indeterminate;\n  }\n  set indeterminate(value) {\n    const changed = value != this._indeterminate;\n    this._indeterminate = value;\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n    this._syncIndeterminate(this._indeterminate);\n  }\n  _indeterminate = false;\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  // Implemented as a part of Validator.\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  // Implemented as a part of Validator.\n  registerOnValidatorChange(fn) {\n    this._validatorChangeFn = fn;\n  }\n  _transitionCheckState(newState) {\n    let oldState = this._currentCheckState;\n    let element = this._getAnimationTargetElement();\n    if (oldState === newState || !element) {\n      return;\n    }\n    if (this._currentAnimationClass) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n    this._currentCheckState = newState;\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n  /** Toggles the `checked` state of the checkbox. */\n  toggle() {\n    this.checked = !this.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n  }\n  _handleInputClick() {\n    const clickAction = this._options?.clickAction;\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && clickAction !== 'check') {\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n      this._checked = !this._checked;\n      this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (this.disabled && this.disabledInteractive || !this.disabled && clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n  _onInteractionEvent(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n  _onBlur() {\n    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n    // Angular does not expect events to be raised during change detection, so any state change\n    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n    // telling the form control it has been touched until the next tick.\n    Promise.resolve().then(() => {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  _getAnimationClassForCheckStateTransition(oldState, newState) {\n    // Don't transition if animations are disabled.\n    if (this._animationMode === 'NoopAnimations') {\n      return '';\n    }\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          return this._animationClasses.uncheckedToChecked;\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n      case TransitionCheckState.Checked:\n        return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n      case TransitionCheckState.Indeterminate:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n    }\n    return '';\n  }\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  _syncIndeterminate(value) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n  _onInputClick() {\n    this._handleInputClick();\n  }\n  _onTouchTargetClick() {\n    this._handleInputClick();\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /**\n   *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n   *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n   *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n   *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n   *  bubbles when the label is clicked.\n   */\n  _preventBubblingFromLabel(event) {\n    if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  static ɵfac = function MatCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckbox)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCheckbox,\n    selectors: [[\"mat-checkbox\"]],\n    viewQuery: function MatCheckbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-checkbox\"],\n    hostVars: 16,\n    hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked)(\"mat-mdc-checkbox-disabled-interactive\", ctx.disabledInteractive);\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n      ariaExpanded: [2, \"aria-expanded\", \"ariaExpanded\", booleanAttribute],\n      ariaControls: [0, \"aria-controls\", \"ariaControls\"],\n      ariaOwns: [0, \"aria-owns\", \"ariaOwns\"],\n      id: \"id\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      labelPosition: \"labelPosition\",\n      name: \"name\",\n      value: \"value\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n      color: \"color\",\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n      checked: [2, \"checked\", \"checked\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute]\n    },\n    outputs: {\n      change: \"change\",\n      indeterminateChange: \"indeterminateChange\"\n    },\n    exportAs: [\"matCheckbox\"],\n    features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n      provide: NG_VALIDATORS,\n      useExisting: MatCheckbox,\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 15,\n    vars: 23,\n    consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n    template: function MatCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 3);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n        });\n        i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onTouchTargetClick());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 6, 1);\n        i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onBlur());\n        })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInputClick());\n        })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 7);\n        i0.ɵɵelementStart(7, \"div\", 8);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 9);\n        i0.ɵɵelement(9, \"path\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(10, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 13, 2);\n        i0.ɵɵprojection(14);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const checkbox_r2 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"aria-controls\", ctx.ariaControls)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? true : null)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-owns\", ctx.ariaOwns)(\"name\", ctx.name)(\"value\", ctx.value);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", ctx.inputId);\n      }\n    },\n    dependencies: [MatRipple, _MatInternalFormField],\n    styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-checkbox',\n      host: {\n        'class': 'mat-mdc-checkbox',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n        '[class.mdc-checkbox--disabled]': 'disabled',\n        '[id]': 'id',\n        // Add classes that users can use to more easily target disabled or checked checkboxes.\n        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n        '[class.mat-mdc-checkbox-checked]': 'checked',\n        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"'\n      },\n      providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }],\n      exportAs: 'matCheckbox',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    ariaExpanded: [{\n      type: Input,\n      args: [{\n        alias: 'aria-expanded',\n        transform: booleanAttribute\n      }]\n    }],\n    ariaControls: [{\n      type: Input,\n      args: ['aria-controls']\n    }],\n    ariaOwns: [{\n      type: Input,\n      args: ['aria-owns']\n    }],\n    id: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    indeterminateChange: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _labelElement: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatCheckboxRequiredValidator_BaseFactory;\n    return function MatCheckboxRequiredValidator_Factory(__ngFactoryType__) {\n      return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(__ngFactoryType__ || MatCheckboxRequiredValidator);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCheckboxRequiredValidator,\n    selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n      providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n  static ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _MatCheckboxRequiredValidatorModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: _MatCheckboxRequiredValidatorModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckboxRequiredValidator],\n      exports: [MatCheckboxRequiredValidator]\n    }]\n  }], null, null);\n})();\nclass MatCheckboxModule {\n  static ɵfac = function MatCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCheckboxModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckbox, MatCommonModule],\n      exports: [MatCheckbox, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst _c0 = [\"determinateSpinner\"];\nfunction MatProgressSpinner_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵelement(1, \"circle\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"viewBox\", ctx_r0._viewBox());\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"stroke-dasharray\", ctx_r0._strokeCircumference(), \"px\")(\"stroke-dashoffset\", ctx_r0._strokeCircumference() / 2, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth(), \"%\");\n    i0.ɵɵattribute(\"r\", ctx_r0._circleRadius());\n  }\n}\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n  providedIn: 'root',\n  factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    diameter: BASE_SIZE\n  };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n  _elementRef = inject(ElementRef);\n  /** Whether the _mat-animation-noopable class should be applied, disabling animations.  */\n  _noopAnimations;\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the progress spinner. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/progress-spinner/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  get color() {\n    return this._color || this._defaultColor;\n  }\n  set color(value) {\n    this._color = value;\n  }\n  _color;\n  _defaultColor = 'primary';\n  /** The element of the determinate spinner. */\n  _determinateCircle;\n  constructor() {\n    const animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    const defaults = inject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS);\n    this._noopAnimations = animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n    this.mode = this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner' ? 'indeterminate' : 'determinate';\n    if (defaults) {\n      if (defaults.color) {\n        this.color = this._defaultColor = defaults.color;\n      }\n      if (defaults.diameter) {\n        this.diameter = defaults.diameter;\n      }\n      if (defaults.strokeWidth) {\n        this.strokeWidth = defaults.strokeWidth;\n      }\n    }\n  }\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  mode;\n  /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n  get value() {\n    return this.mode === 'determinate' ? this._value : 0;\n  }\n  set value(v) {\n    this._value = Math.max(0, Math.min(100, v || 0));\n  }\n  _value = 0;\n  /** The diameter of the progress spinner (will set width and height of svg). */\n  get diameter() {\n    return this._diameter;\n  }\n  set diameter(size) {\n    this._diameter = size || 0;\n  }\n  _diameter = BASE_SIZE;\n  /** Stroke width of the progress spinner. */\n  get strokeWidth() {\n    return this._strokeWidth ?? this.diameter / 10;\n  }\n  set strokeWidth(value) {\n    this._strokeWidth = value || 0;\n  }\n  _strokeWidth;\n  /** The radius of the spinner, adjusted for stroke width. */\n  _circleRadius() {\n    return (this.diameter - BASE_STROKE_WIDTH) / 2;\n  }\n  /** The view box of the spinner's svg element. */\n  _viewBox() {\n    const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n    return `0 0 ${viewBox} ${viewBox}`;\n  }\n  /** The stroke circumference of the svg circle. */\n  _strokeCircumference() {\n    return 2 * Math.PI * this._circleRadius();\n  }\n  /** The dash offset of the svg circle. */\n  _strokeDashOffset() {\n    if (this.mode === 'determinate') {\n      return this._strokeCircumference() * (100 - this._value) / 100;\n    }\n    return null;\n  }\n  /** Stroke width of the circle in percent. */\n  _circleStrokeWidth() {\n    return this.strokeWidth / this.diameter * 100;\n  }\n  static ɵfac = function MatProgressSpinner_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatProgressSpinner)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatProgressSpinner,\n    selectors: [[\"mat-progress-spinner\"], [\"mat-spinner\"]],\n    viewQuery: function MatProgressSpinner_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._determinateCircle = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"progressbar\", \"tabindex\", \"-1\", 1, \"mat-mdc-progress-spinner\", \"mdc-circular-progress\"],\n    hostVars: 18,\n    hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuemin\", 0)(\"aria-valuemax\", 100)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        i0.ɵɵclassMap(\"mat-\" + ctx.color);\n        i0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\")(\"--mdc-circular-progress-size\", ctx.diameter + \"px\")(\"--mdc-circular-progress-active-indicator-width\", ctx.diameter + \"px\");\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mdc-circular-progress--indeterminate\", ctx.mode === \"indeterminate\");\n      }\n    },\n    inputs: {\n      color: \"color\",\n      mode: \"mode\",\n      value: [2, \"value\", \"value\", numberAttribute],\n      diameter: [2, \"diameter\", \"diameter\", numberAttribute],\n      strokeWidth: [2, \"strokeWidth\", \"strokeWidth\", numberAttribute]\n    },\n    exportAs: [\"matProgressSpinner\"],\n    decls: 14,\n    vars: 11,\n    consts: [[\"circle\", \"\"], [\"determinateSpinner\", \"\"], [\"aria-hidden\", \"true\", 1, \"mdc-circular-progress__determinate-container\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"focusable\", \"false\", 1, \"mdc-circular-progress__determinate-circle-graphic\"], [\"cx\", \"50%\", \"cy\", \"50%\", 1, \"mdc-circular-progress__determinate-circle\"], [\"aria-hidden\", \"true\", 1, \"mdc-circular-progress__indeterminate-container\"], [1, \"mdc-circular-progress__spinner-layer\"], [1, \"mdc-circular-progress__circle-clipper\", \"mdc-circular-progress__circle-left\"], [3, \"ngTemplateOutlet\"], [1, \"mdc-circular-progress__gap-patch\"], [1, \"mdc-circular-progress__circle-clipper\", \"mdc-circular-progress__circle-right\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"focusable\", \"false\", 1, \"mdc-circular-progress__indeterminate-circle-graphic\"], [\"cx\", \"50%\", \"cy\", \"50%\"]],\n    template: function MatProgressSpinner_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MatProgressSpinner_ng_template_0_Template, 2, 8, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"div\", 2, 1);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(4, \"svg\", 3);\n        i0.ɵɵelement(5, \"circle\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵelementContainer(9, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 9);\n        i0.ɵɵelementContainer(11, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementContainer(13, 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const circle_r2 = i0.ɵɵreference(1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵattribute(\"viewBox\", ctx._viewBox());\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"stroke-dasharray\", ctx._strokeCircumference(), \"px\")(\"stroke-dashoffset\", ctx._strokeDashOffset(), \"px\")(\"stroke-width\", ctx._circleStrokeWidth(), \"%\");\n        i0.ɵɵattribute(\"r\", ctx._circleRadius());\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", circle_r2);\n      }\n    },\n    dependencies: [NgTemplateOutlet],\n    styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressSpinner, [{\n    type: Component,\n    args: [{\n      selector: 'mat-progress-spinner, mat-spinner',\n      exportAs: 'matProgressSpinner',\n      host: {\n        'role': 'progressbar',\n        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n        // set tab index to -1 so screen readers will read the aria-label\n        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n        'tabindex': '-1',\n        '[class]': '\"mat-\" + color',\n        '[class._mat-animation-noopable]': `_noopAnimations`,\n        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n        '[style.width.px]': 'diameter',\n        '[style.height.px]': 'diameter',\n        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n        '[attr.aria-valuemin]': '0',\n        '[attr.aria-valuemax]': '100',\n        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n        '[attr.mode]': 'mode'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [NgTemplateOutlet],\n      template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width, 4px)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-sys-primary))}@media(forced-colors: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    _determinateCircle: [{\n      type: ViewChild,\n      args: ['determinateSpinner']\n    }],\n    mode: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    diameter: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    strokeWidth: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }]\n  });\n})();\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\nclass MatProgressSpinnerModule {\n  static ɵfac = function MatProgressSpinnerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatProgressSpinnerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatProgressSpinnerModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatProgressSpinner, MatSpinner],\n      exports: [MatProgressSpinner, MatSpinner, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, ElementRef, forwardRef, ContentChild, ViewChild, Output, Input, Inject, Optional, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport * as i11 from '@angular/material/core';\nimport { MatOption } from '@angular/material/core';\nimport * as i12 from '@angular/material/form-field';\nimport { MatFormField } from '@angular/material/form-field';\nimport * as i10 from '@angular/material/select';\nimport { MatSelect } from '@angular/material/select';\nimport { BehaviorSubject, of, combineLatest, Subject } from 'rxjs';\nimport { switchMap, map, startWith, delay, takeUntil, take, tap, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/scrolling';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i5 from '@angular/material/checkbox';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i6 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i7 from '@angular/material/progress-spinner';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport * as i8 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i9 from '@angular/material/divider';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * Directive for providing a custom clear-icon.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>\n * </ngx-mat-select-search>\n */\nconst _c0 = [\"searchSelectInput\"];\nconst _c1 = [\"innerSelectSearch\"];\nconst _c2 = [[[\"\", 8, \"mat-select-search-custom-header-content\"]], [[\"\", \"ngxMatSelectSearchClear\", \"\"]], [[\"\", \"ngxMatSelectNoEntriesFound\", \"\"]]];\nconst _c3 = [\".mat-select-search-custom-header-content\", \"[ngxMatSelectSearchClear]\", \"[ngxMatSelectNoEntriesFound]\"];\nconst _c4 = (a0, a1) => ({\n  \"mat-select-search-inner-multiple\": a0,\n  \"mat-select-search-inner-toggle-all\": a1\n});\nfunction MatSelectSearchComponent_mat_checkbox_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 12);\n    i0.ɵɵlistener(\"change\", function MatSelectSearchComponent_mat_checkbox_4_Template_mat_checkbox_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._emitSelectAllBooleanToParent($event.checked));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r2.matFormField == null ? null : ctx_r2.matFormField.color)(\"checked\", ctx_r2.toggleAllCheckboxChecked)(\"indeterminate\", ctx_r2.toggleAllCheckboxIndeterminate)(\"matTooltip\", ctx_r2.toggleAllCheckboxTooltipMessage)(\"matTooltipPosition\", ctx_r2.toggleAllCheckboxTooltipPosition);\n  }\n}\nfunction MatSelectSearchComponent_mat_spinner_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 13);\n  }\n}\nfunction MatSelectSearchComponent_button_8_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"clearIcon; else defaultIcon\"]);\n  }\n}\nfunction MatSelectSearchComponent_button_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"svgIcon\", ctx_r2.closeSvgIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", !ctx_r2.closeSvgIcon ? ctx_r2.closeIcon : null, \" \");\n  }\n}\nfunction MatSelectSearchComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function MatSelectSearchComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2._reset(true));\n    });\n    i0.ɵɵtemplate(1, MatSelectSearchComponent_button_8_ng_content_1_Template, 1, 0, \"ng-content\", 15)(2, MatSelectSearchComponent_button_8_ng_template_2_Template, 2, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const defaultIcon_r5 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.clearIcon)(\"ngIfElse\", defaultIcon_r5);\n  }\n}\nfunction MatSelectSearchComponent_div_11_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"noEntriesFound; else defaultNoEntriesFound\"]);\n  }\n}\nfunction MatSelectSearchComponent_div_11_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate(ctx_r2.noEntriesFoundLabel);\n  }\n}\nfunction MatSelectSearchComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, MatSelectSearchComponent_div_11_ng_content_1_Template, 1, 0, \"ng-content\", 15)(2, MatSelectSearchComponent_div_11_ng_template_2_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const defaultNoEntriesFound_r6 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.noEntriesFound)(\"ngIfElse\", defaultNoEntriesFound_r6);\n  }\n}\nclass MatSelectSearchClearDirective {\n  static ɵfac = function MatSelectSearchClearDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectSearchClearDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSelectSearchClearDirective,\n    selectors: [[\"\", \"ngxMatSelectSearchClear\", \"\"]],\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectSearchClearDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxMatSelectSearchClear]',\n      standalone: false\n    }]\n  }], null, null);\n})();\n\n/** List of inputs of NgxMatSelectSearchComponent that can be configured with a global default. */\nconst configurableDefaultOptions = ['ariaLabel', 'clearSearchInput', 'closeIcon', 'closeSvgIcon', 'disableInitialFocus', 'disableScrollToActiveOnOptionsChanged', 'enableClearOnEscapePressed', 'hideClearSearchButton', 'noEntriesFoundLabel', 'placeholderLabel', 'preventHomeEndKeyPropagation', 'searching'];\n/**\n * InjectionToken that can be used to specify global options. e.g.\n *\n * ```typescript\n * providers: [\n *   {\n *     provide: MAT_SELECTSEARCH_DEFAULT_OPTIONS,\n *     useValue: <MatSelectSearchOptions>{\n *       closeIcon: 'delete',\n *       noEntriesFoundLabel: 'No options found'\n *     }\n *   }\n * ]\n * ```\n *\n * See the corresponding inputs of `MatSelectSearchComponent` for documentation.\n */\nconst MAT_SELECTSEARCH_DEFAULT_OPTIONS = new InjectionToken('mat-selectsearch-default-options');\n\n/**\n * Directive for providing a custom no entries found element.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <span ngxMatSelectNoEntriesFound>\n *     No entries found <button>Add</button>\n *   </span>\n * </ngx-mat-select-search>\n */\nclass MatSelectNoEntriesFoundDirective {\n  static ɵfac = function MatSelectNoEntriesFoundDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectNoEntriesFoundDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSelectNoEntriesFoundDirective,\n    selectors: [[\"\", \"ngxMatSelectNoEntriesFound\", \"\"]],\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectNoEntriesFoundDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxMatSelectNoEntriesFound]',\n      standalone: false\n    }]\n  }], null, null);\n})();\n\n/* tslint:disable:member-ordering component-selector */\n/**\n * Component providing an input field for searching MatSelect options.\n *\n * Example usage:\n *\n * interface Bank {\n *  id: string;\n *  name: string;\n * }\n *\n * @Component({\n *   selector: 'my-app-data-selection',\n *   template: `\n *     <mat-form-field>\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\n *         <mat-option>\n *           <ngx-mat-select-search [formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\n *         </mat-option>\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\n *           {{bank.name}}\n *         </mat-option>\n *       </mat-select>\n *     </mat-form-field>\n *   `\n * })\n * export class DataSelectionComponent implements OnInit, OnDestroy {\n *\n *   // control for the selected bank\n *   public bankCtrl: FormControl = new FormControl();\n *   // control for the MatSelect filter keyword\n *   public bankFilterCtrl: FormControl = new FormControl();\n *\n *   // list of banks\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\n *   // list of banks filtered by search keyword\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\n *\n *   // Subject that emits when the component has been destroyed.\n *   private _onDestroy = new Subject<void>();\n *\n *\n *   ngOnInit() {\n *     // load the initial bank list\n *     this.filteredBanks.next(this.banks.slice());\n *     // listen for search field value changes\n *     this.bankFilterCtrl.valueChanges\n *       .pipe(takeUntil(this._onDestroy))\n *       .subscribe(() => {\n *         this.filterBanks();\n *       });\n *   }\n *\n *   ngOnDestroy() {\n *     this._onDestroy.next();\n *     this._onDestroy.complete();\n *   }\n *\n *   private filterBanks() {\n *     if (!this.banks) {\n *       return;\n *     }\n *\n *     // get the search keyword\n *     let search = this.bankFilterCtrl.value;\n *     if (!search) {\n *       this.filteredBanks.next(this.banks.slice());\n *       return;\n *     } else {\n *       search = search.toLowerCase();\n *     }\n *\n *     // filter the banks\n *     this.filteredBanks.next(\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\n *     );\n *   }\n * }\n */\nclass MatSelectSearchComponent {\n  matSelect;\n  changeDetectorRef;\n  _viewportRuler;\n  matOption;\n  matFormField;\n  /** Label of the search placeholder */\n  placeholderLabel = 'Suche';\n  /** Type of the search input field */\n  type = 'text';\n  /** Font-based icon used for displaying Close-Icon */\n  closeIcon = 'close';\n  /** SVG-based icon used for displaying Close-Icon. If set, closeIcon is overridden */\n  closeSvgIcon;\n  /** Label to be shown when no entries are found. Set to null if no message should be shown. */\n  noEntriesFoundLabel = 'Keine Optionen gefunden';\n  /**\n    * Whether the search field should be cleared after the dropdown menu is closed.\n    * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)\n    */\n  clearSearchInput = true;\n  /** Whether to show the search-in-progress indicator */\n  searching = false;\n  /** Disables initial focusing of the input field */\n  disableInitialFocus = false;\n  /** Enable clear input on escape pressed */\n  enableClearOnEscapePressed = false;\n  /**\n   * Prevents home / end key being propagated to mat-select,\n   * allowing to move the cursor within the search input instead of navigating the options\n   */\n  preventHomeEndKeyPropagation = false;\n  /** Disables scrolling to active options when option list changes. Useful for server-side search */\n  disableScrollToActiveOnOptionsChanged = false;\n  /** Adds 508 screen reader support for search box */\n  ariaLabel = 'dropdown search';\n  /** Whether to show Select All Checkbox (for mat-select[multi=true]) */\n  showToggleAllCheckbox = false;\n  /** Select all checkbox checked state */\n  toggleAllCheckboxChecked = false;\n  /** select all checkbox indeterminate state */\n  toggleAllCheckboxIndeterminate = false;\n  /** Display a message in a tooltip on the toggle-all checkbox */\n  toggleAllCheckboxTooltipMessage = '';\n  /** Define the position of the tooltip on the toggle-all checkbox. */\n  toggleAllCheckboxTooltipPosition = 'below';\n  /** Show/Hide the search clear button of the search input */\n  hideClearSearchButton = false;\n  /**\n   * Always restore selected options on selectionChange for mode multi (e.g. for lazy loading/infinity scrolling).\n   * Defaults to false, so selected options are only restored while filtering is active.\n   */\n  alwaysRestoreSelectedOptionsMulti = false;\n  /**\n   * Recreate array of selected values for multi-selects.\n   *\n   * This is useful if the selected values are stored in an immutable data structure.\n   */\n  recreateValuesArray = false;\n  /** Output emitter to send to parent component with the toggle all boolean */\n  toggleAll = new EventEmitter();\n  /** Reference to the search input field */\n  searchSelectInput;\n  /** Reference to the search input field */\n  innerSelectSearch;\n  /** Reference to custom search input clear icon */\n  clearIcon;\n  /** Reference to custom no entries found element */\n  noEntriesFound;\n  /** Current search value */\n  get value() {\n    return this._formControl.value;\n  }\n  _lastExternalInputValue;\n  onTouched = _ => {};\n  /** Reference to the MatSelect options */\n  set _options(_options) {\n    this._options$.next(_options);\n  }\n  get _options() {\n    return this._options$.getValue();\n  }\n  _options$ = new BehaviorSubject(null);\n  optionsList$ = this._options$.pipe(switchMap(_options => _options ? _options.changes.pipe(map(options => options.toArray()), startWith(_options.toArray())) : of(null)));\n  optionsLength$ = this.optionsList$.pipe(map(options => options ? options.length : 0));\n  /** Previously selected values when using <mat-select [multiple]=\"true\">*/\n  previousSelectedValues;\n  _formControl = new FormControl('', {\n    nonNullable: true\n  });\n  /** Whether to show the no entries found message */\n  _showNoEntriesFound$ = combineLatest([this._formControl.valueChanges, this.optionsLength$]).pipe(map(([value, optionsLength]) => !!(this.noEntriesFoundLabel && value && optionsLength === this.getOptionsLengthOffset())));\n  /** Subject that emits when the component has been destroyed. */\n  _onDestroy = new Subject();\n  /** Reference to active descendant for ARIA Support. */\n  activeDescendant;\n  constructor(matSelect, changeDetectorRef, _viewportRuler, matOption, matFormField, defaultOptions) {\n    this.matSelect = matSelect;\n    this.changeDetectorRef = changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this.matOption = matOption;\n    this.matFormField = matFormField;\n    this.applyDefaultOptions(defaultOptions);\n  }\n  applyDefaultOptions(defaultOptions) {\n    if (!defaultOptions) {\n      return;\n    }\n    for (const key of configurableDefaultOptions) {\n      if (defaultOptions.hasOwnProperty(key)) {\n        this[key] = defaultOptions[key];\n      }\n    }\n  }\n  ngOnInit() {\n    // set custom mat-option class if the component was placed inside a mat-option\n    if (this.matOption) {\n      this.matOption.disabled = true;\n      this.matOption._getHostElement().classList.add('contains-mat-select-search');\n      this.matOption._getHostElement().setAttribute('role', 'presentation');\n    } else {\n      console.error('<ngx-mat-select-search> must be placed inside a <mat-option> element');\n    }\n    // when the select dropdown panel is opened or closed\n    this.matSelect.openedChange.pipe(delay(1), takeUntil(this._onDestroy)).subscribe(opened => {\n      if (opened) {\n        this.updateInputWidth();\n        // focus the search field when opening\n        if (!this.disableInitialFocus) {\n          this._focus();\n        }\n      } else {\n        // clear it when closing\n        if (this.clearSearchInput) {\n          this._reset();\n        }\n      }\n    });\n    // set the first item active after the options changed\n    this.matSelect.openedChange.pipe(take(1), switchMap(_ => {\n      this._options = this.matSelect.options;\n      // Closure variable for tracking the most recent first option.\n      // In order to avoid causing the list to\n      // scroll to the top when options are added to the bottom of\n      // the list (eg: infinite scroll), we compare only\n      // the changes to the first options to determine if we\n      // should set the first item as active.\n      // This prevents unnecessary scrolling to the top of the list\n      // when options are appended, but allows the first item\n      // in the list to be set as active by default when there\n      // is no active selection\n      let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];\n      return this._options.changes.pipe(tap(() => {\n        // avoid \"expression has been changed\" error\n        setTimeout(() => {\n          // Convert the QueryList to an array\n          const options = this._options.toArray();\n          // The true first item is offset by 1\n          const currentFirstOption = options[this.getOptionsLengthOffset()];\n          const keyManager = this.matSelect._keyManager;\n          if (keyManager && this.matSelect.panelOpen && currentFirstOption) {\n            // set first item active and input width\n            // Check to see if the first option in these changes is different from the previous.\n            const firstOptionIsChanged = !previousFirstOption || !this.matSelect.compareWith(previousFirstOption.value, currentFirstOption.value);\n            // CASE: The first option is different now.\n            // Indicates we should set it as active and scroll to the top.\n            if (firstOptionIsChanged || !keyManager.activeItem || !options.find(option => this.matSelect.compareWith(option.value, keyManager.activeItem?.value))) {\n              keyManager.setActiveItem(this.getOptionsLengthOffset());\n            }\n            // wait for panel width changes\n            setTimeout(() => {\n              this.updateInputWidth();\n            });\n          }\n          // Update our reference\n          previousFirstOption = currentFirstOption;\n        });\n      }));\n    })).pipe(takeUntil(this._onDestroy)).subscribe();\n    // add or remove css class depending on whether to show the no entries found message\n    // note: this is hacky\n    this._showNoEntriesFound$.pipe(takeUntil(this._onDestroy)).subscribe(showNoEntriesFound => {\n      // set no entries found class on mat option\n      if (this.matOption) {\n        if (showNoEntriesFound) {\n          this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');\n        } else {\n          this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');\n        }\n      }\n    });\n    // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized\n    this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      if (this.matSelect.panelOpen) {\n        this.updateInputWidth();\n      }\n    });\n    this.initMultipleHandling();\n    this.optionsList$.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      // update view when available options change\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n  _emitSelectAllBooleanToParent(state) {\n    this.toggleAll.emit(state);\n  }\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n  _isToggleAllCheckboxVisible() {\n    return this.matSelect.multiple && this.showToggleAllCheckbox;\n  }\n  /**\n   * Handles the key down event with MatSelect.\n   * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n   * @param event\n   */\n  _handleKeydown(event) {\n    // Prevent propagation for all alphanumeric characters in order to avoid selection issues\n    // tslint:disable-next-line:max-line-length\n    // Needed to avoid handling in https://github.com/angular/components/blob/5439460d1fe166f8ec34ab7d48f05e0dd7f6a946/src/material/select/select.ts#L965\n    if (event.key && event.key.length === 1 || this.preventHomeEndKeyPropagation && (event.key === 'Home' || event.key === 'End')) {\n      event.stopPropagation();\n    }\n    if (this.matSelect.multiple && event.key && event.key === 'Enter') {\n      // Regain focus after multiselect, so we can further type\n      setTimeout(() => this._focus());\n    }\n    // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field\n    if (this.enableClearOnEscapePressed && event.key === 'Escape' && this.value) {\n      this._reset(true);\n      event.stopPropagation();\n    }\n  }\n  /**\n   * Handles the key up event with MatSelect.\n   * Allows e.g. the announcing of the currently activeDescendant by screen readers.\n   */\n  _handleKeyup(event) {\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      const ariaActiveDescendantId = this.matSelect._getAriaActiveDescendant();\n      const index = this._options.toArray().findIndex(item => item.id === ariaActiveDescendantId);\n      if (index !== -1) {\n        this.unselectActiveDescendant();\n        this.activeDescendant = this._options.toArray()[index]._getHostElement();\n        this.activeDescendant.setAttribute('aria-selected', 'true');\n        this.searchSelectInput.nativeElement.setAttribute('aria-activedescendant', ariaActiveDescendantId);\n      }\n    }\n  }\n  writeValue(value) {\n    this._lastExternalInputValue = value;\n    this._formControl.setValue(value);\n    this.changeDetectorRef.markForCheck();\n  }\n  onBlur() {\n    this.unselectActiveDescendant();\n    this.onTouched();\n  }\n  registerOnChange(fn) {\n    this._formControl.valueChanges.pipe(filter(value => value !== this._lastExternalInputValue), tap(() => this._lastExternalInputValue = undefined), takeUntil(this._onDestroy)).subscribe(fn);\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Focuses the search input field\n   */\n  _focus() {\n    if (!this.searchSelectInput || !this.matSelect.panel) {\n      return;\n    }\n    // save and restore scrollTop of panel, since it will be reset by focus()\n    // note: this is hacky\n    const panel = this.matSelect.panel.nativeElement;\n    const scrollTop = panel.scrollTop;\n    // focus\n    this.searchSelectInput.nativeElement.focus();\n    panel.scrollTop = scrollTop;\n  }\n  /**\n   * Resets the current search value\n   * @param focus whether to focus after resetting\n   */\n  _reset(focus) {\n    this._formControl.setValue('');\n    if (focus) {\n      this._focus();\n    }\n  }\n  /**\n   * Initializes handling <mat-select [multiple]=\"true\">\n   * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n   */\n  initMultipleHandling() {\n    if (!this.matSelect.ngControl) {\n      if (this.matSelect.multiple) {\n        // note: the access to matSelect.ngControl (instead of matSelect.value / matSelect.valueChanges)\n        // is necessary to properly work in multi-selection mode.\n        console.error('the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true');\n      }\n      return;\n    }\n    // if <mat-select [multiple]=\"true\">\n    // store previously selected values and restore them when they are deselected\n    // because the option is not available while we are currently filtering\n    this.previousSelectedValues = this.matSelect.ngControl.value;\n    if (!this.matSelect.ngControl.valueChanges) {\n      return;\n    }\n    this.matSelect.ngControl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(values => {\n      let restoreSelectedValues = false;\n      if (this.matSelect.multiple) {\n        if ((this.alwaysRestoreSelectedOptionsMulti || this._formControl.value && this._formControl.value.length) && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\n          if (!values || !Array.isArray(values)) {\n            values = [];\n          }\n          const optionValues = this.matSelect.options.map(option => option.value);\n          this.previousSelectedValues.forEach(previousValue => {\n            if (!values.some(v => this.matSelect.compareWith(v, previousValue)) && !optionValues.some(v => this.matSelect.compareWith(v, previousValue))) {\n              // if a value that was selected before is deselected and not found in the options, it was deselected\n              // due to the filtering, so we restore it.\n              if (this.recreateValuesArray) {\n                values = [...values, previousValue];\n              } else {\n                values.push(previousValue);\n              }\n              restoreSelectedValues = true;\n            }\n          });\n        }\n      }\n      this.previousSelectedValues = values;\n      if (restoreSelectedValues) {\n        this.matSelect._onChange(values);\n      }\n    });\n  }\n  /**\n   *  Set the width of the innerSelectSearch to fit even custom scrollbars\n   *  And support all Operating Systems\n   */\n  updateInputWidth() {\n    if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\n      return;\n    }\n    let element = this.innerSelectSearch.nativeElement;\n    let panelElement = null;\n    while (element && element.parentElement) {\n      element = element.parentElement;\n      if (element.classList.contains('mat-select-panel')) {\n        panelElement = element;\n        break;\n      }\n    }\n    if (panelElement) {\n      this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\n    }\n  }\n  /**\n   * Determine the offset to length that can be caused by the optional matOption used as a search input.\n   */\n  getOptionsLengthOffset() {\n    if (this.matOption) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n  unselectActiveDescendant() {\n    this.activeDescendant?.removeAttribute('aria-selected');\n    this.searchSelectInput.nativeElement.removeAttribute('aria-activedescendant');\n  }\n  static ɵfac = function MatSelectSearchComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSelectSearchComponent)(i0.ɵɵdirectiveInject(MatSelect), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(MatOption, 8), i0.ɵɵdirectiveInject(MatFormField, 8), i0.ɵɵdirectiveInject(MAT_SELECTSEARCH_DEFAULT_OPTIONS, 8));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSelectSearchComponent,\n    selectors: [[\"ngx-mat-select-search\"]],\n    contentQueries: function MatSelectSearchComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatSelectSearchClearDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatSelectNoEntriesFoundDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.clearIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.noEntriesFound = _t.first);\n      }\n    },\n    viewQuery: function MatSelectSearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ElementRef);\n        i0.ɵɵviewQuery(_c1, 7, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchSelectInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.innerSelectSearch = _t.first);\n      }\n    },\n    inputs: {\n      placeholderLabel: \"placeholderLabel\",\n      type: \"type\",\n      closeIcon: \"closeIcon\",\n      closeSvgIcon: \"closeSvgIcon\",\n      noEntriesFoundLabel: \"noEntriesFoundLabel\",\n      clearSearchInput: \"clearSearchInput\",\n      searching: \"searching\",\n      disableInitialFocus: \"disableInitialFocus\",\n      enableClearOnEscapePressed: \"enableClearOnEscapePressed\",\n      preventHomeEndKeyPropagation: \"preventHomeEndKeyPropagation\",\n      disableScrollToActiveOnOptionsChanged: \"disableScrollToActiveOnOptionsChanged\",\n      ariaLabel: \"ariaLabel\",\n      showToggleAllCheckbox: \"showToggleAllCheckbox\",\n      toggleAllCheckboxChecked: \"toggleAllCheckboxChecked\",\n      toggleAllCheckboxIndeterminate: \"toggleAllCheckboxIndeterminate\",\n      toggleAllCheckboxTooltipMessage: \"toggleAllCheckboxTooltipMessage\",\n      toggleAllCheckboxTooltipPosition: \"toggleAllCheckboxTooltipPosition\",\n      hideClearSearchButton: \"hideClearSearchButton\",\n      alwaysRestoreSelectedOptionsMulti: \"alwaysRestoreSelectedOptionsMulti\",\n      recreateValuesArray: \"recreateValuesArray\"\n    },\n    outputs: {\n      toggleAll: \"toggleAll\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatSelectSearchComponent),\n      multi: true\n    }])],\n    ngContentSelectors: _c3,\n    decls: 13,\n    vars: 14,\n    consts: [[\"innerSelectSearch\", \"\"], [\"searchSelectInput\", \"\"], [\"defaultIcon\", \"\"], [\"defaultNoEntriesFound\", \"\"], [\"matInput\", \"\", 1, \"mat-select-search-input\", \"mat-select-search-hidden\"], [1, \"mat-select-search-inner\", \"mat-typography\", \"mat-datepicker-content\", \"mat-tab-header\", 3, \"ngClass\"], [1, \"mat-select-search-inner-row\"], [\"class\", \"mat-select-search-toggle-all-checkbox\", \"matTooltipClass\", \"ngx-mat-select-search-toggle-all-tooltip\", 3, \"color\", \"checked\", \"indeterminate\", \"matTooltip\", \"matTooltipPosition\", \"change\", 4, \"ngIf\"], [\"autocomplete\", \"off\", 1, \"mat-select-search-input\", 3, \"keydown\", \"keyup\", \"blur\", \"type\", \"formControl\", \"placeholder\"], [\"class\", \"mat-select-search-spinner\", \"diameter\", \"16\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Clear\", \"class\", \"mat-select-search-clear\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"mat-select-search-no-entries-found\", 4, \"ngIf\"], [\"matTooltipClass\", \"ngx-mat-select-search-toggle-all-tooltip\", 1, \"mat-select-search-toggle-all-checkbox\", 3, \"change\", \"color\", \"checked\", \"indeterminate\", \"matTooltip\", \"matTooltipPosition\"], [\"diameter\", \"16\", 1, \"mat-select-search-spinner\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 1, \"mat-select-search-clear\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"svgIcon\"], [1, \"mat-select-search-no-entries-found\"]],\n    template: function MatSelectSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵelement(0, \"input\", 4);\n        i0.ɵɵelementStart(1, \"div\", 5, 0)(3, \"div\", 6);\n        i0.ɵɵtemplate(4, MatSelectSearchComponent_mat_checkbox_4_Template, 1, 5, \"mat-checkbox\", 7);\n        i0.ɵɵelementStart(5, \"input\", 8, 1);\n        i0.ɵɵlistener(\"keydown\", function MatSelectSearchComponent_Template_input_keydown_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleKeydown($event));\n        })(\"keyup\", function MatSelectSearchComponent_Template_input_keyup_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._handleKeyup($event));\n        })(\"blur\", function MatSelectSearchComponent_Template_input_blur_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onBlur());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, MatSelectSearchComponent_mat_spinner_7_Template, 1, 0, \"mat-spinner\", 9)(8, MatSelectSearchComponent_button_8_Template, 4, 2, \"button\", 10);\n        i0.ɵɵprojection(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, MatSelectSearchComponent_div_11_Template, 4, 2, \"div\", 11);\n        i0.ɵɵpipe(12, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c4, ctx.matSelect.multiple, ctx._isToggleAllCheckboxVisible()));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx._isToggleAllCheckboxVisible());\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"type\", ctx.type)(\"formControl\", ctx._formControl)(\"placeholder\", ctx.placeholderLabel);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.searching);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.hideClearSearchButton && ctx.value && !ctx.searching);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 9, ctx._showNoEntriesFound$));\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i4.MatIconButton, i5.MatCheckbox, i6.MatIcon, i7.MatProgressSpinner, i8.MatTooltip, i9.MatDivider, i2.AsyncPipe],\n    styles: [\".mat-select-search-hidden[_ngcontent-%COMP%]{visibility:hidden}.mat-select-search-inner[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-select-panel-background-color)}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]   .mat-select-search-inner-row[_ngcontent-%COMP%]{display:flex;align-items:center}.mat-select-search-input[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-select-panel-background-color);padding:0 44px 0 16px;height:calc(3em - 1px);line-height:calc(3em - 1px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-right:16px;padding-left:44px}.mat-select-search-input[_ngcontent-%COMP%]::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-left:5px}.mat-select-search-no-entries-found[_ngcontent-%COMP%]{padding-top:8px}.mat-select-search-clear[_ngcontent-%COMP%]{position:absolute;right:4px;top:0}[dir=rtl][_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{right:auto;left:4px}.mat-select-search-spinner[_ngcontent-%COMP%]{position:absolute;right:16px;top:calc(50% - 8px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%]{right:auto;left:16px}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:5px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:0;padding-right:5px}\"],\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSelectSearchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-mat-select-search',\n      standalone: false,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MatSelectSearchComponent),\n        multi: true\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<!--\\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\\n\\nUse of this source code is governed by an MIT-style license that can be\\nfound in the LICENSE file at https://angular.io/license\\n-->\\n<!-- Placeholder to adjust vertical offset of the mat-option elements -->\\n<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\"/>\\n\\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\\n<div\\n      #innerSelectSearch\\n      class=\\\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\\\"\\n      [ngClass]=\\\"{'mat-select-search-inner-multiple': matSelect.multiple, 'mat-select-search-inner-toggle-all': _isToggleAllCheckboxVisible() }\\\">\\n\\n  <div class=\\\"mat-select-search-inner-row\\\">\\n    <mat-checkbox *ngIf=\\\"_isToggleAllCheckboxVisible()\\\"\\n                  [color]=\\\"matFormField?.color\\\"\\n                  class=\\\"mat-select-search-toggle-all-checkbox\\\"\\n                  [checked]=\\\"toggleAllCheckboxChecked\\\"\\n                  [indeterminate]=\\\"toggleAllCheckboxIndeterminate\\\"\\n                  [matTooltip]=\\\"toggleAllCheckboxTooltipMessage\\\"\\n                  matTooltipClass=\\\"ngx-mat-select-search-toggle-all-tooltip\\\"\\n                  [matTooltipPosition]=\\\"toggleAllCheckboxTooltipPosition\\\"\\n                  (change)=\\\"_emitSelectAllBooleanToParent($event.checked)\\\"\\n    ></mat-checkbox>\\n\\n    <input class=\\\"mat-select-search-input\\\"\\n           autocomplete=\\\"off\\\"\\n           [type]=\\\"type\\\"\\n           [formControl]=\\\"_formControl\\\"\\n           #searchSelectInput\\n           (keydown)=\\\"_handleKeydown($event)\\\"\\n           (keyup)=\\\"_handleKeyup($event)\\\"\\n           (blur)=\\\"onBlur()\\\"\\n           [placeholder]=\\\"placeholderLabel\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n    />\\n    <mat-spinner *ngIf=\\\"searching\\\"\\n            class=\\\"mat-select-search-spinner\\\"\\n            diameter=\\\"16\\\"></mat-spinner>\\n\\n    <button *ngIf=\\\"!hideClearSearchButton && value && !searching\\\"\\n            mat-icon-button\\n            aria-label=\\\"Clear\\\"\\n            (click)=\\\"_reset(true)\\\"\\n            class=\\\"mat-select-search-clear\\\">\\n      <ng-content *ngIf=\\\"clearIcon; else defaultIcon\\\" select=\\\"[ngxMatSelectSearchClear]\\\"></ng-content>\\n      <ng-template #defaultIcon>\\n        <mat-icon [svgIcon]=\\\"closeSvgIcon\\\">\\n          {{!closeSvgIcon ? closeIcon : null}}\\n        </mat-icon>\\n      </ng-template>\\n    </button>\\n\\n    <ng-content select=\\\".mat-select-search-custom-header-content\\\"></ng-content>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n</div>\\n\\n<div *ngIf=\\\"_showNoEntriesFound$ | async\\\"\\n     class=\\\"mat-select-search-no-entries-found\\\">\\n  <ng-content *ngIf=\\\"noEntriesFound; else defaultNoEntriesFound\\\"\\n              select=\\\"[ngxMatSelectNoEntriesFound]\\\"></ng-content>\\n  <ng-template #defaultNoEntriesFound>{{noEntriesFoundLabel}}</ng-template>\\n</div>\\n\\n\",\n      styles: [\".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-select-panel-background-color)}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all .mat-select-search-inner-row{display:flex;align-items:center}.mat-select-search-input{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-select-panel-background-color);padding:0 44px 0 16px;height:calc(3em - 1px);line-height:calc(3em - 1px)}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-input::placeholder{color:var(--mdc-filled-text-field-input-text-placeholder-color)}.mat-select-search-inner-toggle-all .mat-select-search-input{padding-left:5px}.mat-select-search-no-entries-found{padding-top:8px}.mat-select-search-clear{position:absolute;right:4px;top:0}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox{padding-left:5px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:5px}\\n\"]\n    }]\n  }], () => [{\n    type: i10.MatSelect,\n    decorators: [{\n      type: Inject,\n      args: [MatSelect]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i11.MatOption,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MatOption]\n    }]\n  }, {\n    type: i12.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MatFormField]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_SELECTSEARCH_DEFAULT_OPTIONS]\n    }]\n  }], {\n    placeholderLabel: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    closeIcon: [{\n      type: Input\n    }],\n    closeSvgIcon: [{\n      type: Input\n    }],\n    noEntriesFoundLabel: [{\n      type: Input\n    }],\n    clearSearchInput: [{\n      type: Input\n    }],\n    searching: [{\n      type: Input\n    }],\n    disableInitialFocus: [{\n      type: Input\n    }],\n    enableClearOnEscapePressed: [{\n      type: Input\n    }],\n    preventHomeEndKeyPropagation: [{\n      type: Input\n    }],\n    disableScrollToActiveOnOptionsChanged: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    showToggleAllCheckbox: [{\n      type: Input\n    }],\n    toggleAllCheckboxChecked: [{\n      type: Input\n    }],\n    toggleAllCheckboxIndeterminate: [{\n      type: Input\n    }],\n    toggleAllCheckboxTooltipMessage: [{\n      type: Input\n    }],\n    toggleAllCheckboxTooltipPosition: [{\n      type: Input\n    }],\n    hideClearSearchButton: [{\n      type: Input\n    }],\n    alwaysRestoreSelectedOptionsMulti: [{\n      type: Input\n    }],\n    recreateValuesArray: [{\n      type: Input\n    }],\n    toggleAll: [{\n      type: Output\n    }],\n    searchSelectInput: [{\n      type: ViewChild,\n      args: ['searchSelectInput', {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    innerSelectSearch: [{\n      type: ViewChild,\n      args: ['innerSelectSearch', {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    clearIcon: [{\n      type: ContentChild,\n      args: [MatSelectSearchClearDirective]\n    }],\n    noEntriesFound: [{\n      type: ContentChild,\n      args: [MatSelectNoEntriesFoundDirective]\n    }]\n  });\n})();\n\n/**\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MatSelectSearchVersion = '8.0.0';\nclass NgxMatSelectSearchModule {\n  static ɵfac = function NgxMatSelectSearchModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgxMatSelectSearchModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxMatSelectSearchModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, ReactiveFormsModule, MatButtonModule, MatCheckboxModule, MatIconModule, MatProgressSpinnerModule, MatTooltipModule, MatDividerModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxMatSelectSearchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule, MatButtonModule, MatCheckboxModule, MatIconModule, MatProgressSpinnerModule, MatTooltipModule, MatDividerModule],\n      declarations: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective],\n      exports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTSEARCH_DEFAULT_OPTIONS, MatSelectNoEntriesFoundDirective, MatSelectSearchClearDirective, MatSelectSearchComponent, MatSelectSearchVersion, NgxMatSelectSearchModule, configurableDefaultOptions };\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { usersRoutes } from './users.routes';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RouterModule } from '@angular/router';\n// import { InputTextModule } from 'primeng/inputtext';\n// import { ButtonModule } from 'primeng/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nconst UX_MODULE_MATERIAL = [MatButtonModule, MatIconModule, MatTooltipModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(usersRoutes),\n    UX_MODULE_MATERIAL,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginComponent,\n  ],\n})\nexport class UsersModule {}\n","import { Injectable, inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpEvent,\n  HttpInterceptorFn,\n  HttpHandlerFn,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocalstorageService } from './localstorage.service';\nimport { environment } from '@env/environment';\n\nexport const jwtInterceptor: HttpInterceptorFn = (\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn\n): Observable<HttpEvent<unknown>> => {\n  const localStorageService = inject(LocalstorageService);\n  const token = localStorageService.getToken('jwtToken');\n  const isAPIUrl = req.url.startsWith(environment.apiURL);\n\n  if (token && isAPIUrl) {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  return next(req);\n};\n","<form [formGroup]=\"form\">\n  <!-- <div class=\"flex-container\"> -->\n  <div class=\"inputs-wrapper\" [class.small-width]=\"isClient\">\n    <div class=\"left-input-column\">\n      <h3\n        class=\"mat-title-medium-margin-plus\"\n        i18n=\"@@ClientForm.personalInfoSubtitle\"\n      >\n        Personal info\n      </h3>\n      <div class=\"inputs-flex-group\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label i18n=\"@@ClientForm.firstnameLabel\">Firstname</mat-label>\n          <input\n            matInput\n            formControlName=\"firstName\"\n            type=\"text\"\n            placeholder=\"Enter clients first name\"\n            i18n-placeholder=\"@@ClientForm.firstnamePlaceholder\"\n          />\n          @if (form.get('firstName')?.invalid) {\n            <mat-error i18n=\"@@ClientForm.firstnameError\"\n              >Please enter first name</mat-error\n            >\n          }\n        </mat-form-field>\n        <!-- @if (!programForm['name'].value.length) {\n                <mat-hint>*required</mat-hint>\n              } -->\n        <mat-form-field appearance=\"outline\">\n          <mat-label i18n=\"@@ClientForm.lastnameLabel\">Lastname</mat-label>\n          <input\n            matInput\n            formControlName=\"lastName\"\n            type=\"text\"\n            placeholder=\"Enter clients last name\"\n            i18n-placeholder=\"@@ClientForm.lastnamePlaceholder\"\n          />\n          @if (form.get('lastName')?.invalid) {\n            <mat-error i18n=\"@@ClientForm.lastnameError\"\n              >Please enter last name</mat-error\n            >\n          }\n        </mat-form-field>\n      </div>\n      <div class=\"inputs-flex-group\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label i18n=\"@@ClientForm.emailLabel\">Email</mat-label>\n          <input\n            matInput\n            formControlName=\"email\"\n            type=\"text\"\n            placeholder=\"Enter clients email\"\n            i18n-placeholder=\"@@ClientForm.emailPlaceholder\"\n          />\n          @if (form.get('email')?.invalid) {\n            <mat-error i18n=\"@@ClientForm.emailError\"\n              >Please enter email</mat-error\n            >\n          }\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label i18n=\"@@ClientForm.phoneLabel\">Phone</mat-label>\n          <input\n            matInput\n            formControlName=\"phone\"\n            type=\"text\"\n            placeholder=\"Enter clients phone number\"\n            i18n-placeholder=\"@@ClientForm.phonePlaceholder\"\n          />\n          @if (form.get('phone')?.invalid) {\n            <mat-error i18n=\"@@ClientForm.phoneError\"\n              >Please enter phone number</mat-error\n            >\n          }\n        </mat-form-field>\n      </div>\n      <h3\n        class=\"mat-title-medium-margin-plus address-margin\"\n        i18n=\"@@ClientForm.addressSubtitle\"\n      >\n        Address\n      </h3>\n      <div formGroupName=\"address\">\n        <div class=\"inputs-flex-group\">\n          <mat-form-field appearance=\"outline\" class=\"street\">\n            <mat-label i18n=\"@@ClientForm.streetNameLabel\"\n              >Street name</mat-label\n            >\n            <input\n              matInput\n              formControlName=\"street\"\n              type=\"text\"\n              placeholder=\"Enter street name\"\n              i18n-placeholder=\"@@ClientForm.streetNamePlaceholder\"\n            />\n            <!-- @if (form.get('email')?.invalid) {\n                <mat-error>Please enter email</mat-error>\n              } -->\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" class=\"street-number\">\n            <mat-label i18n=\"@@ClientForm.streetNumberLabel\"\n              >Street no.</mat-label\n            >\n            <input\n              matInput\n              formControlName=\"streetNumber\"\n              type=\"text\"\n              placeholder=\"Street no.\"\n              i18n-placeholder=\"@@ClientForm.streetNumberPlaceholder\"\n            />\n            <!-- @if (form.get('phone')?.invalid) {\n                <mat-error>Please enter phone number</mat-error>\n              } -->\n          </mat-form-field>\n        </div>\n        <div class=\"inputs-flex-group\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.cityLabel\">City</mat-label>\n            <input\n              matInput\n              formControlName=\"city\"\n              type=\"text\"\n              placeholder=\"City\"\n              i18n-placeholder=\"@@ClientForm.cityPlaceholder\"\n            />\n            <!-- @if (form.get('email')?.invalid) {\n                <mat-error>Please enter email</mat-error>\n              } -->\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.zipCodeLabel\">Zip code</mat-label>\n            <input\n              matInput\n              formControlName=\"zipCode\"\n              type=\"text\"\n              placeholder=\"Zip code\"\n              i18n-placeholder=\"@@ClientForm.zipCodePlaceholder\"\n            />\n            <!-- @if (form.get('phone')?.invalid) {\n                <mat-error>Please enter phone number</mat-error>\n              } -->\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.countryLabel\">Country</mat-label>\n            <mat-select\n              [formControl]=\"countryCtrl\"\n              placeholder=\"Country\"\n              i18n-placeholder=\"@@ClientForm.countryPlaceholder\"\n              #singleSelect\n            >\n              <mat-option>\n                <ngx-mat-select-search\n                  [formControl]=\"countryFilterCtrl\"\n                  placeholderLabel=\"Find country...\"\n                  i18n-placeholderLabel=\"@@ClientForm.findCountryPlaceholder\"\n                  noEntriesFoundLabel=\"No matching country found.\"\n                  i18n-noEntriesFoundLabel=\"@@ClientForm.noEntriesFoundLabel\"\n                ></ngx-mat-select-search\n              ></mat-option>\n              @for (country of filteredCountries | async; track country) {\n                <mat-option [value]=\"country.id\">\n                  {{ country.name }}\n                </mat-option>\n              }\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n    @if (isUserForm) {\n      <div\n        overlay-scrollbars\n        [options]=\"themeSignal()\"\n        [defer]\n        class=\"right-input-column\"\n      >\n        @if (isUserForm) {\n          <h3\n            class=\"mat-title-medium-margin-plus\"\n            i18n=\"@@ClientForm.profilePictureSubtitle\"\n          >\n            Profile picture\n          </h3>\n          @defer {\n            <ui-upload-image></ui-upload-image>\n          } @placeholder (minimum 1000ms) {\n            <div class=\"upload-image-placeholder\">\n              <div class=\"upload-image-skeleton\"></div>\n            </div>\n          }\n        }\n        <h3\n          class=\"mat-title-medium-margin-plus\"\n          i18n=\"@@ClientForm.credentialsSubtitle\"\n        >\n          Credentials\n        </h3>\n        <div formGroupName=\"credentials\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.credentialsTitleLabel\"\n              >Title</mat-label\n            >\n            <input\n              matInput\n              formControlName=\"title\"\n              type=\"text\"\n              placeholder=\"E.g. 'Physiotherapist'\"\n              i18n-placeholder=\"@@ClientForm.credentialsTitlePlaceholder\"\n            />\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.credentialsQualificationsLabel\"\n              >Qualifications</mat-label\n            >\n            <mat-chip-grid\n              #qualificationsChipGrid\n              aria-label=\"Enter keywords\"\n              i18n-aria-label=\"@@ClientForm.credentialsQualificationsChipsLabel\"\n              [formControl]=\"qualificationsFormCtrl\"\n            >\n              @for (qualification of qualifications; track qualification) {\n                <mat-chip-row\n                  (removed)=\"removeQualification(qualification)\"\n                  [editable]=\"true\"\n                  (edited)=\"editQualification(qualification, $event)\"\n                  aria-description=\"Press enter to edit qualification\"\n                  i18n-aria-label=\"\n                    @@ClientForm.credentialsQualificationsEditChipLabel\"\n                >\n                  {{ qualification }}\n                  <button\n                    matChipRemove\n                    aria-label=\"Remove qualification\"\n                    i18n-aria-label=\"\n                      @@ClientForm.credentialsQualificationsRemoveChipLabel\"\n                  >\n                    <mat-icon>cancel</mat-icon>\n                  </button>\n                </mat-chip-row>\n              }\n            </mat-chip-grid>\n            <input\n              placeholder=\"E.g. 'Doctor of Physical Therapy'\"\n              i18n-placeholder=\"\n                @@ClientForm.credentialsQualificationsPlaceholder\"\n              [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n              [matChipInputAddOnBlur]=\"addOnBlur\"\n              [matChipInputFor]=\"qualificationsChipGrid\"\n              (matChipInputTokenEnd)=\"addQualification($event)\"\n            />\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.credentialsLicencesLabel\"\n              >Licences</mat-label\n            >\n            <mat-chip-grid\n              #licencesChipGrid\n              aria-label=\"Enter keywords\"\n              i18n-aria-label=\"@@ClientForm.credentialsLicencesChipLabel\"\n              [formControl]=\"licencesFormCtrl\"\n            >\n              @for (licence of licences; track licence) {\n                <mat-chip-row\n                  (removed)=\"removeLicence(licence)\"\n                  [editable]=\"true\"\n                  (edited)=\"editLicence(licence, $event)\"\n                  aria-description=\"Press enter to edit licence\"\n                  i18n-aria-label=\"\n                    @@ClientForm.credentialsLicencesEditChipLabel\"\n                >\n                  {{ licence }}\n                  <button\n                    matChipRemove\n                    aria-label=\"Remove licence\"\n                    i18n-aria-label=\"\n                      @@ClientForm.credentialsLicencesRemoveChipLabel\"\n                  >\n                    <mat-icon>cancel</mat-icon>\n                  </button>\n                </mat-chip-row>\n              }\n            </mat-chip-grid>\n            <input\n              placeholder=\"E.g. 'Orthopedic Manual Therapy Certification'\"\n              i18n-placeholder=\"@@ClientForm.credentialsLicencesPlaceholder\"\n              [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n              [matChipInputAddOnBlur]=\"addOnBlur\"\n              [matChipInputFor]=\"licencesChipGrid\"\n              (matChipInputTokenEnd)=\"addLicence($event)\"\n            />\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.credentialsCompanyLabel\"\n              >Company</mat-label\n            >\n            <input\n              matInput\n              formControlName=\"company\"\n              type=\"text\"\n              placeholder=\"Enter company name\"\n              i18n-placeholder=\"@@ClientForm.credentialsCompanyPlaceholder\"\n            />\n          </mat-form-field>\n        </div>\n      </div>\n    }\n  </div>\n  <!-- </div> -->\n</form>\n","import {\n  AfterViewInit,\n  Component,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatSelect } from '@angular/material/select';\nimport { ReplaySubject, Subject, take, takeUntil } from 'rxjs';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport {\n  MatChipEditedEvent,\n  MatChipInputEvent,\n  MatChipGrid,\n  MatChipRow,\n  MatChipRemove,\n  MatChipInput,\n} from '@angular/material/chips';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { UploadImageComponent } from '../upload-image/upload-image.component';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { AsyncPipe } from '@angular/common';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { MatOption } from '@angular/material/core';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel, MatError } from '@angular/material/form-field';\nimport { LocalstorageService } from '@slowautomobile/users';\nimport { CountriesLibService } from '../../services/countries-lib.service';\n\ninterface Country {\n  id: string;\n  name: string;\n}\n\n@Component({\n  selector: 'ui-client-full-edit-form',\n  templateUrl: './client-full-edit-form.component.html',\n  styleUrl: './client-full-edit-form.component.scss',\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    MatError,\n    MatSelect,\n    MatOption,\n    NgxMatSelectSearchModule,\n    OverlayscrollbarsModule,\n    UploadImageComponent,\n    MatChipGrid,\n    MatChipRow,\n    MatChipRemove,\n    MatIcon,\n    MatChipInput,\n    AsyncPipe,\n  ],\n})\nexport class ClientFullEditFormComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  private controlContainer = inject(ControlContainer);\n  private announcer = inject(LiveAnnouncer);\n  private localStorageService = inject(LocalstorageService);\n  private countriesLibService = inject(CountriesLibService);\n\n  @Input() isClient = false;\n  form!: FormGroup;\n  countries: Country[] = [];\n  countryCtrl!: FormControl;\n  countryFilterCtrl: FormControl = new FormControl();\n  public filteredCountries: ReplaySubject<Country[]> = new ReplaySubject<\n    Country[]\n  >(1);\n  isUserForm = false;\n  qualifications: string[] = [];\n  licences: string[] = [];\n  qualificationsFormCtrl!: FormControl;\n  licencesFormCtrl!: FormControl;\n  addOnBlur = true;\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n  @ViewChild('singleSelect', { static: true }) singleSelect!: MatSelect;\n\n  /** Subject that emits when the component has been destroyed. */\n  protected _onDestroy = new Subject<void>();\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  ngOnInit(): void {\n    this._getCountries();\n\n    // listen for search field value changes\n    this.countryFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterCountries();\n      });\n\n    this._initForm();\n\n    // setTimeout(() => {\n    // set initial selection\n    // This is not needed because form is initialized in _initForm()\n    // const currentCountry = this.form.get('address.country')?.value;\n    // this.countryCtrl.setValue({ name: currentCountry });\n  }\n\n  private _getCountries() {\n    // Dinamically check localeService for language in use and coresponding countriesLib.regsterLocale call\n    const lang = <string>(\n      this.localStorageService.getToken('userLanguage')?.split('-')[0]\n    );\n\n    this.countriesLibService\n      .getCountriesLib(lang)\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(countries => {\n        this.countries = countries;\n        this.countries.sort((a, b) => a.name.localeCompare(b.name));\n\n        // load the initial country list\n        this.filteredCountries.next(this.countries.slice());\n      });\n  }\n\n  _initForm() {\n    const clientInfoForm = this.controlContainer.control?.get(\n      'clientInfo',\n    ) as FormGroup;\n\n    // Check if form is coming from client-form or user-edit-form component\n    if (clientInfoForm) {\n      this.form = clientInfoForm as FormGroup;\n      this.countryCtrl = this.form.get('address.country') as FormControl;\n    } else {\n      this.isUserForm = true;\n      this.form = this.controlContainer.control as FormGroup;\n      this.countryCtrl = this.form.get('address.country') as FormControl;\n      this.qualificationsFormCtrl = this.form.get(\n        'credentials.qualifications',\n      ) as FormControl;\n      this.licencesFormCtrl = this.form.get(\n        'credentials.licences',\n      ) as FormControl;\n\n      setTimeout(() => {\n        this.qualifications = this.qualificationsFormCtrl.value as string[];\n        this.licences = this.licencesFormCtrl.value as string[];\n      }, 500);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setInitialValue();\n  }\n\n  /**\n   * Sets the initial value after the filteredBanks are loaded initially\n   */\n  protected setInitialValue() {\n    this.filteredCountries\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(() => {\n        // setting the compareWith property to a comparison function\n        // triggers initializing the selection according to the initial value of\n        // the form control (i.e. _initializeSelection())\n        // this needs to be done after the filteredCountries are loaded initially\n        // and after the mat-option elements are available\n        this.singleSelect.compareWith = (a: Country, b: Country) =>\n          a && b && a === b;\n      });\n  }\n\n  protected filterCountries() {\n    if (!this.countries) {\n      return;\n    }\n    // get the search keyword\n    let search = this.countryFilterCtrl.value;\n    if (!search) {\n      this.filteredCountries.next(this.countries.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the countries\n    this.filteredCountries.next(\n      this.countries.filter(\n        country => country.name.toLowerCase().indexOf(search) > -1,\n      ),\n    );\n  }\n\n  removeQualification(qualification: string) {\n    const index = this.qualifications.indexOf(qualification);\n    if (index >= 0) {\n      this.qualifications.splice(index, 1);\n\n      this.announcer.announce(`removed ${qualification}`);\n    }\n  }\n\n  addQualification(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our qualification\n    if (value) {\n      this.qualifications.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n  }\n\n  editQualification(qualification: string, event: MatChipEditedEvent) {\n    const value = event.value.trim();\n\n    // Remove qualification if it no longer has a name\n    if (!value) {\n      this.removeQualification(qualification);\n      return;\n    }\n\n    // Edit existing qualification\n    const index = this.qualifications.indexOf(qualification);\n    if (index >= 0) {\n      this.qualifications[index] = value;\n    }\n  }\n\n  removeLicence(licence: string) {\n    const index = this.licences.indexOf(licence);\n    if (index >= 0) {\n      this.licences.splice(index, 1);\n\n      this.announcer.announce(`removed ${licence}`);\n    }\n  }\n\n  addLicence(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n    console.log(event);\n\n    // Add our licence\n    if (value) {\n      this.licences.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n  }\n\n  editLicence(licence: string, event: MatChipEditedEvent) {\n    const value = event.value.trim();\n\n    // Remove licence if it no longer has a name\n    if (!value) {\n      this.removeQualification(licence);\n      return;\n    }\n\n    // Edit existing licence\n    const index = this.licences.indexOf(licence);\n    if (index >= 0) {\n      this.licences[index] = value;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n}\n","/**\n * @license Angular v19.2.3\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ANIMATION_MODULE_TYPE, ViewEncapsulation, ɵRuntimeError as _RuntimeError, Injectable, Inject } from '@angular/core';\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n  /**\n   * Associates a named animation state with a set of CSS styles.\n   * See [`state()`](api/animations/state)\n   */\n  AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n  /**\n   * Data for a transition from one animation state to another.\n   * See `transition()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n  /**\n   * Contains a set of animation steps.\n   * See `sequence()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n  /**\n   * Contains a set of animation steps.\n   * See `{@link /api/animations/group group()}`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n  /**\n   * Contains an animation step.\n   * See `animate()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n  /**\n   * Contains a set of animation steps.\n   * See `keyframes()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n  /**\n   * Contains a set of CSS property-value pairs into a named style.\n   * See `style()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n  /**\n   * Associates an animation with an entry trigger that can be attached to an element.\n   * See `trigger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n  /**\n   * Contains a re-usable animation.\n   * See `animation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n  /**\n   * Contains data to use in executing child animations returned by a query.\n   * See `animateChild()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n  /**\n   * Contains animation parameters for a re-usable animation.\n   * See `useAnimation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n  /**\n   * Contains child-animation query data.\n   * See `query()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n  /**\n   * Contains data for staggering an animation sequence.\n   * See `stagger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```ts\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```ts\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```angular-ts\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```ts\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n  return {\n    type: AnimationMetadataType.Trigger,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, {@link /api/animations/group group()}, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```ts\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```ts\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n  return {\n    type: AnimationMetadataType.Animate,\n    styles,\n    timings\n  };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```ts\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Group,\n    steps,\n    options\n  };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```ts\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the  {@link /api/animations/group group()} call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a  {@link /api/animations/group group()} or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Sequence,\n    steps,\n    options\n  };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```ts\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```ts\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n  return {\n    type: AnimationMetadataType.Style,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n  return {\n    type: AnimationMetadataType.State,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```ts\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```ts\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n  return {\n    type: AnimationMetadataType.Keyframes,\n    steps\n  };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```ts\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```ts\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```ts\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```html\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```ts\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```html\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```ts\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n  return {\n    type: AnimationMetadataType.Transition,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```ts\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Reference,\n    animation: steps,\n    options\n  };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n  return {\n    type: AnimationMetadataType.AnimateChild,\n    options\n  };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n  return {\n    type: AnimationMetadataType.AnimateRef,\n    animation,\n    options\n  };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```ts\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"docs-alert docs-alert-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```angular-ts\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n  return {\n    type: AnimationMetadataType.Query,\n    selector,\n    animation,\n    options\n  };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n  return {\n    type: AnimationMetadataType.Stagger,\n    timings,\n    animation\n  };\n}\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n  static ɵfac = function AnimationBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AnimationBuilder)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AnimationBuilder,\n    factory: () => (() => inject(BrowserAnimationBuilder))(),\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }], null, null);\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _nextAnimationId = 0;\n  _renderer;\n  constructor(rootRenderer, doc) {\n    super();\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new _RuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static ɵfac = function BrowserAnimationBuilder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrowserAnimationBuilder)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(DOCUMENT));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BrowserAnimationBuilder,\n    factory: BrowserAnimationBuilder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  _id;\n  _renderer;\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  id;\n  element;\n  _renderer;\n  parentPlayer = null;\n  _started = false;\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n  totalTime = 0;\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.ɵtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n  _onDoneFns = [];\n  _onStartFns = [];\n  _onDestroyFns = [];\n  _originalOnDoneFns = [];\n  _originalOnStartFns = [];\n  _started = false;\n  _destroyed = false;\n  _finished = false;\n  _position = 0;\n  parentPlayer = null;\n  totalTime;\n  constructor(duration = 0, delay = 0) {\n    this.totalTime = duration + delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  init() {}\n  play() {\n    if (!this.hasStarted()) {\n      this._onStart();\n      this.triggerMicrotask();\n    }\n    this._started = true;\n  }\n  /** @internal */\n  triggerMicrotask() {\n    queueMicrotask(() => this._onFinish());\n  }\n  _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n  pause() {}\n  restart() {}\n  finish() {\n    this._onFinish();\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this._started = false;\n    this._finished = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  setPosition(position) {\n    this._position = this.totalTime ? position * this.totalTime : 1;\n  }\n  getPosition() {\n    return this.totalTime ? this._position / this.totalTime : 1;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n  _onDoneFns = [];\n  _onStartFns = [];\n  _finished = false;\n  _started = false;\n  _destroyed = false;\n  _onDestroyFns = [];\n  parentPlayer = null;\n  totalTime = 0;\n  players;\n  constructor(_players) {\n    this.players = _players;\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this.players.length;\n    if (total == 0) {\n      queueMicrotask(() => this._onFinish());\n    } else {\n      this.players.forEach(player => {\n        player.onDone(() => {\n          if (++doneCount == total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount == total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount == total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n    this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this.players.forEach(player => player.init());\n  }\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n  _onStart() {\n    if (!this.hasStarted()) {\n      this._started = true;\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n  }\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this.players.forEach(player => player.play());\n  }\n  pause() {\n    this.players.forEach(player => player.pause());\n  }\n  restart() {\n    this.players.forEach(player => player.restart());\n  }\n  finish() {\n    this._onFinish();\n    this.players.forEach(player => player.finish());\n  }\n  destroy() {\n    this._onDestroy();\n  }\n  _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this.players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this.players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n  setPosition(p) {\n    const timeAtPosition = p * this.totalTime;\n    this.players.forEach(player => {\n      const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n  getPosition() {\n    const longestPlayer = this.players.reduce((longestSoFar, player) => {\n      const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n      return newPlayerIsLongest ? player : longestSoFar;\n    }, null);\n    return longestPlayer != null ? longestPlayer.getPosition() : 0;\n  }\n  beforeDestroy() {\n    this.players.forEach(player => {\n      if (player.beforeDestroy) {\n        player.beforeDestroy();\n      }\n    });\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nconst ɵPRE_STYLE = '!';\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, ɵPRE_STYLE };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ElementRef, NgZone, Renderer2, ChangeDetectorRef, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, InjectionToken, TemplateRef, Injectable, NgModule } from '@angular/core';\nimport { B as BasePortalOutlet, C as CdkPortalOutlet, a as ComponentPortal, T as TemplatePortal, P as PortalModule } from './portal-directives-6dd242f4.mjs';\nfunction CdkDialogContainer_ng_template_0_Template(rf, ctx) {}\nexport { b as ɵɵCdkPortal, C as ɵɵCdkPortalOutlet, d as ɵɵPortalHostDirective, c as ɵɵTemplatePortalDirective } from './portal-directives-6dd242f4.mjs';\nimport { b as FocusTrapFactory, I as InteractivityChecker, A as A11yModule } from './a11y-module-012407f8.mjs';\nimport { O as OverlayRef, a as Overlay, b as OverlayContainer, c as OverlayConfig, d as OverlayModule } from './overlay-module-f1619549.mjs';\nimport { d as FocusMonitor } from './focus-monitor-81212fa3.mjs';\nimport { P as Platform } from './platform-610a08ae.mjs';\nimport { b as _getFocusedElementPierceShadowDom } from './shadow-dom-9f403d00.mjs';\nimport { Subject, defer, of } from 'rxjs';\nimport { e as ESCAPE } from './keycodes-107cd3e4.mjs';\nimport { h as hasModifierKey } from './modifiers-33a5859e.mjs';\nimport { startWith } from 'rxjs/operators';\nimport { _ as _IdGenerator } from './id-generator-1959b006.mjs';\nimport { D as Directionality } from './directionality-0a678adc.mjs';\nimport './style-loader-51b80670.mjs';\nimport './visually-hidden-7e8689f8.mjs';\nimport './breakpoints-observer-63bede13.mjs';\nimport './array-ee3b4bab.mjs';\nimport './observe-content-41b1b248.mjs';\nimport './element-705567fe.mjs';\nimport './backwards-compatibility-bcbe473e.mjs';\nimport './test-environment-34eef1ee.mjs';\nimport './css-pixel-value-286c9a60.mjs';\nimport './scrolling-module-3dd0744a.mjs';\nimport './scrolling-61955dd1.mjs';\nimport './recycle-view-repeater-strategy-c1712813.mjs';\nimport './data-source-5320b6fd.mjs';\nimport './bidi-module-56dd006c.mjs';\nimport './fake-event-detection-7055b1bd.mjs';\nimport './passive-listeners-c0bdc49f.mjs';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef;\n  /**\n   * Injector used for the instantiation of the component to be attached. If provided,\n   * takes precedence over the injector indirectly provided by `ViewContainerRef`.\n   */\n  injector;\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id;\n  /** The ARIA role of the dialog element. */\n  role = 'dialog';\n  /** Optional CSS class or classes applied to the overlay panel. */\n  panelClass = '';\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop = true;\n  /** Optional CSS class or classes applied to the overlay backdrop. */\n  backdropClass = '';\n  /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n  disableClose = false;\n  /** Width of the dialog. */\n  width = '';\n  /** Height of the dialog. */\n  height = '';\n  /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n  minWidth;\n  /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n  minHeight;\n  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n  maxWidth;\n  /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n  maxHeight;\n  /** Strategy to use when positioning the dialog. Defaults to centering it on the page. */\n  positionStrategy;\n  /** Data being injected into the child component. */\n  data = null;\n  /** Layout direction for the dialog's content. */\n  direction;\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy = null;\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy = null;\n  /** Dialog label applied via `aria-label` */\n  ariaLabel = null;\n  /**\n   * Whether this is a modal dialog. Used to set the `aria-modal` attribute. Off by default,\n   * because it can interfere with other overlay-based components (e.g. `mat-select`) and because\n   * it is redundant since the dialog marks all outside content as `aria-hidden` anyway.\n   */\n  ariaModal = false;\n  /**\n   * Where the dialog should focus on open.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n   * AutoFocusTarget instead.\n   */\n  autoFocus = 'first-tabbable';\n  /**\n   * Whether the dialog should restore focus to the previously-focused element upon closing.\n   * Has the following behavior based on the type that is passed in:\n   * - `boolean` - when true, will return focus to the element that was focused before the dialog\n   *    was opened, otherwise won't restore focus at all.\n   * - `string` - focus will be restored to the first element that matches the CSS selector.\n   * - `HTMLElement` - focus will be restored to the specific element.\n   */\n  restoreFocus = true;\n  /**\n   * Scroll strategy to be used for the dialog. This determines how\n   * the dialog responds to scrolling underneath the panel element.\n   */\n  scrollStrategy;\n  /**\n   * Whether the dialog should close when the user navigates backwards or forwards through browser\n   * history. This does not apply to navigation via anchor element unless using URL-hash based\n   * routing (`HashLocationStrategy` in the Angular router).\n   */\n  closeOnNavigation = true;\n  /**\n   * Whether the dialog should close when the dialog service is destroyed. This is useful if\n   * another service is wrapping the dialog and is managing the destruction instead.\n   */\n  closeOnDestroy = true;\n  /**\n   * Whether the dialog should close when the underlying overlay is detached. This is useful if\n   * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n   * external detachment can happen as a result of a scroll strategy triggering it or when the\n   * browser location changes.\n   */\n  closeOnOverlayDetachments = true;\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * @deprecated No longer used. Will be removed.\n   * @breaking-change 20.0.0\n   */\n  componentFactoryResolver;\n  /**\n   * Providers that will be exposed to the contents of the dialog. Can also\n   * be provided as a function in order to generate the providers lazily.\n   */\n  providers;\n  /**\n   * Component into which the dialog content will be rendered. Defaults to `CdkDialogContainer`.\n   * A configuration object can be passed in to customize the providers that will be exposed\n   * to the dialog container.\n   */\n  container;\n  /**\n   * Context that will be passed to template-based dialogs.\n   * A function can be passed in to resolve the context lazily.\n   */\n  templateContext;\n}\nfunction throwDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n  _elementRef = inject(ElementRef);\n  _focusTrapFactory = inject(FocusTrapFactory);\n  _config;\n  _interactivityChecker = inject(InteractivityChecker);\n  _ngZone = inject(NgZone);\n  _overlayRef = inject(OverlayRef);\n  _focusMonitor = inject(FocusMonitor);\n  _renderer = inject(Renderer2);\n  _platform = inject(Platform);\n  _document = inject(DOCUMENT, {\n    optional: true\n  });\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  _portalOutlet;\n  /** The class that traps and manages focus within the dialog. */\n  _focusTrap = null;\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  _elementFocusedBeforeDialogWasOpened = null;\n  /**\n   * Type of interaction that led to the dialog being closed. This is used to determine\n   * whether the focus style will be applied when returning focus to its original location\n   * after the dialog is closed.\n   */\n  _closeInteractionType = null;\n  /**\n   * Queue of the IDs of the dialog's label element, based on their definition order. The first\n   * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n   * where there are two or more titles in the DOM at a time and the first one is destroyed while\n   * the rest are present.\n   */\n  _ariaLabelledByQueue = [];\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _injector = inject(Injector);\n  _isDestroyed = false;\n  constructor() {\n    super();\n    // Callback is primarily for some internal tests\n    // that were instantiating the dialog container manually.\n    this._config = inject(DialogConfig, {\n      optional: true\n    }) || new DialogConfig();\n    if (this._config.ariaLabelledBy) {\n      this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n    }\n  }\n  _addAriaLabelledBy(id) {\n    this._ariaLabelledByQueue.push(id);\n    this._changeDetectorRef.markForCheck();\n  }\n  _removeAriaLabelledBy(id) {\n    const index = this._ariaLabelledByQueue.indexOf(id);\n    if (index > -1) {\n      this._ariaLabelledByQueue.splice(index, 1);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _contentAttached() {\n    this._initializeFocusTrap();\n    this._handleBackdropClicks();\n    this._captureInitialFocus();\n  }\n  /**\n   * Can be used by child classes to customize the initial focus\n   * capturing behavior (e.g. if it's tied to an animation).\n   */\n  _captureInitialFocus() {\n    this._trapFocus();\n  }\n  ngOnDestroy() {\n    this._isDestroyed = true;\n    this._restoreFocus();\n  }\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachComponentPortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal(portal) {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachTemplatePortal(portal);\n    this._contentAttached();\n    return result;\n  }\n  /**\n   * Attaches a DOM portal to the dialog container.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = portal => {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwDialogContentAlreadyAttachedError();\n    }\n    const result = this._portalOutlet.attachDomPortal(portal);\n    this._contentAttached();\n    return result;\n  };\n  // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n  /** Captures focus if it isn't already inside the dialog. */\n  _recaptureFocus() {\n    if (!this._containsFocus()) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          deregisterBlur();\n          deregisterMousedown();\n          element.removeAttribute('tabindex');\n        };\n        const deregisterBlur = this._renderer.listen(element, 'blur', callback);\n        const deregisterMousedown = this._renderer.listen(element, 'mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n   * cannot be moved then focus will go to the dialog container.\n   */\n  _trapFocus() {\n    if (this._isDestroyed) {\n      return;\n    }\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait until after the next render.\n    afterNextRender(() => {\n      const element = this._elementRef.nativeElement;\n      switch (this._config.autoFocus) {\n        case false:\n        case 'dialog':\n          // Ensure that focus is on the dialog container. It's possible that a different\n          // component tried to move focus while the open animation was running. See:\n          // https://github.com/angular/components/issues/16215. Note that we only want to do this\n          // if the focus isn't inside the dialog already, because it's possible that the consumer\n          // turned off `autoFocus` in order to move focus themselves.\n          if (!this._containsFocus()) {\n            element.focus();\n          }\n          break;\n        case true:\n        case 'first-tabbable':\n          const focusedSuccessfully = this._focusTrap?.focusInitialElement();\n          // If we weren't able to find a focusable element in the dialog, then focus the dialog\n          // container instead.\n          if (!focusedSuccessfully) {\n            this._focusDialogContainer();\n          }\n          break;\n        case 'first-heading':\n          this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n          break;\n        default:\n          this._focusByCssSelector(this._config.autoFocus);\n          break;\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  /** Restores focus to the element that was focused before the dialog opened. */\n  _restoreFocus() {\n    const focusConfig = this._config.restoreFocus;\n    let focusTargetElement = null;\n    if (typeof focusConfig === 'string') {\n      focusTargetElement = this._document.querySelector(focusConfig);\n    } else if (typeof focusConfig === 'boolean') {\n      focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n    } else if (focusConfig) {\n      focusTargetElement = focusConfig;\n    }\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && focusTargetElement && typeof focusTargetElement.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      const element = this._elementRef.nativeElement;\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        if (this._focusMonitor) {\n          this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n          this._closeInteractionType = null;\n        } else {\n          focusTargetElement.focus();\n        }\n      }\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Focuses the dialog container. */\n  _focusDialogContainer() {\n    // Note that there is no focus method when rendering on the server.\n    if (this._elementRef.nativeElement.focus) {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /** Returns whether focus is inside the dialog. */\n  _containsFocus() {\n    const element = this._elementRef.nativeElement;\n    const activeElement = _getFocusedElementPierceShadowDom();\n    return element === activeElement || element.contains(activeElement);\n  }\n  /** Sets up the focus trap. */\n  _initializeFocusTrap() {\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      // Save the previously focused element. This element will be re-focused\n      // when the dialog closes.\n      if (this._document) {\n        this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n      }\n    }\n  }\n  /** Sets up the listener that handles clicks on the dialog backdrop. */\n  _handleBackdropClicks() {\n    // Clicking on the backdrop will move focus out of dialog.\n    // Recapture it if closing via the backdrop is disabled.\n    this._overlayRef.backdropClick().subscribe(() => {\n      if (this._config.disableClose) {\n        this._recaptureFocus();\n      }\n    });\n  }\n  static ɵfac = function CdkDialogContainer_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDialogContainer)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkDialogContainer,\n    selectors: [[\"cdk-dialog-container\"]],\n    viewQuery: function CdkDialogContainer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n      }\n    },\n    hostAttrs: [\"tabindex\", \"-1\", 1, \"cdk-dialog-container\"],\n    hostVars: 6,\n    hostBindings: function CdkDialogContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx._config.id || null)(\"role\", ctx._config.role)(\"aria-modal\", ctx._config.ariaModal)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkPortalOutlet\", \"\"]],\n    template: function CdkDialogContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CdkDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'cdk-dialog-container',\n        'tabindex': '-1',\n        '[attr.id]': '_config.id || null',\n        '[attr.role]': '_config.role',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null'\n      },\n      template: \"<ng-template cdkPortalOutlet />\\n\",\n      styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"]\n    }]\n  }], () => [], {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n  overlayRef;\n  config;\n  /**\n   * Instance of component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  componentInstance;\n  /**\n   * `ComponentRef` of the component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  componentRef;\n  /** Instance of the container that is rendering out the dialog content. */\n  containerInstance;\n  /** Whether the user is allowed to close the dialog. */\n  disableClose;\n  /** Emits when the dialog has been closed. */\n  closed = new Subject();\n  /** Emits when the backdrop of the dialog is clicked. */\n  backdropClick;\n  /** Emits when on keyboard events within the dialog. */\n  keydownEvents;\n  /** Emits on pointer events that happen outside of the dialog. */\n  outsidePointerEvents;\n  /** Unique ID for the dialog. */\n  id;\n  /** Subscription to external detachments of the dialog. */\n  _detachSubscription;\n  constructor(overlayRef, config) {\n    this.overlayRef = overlayRef;\n    this.config = config;\n    this.disableClose = config.disableClose;\n    this.backdropClick = overlayRef.backdropClick();\n    this.keydownEvents = overlayRef.keydownEvents();\n    this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n    this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n    this.keydownEvents.subscribe(event => {\n      if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n        event.preventDefault();\n        this.close(undefined, {\n          focusOrigin: 'keyboard'\n        });\n      }\n    });\n    this.backdropClick.subscribe(() => {\n      if (!this.disableClose) {\n        this.close(undefined, {\n          focusOrigin: 'mouse'\n        });\n      }\n    });\n    this._detachSubscription = overlayRef.detachments().subscribe(() => {\n      // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n      if (config.closeOnOverlayDetachments !== false) {\n        this.close();\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param result Optional result to return to the dialog opener.\n   * @param options Additional options to customize the closing behavior.\n   */\n  close(result, options) {\n    if (this.containerInstance) {\n      const closedSubject = this.closed;\n      this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n      // Drop the detach subscription first since it can be triggered by the\n      // `dispose` call and override the result of this closing sequence.\n      this._detachSubscription.unsubscribe();\n      this.overlayRef.dispose();\n      closedSubject.next(result);\n      closedSubject.complete();\n      this.componentInstance = this.containerInstance = null;\n    }\n  }\n  /** Updates the position of the dialog based on the current position strategy. */\n  updatePosition() {\n    this.overlayRef.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this.overlayRef.updateSize({\n      width,\n      height\n    });\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this.overlayRef.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this.overlayRef.removePanelClass(classes);\n    return this;\n  }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\nclass Dialog {\n  _overlay = inject(Overlay);\n  _injector = inject(Injector);\n  _defaultOptions = inject(DEFAULT_DIALOG_CONFIG, {\n    optional: true\n  });\n  _parentDialog = inject(Dialog, {\n    optional: true,\n    skipSelf: true\n  });\n  _overlayContainer = inject(OverlayContainer);\n  _idGenerator = inject(_IdGenerator);\n  _openDialogsAtThisLevel = [];\n  _afterAllClosedAtThisLevel = new Subject();\n  _afterOpenedAtThisLevel = new Subject();\n  _ariaHiddenElements = new Map();\n  _scrollStrategy = inject(DIALOG_SCROLL_STRATEGY);\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n  constructor() {}\n  open(componentOrTemplateRef, config) {\n    const defaults = this._defaultOptions || new DialogConfig();\n    config = {\n      ...defaults,\n      ...config\n    };\n    config.id = config.id || this._idGenerator.getId('cdk-dialog-');\n    if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n    const overlayConfig = this._getOverlayConfig(config);\n    const overlayRef = this._overlay.create(overlayConfig);\n    const dialogRef = new DialogRef(overlayRef, config);\n    const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n    dialogRef.containerInstance = dialogContainer;\n    this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n    this.openDialogs.push(dialogRef);\n    dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n    this.afterOpened.next(dialogRef);\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    reverseForEach(this.openDialogs, dialog => dialog.close());\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n    // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n    // determines when `aria-hidden` is removed from elements outside the dialog.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => {\n      // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n      if (dialog.config.closeOnDestroy === false) {\n        this._removeOpenDialog(dialog, false);\n      }\n    });\n    // Make a second pass and close the remaining dialogs. We do this second pass in order to\n    // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n    // that should be closed and dialogs that should not.\n    reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n    this._openDialogsAtThisLevel = [];\n  }\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param config The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  _getOverlayConfig(config) {\n    const state = new OverlayConfig({\n      positionStrategy: config.positionStrategy || this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n      panelClass: config.panelClass,\n      hasBackdrop: config.hasBackdrop,\n      direction: config.direction,\n      minWidth: config.minWidth,\n      minHeight: config.minHeight,\n      maxWidth: config.maxWidth,\n      maxHeight: config.maxHeight,\n      width: config.width,\n      height: config.height,\n      disposeOnNavigation: config.closeOnNavigation\n    });\n    if (config.backdropClass) {\n      state.backdropClass = config.backdropClass;\n    }\n    return state;\n  }\n  /**\n   * Attaches a dialog container to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  _attachContainer(overlay, dialogRef, config) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DialogConfig,\n      useValue: config\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }, {\n      provide: OverlayRef,\n      useValue: overlay\n    }];\n    let containerType;\n    if (config.container) {\n      if (typeof config.container === 'function') {\n        containerType = config.container;\n      } else {\n        containerType = config.container.type;\n        providers.push(...config.container.providers(config));\n      }\n    } else {\n      containerType = CdkDialogContainer;\n    }\n    const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    }));\n    const containerRef = overlay.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param config Configuration used to open the dialog.\n   */\n  _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n      let context = {\n        $implicit: config.data,\n        dialogRef\n      };\n      if (config.templateContext) {\n        context = {\n          ...context,\n          ...(typeof config.templateContext === 'function' ? config.templateContext() : config.templateContext)\n        };\n      }\n      dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n    } else {\n      const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n      const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n      dialogRef.componentRef = contentRef;\n      dialogRef.componentInstance = contentRef.instance;\n    }\n  }\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog being opened.\n   * @param dialogContainer Component that is going to wrap the dialog content.\n   * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n   * dialog injector, if the user didn't provide a custom one.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n    const userInjector = config.injector || config.viewContainerRef?.injector;\n    const providers = [{\n      provide: DIALOG_DATA,\n      useValue: config.data\n    }, {\n      provide: DialogRef,\n      useValue: dialogRef\n    }];\n    if (config.providers) {\n      if (typeof config.providers === 'function') {\n        providers.push(...config.providers(dialogRef, config, dialogContainer));\n      } else {\n        providers.push(...config.providers);\n      }\n    }\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null, {\n      optional: true\n    }))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n    return Injector.create({\n      parent: userInjector || fallbackInjector,\n      providers\n    });\n  }\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   * @param emitEvent Whether to emit an event if this is the last dialog.\n   */\n  _removeOpenDialog(dialogRef, emitEvent) {\n    const index = this.openDialogs.indexOf(dialogRef);\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n        this._ariaHiddenElements.clear();\n        if (emitEvent) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    }\n  }\n  /** Hides all of the content that isn't an overlay from assistive technology. */\n  _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n      for (let i = siblings.length - 1; i > -1; i--) {\n        const sibling = siblings[i];\n        if (sibling !== overlayContainer && sibling.nodeName !== 'SCRIPT' && sibling.nodeName !== 'STYLE' && !sibling.hasAttribute('aria-live')) {\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  static ɵfac = function Dialog_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Dialog)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Dialog,\n    factory: Dialog.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n  let i = items.length;\n  while (i--) {\n    callback(items[i]);\n  }\n}\nclass DialogModule {\n  static ɵfac = function DialogModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DialogModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DialogModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [Dialog],\n    imports: [OverlayModule, PortalModule, A11yModule,\n    // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n    // don't have to remember to import it or be faced with an unhelpful error.\n    PortalModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n      exports: [\n      // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n      // don't have to remember to import it or be faced with an unhelpful error.\n      PortalModule, CdkDialogContainer],\n      providers: [Dialog]\n    }]\n  }], null, null);\n})();\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { inject, ANIMATION_MODULE_TYPE, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injectable, ElementRef, Directive, Input, NgModule } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nfunction MatDialogContainer_ng_template_2_Template(rf, ctx) {}\nclass MatDialogConfig {\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef;\n  /**\n   * Injector used for the instantiation of the component to be attached. If provided,\n   * takes precedence over the injector indirectly provided by `ViewContainerRef`.\n   */\n  injector;\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id;\n  /** The ARIA role of the dialog element. */\n  role = 'dialog';\n  /** Custom class for the overlay pane. */\n  panelClass = '';\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop = true;\n  /** Custom class for the backdrop. */\n  backdropClass = '';\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose = false;\n  /** Width of the dialog. */\n  width = '';\n  /** Height of the dialog. */\n  height = '';\n  /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n  minWidth;\n  /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n  minHeight;\n  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n  maxWidth;\n  /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n  maxHeight;\n  /** Position overrides. */\n  position;\n  /** Data being injected into the child component. */\n  data = null;\n  /** Layout direction for the dialog's content. */\n  direction;\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy = null;\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy = null;\n  /** Aria label to assign to the dialog element. */\n  ariaLabel = null;\n  /**\n   * Whether this is a modal dialog. Used to set the `aria-modal` attribute. Off by default,\n   * because it can interfere with other overlay-based components (e.g. `mat-select`) and because\n   * it is redundant since the dialog marks all outside content as `aria-hidden` anyway.\n   */\n  ariaModal = false;\n  /**\n   * Where the dialog should focus on open.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n   * AutoFocusTarget instead.\n   */\n  autoFocus = 'first-tabbable';\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus = true;\n  /** Whether to wait for the opening animation to finish before trapping focus. */\n  delayFocusTrap = true;\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy;\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation = true;\n  /**\n   * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n   * @deprecated No longer used. Will be removed.\n   * @breaking-change 20.0.0\n   */\n  componentFactoryResolver;\n  /**\n   * Duration of the enter animation in ms.\n   * Should be a number, string type is deprecated.\n   * @breaking-change 17.0.0 Remove string signature.\n   */\n  enterAnimationDuration;\n  /**\n   * Duration of the exit animation in ms.\n   * Should be a number, string type is deprecated.\n   * @breaking-change 17.0.0 Remove string signature.\n   */\n  exitAnimationDuration;\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter();\n  /** Whether animations are enabled. */\n  _animationsEnabled = this._animationMode !== 'NoopAnimations';\n  /** Number of actions projected in the dialog. */\n  _actionSectionCount = 0;\n  /** Host element of the dialog container component. */\n  _hostElement = this._elementRef.nativeElement;\n  /** Duration of the dialog open animation. */\n  _enterAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION : 0;\n  /** Duration of the dialog close animation. */\n  _exitAnimationDuration = this._animationsEnabled ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION : 0;\n  /** Current timer for dialog animations. */\n  _animationTimer = null;\n  _contentAttached() {\n    // Delegate to the original dialog-container initialization (i.e. saving the\n    // previous element, setting up the focus trap and moving focus to the container).\n    super._contentAttached();\n    // Note: Usually we would be able to use the MDC dialog foundation here to handle\n    // the dialog animation for us, but there are a few reasons why we just leverage\n    // their styles and not use the runtime foundation code:\n    //   1. Foundation does not allow us to disable animations.\n    //   2. Foundation contains unnecessary features we don't need and aren't\n    //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n    this._startOpenAnimation();\n  }\n  /** Starts the dialog open animation if enabled. */\n  _startOpenAnimation() {\n    this._animationStateChanged.emit({\n      state: 'opening',\n      totalTime: this._enterAnimationDuration\n    });\n    if (this._animationsEnabled) {\n      this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n      // We need to give the `setProperty` call from above some time to be applied.\n      // One would expect that the open class is added once the animation finished, but MDC\n      // uses the open class in combination with the opening class to start the animation.\n      this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n      this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n    } else {\n      this._hostElement.classList.add(OPEN_CLASS);\n      // Note: We could immediately finish the dialog opening here with noop animations,\n      // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n      // Executing this immediately would mean that `afterOpened` emits synchronously\n      // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n      Promise.resolve().then(() => this._finishDialogOpen());\n    }\n  }\n  /**\n   * Starts the exit animation of the dialog if enabled. This method is\n   * called by the dialog ref.\n   */\n  _startExitAnimation() {\n    this._animationStateChanged.emit({\n      state: 'closing',\n      totalTime: this._exitAnimationDuration\n    });\n    this._hostElement.classList.remove(OPEN_CLASS);\n    if (this._animationsEnabled) {\n      this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n      // We need to give the `setProperty` call from above some time to be applied.\n      this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n      this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n    } else {\n      // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n      // set up before any user can subscribe to the backdrop click. The subscription triggers\n      // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n      // animation state event if animations are disabled, the overlay would be disposed\n      // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n      // skipped. We work around this by waiting with the dialog close until the next tick when\n      // all subscriptions have been fired as expected. This is not an ideal solution, but\n      // there doesn't seem to be any other good way. Alternatives that have been considered:\n      //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n      //      Also this issue is specific to the MDC implementation where the dialog could\n      //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n      //      and closing always takes at least a tick.\n      //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n      //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n      //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n      // Based on the fact that this is specific to the MDC-based implementation of the dialog\n      // animations, the defer is applied here.\n      Promise.resolve().then(() => this._finishDialogClose());\n    }\n  }\n  /**\n   * Updates the number action sections.\n   * @param delta Increase/decrease in the number of sections.\n   */\n  _updateActionSectionCount(delta) {\n    this._actionSectionCount += delta;\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Completes the dialog open by clearing potential animation classes, trapping\n   * focus and emitting an opened event.\n   */\n  _finishDialogOpen = () => {\n    this._clearAnimationClasses();\n    this._openAnimationDone(this._enterAnimationDuration);\n  };\n  /**\n   * Completes the dialog close by clearing potential animation classes, restoring\n   * focus and emitting a closed event.\n   */\n  _finishDialogClose = () => {\n    this._clearAnimationClasses();\n    this._animationStateChanged.emit({\n      state: 'closed',\n      totalTime: this._exitAnimationDuration\n    });\n  };\n  /** Clears all dialog animation classes. */\n  _clearAnimationClasses() {\n    this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n  }\n  _waitForAnimationToComplete(duration, callback) {\n    if (this._animationTimer !== null) {\n      clearTimeout(this._animationTimer);\n    }\n    // Note that we want this timer to run inside the NgZone, because we want\n    // the related events like `afterClosed` to be inside the zone as well.\n    this._animationTimer = setTimeout(callback, duration);\n  }\n  /** Runs a callback in `requestAnimationFrame`, if available. */\n  _requestAnimationFrame(callback) {\n    this._ngZone.runOutsideAngular(() => {\n      if (typeof requestAnimationFrame === 'function') {\n        requestAnimationFrame(callback);\n      } else {\n        callback();\n      }\n    });\n  }\n  _captureInitialFocus() {\n    if (!this._config.delayFocusTrap) {\n      this._trapFocus();\n    }\n  }\n  /**\n   * Callback for when the open dialog animation has finished. Intended to\n   * be called by sub-classes that use different animation implementations.\n   */\n  _openAnimationDone(totalTime) {\n    if (this._config.delayFocusTrap) {\n      this._trapFocus();\n    }\n    this._animationStateChanged.next({\n      state: 'opened',\n      totalTime\n    });\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._animationTimer !== null) {\n      clearTimeout(this._animationTimer);\n    }\n  }\n  attachComponentPortal(portal) {\n    // When a component is passed into the dialog, the host element interrupts\n    // the `display:flex` from affecting the dialog title, content, and\n    // actions. To fix this, we make the component host `display: contents` by\n    // marking its host with the `mat-mdc-dialog-component-host` class.\n    //\n    // Note that this problem does not exist when a template ref is used since\n    // the title, contents, and actions are then nested directly under the\n    // dialog surface.\n    const ref = super.attachComponentPortal(portal);\n    ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n    return ref;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDialogContainer_BaseFactory;\n    return function MatDialogContainer_Factory(__ngFactoryType__) {\n      return (ɵMatDialogContainer_BaseFactory || (ɵMatDialogContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogContainer)))(__ngFactoryType__ || MatDialogContainer);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDialogContainer,\n    selectors: [[\"mat-dialog-container\"]],\n    hostAttrs: [\"tabindex\", \"-1\", 1, \"mat-mdc-dialog-container\", \"mdc-dialog\"],\n    hostVars: 10,\n    hostBindings: function MatDialogContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx._config.id);\n        i0.ɵɵattribute(\"aria-modal\", ctx._config.ariaModal)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledByQueue[0])(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", !ctx._animationsEnabled)(\"mat-mdc-dialog-container-with-actions\", ctx._actionSectionCount > 0);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"mat-mdc-dialog-inner-container\", \"mdc-dialog__container\"], [1, \"mat-mdc-dialog-surface\", \"mdc-dialog__surface\"], [\"cdkPortalOutlet\", \"\"]],\n    template: function MatDialogContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, MatDialogContainer_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 560px);min-width:var(--mat-dialog-container-min-width, 280px)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, calc(100vw - 32px))}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, none);border-radius:var(--mdc-dialog-container-shape, var(--mat-sys-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-sys-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 6px 24px 13px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-sys-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-sys-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-sys-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-sys-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-sys-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-sys-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-sys-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-sys-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-sys-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-sys-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-sys-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px 0)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 16px 24px);justify-content:var(--mat-dialog-actions-alignment, flex-end)}@media(forced-colors: active){.mat-mdc-dialog-actions{border-top-color:CanvasText}}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-dialog-container',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [CdkPortalOutlet],\n      host: {\n        'class': 'mat-mdc-dialog-container mdc-dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': '_config.ariaModal',\n        '[id]': '_config.id',\n        '[attr.role]': '_config.role',\n        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n        '[attr.aria-label]': '_config.ariaLabel',\n        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n        '[class._mat-animation-noopable]': '!_animationsEnabled',\n        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0'\n      },\n      template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 560px);min-width:var(--mat-dialog-container-min-width, 280px)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, calc(100vw - 32px))}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, none);border-radius:var(--mdc-dialog-container-shape, var(--mat-sys-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-sys-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 6px 24px 13px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-sys-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-sys-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-sys-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-sys-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-sys-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-sys-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-sys-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-sys-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-sys-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-sys-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-sys-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px 0)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 16px 24px);justify-content:var(--mat-dialog-actions-alignment, flex-end)}@media(forced-colors: active){.mat-mdc-dialog-actions{border-top-color:CanvasText}}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"]\n    }]\n  }], null, null);\n})();\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n  if (time == null) {\n    return null;\n  }\n  if (typeof time === 'number') {\n    return time;\n  }\n  if (time.endsWith('ms')) {\n    return coerceNumberProperty(time.substring(0, time.length - 2));\n  }\n  if (time.endsWith('s')) {\n    return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n  }\n  if (time === '0') {\n    return 0;\n  }\n  return null; // anything else is invalid.\n}\nvar MatDialogState;\n(function (MatDialogState) {\n  MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n  MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n  MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n  _ref;\n  _containerInstance;\n  /** The instance of component opened into the dialog. */\n  componentInstance;\n  /**\n   * `ComponentRef` of the component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  componentRef;\n  /** Whether the user is allowed to close the dialog. */\n  disableClose;\n  /** Unique ID for the dialog. */\n  id;\n  /** Subject for notifying the user that the dialog has finished opening. */\n  _afterOpened = new Subject();\n  /** Subject for notifying the user that the dialog has started closing. */\n  _beforeClosed = new Subject();\n  /** Result to be passed to afterClosed. */\n  _result;\n  /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n  _closeFallbackTimeout;\n  /** Current state of the dialog. */\n  _state = MatDialogState.OPEN;\n  // TODO(crisbeto): we shouldn't have to declare this property, because `DialogRef.close`\n  // already has a second `options` parameter that we can use. The problem is that internal tests\n  // have assertions like `expect(MatDialogRef.close).toHaveBeenCalledWith(foo)` which will break,\n  // because it'll be called with two arguments by things like `MatDialogClose`.\n  /** Interaction that caused the dialog to close. */\n  _closeInteractionType;\n  constructor(_ref, config, _containerInstance) {\n    this._ref = _ref;\n    this._containerInstance = _containerInstance;\n    this.disableClose = config.disableClose;\n    this.id = _ref.id;\n    // Used to target panels specifically tied to dialogs.\n    _ref.addPanelClass('mat-mdc-dialog-panel');\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      this._finishDialogClose();\n    });\n    _ref.overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._finishDialogClose();\n    });\n    merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n      if (!this.disableClose) {\n        event.preventDefault();\n        _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n      }\n    });\n  }\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult) {\n    this._result = dialogResult;\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1)).subscribe(event => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._ref.overlayRef.detachBackdrop();\n      // The logic that disposes of the overlay depends on the exit animation completing, however\n      // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n      // timeout which will clean everything up if the animation hasn't fired within the specified\n      // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n      // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n      this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n    });\n    this._state = MatDialogState.CLOSING;\n    this._containerInstance._startExitAnimation();\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed() {\n    return this._ref.closed;\n  }\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed() {\n    return this._beforeClosed;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick() {\n    return this._ref.backdropClick;\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents() {\n    return this._ref.keydownEvents;\n  }\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position) {\n    let strategy = this._ref.config.positionStrategy;\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n    this._ref.updatePosition();\n    return this;\n  }\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width = '', height = '') {\n    this._ref.updateSize(width, height);\n    return this;\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    this._ref.addPanelClass(classes);\n    return this;\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    this._ref.removePanelClass(classes);\n    return this;\n  }\n  /** Gets the current state of the dialog's lifecycle. */\n  getState() {\n    return this._state;\n  }\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  _finishDialogClose() {\n    this._state = MatDialogState.CLOSED;\n    this._ref.close(this._result, {\n      focusOrigin: this._closeInteractionType\n    });\n    this.componentInstance = null;\n  }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n  ref._closeInteractionType = interactionType;\n  return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.block();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n  _overlay = inject(Overlay);\n  _defaultOptions = inject(MAT_DIALOG_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  _scrollStrategy = inject(MAT_DIALOG_SCROLL_STRATEGY);\n  _parentDialog = inject(MatDialog, {\n    optional: true,\n    skipSelf: true\n  });\n  _idGenerator = inject(_IdGenerator);\n  _dialog = inject(Dialog);\n  _openDialogsAtThisLevel = [];\n  _afterAllClosedAtThisLevel = new Subject();\n  _afterOpenedAtThisLevel = new Subject();\n  dialogConfigClass = MatDialogConfig;\n  _dialogRefConstructor;\n  _dialogContainerType;\n  _dialogDataToken;\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs() {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened() {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n  _getAfterAllClosed() {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  afterAllClosed = defer(() => this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(startWith(undefined)));\n  constructor() {\n    this._dialogRefConstructor = MatDialogRef;\n    this._dialogContainerType = MatDialogContainer;\n    this._dialogDataToken = MAT_DIALOG_DATA;\n  }\n  open(componentOrTemplateRef, config) {\n    let dialogRef;\n    config = {\n      ...(this._defaultOptions || new MatDialogConfig()),\n      ...config\n    };\n    config.id = config.id || this._idGenerator.getId('mat-mdc-dialog-');\n    config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n    const cdkRef = this._dialog.open(componentOrTemplateRef, {\n      ...config,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      // Disable closing since we need to sync it up to the animation ourselves.\n      disableClose: true,\n      // Disable closing on destroy, because this service cleans up its open dialogs as well.\n      // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n      // the dialogs immediately whereas we want it to wait for the animations to finish.\n      closeOnDestroy: false,\n      // Disable closing on detachments so that we can sync up the animation.\n      // The Material dialog ref handles this manually.\n      closeOnOverlayDetachments: false,\n      container: {\n        type: this._dialogContainerType,\n        providers: () => [\n        // Provide our config as the CDK config as well since it has the same interface as the\n        // CDK one, but it contains the actual values passed in by the user for things like\n        // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n        {\n          provide: this.dialogConfigClass,\n          useValue: config\n        }, {\n          provide: DialogConfig,\n          useValue: config\n        }]\n      },\n      templateContext: () => ({\n        dialogRef\n      }),\n      providers: (ref, cdkConfig, dialogContainer) => {\n        dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n        dialogRef.updatePosition(config?.position);\n        return [{\n          provide: this._dialogContainerType,\n          useValue: dialogContainer\n        }, {\n          provide: this._dialogDataToken,\n          useValue: cdkConfig.data\n        }, {\n          provide: this._dialogRefConstructor,\n          useValue: dialogRef\n        }];\n      }\n    });\n    // This can't be assigned in the `providers` callback, because\n    // the instance hasn't been assigned to the CDK ref yet.\n    dialogRef.componentRef = cdkRef.componentRef;\n    dialogRef.componentInstance = cdkRef.componentInstance;\n    this.openDialogs.push(dialogRef);\n    this.afterOpened.next(dialogRef);\n    dialogRef.afterClosed().subscribe(() => {\n      const index = this.openDialogs.indexOf(dialogRef);\n      if (index > -1) {\n        this.openDialogs.splice(index, 1);\n        if (!this.openDialogs.length) {\n          this._getAfterAllClosed().next();\n        }\n      }\n    });\n    return dialogRef;\n  }\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll() {\n    this._closeDialogs(this.openDialogs);\n  }\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id) {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n  _closeDialogs(dialogs) {\n    let i = dialogs.length;\n    while (i--) {\n      dialogs[i].close();\n    }\n  }\n  static ɵfac = function MatDialog_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialog)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MatDialog,\n    factory: MatDialog.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialog, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n  dialogRef = inject(MatDialogRef, {\n    optional: true\n  });\n  _elementRef = inject(ElementRef);\n  _dialog = inject(MatDialog);\n  /** Screen-reader label for the button. */\n  ariaLabel;\n  /** Default to \"button\" to prevents accidental form submits. */\n  type = 'button';\n  /** Dialog close input. */\n  dialogResult;\n  _matDialogClose;\n  constructor() {}\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n    }\n  }\n  ngOnChanges(changes) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n  _onButtonClick(event) {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n  }\n  static ɵfac = function MatDialogClose_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogClose)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogClose,\n    selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]],\n    hostVars: 2,\n    hostBindings: function MatDialogClose_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) {\n          return ctx._onButtonClick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      type: \"type\",\n      dialogResult: [0, \"mat-dialog-close\", \"dialogResult\"],\n      _matDialogClose: [0, \"matDialogClose\", \"_matDialogClose\"]\n    },\n    exportAs: [\"matDialogClose\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogClose, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-dialog-close], [matDialogClose]',\n      exportAs: 'matDialogClose',\n      host: {\n        '(click)': '_onButtonClick($event)',\n        '[attr.aria-label]': 'ariaLabel || null',\n        '[attr.type]': 'type'\n      }\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    type: [{\n      type: Input\n    }],\n    dialogResult: [{\n      type: Input,\n      args: ['mat-dialog-close']\n    }],\n    _matDialogClose: [{\n      type: Input,\n      args: ['matDialogClose']\n    }]\n  });\n})();\nclass MatDialogLayoutSection {\n  _dialogRef = inject(MatDialogRef, {\n    optional: true\n  });\n  _elementRef = inject(ElementRef);\n  _dialog = inject(MatDialog);\n  constructor() {}\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n    }\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        this._onAdd();\n      });\n    }\n  }\n  ngOnDestroy() {\n    // Note: we null check because there are some internal\n    // tests that are mocking out `MatDialogRef` incorrectly.\n    const instance = this._dialogRef?._containerInstance;\n    if (instance) {\n      Promise.resolve().then(() => {\n        this._onRemove();\n      });\n    }\n  }\n  static ɵfac = function MatDialogLayoutSection_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogLayoutSection)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogLayoutSection\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogLayoutSection, [{\n    type: Directive\n  }], () => [], null);\n})();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n  id = inject(_IdGenerator).getId('mat-mdc-dialog-title-');\n  _onAdd() {\n    // Note: we null check the queue, because there are some internal\n    // tests that are mocking out `MatDialogRef` incorrectly.\n    this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n  }\n  _onRemove() {\n    this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDialogTitle_BaseFactory;\n    return function MatDialogTitle_Factory(__ngFactoryType__) {\n      return (ɵMatDialogTitle_BaseFactory || (ɵMatDialogTitle_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogTitle)))(__ngFactoryType__ || MatDialogTitle);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogTitle,\n    selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-dialog-title\", \"mdc-dialog__title\"],\n    hostVars: 1,\n    hostBindings: function MatDialogTitle_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    exportAs: [\"matDialogTitle\"],\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogTitle, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-dialog-title], [matDialogTitle]',\n      exportAs: 'matDialogTitle',\n      host: {\n        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n        '[id]': 'id'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n  static ɵfac = function MatDialogContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogContent,\n    selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-dialog-content\", \"mdc-dialog__content\"],\n    features: [i0.ɵɵHostDirectivesFeature([i1.CdkScrollable])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogContent, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n      host: {\n        'class': 'mat-mdc-dialog-content mdc-dialog__content'\n      },\n      hostDirectives: [CdkScrollable]\n    }]\n  }], null, null);\n})();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n  /**\n   * Horizontal alignment of action buttons.\n   */\n  align;\n  _onAdd() {\n    this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n  }\n  _onRemove() {\n    this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatDialogActions_BaseFactory;\n    return function MatDialogActions_Factory(__ngFactoryType__) {\n      return (ɵMatDialogActions_BaseFactory || (ɵMatDialogActions_BaseFactory = i0.ɵɵgetInheritedFactory(MatDialogActions)))(__ngFactoryType__ || MatDialogActions);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatDialogActions,\n    selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-dialog-actions\", \"mdc-dialog__actions\"],\n    hostVars: 6,\n    hostBindings: function MatDialogActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-dialog-actions-align-start\", ctx.align === \"start\")(\"mat-mdc-dialog-actions-align-center\", ctx.align === \"center\")(\"mat-mdc-dialog-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogActions, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n      host: {\n        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n  let parent = element.nativeElement.parentElement;\n  while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n    parent = parent.parentElement;\n  }\n  return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\nconst DIRECTIVES = [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent];\nclass MatDialogModule {\n  static ɵfac = function MatDialogModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatDialogModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatDialogModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MatDialog],\n    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDialogModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n      exports: [MatCommonModule, ...DIRECTIVES],\n      providers: [MatDialog]\n    }]\n  }], null, null);\n})();\nexport { MatDialogActions as M, _closeDialogVia as _, MatDialogClose as a, MatDialogTitle as b, MatDialogContent as c, MatDialogContainer as d, MAT_DIALOG_DATA as e, MAT_DIALOG_DEFAULT_OPTIONS as f, MAT_DIALOG_SCROLL_STRATEGY as g, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY as h, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER as i, MatDialog as j, MatDialogConfig as k, MatDialogState as l, MatDialogRef as m, MatDialogModule as n };\n","import { Component, inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogTitle,\n  MatDialogContent,\n  MatDialogActions,\n} from '@angular/material/dialog';\nimport { MatButton } from '@angular/material/button';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { MatIcon } from '@angular/material/icon';\n\ninterface DialogData {\n  title: string;\n  message: string;\n}\n\n@Component({\n    selector: 'ui-delete-confirmation-dialog',\n    templateUrl: './deleteConfirmationDialog.component.html',\n    styleUrl: './deleteConfirmationDialog.component.scss',\n    imports: [\n        MatIcon,\n        MatDialogTitle,\n        CdkScrollable,\n        MatDialogContent,\n        MatDialogActions,\n        MatButton,\n    ]\n})\nexport class DeleteConfirmationDialogComponent {\n  dialogRef =\n    inject<MatDialogRef<DeleteConfirmationDialogComponent>>(MatDialogRef);\n  data = inject<DialogData>(MAT_DIALOG_DATA);\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"confirmation-dialog-wrapper\">\n  <div class=\"dialog-icon\">\n    <mat-icon>delete_outline</mat-icon>\n  </div>\n  <h1 mat-dialog-title class=\"dialog-title mat-title-large\">\n    {{ data.title }}\n  </h1>\n  <div mat-dialog-content class=\"dialog-content\">{{ data.message }}</div>\n  <div mat-dialog-actions class=\"dialog-actions\">\n    <button\n      mat-button\n      (click)=\"onClose()\"\n      class=\"dialog-buttons\"\n      i18n=\"@@DeleteConfirmationDialog.cancelButton\"\n    >\n      Cancel\n    </button>\n    <button\n      mat-button\n      class=\"dialog-buttons\"\n      (click)=\"onConfirm()\"\n      i18n=\"@@DeleteConfirmationDialog.deleteButton\"\n    >\n      Delete\n    </button>\n  </div>\n</div>\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Directive, Input, ChangeDetectorRef, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { _ as _IdGenerator } from './id-generator-1959b006.mjs';\nimport { U as UniqueSelectionDispatcher } from './unique-selection-dispatcher-8d1187be.mjs';\n\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n  /** Emits when the state of the accordion changes */\n  _stateChanges = new Subject();\n  /** Stream that emits true/false when openAll/closeAll is triggered. */\n  _openCloseAllActions = new Subject();\n  /** A readonly id value to use for unique selection coordination. */\n  id = inject(_IdGenerator).getId('cdk-accordion-');\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  multi = false;\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll() {\n    if (this.multi) {\n      this._openCloseAllActions.next(true);\n    }\n  }\n  /** Closes all enabled accordion items. */\n  closeAll() {\n    this._openCloseAllActions.next(false);\n  }\n  ngOnChanges(changes) {\n    this._stateChanges.next(changes);\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._openCloseAllActions.complete();\n  }\n  static ɵfac = function CdkAccordion_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkAccordion)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkAccordion,\n    selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n    inputs: {\n      multi: [2, \"multi\", \"multi\", booleanAttribute]\n    },\n    exportAs: [\"cdkAccordion\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_ACCORDION,\n      useExisting: CdkAccordion\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion, [cdkAccordion]',\n      exportAs: 'cdkAccordion',\n      providers: [{\n        provide: CDK_ACCORDION,\n        useExisting: CdkAccordion\n      }]\n    }]\n  }], null, {\n    multi: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * A basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n  accordion = inject(CDK_ACCORDION, {\n    optional: true,\n    skipSelf: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _expansionDispatcher = inject(UniqueSelectionDispatcher);\n  /** Subscription to openAll/closeAll events. */\n  _openCloseAllSubscription = Subscription.EMPTY;\n  /** Event emitted every time the AccordionItem is closed. */\n  closed = new EventEmitter();\n  /** Event emitted every time the AccordionItem is opened. */\n  opened = new EventEmitter();\n  /** Event emitted when the AccordionItem is destroyed. */\n  destroyed = new EventEmitter();\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  expandedChange = new EventEmitter();\n  /** The unique AccordionItem id. */\n  id = inject(_IdGenerator).getId('cdk-accordion-child-');\n  /** Whether the AccordionItem is expanded. */\n  get expanded() {\n    return this._expanded;\n  }\n  set expanded(expanded) {\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _expanded = false;\n  /** Whether the AccordionItem is disabled. */\n  disabled = false;\n  /** Unregister function for _expansionDispatcher. */\n  _removeUniqueSelectionListener = () => {};\n  constructor() {}\n  ngOnInit() {\n    this._removeUniqueSelectionListener = this._expansionDispatcher.listen((id, accordionId) => {\n      if (this.accordion && !this.accordion.multi && this.accordion.id === accordionId && this.id !== id) {\n        this.expanded = false;\n      }\n    });\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n  /** Toggles the expanded state of the accordion item. */\n  toggle() {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n  /** Sets the expanded state of the accordion item to false. */\n  close() {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n  /** Sets the expanded state of the accordion item to true. */\n  open() {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n  _subscribeToOpenCloseAllActions() {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n  static ɵfac = function CdkAccordionItem_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkAccordionItem)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkAccordionItem,\n    selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n    inputs: {\n      expanded: [2, \"expanded\", \"expanded\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      closed: \"closed\",\n      opened: \"opened\",\n      destroyed: \"destroyed\",\n      expandedChange: \"expandedChange\"\n    },\n    exportAs: [\"cdkAccordionItem\"],\n    features: [i0.ɵɵProvidersFeature([\n    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n    // registering to the same accordion.\n    {\n      provide: CDK_ACCORDION,\n      useValue: undefined\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAccordionItem, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion-item, [cdkAccordionItem]',\n      exportAs: 'cdkAccordionItem',\n      providers: [\n      // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n      // registering to the same accordion.\n      {\n        provide: CDK_ACCORDION,\n        useValue: undefined\n      }]\n    }]\n  }], () => [], {\n    closed: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass CdkAccordionModule {\n  static ɵfac = function CdkAccordionModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkAccordionModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkAccordionModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAccordionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkAccordion, CdkAccordionItem],\n      exports: [CdkAccordion, CdkAccordionItem]\n    }]\n  }], null, null);\n})();\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, ViewContainerRef, ANIMATION_MODULE_TYPE, NgZone, ElementRef, Renderer2, EventEmitter, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChild, ViewChild, ChangeDetectorRef, HostAttributeToken, numberAttribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { _IdGenerator, FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport '@angular/cdk/bidi';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst _c0 = [\"body\"];\nconst _c1 = [\"bodyWrapper\"];\nconst _c2 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c3 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanel_ng_template_7_Template(rf, ctx) {}\nconst _c4 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c5 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatExpansionPanelHeader_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 2);\n    i0.ɵɵelement(2, \"path\", 3);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n  _template = inject(TemplateRef);\n  _expansionPanel = inject(MAT_EXPANSION_PANEL, {\n    optional: true\n  });\n  constructor() {}\n  static ɵfac = function MatExpansionPanelContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionPanelContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatExpansionPanelContent,\n    selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matExpansionPanelContent]'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n  _viewContainerRef = inject(ViewContainerRef);\n  _animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  }) === 'NoopAnimations';\n  _document = inject(DOCUMENT);\n  _ngZone = inject(NgZone);\n  _elementRef = inject(ElementRef);\n  _renderer = inject(Renderer2);\n  _cleanupTransitionEnd;\n  /** Whether the toggle indicator should be hidden. */\n  get hideToggle() {\n    return this._hideToggle || this.accordion && this.accordion.hideToggle;\n  }\n  set hideToggle(value) {\n    this._hideToggle = value;\n  }\n  _hideToggle = false;\n  /** The position of the expansion indicator. */\n  get togglePosition() {\n    return this._togglePosition || this.accordion && this.accordion.togglePosition;\n  }\n  set togglePosition(value) {\n    this._togglePosition = value;\n  }\n  _togglePosition;\n  /** An event emitted after the body's expansion animation happens. */\n  afterExpand = new EventEmitter();\n  /** An event emitted after the body's collapse animation happens. */\n  afterCollapse = new EventEmitter();\n  /** Stream that emits for changes in `@Input` properties. */\n  _inputChanges = new Subject();\n  /** Optionally defined accordion the expansion panel belongs to. */\n  accordion = inject(MAT_ACCORDION, {\n    optional: true,\n    skipSelf: true\n  });\n  /** Content that will be rendered lazily. */\n  _lazyContent;\n  /** Element containing the panel's user-provided content. */\n  _body;\n  /** Element wrapping the panel body. */\n  _bodyWrapper;\n  /** Portal holding the user's content. */\n  _portal;\n  /** ID for the associated header element. Used for a11y labelling. */\n  _headerId = inject(_IdGenerator).getId('mat-expansion-panel-header-');\n  constructor() {\n    super();\n    const defaultOptions = inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._expansionDispatcher = inject(UniqueSelectionDispatcher);\n    if (defaultOptions) {\n      this.hideToggle = defaultOptions.hideToggle;\n    }\n  }\n  /** Determines whether the expansion panel should have spacing between it and its siblings. */\n  _hasSpacing() {\n    if (this.accordion) {\n      return this.expanded && this.accordion.displayMode === 'default';\n    }\n    return false;\n  }\n  /** Gets the expanded state string. */\n  _getExpandedState() {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n  /** Toggles the expanded state of the expansion panel. */\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n  /** Sets the expanded state of the expansion panel to false. */\n  close() {\n    this.expanded = false;\n  }\n  /** Sets the expanded state of the expansion panel to true. */\n  open() {\n    this.expanded = true;\n  }\n  ngAfterContentInit() {\n    if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n        this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n      });\n    }\n    this._setupAnimationEvents();\n  }\n  ngOnChanges(changes) {\n    this._inputChanges.next(changes);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._cleanupTransitionEnd?.();\n    this._inputChanges.complete();\n  }\n  /** Checks whether the expansion panel's content contains the currently-focused element. */\n  _containsFocus() {\n    if (this._body) {\n      const focusedElement = this._document.activeElement;\n      const bodyElement = this._body.nativeElement;\n      return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n    }\n    return false;\n  }\n  _transitionEndListener = ({\n    target,\n    propertyName\n  }) => {\n    if (target === this._bodyWrapper?.nativeElement && propertyName === 'grid-template-rows') {\n      this._ngZone.run(() => {\n        if (this.expanded) {\n          this.afterExpand.emit();\n        } else {\n          this.afterCollapse.emit();\n        }\n      });\n    }\n  };\n  _setupAnimationEvents() {\n    // This method is defined separately, because we need to\n    // disable this logic in some internal components.\n    this._ngZone.runOutsideAngular(() => {\n      if (this._animationsDisabled) {\n        this.opened.subscribe(() => this._ngZone.run(() => this.afterExpand.emit()));\n        this.closed.subscribe(() => this._ngZone.run(() => this.afterCollapse.emit()));\n      } else {\n        setTimeout(() => {\n          const element = this._elementRef.nativeElement;\n          this._cleanupTransitionEnd = this._renderer.listen(element, 'transitionend', this._transitionEndListener);\n          element.classList.add('mat-expansion-panel-animations-enabled');\n        }, 200);\n      }\n    });\n  }\n  static ɵfac = function MatExpansionPanel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionPanel)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatExpansionPanel,\n    selectors: [[\"mat-expansion-panel\"]],\n    contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n      }\n    },\n    viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._body = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._bodyWrapper = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-expansion-panel\"],\n    hostVars: 4,\n    hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n      }\n    },\n    inputs: {\n      hideToggle: [2, \"hideToggle\", \"hideToggle\", booleanAttribute],\n      togglePosition: \"togglePosition\"\n    },\n    outputs: {\n      afterExpand: \"afterExpand\",\n      afterCollapse: \"afterCollapse\"\n    },\n    exportAs: [\"matExpansionPanel\"],\n    features: [i0.ɵɵProvidersFeature([\n    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n    // to the same accordion.\n    {\n      provide: MAT_ACCORDION,\n      useValue: undefined\n    }, {\n      provide: MAT_EXPANSION_PANEL,\n      useExisting: MatExpansionPanel\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 9,\n    vars: 4,\n    consts: [[\"bodyWrapper\", \"\"], [\"body\", \"\"], [1, \"mat-expansion-panel-content-wrapper\"], [\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n    template: function MatExpansionPanel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"div\", 2, 0)(3, \"div\", 3, 1)(5, \"div\", 4);\n        i0.ɵɵprojection(6, 1);\n        i0.ɵɵtemplate(7, MatExpansionPanel_ng_template_7_Template, 0, 0, \"ng-template\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(8, 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"inert\", ctx.expanded ? null : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n      }\n    },\n    dependencies: [CdkPortalOutlet],\n    styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;position:relative;background:var(--mat-expansion-container-background-color, var(--mat-sys-surface));color:var(--mat-expansion-container-text-color, var(--mat-sys-on-surface));border-radius:var(--mat-expansion-container-shape, 12px)}.mat-expansion-panel.mat-expansion-panel-animations-enabled{transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape, 12px);border-top-left-radius:var(--mat-expansion-container-shape, 12px)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape, 12px);border-bottom-left-radius:var(--mat-expansion-container-shape, 12px)}@media(forced-colors: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content-wrapper{display:grid;grid-template-rows:0fr;grid-template-columns:100%}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content-wrapper{transition:grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{grid-template-rows:1fr}@supports not (grid-template-rows: 0fr){.mat-expansion-panel-content-wrapper{height:0}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{height:auto}}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;min-height:0;visibility:hidden;font-family:var(--mat-expansion-container-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-sys-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-sys-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-sys-body-large-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content{transition:visibility 190ms linear}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper>.mat-expansion-panel-content{visibility:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-sys-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel',\n      exportAs: 'matExpansionPanel',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [\n      // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n      // to the same accordion.\n      {\n        provide: MAT_ACCORDION,\n        useValue: undefined\n      }, {\n        provide: MAT_EXPANSION_PANEL,\n        useExisting: MatExpansionPanel\n      }],\n      host: {\n        'class': 'mat-expansion-panel',\n        '[class.mat-expanded]': 'expanded',\n        '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n      },\n      imports: [CdkPortalOutlet],\n      template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content-wrapper\\\" [attr.inert]=\\\"expanded ? null : ''\\\" #bodyWrapper>\\n  <div class=\\\"mat-expansion-panel-content\\\"\\n       role=\\\"region\\\"\\n       [attr.aria-labelledby]=\\\"_headerId\\\"\\n       [id]=\\\"id\\\"\\n       #body>\\n    <div class=\\\"mat-expansion-panel-body\\\">\\n      <ng-content></ng-content>\\n      <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n    </div>\\n    <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n  </div>\\n</div>\\n\",\n      styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;position:relative;background:var(--mat-expansion-container-background-color, var(--mat-sys-surface));color:var(--mat-expansion-container-text-color, var(--mat-sys-on-surface));border-radius:var(--mat-expansion-container-shape, 12px)}.mat-expansion-panel.mat-expansion-panel-animations-enabled{transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape, 12px);border-top-left-radius:var(--mat-expansion-container-shape, 12px)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape, 12px);border-bottom-left-radius:var(--mat-expansion-container-shape, 12px)}@media(forced-colors: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content-wrapper{display:grid;grid-template-rows:0fr;grid-template-columns:100%}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content-wrapper{transition:grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{grid-template-rows:1fr}@supports not (grid-template-rows: 0fr){.mat-expansion-panel-content-wrapper{height:0}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{height:auto}}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;min-height:0;visibility:hidden;font-family:var(--mat-expansion-container-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-sys-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-sys-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-sys-body-large-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content{transition:visibility 190ms linear}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper>.mat-expansion-panel-content{visibility:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-sys-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [], {\n    hideToggle: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    togglePosition: [{\n      type: Input\n    }],\n    afterExpand: [{\n      type: Output\n    }],\n    afterCollapse: [{\n      type: Output\n    }],\n    _lazyContent: [{\n      type: ContentChild,\n      args: [MatExpansionPanelContent]\n    }],\n    _body: [{\n      type: ViewChild,\n      args: ['body']\n    }],\n    _bodyWrapper: [{\n      type: ViewChild,\n      args: ['bodyWrapper']\n    }]\n  });\n})();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n  static ɵfac = function MatExpansionPanelActionRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionPanelActionRow)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatExpansionPanelActionRow,\n    selectors: [[\"mat-action-row\"]],\n    hostAttrs: [1, \"mat-action-row\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-action-row',\n      host: {\n        class: 'mat-action-row'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n  panel = inject(MatExpansionPanel, {\n    host: true\n  });\n  _element = inject(ElementRef);\n  _focusMonitor = inject(FocusMonitor);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _parentChangeSubscription = Subscription.EMPTY;\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const panel = this.panel;\n    const defaultOptions = inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) : EMPTY;\n    this.tabIndex = parseInt(tabIndex || '') || 0;\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n      return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n    }))).subscribe(() => this._changeDetectorRef.markForCheck());\n    // Avoids focus being lost if the panel contained the focused element and was closed.\n    panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => this._focusMonitor.focusVia(this._element, 'program'));\n    if (defaultOptions) {\n      this.expandedHeight = defaultOptions.expandedHeight;\n      this.collapsedHeight = defaultOptions.collapsedHeight;\n    }\n  }\n  /** Height of the header while the panel is expanded. */\n  expandedHeight;\n  /** Height of the header while the panel is collapsed. */\n  collapsedHeight;\n  /** Tab index of the header. */\n  tabIndex = 0;\n  /**\n   * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n   * @docs-private\n   */\n  get disabled() {\n    return this.panel.disabled;\n  }\n  /** Toggles the expanded state of the panel. */\n  _toggle() {\n    if (!this.disabled) {\n      this.panel.toggle();\n    }\n  }\n  /** Gets whether the panel is expanded. */\n  _isExpanded() {\n    return this.panel.expanded;\n  }\n  /** Gets the expanded state string of the panel. */\n  _getExpandedState() {\n    return this.panel._getExpandedState();\n  }\n  /** Gets the panel id. */\n  _getPanelId() {\n    return this.panel.id;\n  }\n  /** Gets the toggle position for the header. */\n  _getTogglePosition() {\n    return this.panel.togglePosition;\n  }\n  /** Gets whether the expand indicator should be shown. */\n  _showToggle() {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n  /**\n   * Gets the current height of the header. Null if no custom height has been\n   * specified, and if the default height from the stylesheet should be used.\n   */\n  _getHeaderHeight() {\n    const isExpanded = this._isExpanded();\n    if (isExpanded && this.expandedHeight) {\n      return this.expandedHeight;\n    } else if (!isExpanded && this.collapsedHeight) {\n      return this.collapsedHeight;\n    }\n    return null;\n  }\n  /** Handle keydown event calling to toggle() if appropriate. */\n  _keydown(event) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._toggle();\n        }\n        break;\n      default:\n        if (this.panel.accordion) {\n          this.panel.accordion._handleHeaderKeydown(event);\n        }\n        return;\n    }\n  }\n  /**\n   * Focuses the panel header. Implemented as a part of `FocusableOption`.\n   * @param origin Origin of the action that triggered the focus.\n   * @docs-private\n   */\n  focus(origin, options) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._element).subscribe(origin => {\n      if (origin && this.panel.accordion) {\n        this.panel.accordion._handleHeaderFocus(this);\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element);\n  }\n  static ɵfac = function MatExpansionPanelHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionPanelHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatExpansionPanelHeader,\n    selectors: [[\"mat-expansion-panel-header\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"],\n    hostVars: 13,\n    hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n          return ctx._toggle();\n        })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        i0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        i0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n      }\n    },\n    inputs: {\n      expandedHeight: \"expandedHeight\",\n      collapsedHeight: \"collapsedHeight\",\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n    },\n    ngContentSelectors: _c5,\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"mat-content\"], [1, \"mat-expansion-indicator\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 -960 960 960\", \"aria-hidden\", \"true\", \"focusable\", \"false\"], [\"d\", \"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\"]],\n    template: function MatExpansionPanelHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵprojection(3, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, MatExpansionPanelHeader_Conditional_4_Template, 3, 0, \"span\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-content-hide-toggle\", !ctx._showToggle());\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._showToggle() ? 4 : -1);\n      }\n    },\n    styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;height:var(--mat-expansion-header-collapsed-state-height, 48px);font-family:var(--mat-expansion-header-text-font, var(--mat-sys-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-sys-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-sys-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-sys-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-sys-title-medium-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-header{transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header::before{border-radius:inherit}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height, 64px)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-sys-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-sys-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-sys-on-surface-variant))}.mat-expansion-panel-animations-enabled .mat-expansion-indicator{transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator{transform:rotate(180deg)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, none)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-header-indicator-display, inline-block)}@media(forced-colors: active){.mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-expansion-panel-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-expansion-panel-header mat-focus-indicator',\n        'role': 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': '_isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.mat-expanded]': '_isExpanded()',\n        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n        '[style.height]': '_getHeaderHeight()',\n        '(click)': '_toggle()',\n        '(keydown)': '_keydown($event)'\n      },\n      template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\",\n      styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;height:var(--mat-expansion-header-collapsed-state-height, 48px);font-family:var(--mat-expansion-header-text-font, var(--mat-sys-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-sys-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-sys-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-sys-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-sys-title-medium-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-header{transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header::before{border-radius:inherit}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height, 64px)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-sys-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-sys-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-sys-on-surface-variant))}.mat-expansion-panel-animations-enabled .mat-expansion-indicator{transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator{transform:rotate(180deg)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, none)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-header-indicator-display, inline-block)}@media(forced-colors: active){.mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}}\"]\n    }]\n  }], () => [], {\n    expandedHeight: [{\n      type: Input\n    }],\n    collapsedHeight: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }]\n  });\n})();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n  static ɵfac = function MatExpansionPanelDescription_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionPanelDescription)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatExpansionPanelDescription,\n    selectors: [[\"mat-panel-description\"]],\n    hostAttrs: [1, \"mat-expansion-panel-header-description\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-description',\n      host: {\n        class: 'mat-expansion-panel-header-description'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n  static ɵfac = function MatExpansionPanelTitle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionPanelTitle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatExpansionPanelTitle,\n    selectors: [[\"mat-panel-title\"]],\n    hostAttrs: [1, \"mat-expansion-panel-header-title\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-panel-title',\n      host: {\n        class: 'mat-expansion-panel-header-title'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n  _keyManager;\n  /** Headers belonging to this accordion. */\n  _ownHeaders = new QueryList();\n  /** All headers inside the accordion. Includes headers inside nested accordions. */\n  _headers;\n  /** Whether the expansion indicator should be hidden. */\n  hideToggle = false;\n  /**\n   * Display mode used for all expansion panels in the accordion. Currently two display\n   * modes exist:\n   *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n   *     panel at a different elevation from the rest of the accordion.\n   *  flat - no spacing is placed around expanded panels, showing all panels at the same\n   *     elevation.\n   */\n  displayMode = 'default';\n  /** The position of the expansion indicator. */\n  togglePosition = 'after';\n  ngAfterContentInit() {\n    this._headers.changes.pipe(startWith(this._headers)).subscribe(headers => {\n      this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n      this._ownHeaders.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n  }\n  /** Handles keyboard events coming in from the panel headers. */\n  _handleHeaderKeydown(event) {\n    this._keyManager.onKeydown(event);\n  }\n  _handleHeaderFocus(header) {\n    this._keyManager.updateActiveItem(header);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._keyManager?.destroy();\n    this._ownHeaders.destroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatAccordion_BaseFactory;\n    return function MatAccordion_Factory(__ngFactoryType__) {\n      return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = i0.ɵɵgetInheritedFactory(MatAccordion)))(__ngFactoryType__ || MatAccordion);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatAccordion,\n    selectors: [[\"mat-accordion\"]],\n    contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headers = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-accordion\"],\n    hostVars: 2,\n    hostBindings: function MatAccordion_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n      }\n    },\n    inputs: {\n      hideToggle: [2, \"hideToggle\", \"hideToggle\", booleanAttribute],\n      displayMode: \"displayMode\",\n      togglePosition: \"togglePosition\"\n    },\n    exportAs: [\"matAccordion\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_ACCORDION,\n      useExisting: MatAccordion\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-accordion',\n      exportAs: 'matAccordion',\n      providers: [{\n        provide: MAT_ACCORDION,\n        useExisting: MatAccordion\n      }],\n      host: {\n        class: 'mat-accordion',\n        // Class binding which is only used by the test harness as there is no other\n        // way for the harness to detect if multiple panel support is enabled.\n        '[class.mat-accordion-multi]': 'this.multi'\n      }\n    }]\n  }], null, {\n    _headers: [{\n      type: ContentChildren,\n      args: [MatExpansionPanelHeader, {\n        descendants: true\n      }]\n    }],\n    hideToggle: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    displayMode: [{\n      type: Input\n    }],\n    togglePosition: [{\n      type: Input\n    }]\n  });\n})();\nclass MatExpansionModule {\n  static ɵfac = function MatExpansionModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatExpansionModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatExpansionModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CdkAccordionModule, PortalModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatExpansionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkAccordionModule, PortalModule, MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent],\n      exports: [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Time and timing curve for expansion panel animations.\n * @deprecated No longer used. Will be removed.\n * @breaking-change 21.0.0\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM. This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matExpansionAnimations = {\n  // Represents:\n  // trigger('indicatorRotate', [\n  //   state('collapsed, void', style({transform: 'rotate(0deg)'})),\n  //   state('expanded', style({transform: 'rotate(180deg)'})),\n  //   transition(\n  //     'expanded <=> collapsed, void => collapsed',\n  //     animate(EXPANSION_PANEL_ANIMATION_TIMING),\n  //   ),\n  // ])\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: {\n    type: 7,\n    name: 'indicatorRotate',\n    definitions: [{\n      type: 0,\n      name: 'collapsed, void',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'rotate(0deg)'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'expanded',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'rotate(180deg)'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'expanded <=> collapsed, void => collapsed',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('bodyExpansion', [\n  //   state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n  //   // Clear the `visibility` while open, otherwise the content will be visible when placed in\n  //   // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n  //   // that have a `visibility` of their own (see #27436).\n  //   state('expanded', style({height: '*', visibility: ''})),\n  //   transition(\n  //     'expanded <=> collapsed, void => collapsed',\n  //     animate(EXPANSION_PANEL_ANIMATION_TIMING),\n  //   ),\n  // ])\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: {\n    type: 7,\n    name: 'bodyExpansion',\n    definitions: [{\n      type: 0,\n      name: 'collapsed, void',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '0px',\n          'visibility': 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'expanded',\n      styles: {\n        type: 6,\n        styles: {\n          'height': '*',\n          'visibility': ''\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'expanded <=> collapsed, void => collapsed',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '225ms cubic-bezier(0.4,0.0,0.2,1)'\n      },\n      options: null\n    }],\n    options: {}\n  }\n};\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","<div class=\"confirmation-dialog-wrapper\">\n  <div class=\"header-container program-header\">\n    <div>\n      <h2 mat-dialog-title class=\"dialog-title mat-headline-small\">\n        {{ data.title }}\n      </h2>\n    </div>\n    <!-- <button\n      mat-icon-button\n      (click)=\"onClose()\"\n      aria-label=\"Icon button with a close icon\"\n    >\n      <mat-icon>close</mat-icon>\n    </button> -->\n  </div>\n  <div\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n    class=\"dialog-content dialog-content-wrapper\"\n    [class.reset-height]=\"!data.isClient\"\n  >\n    <span class=\"label\" i18n=\"@@ProgramModal.programName\">Program name</span>\n    <h2 class=\"program-name mat-title-medium\">\n      {{ data.program.name }}\n    </h2>\n    <span class=\"label\" i18n=\"@@ProgramModal.programDiagnosis\">Diagnosis</span>\n    <h2 class=\"program-name mat-title-medium\">{{ data.program.diagnosis }}</h2>\n\n    <span class=\"label\" i18n=\"@@ProgramModal.programExercises\"\n      >Program exercises</span\n    >\n\n    <!-- This should be refactored to use selected-expansion-panel component!!! -->\n    <mat-accordion>\n      @for (\n        selectedExercise of data.program.selectedExercises;\n        track selectedExercise;\n        let i = $index\n      ) {\n        <mat-expansion-panel\n          class=\"exer-expansion-panel program-panel\"\n          style=\"border-bottom: none\"\n          [expanded]=\"isExpanded\"\n        >\n          <mat-expansion-panel-header\n            collapsedHeight=\"80px\"\n            class=\"exer-expansion-panel-header\"\n          >\n            <div class=\"expansion-panel-handle no-handle\">\n              <span>{{ i + 1 }}</span>\n            </div>\n            <mat-panel-title class=\"no-margin\">\n              <div class=\"program-img-wrapper expanded-panels\">\n                <img\n                  class=\"selected-exercise-img\"\n                  [src]=\"selectedExercise.images?.mainImg\"\n                  [alt]=\"selectedExercise.name[data.selectedLang]\"\n                />\n              </div>\n              <span class=\"title-name mat-body-medium\">{{\n                selectedExercise.name[data.selectedLang]\n              }}</span>\n              <!-- <button\n              (click)=\" $event.stopPropagation(); showExerciseModal(selectedExercise.id, selectedExercise)\"\n              mat-icon-button\n              matTooltip=\"Details\"\n              aria-label=\"Info icon-button with a info icon\"\n            >\n              <mat-icon>info</mat-icon>\n            </button> -->\n            </mat-panel-title>\n            <mat-panel-description\n              class=\"panel-description program-panel-description\"\n            >\n              <button\n                (click)=\"\n                  $event.stopPropagation();\n                  showExerciseModal(selectedExercise.id, selectedExercise, true)\n                \"\n                mat-icon-button\n                matTooltip=\"Details\"\n                i18n-matTooltip=\"@@ProgramModal.exerciseDetailsTooltip\"\n                aria-label=\"Info button with a info icon\"\n                i18n-aria-label=\"@@ProgramModal.exerciseDetailsAriaLabel\"\n              >\n                <mat-icon>info_outline</mat-icon>\n              </button>\n              <!-- <div class=\"session-overview\">\n                <div>\n                  <span>Sets: </span>\n                  <span>{{ selectedExercise.sets }}</span>\n                </div>\n                <div>\n                  <span>Reps: </span>\n                  <span>{{ selectedExercise.reps }}</span>\n                </div>\n              </div>\n              <div class=\"options-wrapper\"></div> -->\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"panel-content program-panel-content\">\n            <div class=\"name-description-label program-description\">\n              <span class=\"label\" i18n=\"@@ProgramModal.exerciseDescription\"\n                >Description</span\n              >\n              <span>{{ selectedExercise.description[data.selectedLang] }}</span>\n            </div>\n            <div class=\"exercise-session program-exercise-session\">\n              <div>\n                <span class=\"label\" i18n=\"@@ProgramModal.exerciseSets\"\n                  >Sets:&nbsp;</span\n                >\n                <span>{{ selectedExercise.sets }}</span>\n              </div>\n              <div>\n                <span class=\"label\" i18n=\"@@ProgramModal.exerciseReps\"\n                  >Reps:&nbsp;</span\n                >\n                <span>{{ selectedExercise.reps }}</span>\n              </div>\n              @if (selectedExercise.pause) {\n                <div>\n                  <span class=\"label\" i18n=\"@@ProgramModal.exercisePause\"\n                    >Pause:&nbsp;</span\n                  >\n                  <span>{{ selectedExercise.pause }}</span>\n                </div>\n              }\n              @if (selectedExercise.weight) {\n                <div>\n                  <span class=\"label\" i18n=\"@@ProgramModal.exerciseWeight\"\n                    >Weight:&nbsp;</span\n                  >\n                  <span>{{ selectedExercise.weight }}</span>\n                </div>\n              }\n              @if (selectedExercise.equipments.length !== 0) {\n                <div>\n                  <span class=\"label\" i18n=\"@@EditProgram.exerciseEquipment\"\n                    >Eq:\n                  </span>\n                  @for (\n                    equipment of selectedExercise.equipments;\n                    track equipment;\n                    let last = $last\n                  ) {\n                    <span>{{ equipment.translations[data.selectedLang] }}</span>\n                    @if (!last) {\n                      <span>, </span>\n                    }\n                  }\n                </div>\n              }\n            </div>\n          </div>\n        </mat-expansion-panel>\n      }\n    </mat-accordion>\n  </div>\n  @if (data.isClient) {\n    <mat-dialog-actions class=\"dialog-actions program-dialog-actions\">\n      <button\n        [mat-dialog-close]=\"data.program.id\"\n        mat-fab\n        matTooltip=\"Add to client\"\n        i18n-matTooltip=\"@@ProgramModal.addProgramToClientTooltip\"\n        color=\"primary\"\n        aria-label=\"Add icon button\"\n        i18n-matTooltip=\"@@ProgramModal.addProgramToClientAriaLabel\"\n      >\n        <mat-icon>add</mat-icon>\n      </button>\n    </mat-dialog-actions>\n  }\n</div>\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogTitle,\n  MatDialogActions,\n  MatDialogClose,\n} from '@angular/material/dialog';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  Exercise,\n  ExerciseModalComponent,\n  ExercisesService,\n  Program,\n} from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton, MatFabButton } from '@angular/material/button';\nimport {\n  MatAccordion,\n  MatExpansionPanel,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n  MatExpansionPanelDescription,\n} from '@angular/material/expansion';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { Observable, Subscription } from 'rxjs';\n\ninterface DialogData {\n  title: string;\n  program: Program;\n  programId: string;\n  selectedLang: 'en' | 'de' | 'sr';\n  isClient: boolean;\n}\n\n@Component({\n  selector: 'ui-program-modal',\n  templateUrl: './program-modal.component.html',\n  styleUrl: './program-modal.component.scss',\n  imports: [\n    MatDialogTitle,\n    OverlayscrollbarsModule,\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatIconButton,\n    MatTooltip,\n    MatIcon,\n    MatDialogActions,\n    MatFabButton,\n    MatDialogClose,\n  ],\n})\nexport class ProgramModalComponent implements OnDestroy {\n  dialogRef = inject<MatDialogRef<ProgramModalComponent>>(MatDialogRef);\n  data = inject<DialogData>(MAT_DIALOG_DATA);\n  dialog = inject(MatDialog);\n  private exercisesService = inject(ExercisesService);\n\n  subscriptions = new Subscription();\n\n  // program!: Program;\n  isExpanded = false;\n  exerciseId!: string;\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  private _getExercise(exerciseId: string): Observable<Exercise> {\n    return this.exercisesService.getExercise(exerciseId);\n  }\n\n  showExerciseModal(\n    exerciseId: string,\n    exerciseCard: Exercise,\n    isProgramExercise: boolean,\n  ): void {\n    const subscription = this._getExercise(exerciseId).subscribe(exercise => {\n      this.dialog.open(ExerciseModalComponent, {\n        data: {\n          fullExercise: exercise,\n          exerciseCard: exerciseCard,\n          isProgramExercise: isProgramExercise,\n          selectedLang: this.data.selectedLang,\n        },\n        width: '500px',\n        // height: '736px',\n        panelClass: [\n          'custom-dialog',\n          ...(isProgramExercise\n            ? ['custom-shadow', 'custom-exercise-dialog-content-wrapper']\n            : []),\n        ],\n        // disableClose: isProgramExercise,\n        // hasBackdrop: isProgramExercise ? false : true,\n        backdropClass: isProgramExercise ? 'custom-backdrop' : '',\n        // enterAnimationDuration: 0,\n      });\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"table-wrapper clients-program-list-table\">\n  <div class=\"tables-wrapper\">\n    <div>\n      <div class=\"clients-program-list-title\">\n        <h3\n          class=\"mat-title-large\"\n          i18n=\"@@ClientForm.listOfClientProgramsTitle\"\n        >\n          List of client's programs\n        </h3>\n        <mat-divider\n          vertical\n          style=\"display: inline-block; height: 24px\"\n        ></mat-divider>\n        <button\n          mat-flat-button\n          matTooltip=\"Create program\"\n          i18n-matTooltip=\"@@ClientForm.createProgramBtnTooltip\"\n          (click)=\"createProgram()\"\n        >\n          <mat-icon>add</mat-icon>\n          {{ newButtonString }}\n        </button>\n      </div>\n      <form formArray=\"form\">\n        <div\n          overlay-scrollbars\n          [options]=\"themeSignal()\"\n          [defer]\n          class=\"clients-table\"\n        >\n          <!-- @if (dataSource.data.length) { -->\n          <table\n            mat-table\n            class=\"mat-table-background\"\n            [dataSource]=\"dataSourceClientsPrograms\"\n            multiTemplateDataRows\n          >\n            <!-- Checkbox Column -->\n            <!-- <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox\n                  (change)=\"$event ? toggleAllRows() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                >\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox\n                  (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\"\n                  [checked]=\"selection.isSelected(row)\"\n                >\n                </mat-checkbox>\n              </td>\n            </ng-container> -->\n            <!-- Position Column -->\n            @for (column of columnsToDisplay; track column) {\n              <ng-container matColumnDef=\"{{ column }}\">\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  i18n=\"@@ClientFormProgramsTable.column\"\n                >\n                  @if (column === 'position') {\n                    No.\n                  } @else if (column === 'name') {\n                    Name\n                  } @else if (column === 'dateRange') {\n                    Date\n                  } @else if (column === 'noExercises') {\n                    No. of exercises\n                  } @else {\n                    Status\n                  }\n                </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  @if (column === 'status') {\n                    <div class=\"status-chip-wrapper\">\n                      @if (element.isProgramCompleted) {\n                        <div class=\"status-chip status-completed\">\n                          <span i18n=\"@@ClientFormProgramsTable.rowCompleted\"\n                            >Completed</span\n                          >\n                        </div>\n                      } @else {\n                        <div class=\"status-chip status-inprogress\">\n                          <span i18n=\"@@ClientFormProgramsTable.rowInProgress\"\n                            >In progress</span\n                          >\n                        </div>\n                      }\n                    </div>\n                  } @else if (column === 'noExercises') {\n                    {{ element.selectedExercises.length }}\n                  } @else if (column === 'dateRange') {\n                    {{ element.dateRange.start | date: 'dd/MM/yyyy' }} -\n                    {{ element.dateRange.end | date: 'dd/MM/yyyy' }}\n                  } @else {\n                    {{ element[column] }}\n                  }\n                </td>\n              </ng-container>\n            }\n            <ng-container matColumnDef=\"expand\">\n              <th mat-header-cell *matHeaderCellDef aria-label=\"row actions\">\n                &nbsp;\n              </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <div class=\"client-options\">\n                  @if (!element.isProgramCompleted) {\n                    <button\n                      mat-icon-button\n                      matTooltip=\"Edit\"\n                      i18n-matTooltip=\"\n                        @@ClientFormProgramsTable.editProgramButton\"\n                      aria-label=\"Edit icon button\"\n                      i18m-aria-label=\"@@ClientFormProgramsTable.editProgramBtnAriaLabel\"\n                      (click)=\"\n                        $event.stopPropagation();\n                        openEditClientProgramDialog(element.position)\n                      \"\n                    >\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  }\n                  <button\n                    mat-icon-button\n                    matTooltip=\"Add to client\"\n                    i18n-matTooltip=\"\n                      @@ClientFormProgramsTable.addToClientButton\"\n                    aria-label=\"Add to client icon button\"\n                    i18m-aria-label=\"@@ClientFormProgramsTable.addToClientAriaLabel\"\n                    (click)=\"\n                      $event.stopPropagation();\n                      reuseEditProgram(element.position)\n                    \"\n                  >\n                    <mat-icon>person_add</mat-icon>\n                    <!-- <mat-icon>content_copy</mat-icon> -->\n                  </button>\n                  <button\n                    mat-icon-button\n                    matTooltip=\"Delete\"\n                    i18n-matTooltip=\"\n                      @@ClientFormProgramsTable.deleteClientProgramButton\"\n                    aria-label=\"Delete icon button\"\n                    i18m-aria-label=\"@@ClientFormProgramsTable.deleteClientProgramAriaLabel\"\n                    (click)=\"\n                      $event.stopPropagation();\n                      openDeleteConfirmationDialog(element.position)\n                    \"\n                  >\n                    <mat-icon>delete_outline</mat-icon>\n                  </button>\n                  <button\n                    mat-icon-button\n                    aria-label=\"expand row\"\n                    (click)=\"\n                      expandedElement =\n                        expandedElement === element ? null : element;\n                      $event.stopPropagation()\n                    \"\n                  >\n                    @if (expandedElement === element) {\n                      <mat-icon>keyboard_arrow_up</mat-icon>\n                    } @else {\n                      <mat-icon>keyboard_arrow_down</mat-icon>\n                    }\n                  </button>\n                </div>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td\n                mat-cell\n                *matCellDef=\"let element\"\n                [attr.colspan]=\"columnsToDisplayWithExpand.length\"\n              >\n                <div\n                  class=\"client-program-element-detail\"\n                  [@detailExpand]=\"\n                    element === expandedElement ? 'expanded' : 'collapsed'\n                  \"\n                >\n                  <div class=\"table-client-program-wrapper\">\n                    <!-- @for (\n                      selectedExercise of element.selectedExercises;\n                      track selectedExercise\n                    ) {\n                      <div>{{ selectedExercise.name }}</div>\n                    } -->\n                    <!-- <mat-list> -->\n                    @for (\n                      selectedExercise of element.selectedExercises;\n                      track selectedExercise;\n                      let i = $index\n                    ) {\n                      <div class=\"list-item\">\n                        <div class=\"list-item-flex\">\n                          <img\n                            [src]=\"selectedExercise.images?.mainImg\"\n                            [alt]=\"selectedExercise.name[selectedLanguage]\"\n                            style=\"width: 50px\"\n                          />\n                          <div class=\"list-info\">\n                            <span class=\"list-info-title\">{{\n                              selectedExercise.name[selectedLanguage]\n                            }}</span>\n                            <span class=\"list-info-details\">\n                              <span i18n=\"@@ClientFormProgramsTable.sets\"\n                                >Sets: {{ selectedExercise.sets }} |\n                              </span>\n                              <span i18n=\"@@ClientFormProgramsTable.reps\"\n                                >Reps: {{ selectedExercise.reps }} |\n                              </span>\n                              @if (selectedExercise.pause) {\n                                <span i18n=\"@@ClientFormProgramsTable.pause\"\n                                  >Pause: {{ selectedExercise.pause }} |\n                                </span>\n                              }\n                              @if (selectedExercise.weight) {\n                                <span i18n=\"@@ClientFormProgramsTable.weight\"\n                                  >Weight: {{ selectedExercise.weight }} |\n                                </span>\n                              }\n                              @if (selectedExercise.equipments.length !== 0) {\n                                <span i18n=\"@@EditProgram.exerciseEquipment\"\n                                  >Eq:\n                                  @for (\n                                    equipment of selectedExercise.equipments;\n                                    track equipment;\n                                    let last = $last\n                                  ) {\n                                    <span>{{\n                                      equipment.translations[selectedLanguage]\n                                    }}</span>\n                                    @if (!last) {\n                                      <span>, </span>\n                                    }\n                                  }\n                                </span>\n                              }\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <!-- <mat-list-item>\n                          <div matListItemAvatar class=\"mat-list-custom-avatar\">\n                            <img\n                              [src]=\"selectedExercise.images?.mainImg\"\n                              [alt]=\"selectedExercise.name\"\n                              style=\"width: 50px\"\n                            />\n                          </div>\n                          <div matListItemTitle>{{ selectedExercise.name }}</div>\n                          <div matListItemLine>\n                            {{\n                              'Sets: ' +\n                                selectedExercise.sets +\n                                '   |   ' +\n                                'Reps: ' +\n                                selectedExercise.reps\n                            }}\n                          </div>\n                        </mat-list-item> -->\n                    }\n                    <!-- <mat-divider></mat-divider> -->\n                    <!-- </mat-list> -->\n                  </div>\n                  <!-- <div class=\"client-program-element-diagram\">\n                    <div class=\"client-program-element-position\">\n                      {{ element.position }}\n                    </div>\n                    <div class=\"client-program-element-name\">{{ element.name }}</div>\n                    <div class=\"client-program-element-date\">{{ element.date }}</div>\n                    <div class=\"client-program-element-isCompleted\">\n                      {{ element.isProgramCompleted }}\n                    </div>\n                  </div> -->\n                  <!-- <div class=\"client-program-element-description\">\n                    {{ element.description }}\n                    <span class=\"client-program-element-description-attribution\">\n                      -- Wikipedia\n                    </span>\n                  </div> -->\n                </div>\n              </td>\n            </ng-container>\n            <tr\n              mat-header-row\n              *matHeaderRowDef=\"columnsToDisplayWithExpand\"\n            ></tr>\n            <tr\n              mat-row\n              *matRowDef=\"let element; columns: columnsToDisplayWithExpand\"\n              class=\"client-program-element-row table-rows\"\n              [class.client-program-expanded-row]=\"expandedElement === element\"\n              (click)=\"\n                expandedElement = expandedElement === element ? null : element\n              \"\n            ></tr>\n            <tr\n              mat-row\n              *matRowDef=\"let row; columns: ['expandedDetail']\"\n              class=\"client-program-detail-row\"\n            ></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td\n                class=\"mat-cell no-data-cell\"\n                colspan=\"4\"\n                i18n=\"@@ClientFormProgramsTable.noProgramsAssigned\"\n              >\n                No programs assigned to clients\n              </td>\n            </tr>\n          </table>\n          <!-- } -->\n        </div>\n      </form>\n    </div>\n    <div>\n      <!-- <div class=\"clients-program-list-title\">\n        <h3>List of client's programs</h3>\n        <mat-divider\n          vertical\n          style=\"display: inline-block; height: 24px\"\n        ></mat-divider>\n      </div> -->\n      @defer {\n        <ui-basic-programs-table\n          class=\"ui-programs-table\"\n          [dataSource]=\"dataSourceAllPrograms\"\n          [isClient]=\"true\"\n          (getProgramsEvent)=\"getPrograms($event)\"\n          (viewProgramEvent)=\"viewProgramModal($event)\"\n          (addProgramToClientEvent)=\"addProgramToClient($event)\"\n        ></ui-basic-programs-table>\n      } @placeholder {\n        <div class=\"basic-programs-table-placeholder\">\n          <div class=\"basic-programs-title-placeholder\">\n            <h3\n              class=\"basic-programs-title-skeleton mat-title-large\"\n              i18n=\"@@ClientFormBasicProgramsTable.titlePlaceholder\"\n            >\n              List of program templates\n            </h3>\n            <div class=\"input-placeholder animate-skeleton\"></div>\n          </div>\n          <div class=\"basic-program-skeleton-container\">\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n          </div>\n          <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n        </div>\n      }\n      <!-- <ui-programs-table\n        class=\"ui-programs-table\"\n        [mainProgramsList]=\"false\"\n        [dataSource]=\"dataSourceAllPrograms\"\n        (getProgramsEvent)=\"getPrograms($event)\"\n      ></ui-programs-table> -->\n    </div>\n  </div>\n</div>\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { DatePipe } from '@angular/common';\nimport { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  ControlContainer,\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  FormsModule,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport {\n  Client,\n  ClientsService,\n  Program,\n  ProgramsService,\n  ShareClientsDataService,\n  ShareStateService,\n} from '@slowautomobile/exercises';\nimport { Subscription } from 'rxjs';\nimport { DeleteConfirmationDialogComponent } from '../deleteConfirmationDialog/deleteConfirmationDialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ProgramModalComponent } from '../program-modal/program-modal.component';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { BasicProgramsTableComponent } from '../basic-programs-table/basic-programs-table.component';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LocalstorageService } from '@slowautomobile/users';\n\nexport interface AdaptedProgram {\n  name: string;\n  id: string;\n  selectedExercises: object[];\n  // program: object;\n  isProgramCompleted: boolean;\n  // date: string;\n  dateRange: { start: string; end: string };\n  position: number;\n}\n\n@Component({\n  selector: 'ui-client-full-edit-programs',\n  templateUrl: './client-full-edit-programs.component.html',\n  styleUrl: './client-full-edit-programs.component.scss',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed,void', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n      ),\n    ]),\n  ],\n  imports: [\n    MatDividerModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    FormsModule,\n    OverlayscrollbarsModule,\n    MatTableModule,\n    BasicProgramsTableComponent,\n    DatePipe,\n  ],\n  providers: [DatePipe],\n})\nexport class ClientFullEditProgramsComponent implements OnInit, OnDestroy {\n  private programsService = inject(ProgramsService);\n  private controlContainer = inject(ControlContainer);\n  private datePipe = inject(DatePipe);\n  dialog = inject(MatDialog);\n  private _snackBar = inject(MatSnackBar);\n  private router = inject(Router);\n  private formGroupDirective = inject(FormGroupDirective);\n  private shareClientsDataService = inject(ShareClientsDataService);\n  private clientsService = inject(ClientsService);\n  private localstorageService = inject(LocalstorageService);\n  private shareStateService = inject(ShareStateService);\n\n  isFetchingData = this.shareStateService.isFetchingData;\n\n  newButtonString = $localize`:@@PageToolbar.newBtn:New`;\n\n  columnsToDisplay: string[] = [\n    // 'select',\n    'position',\n    'name',\n    'noExercises',\n    'dateRange',\n    'status',\n  ];\n  dataSourceClientsPrograms = new MatTableDataSource<Program>();\n  dataSourceAllPrograms = new MatTableDataSource<Program>();\n\n  columnsToDisplayWithExpand = [...this.columnsToDisplay, 'expand'];\n  expandedElement!: AdaptedProgram | null;\n\n  selectedLanguage!: 'en' | 'de' | 'sr';\n  selection = new SelectionModel<Program>(true, []);\n  clientsPrograms: any[] = [];\n  allPrograms: any[] = [];\n  subscriptions = new Subscription();\n  position!: number;\n  form!: FormArray;\n  isProgramCompleted: boolean[] = [];\n  clientId!: string;\n  clientName!: string;\n  client!: Client;\n  // isClientProgram = this.shareClientsDataService.isClientProgram;\n  clientInfo = this.shareClientsDataService.clientInfo;\n  reuseProgram = this.shareClientsDataService.reuseProgram;\n  isBrandNewClientsProgram =\n    this.shareClientsDataService.isBrandNewClientsProgram;\n\n  parentForm!: FormGroup;\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  constructor() {\n    // Get data and assign the data to the data source for the table to render\n    this.getPrograms('template');\n  }\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log(this.selectedLanguage);\n\n    this.form = this.controlContainer.control?.get('programs') as FormArray;\n    console.log(this.form);\n\n    this.clientId = this.formGroupDirective.form.get('clientInfo.id')?.value;\n    console.log(this.formGroupDirective.form);\n    this.clientName =\n      this.formGroupDirective.form.get('clientInfo.name')?.value;\n    this.client = this.formGroupDirective.form.get('clientInfo')?.value;\n    this.parentForm = this.formGroupDirective.form;\n    console.log(this.parentForm.value);\n    this.getClientsPrograms();\n    console.log(this.clientInfo());\n\n    // this.form.valueChanges.subscribe(() => );\n\n    // this.dataSourceClientsPrograms.data = this.form.get('programs')?.value;\n  }\n\n  private getClientsPrograms() {\n    this.clientsPrograms = [];\n    let adaptedProgram: AdaptedProgram;\n    this.form.value.forEach((programData: any, i: number) => {\n      console.log(programData);\n      // const startDate = this.datePipe.transform(\n      //   programData.dateRange.start,\n      //   'dd/MM/yyyy',\n      // );\n      // const endDate = this.datePipe.transform(\n      //   programData.dateRange.end,\n      //   'dd/MM/yyyy',\n      // );\n\n      const currentDate = new Date();\n      const programEndDate = new Date(programData.dateRange.end);\n      let isProgramCompleted;\n      if (programEndDate < currentDate) {\n        isProgramCompleted = true;\n        console.log('This program is completed');\n      } else {\n        isProgramCompleted = false;\n        console.log('This program is in progress');\n      }\n\n      adaptedProgram = {\n        id: programData.program.id,\n        name: programData.program.name,\n        selectedExercises: programData.program.selectedExercises,\n        // program: programData.program,\n        // date: `${startDate} - ${endDate}`,\n        dateRange: programData.dateRange,\n        position: i + 1,\n        isProgramCompleted: isProgramCompleted,\n      };\n      this.clientsPrograms.push(adaptedProgram);\n      console.log(adaptedProgram);\n    });\n    // const subscription = this.programsService\n    //   .getPrograms()\n    //   .subscribe(programsList => {\n    //     this.programs = [];\n    //     programsList.forEach((program, i) => {\n    //       program.position = i + 1;\n    //       this.programs.push(program);\n    //       // this.programs = programsList;\n    //     });\n    console.log(this.clientsPrograms);\n    this.dataSourceClientsPrograms.data = this.clientsPrograms;\n    //   });\n    // this.subscriptions.add(subscription);\n  }\n\n  openEditClientProgramDialog(programPosition: number) {\n    // console.log(programPosition);\n    // console.log(this.programs[programPosition - 1]);\n    // this.isClientProgram.set(true);\n    this.reuseProgram.set(false);\n    const programId = this.clientsPrograms[programPosition - 1].id;\n    const programName = this.clientsPrograms[programPosition - 1].name;\n\n    const dateRange = this.clientsPrograms[programPosition - 1].dateRange;\n    console.log(dateRange);\n\n    console.log(this.clientName);\n\n    this.clientInfo.set({\n      clientId: this.clientId,\n      clientName: this.clientName,\n      programPosition: programPosition - 1,\n      programId: programId,\n      programName: programName,\n      dateRange: dateRange,\n    });\n    console.log(this.clientInfo());\n\n    // this.router.navigateByUrl(`programs/form/${programId}`);\n    // this.router.navigateByUrl(\n    //   `clients/form/${this.clientId}/programs/${programId}`,\n    // );\n    this.router.navigate([`programs/form/${programId}`], {\n      queryParams: { programName: `${programName}`, isClientProgram: 'true' },\n    });\n  }\n\n  reuseEditProgram(programPosition: number) {\n    this.reuseProgram.set(true);\n    // this.isClientProgram.set(true);\n\n    const programId = this.clientsPrograms[programPosition - 1].id;\n    const programName = this.clientsPrograms[programPosition - 1].name;\n\n    this.clientInfo.set({\n      clientId: this.clientId,\n      clientName: this.clientName,\n      programPosition: programPosition - 1,\n      programId: programId,\n      programName: programName,\n      dateRange: { start: '', end: '' },\n    });\n\n    // this.router.navigateByUrl(`programs/form/${programId}`);\n    this.router.navigate([`programs/form/${programId}`], {\n      queryParams: { programName: `${programName}`, isClientProgram: 'true' },\n    });\n  }\n\n  openDeleteConfirmationDialog(programPosition: number) {\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '312px',\n      data: {\n        title: $localize`:@@DeleteConfirmationDialog.deleteTitleProgram:Delete selected program?`,\n        message: $localize`:@@DeleteConfirmationDialog.deleteTitleClientProgram:Deleting the selected program will remove it from clients profile.`,\n      },\n      panelClass: 'custom-dialog',\n    });\n\n    // SHOULD THERE BE A DIALOG, SINCE ANOTHER ACTION IS NEEDED FOR SAVING CHANGES(CLICKING SAVE BTN)???\n\n    const subscription = dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // User confirmed deletion, handle deletion logic here\n        console.log('User confirmed deletion');\n        // this.deleteProgram(programPosition);\n        const subscription = this.clientsService\n          .deleteClientProgram(this.clientId, programPosition - 1)\n          .subscribe(res => {\n            this.form.removeAt(programPosition - 1);\n            this.getClientsPrograms();\n\n            // this.programs.splice(programPosition - 1, 1);\n            // this.dataSourceClientsPrograms.data = this.programs;\n\n            console.log(res);\n          });\n        this.subscriptions.add(subscription);\n\n        dialogRef.close();\n      } else {\n        // User canceled deletion\n        console.log('User canceled deletion');\n        dialogRef.close();\n      }\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  /* private deleteProgram(programPosition: number) {\n    // console.log(programPosition - 1);\n    // console.log(this.form.value[programPosition - 1]);\n    this.form.removeAt(programPosition - 1);\n    this.getPrograms();\n\n    this._snackBar.open('Program deleted', '', {\n      duration: 2000,\n      panelClass: ['custom-snackbar-style'],\n    });\n    // this.programs.splice(programPosition - 1, 1);\n\n    // this.dataSourceClientsPrograms.data = this.programs;\n\n    // console.log(this.form.value);\n  } */\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSourceClientsPrograms.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSourceClientsPrograms.data);\n  }\n\n  // getProgram(programId: string) {\n  //   this.programsService.getProgram(programId).subscribe(program => {\n  //     console.log(program);\n  //   });\n  // }\n\n  /** The label for the checkbox on the passed row */\n  // checkboxLabel(row?: Program): string {\n  //   console.log('checkbox label dont work');\n  //   if (!row) {\n  //     return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n  //   }\n  //   return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n  //     row.position + 1\n  //   }`;\n  // }\n\n  createProgram() {\n    // console.log('add program to client');\n    // console.log(this.form);\n    // this.isClientProgram.set(true);\n\n    this.isBrandNewClientsProgram.set(true);\n    // this.clientInfo.set({\n    //   clientId: this.clientId,\n    //   clientName: this.clientName,\n    //   programPosition: 0,\n    //   programId: '',\n    //   programName: '',\n    //   dateRange: { start: '', end: '' },\n    // });\n\n    this.router.navigateByUrl(`programs/form`);\n  }\n\n  getPrograms(listOption: string) {\n    this.isFetchingData.set(true);\n\n    if (listOption === 'template') {\n      const subscription = this.programsService\n        .getPrograms()\n        .subscribe(programsList => {\n          this.allPrograms = [];\n          this.allPrograms = programsList;\n          this.allPrograms.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n          });\n          console.log(this.allPrograms);\n\n          this.dataSourceAllPrograms.data = this.allPrograms;\n          this.isFetchingData.set(false);\n        });\n      this.subscriptions.add(subscription);\n    }\n  }\n\n  viewProgramModal(programId: string) {\n    const subscription = this.programsService\n      .getProgram(programId)\n      .subscribe(program => {\n        const dialogRef = this.dialog.open(ProgramModalComponent, {\n          width: '500px',\n          // height: '736px',\n          data: {\n            title: $localize`:@@ProgramModal.modalTitle:Program info`,\n            program: program,\n            selectedLang: this.selectedLanguage,\n            isClient: true,\n          },\n          // disableClose: true, // Disable closing when clicked outside\n          panelClass: 'custom-dialog',\n          // enterAnimationDuration: 0,\n        });\n\n        const subscription = dialogRef.afterClosed().subscribe(result => {\n          if (result) {\n            this.addProgramToClient(result);\n          } else {\n            console.log('Program modal exited');\n          }\n        });\n        this.subscriptions.add(subscription);\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  addProgramToClient(programId: string) {\n    console.log(programId);\n    const subscription = this.programsService\n      .getProgram(programId, true)\n      .subscribe(program => {\n        program.isTemplate = false;\n        console.log(program);\n        // Create independent program that belongs to client with its unique id and configuration\n        let startDate = this.form.get('clientInfo.dateRange.start')?.value;\n        console.log(startDate === null);\n        let endDate = this.form.get('clientInfo.dateRange.end')?.value;\n        startDate === undefined ? (startDate = new Date()) : startDate;\n        endDate === undefined\n          ? (endDate = startDate.getTime() + 7 * 24 * 60 * 60 * 1000)\n          : endDate;\n        const newProgram = {\n          // programId: createdProgram.id,\n          // programName: createdProgram.name,\n          program: {\n            name: program.name,\n            diagnosis: program.diagnosis,\n            notes: program.notes,\n            selectedExercises: program.selectedExercises,\n            templateProgramId: program.id,\n            isTemplate: false,\n          },\n          dateRange: {\n            // start: dateRange.start,\n            // end: dateRange.end,\n            start: startDate,\n            end: endDate,\n          },\n        };\n        console.log(newProgram);\n        const programs = this.form.value;\n        const updatedPrograms = [...programs, newProgram];\n        console.log(updatedPrograms);\n        const updatedClient = {\n          firstName: this.client.firstName,\n          lastName: this.client.lastName,\n          name: this.client.name,\n          email: this.client.email,\n          phone: this.client.phone,\n          address: {\n            street: this.client.address?.street,\n            streetNumber: this.client.address?.streetNumber,\n            city: this.client.address?.city,\n            zipCode: this.client.address?.zipCode,\n            country: this.client.address?.country,\n          },\n          programs: updatedPrograms,\n        };\n\n        const subscription = this.clientsService\n          .updateClient(updatedClient, this.clientId)\n          .subscribe(updatedClient => {\n            // Add full newly added client's program to form\n            const newAddedProgram = updatedClient.programs?.pop();\n            const programsArray = this.form as FormArray;\n            programsArray.push(new FormControl(newAddedProgram));\n\n            // this.parentForm.updateValueAndValidity();\n            this.getClientsPrograms();\n\n            const message = $localize`:@@Snackbar.programAddedToClient:Program added to client`;\n            this._snackBar.open(message, '', {\n              duration: 2000,\n              panelClass: ['custom-snackbar-style'],\n            });\n          });\n        this.subscriptions.add(subscription);\n\n        // lastValueFrom(timer(2100)).then(() => {\n        //   this.router.navigateByUrl(`clients/form/${this.clientId}`);\n        // });\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { _IdGenerator, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW, UP_ARROW, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, inject, ChangeDetectorRef, EventEmitter, booleanAttribute, Directive, ContentChildren, Input, Output, ElementRef, ANIMATION_MODULE_TYPE, HostAttributeToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { M as MatRipple } from './ripple-5bdada85.mjs';\nimport { M as MatPseudoCheckbox } from './pseudo-checkbox-4a60d45e.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport { M as MatRippleModule } from './index-a36e3c7c.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"mat-pseudo-checkbox\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    hideSingleSelectionIndicator: false,\n    hideMultipleSelectionIndicator: false,\n    disabledInteractive: false\n  };\n}\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatButtonToggleGroup),\n  multi: true\n};\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n  source;\n  value;\n  constructor(/** The button toggle that emits the event. */\n  source, /** The value assigned to the button toggle. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n  _changeDetector = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _multiple = false;\n  _disabled = false;\n  _disabledInteractive = false;\n  _selectionModel;\n  /**\n   * Reference to the raw value that the consumer tried to assign. The real\n   * value will exclude any values from this one that don't correspond to a\n   * toggle. Useful for the cases where the value is assigned before the toggles\n   * have been initialized or at the same that they're being swapped out.\n   */\n  _rawValue;\n  /**\n   * The method to be called in order to update ngModel.\n   * Now `ngModel` binding is not supported in multiple selection mode.\n   */\n  _controlValueAccessorChangeFn = () => {};\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  _onTouched = () => {};\n  /** Child button toggle buttons. */\n  _buttonToggles;\n  /** The appearance for all the buttons in the group. */\n  appearance;\n  /** `name` attribute for the underlying `input` element. */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n    this._markButtonsForCheck();\n  }\n  _name = inject(_IdGenerator).getId('mat-button-toggle-group-');\n  /** Whether the toggle group is vertical. */\n  vertical;\n  /** Value of the toggle group. */\n  get value() {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n    if (this.multiple) {\n      return selected.map(toggle => toggle.value);\n    }\n    return selected[0] ? selected[0].value : undefined;\n  }\n  set value(newValue) {\n    this._setSelectionByValue(newValue);\n    this.valueChange.emit(this.value);\n  }\n  /**\n   * Event that emits whenever the value of the group changes.\n   * Used to facilitate two-way data binding.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  /** Selected button toggles in the group. */\n  get selected() {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n    return this.multiple ? selected : selected[0] || null;\n  }\n  /** Whether multiple button toggles can be selected. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether multiple button toggle group is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether buttons in the group should be interactive while they're disabled. */\n  get disabledInteractive() {\n    return this._disabledInteractive;\n  }\n  set disabledInteractive(value) {\n    this._disabledInteractive = value;\n    this._markButtonsForCheck();\n  }\n  /** The layout direction of the toggle button group. */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Event emitted when the group's value changes. */\n  change = new EventEmitter();\n  /** Whether checkmark indicator for single-selection button toggle groups is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._markButtonsForCheck();\n  }\n  _hideSingleSelectionIndicator;\n  /** Whether checkmark indicator for multiple-selection button toggle groups is hidden. */\n  get hideMultipleSelectionIndicator() {\n    return this._hideMultipleSelectionIndicator;\n  }\n  set hideMultipleSelectionIndicator(value) {\n    this._hideMultipleSelectionIndicator = value;\n    this._markButtonsForCheck();\n  }\n  _hideMultipleSelectionIndicator;\n  constructor() {\n    const defaultOptions = inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    this.hideSingleSelectionIndicator = defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this.hideMultipleSelectionIndicator = defaultOptions?.hideMultipleSelectionIndicator ?? false;\n  }\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n  }\n  ngAfterContentInit() {\n    this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    if (!this.multiple) {\n      this._initializeTabIndex();\n    }\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value Value to be set to the model.\n   */\n  writeValue(value) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Handle keydown event calling to single-select button toggle. */\n  _keydown(event) {\n    if (this.multiple || this.disabled) {\n      return;\n    }\n    const target = event.target;\n    const buttonId = target.id;\n    const index = this._buttonToggles.toArray().findIndex(toggle => {\n      return toggle.buttonId === buttonId;\n    });\n    let nextButton = null;\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        nextButton = this._buttonToggles.get(index) || null;\n        break;\n      case UP_ARROW:\n        nextButton = this._getNextButton(index, -1);\n        break;\n      case LEFT_ARROW:\n        nextButton = this._getNextButton(index, this.dir === 'ltr' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        nextButton = this._getNextButton(index, 1);\n        break;\n      case RIGHT_ARROW:\n        nextButton = this._getNextButton(index, this.dir === 'ltr' ? 1 : -1);\n        break;\n      default:\n        return;\n    }\n    if (nextButton) {\n      event.preventDefault();\n      nextButton._onButtonClick();\n      nextButton.focus();\n    }\n  }\n  /** Dispatch change event with current selection and group value. */\n  _emitChangeEvent(toggle) {\n    const event = new MatButtonToggleChange(toggle, this.value);\n    this._rawValue = event.value;\n    this._controlValueAccessorChangeFn(event.value);\n    this.change.emit(event);\n  }\n  /**\n   * Syncs a button toggle's selected state with the model value.\n   * @param toggle Toggle to be synced.\n   * @param select Whether the toggle should be selected.\n   * @param isUserInput Whether the change was a result of a user interaction.\n   * @param deferEvents Whether to defer emitting the change events.\n   */\n  _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n    // Deselect the currently-selected toggle, if we're in single-selection\n    // mode and the button being toggled isn't selected at the moment.\n    if (!this.multiple && this.selected && !toggle.checked) {\n      this.selected.checked = false;\n    }\n    if (this._selectionModel) {\n      if (select) {\n        this._selectionModel.select(toggle);\n      } else {\n        this._selectionModel.deselect(toggle);\n      }\n    } else {\n      deferEvents = true;\n    }\n    // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n    // the side-effect is that we may end up updating the model value out of sequence in others\n    // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n    if (deferEvents) {\n      Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n    } else {\n      this._updateModelValue(toggle, isUserInput);\n    }\n  }\n  /** Checks whether a button toggle is selected. */\n  _isSelected(toggle) {\n    return this._selectionModel && this._selectionModel.isSelected(toggle);\n  }\n  /** Determines whether a button toggle should be checked on init. */\n  _isPrechecked(toggle) {\n    if (typeof this._rawValue === 'undefined') {\n      return false;\n    }\n    if (this.multiple && Array.isArray(this._rawValue)) {\n      return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n    }\n    return toggle.value === this._rawValue;\n  }\n  /** Initializes the tabindex attribute using the radio pattern. */\n  _initializeTabIndex() {\n    this._buttonToggles.forEach(toggle => {\n      toggle.tabIndex = -1;\n    });\n    if (this.selected) {\n      this.selected.tabIndex = 0;\n    } else {\n      for (let i = 0; i < this._buttonToggles.length; i++) {\n        const toggle = this._buttonToggles.get(i);\n        if (!toggle.disabled) {\n          toggle.tabIndex = 0;\n          break;\n        }\n      }\n    }\n    this._markButtonsForCheck();\n  }\n  /** Obtain the subsequent toggle to which the focus shifts. */\n  _getNextButton(startIndex, offset) {\n    const items = this._buttonToggles;\n    for (let i = 1; i <= items.length; i++) {\n      const index = (startIndex + offset * i + items.length) % items.length;\n      const item = items.get(index);\n      if (item && !item.disabled) {\n        return item;\n      }\n    }\n    return null;\n  }\n  /** Updates the selection state of the toggles in the group based on a value. */\n  _setSelectionByValue(value) {\n    this._rawValue = value;\n    if (!this._buttonToggles) {\n      return;\n    }\n    const toggles = this._buttonToggles.toArray();\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Value must be an array in multiple-selection mode.');\n      }\n      this._clearSelection();\n      value.forEach(currentValue => this._selectValue(currentValue, toggles));\n    } else {\n      this._clearSelection();\n      this._selectValue(value, toggles);\n    }\n    // In single selection mode we need at least one enabled toggle to always be focusable.\n    if (!this.multiple && toggles.every(toggle => toggle.tabIndex === -1)) {\n      for (const toggle of toggles) {\n        if (!toggle.disabled) {\n          toggle.tabIndex = 0;\n          break;\n        }\n      }\n    }\n  }\n  /** Clears the selected toggles. */\n  _clearSelection() {\n    this._selectionModel.clear();\n    this._buttonToggles.forEach(toggle => {\n      toggle.checked = false;\n      // If the button toggle is in single select mode, initialize the tabIndex.\n      if (!this.multiple) {\n        toggle.tabIndex = -1;\n      }\n    });\n  }\n  /** Selects a value if there's a toggle that corresponds to it. */\n  _selectValue(value, toggles) {\n    for (const toggle of toggles) {\n      if (toggle.value === value) {\n        toggle.checked = true;\n        this._selectionModel.select(toggle);\n        if (!this.multiple) {\n          // If the button toggle is in single select mode, reset the tabIndex.\n          toggle.tabIndex = 0;\n        }\n        break;\n      }\n    }\n  }\n  /** Syncs up the group's value with the model and emits the change event. */\n  _updateModelValue(toggle, isUserInput) {\n    // Only emit the change event for user input.\n    if (isUserInput) {\n      this._emitChangeEvent(toggle);\n    }\n    // Note: we emit this one no matter whether it was a user interaction, because\n    // it is used by Angular to sync up the two-way data binding.\n    this.valueChange.emit(this.value);\n  }\n  /** Marks all of the child button toggles to be checked. */\n  _markButtonsForCheck() {\n    this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n  }\n  static ɵfac = function MatButtonToggleGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatButtonToggleGroup)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatButtonToggleGroup,\n    selectors: [[\"mat-button-toggle-group\"]],\n    contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-button-toggle-group\"],\n    hostVars: 6,\n    hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatButtonToggleGroup_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.multiple ? \"group\" : \"radiogroup\")(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n      }\n    },\n    inputs: {\n      appearance: \"appearance\",\n      name: \"name\",\n      vertical: [2, \"vertical\", \"vertical\", booleanAttribute],\n      value: \"value\",\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      hideMultipleSelectionIndicator: [2, \"hideMultipleSelectionIndicator\", \"hideMultipleSelectionIndicator\", booleanAttribute]\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      change: \"change\"\n    },\n    exportAs: [\"matButtonToggleGroup\"],\n    features: [i0.ɵɵProvidersFeature([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n      provide: MAT_BUTTON_TOGGLE_GROUP,\n      useExisting: MatButtonToggleGroup\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-button-toggle-group',\n      providers: [MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n        provide: MAT_BUTTON_TOGGLE_GROUP,\n        useExisting: MatButtonToggleGroup\n      }],\n      host: {\n        'class': 'mat-button-toggle-group',\n        '(keydown)': '_keydown($event)',\n        '[attr.role]': \"multiple ? 'group' : 'radiogroup'\",\n        '[attr.aria-disabled]': 'disabled',\n        '[class.mat-button-toggle-vertical]': 'vertical',\n        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n      },\n      exportAs: 'matButtonToggleGroup'\n    }]\n  }], () => [], {\n    _buttonToggles: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatButtonToggle), {\n        // Note that this would technically pick up toggles\n        // from nested groups, but that's not a case that we support.\n        descendants: true\n      }]\n    }],\n    appearance: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideMultipleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/** Single button inside of a toggle group. */\nclass MatButtonToggle {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _focusMonitor = inject(FocusMonitor);\n  _idGenerator = inject(_IdGenerator);\n  _animationMode = inject(ANIMATION_MODULE_TYPE, {\n    optional: true\n  });\n  _checked = false;\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  ariaLabel;\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  ariaLabelledby = null;\n  /** Underlying native `button` element. */\n  _buttonElement;\n  /** The parent button toggle group (exclusive selection). Optional. */\n  buttonToggleGroup;\n  /** Unique ID for the underlying `button` element. */\n  get buttonId() {\n    return `${this.id}-button`;\n  }\n  /** The unique ID for this button toggle. */\n  id;\n  /** HTML's 'name' attribute used to group radios for unique selection. */\n  name;\n  /** MatButtonToggleGroup reads this to assign its own value. */\n  value;\n  /** Tabindex of the toggle. */\n  get tabIndex() {\n    return this._tabIndex;\n  }\n  set tabIndex(value) {\n    if (value !== this._tabIndex) {\n      this._tabIndex = value;\n      this._markForCheck();\n    }\n  }\n  _tabIndex;\n  /** Whether ripples are disabled on the button toggle. */\n  disableRipple;\n  /** The appearance style of the button. */\n  get appearance() {\n    return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n  }\n  set appearance(value) {\n    this._appearance = value;\n  }\n  _appearance;\n  /** Whether the button is checked. */\n  get checked() {\n    return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n  }\n  set checked(value) {\n    if (value !== this._checked) {\n      this._checked = value;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the button is disabled. */\n  get disabled() {\n    return this._disabled || this.buttonToggleGroup && this.buttonToggleGroup.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Whether the button should remain interactive when it is disabled. */\n  get disabledInteractive() {\n    return this._disabledInteractive || this.buttonToggleGroup !== null && this.buttonToggleGroup.disabledInteractive;\n  }\n  set disabledInteractive(value) {\n    this._disabledInteractive = value;\n  }\n  _disabledInteractive;\n  /** Event emitted when the group value changes. */\n  change = new EventEmitter();\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const toggleGroup = inject(MAT_BUTTON_TOGGLE_GROUP, {\n      optional: true\n    });\n    const defaultTabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    }) || '';\n    const defaultOptions = inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._tabIndex = parseInt(defaultTabIndex) || 0;\n    this.buttonToggleGroup = toggleGroup;\n    this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    this.disabledInteractive = defaultOptions?.disabledInteractive ?? false;\n  }\n  ngOnInit() {\n    const group = this.buttonToggleGroup;\n    this.id = this.id || this._idGenerator.getId('mat-button-toggle-');\n    if (group) {\n      if (group._isPrechecked(this)) {\n        this.checked = true;\n      } else if (group._isSelected(this) !== this._checked) {\n        // As side effect of the circular dependency between the toggle group and the button,\n        // we may end up in a state where the button is supposed to be checked on init, but it\n        // isn't, because the checked value was assigned too early. This can happen when Ivy\n        // assigns the static input value before the `ngOnInit` has run.\n        group._syncButtonToggle(this, this._checked);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    // This serves two purposes:\n    // 1. We don't want the animation to fire on the first render for pre-checked toggles so we\n    //    delay adding the class until the view is rendered.\n    // 2. We don't want animation if the `NoopAnimationsModule` is provided.\n    if (this._animationMode !== 'NoopAnimations') {\n      this._elementRef.nativeElement.classList.add('mat-button-toggle-animations-enabled');\n    }\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    const group = this.buttonToggleGroup;\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    // Remove the toggle from the selection once it's destroyed. Needs to happen\n    // on the next tick in order to avoid \"changed after checked\" errors.\n    if (group && group._isSelected(this)) {\n      group._syncButtonToggle(this, false, false, true);\n    }\n  }\n  /** Focuses the button. */\n  focus(options) {\n    this._buttonElement.nativeElement.focus(options);\n  }\n  /** Checks the button toggle due to an interaction with the underlying native button. */\n  _onButtonClick() {\n    if (this.disabled) {\n      return;\n    }\n    const newChecked = this.isSingleSelector() ? true : !this._checked;\n    if (newChecked !== this._checked) {\n      this._checked = newChecked;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n        this.buttonToggleGroup._onTouched();\n      }\n    }\n    if (this.isSingleSelector()) {\n      const focusable = this.buttonToggleGroup._buttonToggles.find(toggle => {\n        return toggle.tabIndex === 0;\n      });\n      // Modify the tabindex attribute of the last focusable button toggle to -1.\n      if (focusable) {\n        focusable.tabIndex = -1;\n      }\n      // Modify the tabindex attribute of the presently selected button toggle to 0.\n      this.tabIndex = 0;\n    }\n    // Emit a change event when it's the single selector\n    this.change.emit(new MatButtonToggleChange(this, this.value));\n  }\n  /**\n   * Marks the button toggle as needing checking for change detection.\n   * This method is exposed because the parent button toggle group will directly\n   * update bound properties of the radio button.\n   */\n  _markForCheck() {\n    // When the group value changes, the button will not be notified.\n    // Use `markForCheck` to explicit update button toggle's status.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Gets the name that should be assigned to the inner DOM node. */\n  _getButtonName() {\n    if (this.isSingleSelector()) {\n      return this.buttonToggleGroup.name;\n    }\n    return this.name || null;\n  }\n  /** Whether the toggle is in single selection mode. */\n  isSingleSelector() {\n    return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n  }\n  static ɵfac = function MatButtonToggle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatButtonToggle)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatButtonToggle,\n    selectors: [[\"mat-button-toggle\"]],\n    viewQuery: function MatButtonToggle_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"],\n    hostVars: 14,\n    hostBindings: function MatButtonToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() {\n          return ctx.focus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n        i0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-disabled-interactive\", ctx.disabledInteractive)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      id: \"id\",\n      name: \"name\",\n      value: \"value\",\n      tabIndex: \"tabIndex\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      appearance: \"appearance\",\n      checked: [2, \"checked\", \"checked\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n    },\n    outputs: {\n      change: \"change\"\n    },\n    exportAs: [\"matButtonToggle\"],\n    ngContentSelectors: _c1,\n    decls: 7,\n    vars: 13,\n    consts: [[\"button\", \"\"], [\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"click\", \"id\", \"disabled\"], [1, \"mat-button-toggle-checkbox-wrapper\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 3, \"disabled\"]],\n    template: function MatButtonToggle_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", 1, 0);\n        i0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onButtonClick());\n        });\n        i0.ɵɵtemplate(2, MatButtonToggle_Conditional_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"span\", 4)(6, \"span\", 5);\n      }\n      if (rf & 2) {\n        const button_r3 = i0.ɵɵreference(1);\n        i0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled && !ctx.disabledInteractive || null);\n        i0.ɵɵattribute(\"role\", ctx.isSingleSelector() ? \"radio\" : \"button\")(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-pressed\", !ctx.isSingleSelector() ? ctx.checked : null)(\"aria-checked\", ctx.isSingleSelector() ? ctx.checked : null)(\"name\", ctx._getButtonName())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.buttonToggleGroup && (!ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideSingleSelectionIndicator || ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideMultipleSelectionIndicator) ? 2 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matRippleTrigger\", button_r3)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n      }\n    },\n    dependencies: [MatRipple, MatPseudoCheckbox],\n    styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}@media(forced-colors: active){.mat-button-toggle-standalone,.mat-button-toggle-group{outline:solid 1px}}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}@media(forced-colors: active){.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{outline:0}}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-legacy-button-toggle-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checkbox-wrapper{display:inline-block;justify-content:flex-start;align-items:center;width:0;height:18px;line-height:18px;overflow:hidden;box-sizing:border-box;position:absolute;top:50%;left:16px;transform:translate3d(0, -50%, 0)}[dir=rtl] .mat-button-toggle-checkbox-wrapper{left:auto;right:16px}.mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:12px}[dir=rtl] .mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:auto;right:12px}.mat-button-toggle-checked .mat-button-toggle-checkbox-wrapper{width:18px}.mat-button-toggle-animations-enabled .mat-button-toggle-checkbox-wrapper{transition:width 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-checkbox-wrapper{transition:none}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-legacy-button-toggle-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color, var(--mat-sys-on-surface));background-color:var(--mat-standard-button-toggle-background-color, transparent);font-family:var(--mat-standard-button-toggle-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-standard-button-toggle-label-text-size, var(--mat-sys-label-large-size));line-height:var(--mat-standard-button-toggle-label-text-line-height, var(--mat-sys-label-large-line-height));font-weight:var(--mat-standard-button-toggle-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-standard-button-toggle-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-standard-button-toggle-selected-state-background-color, var(--mat-sys-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-standard-button-toggle-disabled-state-background-color, transparent)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-standard-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color, var(--mat-sys-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height, 40px)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}@media(forced-colors: active){.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-animations-enabled .mat-button-toggle-button{transition:padding 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-button{transition:none}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:30px}[dir=rtl] .mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:0;padding-right:30px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-button-toggle',\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matButtonToggle',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n        '[class.mat-button-toggle-checked]': 'checked',\n        '[class.mat-button-toggle-disabled]': 'disabled',\n        '[class.mat-button-toggle-disabled-interactive]': 'disabledInteractive',\n        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n        'class': 'mat-button-toggle',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.id]': 'id',\n        '[attr.name]': 'null',\n        '(focus)': 'focus()',\n        'role': 'presentation'\n      },\n      imports: [MatRipple, MatPseudoCheckbox],\n      template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.role]=\\\"isSingleSelector() ? 'radio' : 'button'\\\"\\n        [attr.tabindex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"!isSingleSelector() ? checked : null\\\"\\n        [attr.aria-checked]=\\\"isSingleSelector() ? checked : null\\\"\\n        [disabled]=\\\"(disabled && !disabledInteractive) || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  @if (buttonToggleGroup && (\\n    !buttonToggleGroup.multiple && !buttonToggleGroup.hideSingleSelectionIndicator ||\\n    buttonToggleGroup.multiple && !buttonToggleGroup.hideMultipleSelectionIndicator)\\n  ) {\\n    <div class=\\\"mat-button-toggle-checkbox-wrapper\\\">\\n      <mat-pseudo-checkbox\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"/>\\n    </div>\\n  }\\n\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n      styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}@media(forced-colors: active){.mat-button-toggle-standalone,.mat-button-toggle-group{outline:solid 1px}}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}@media(forced-colors: active){.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{outline:0}}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-legacy-button-toggle-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checkbox-wrapper{display:inline-block;justify-content:flex-start;align-items:center;width:0;height:18px;line-height:18px;overflow:hidden;box-sizing:border-box;position:absolute;top:50%;left:16px;transform:translate3d(0, -50%, 0)}[dir=rtl] .mat-button-toggle-checkbox-wrapper{left:auto;right:16px}.mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:12px}[dir=rtl] .mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:auto;right:12px}.mat-button-toggle-checked .mat-button-toggle-checkbox-wrapper{width:18px}.mat-button-toggle-animations-enabled .mat-button-toggle-checkbox-wrapper{transition:width 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-checkbox-wrapper{transition:none}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-legacy-button-toggle-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color, var(--mat-sys-on-surface));background-color:var(--mat-standard-button-toggle-background-color, transparent);font-family:var(--mat-standard-button-toggle-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-standard-button-toggle-label-text-size, var(--mat-sys-label-large-size));line-height:var(--mat-standard-button-toggle-label-text-line-height, var(--mat-sys-label-large-line-height));font-weight:var(--mat-standard-button-toggle-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-standard-button-toggle-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-standard-button-toggle-selected-state-background-color, var(--mat-sys-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-standard-button-toggle-disabled-state-background-color, transparent)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-standard-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color, var(--mat-sys-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height, 40px)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}@media(forced-colors: active){.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-animations-enabled .mat-button-toggle-button{transition:padding 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-button{transition:none}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:30px}[dir=rtl] .mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:0;padding-right:30px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full));border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-sys-corner-full))}\"]\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    _buttonElement: [{\n      type: ViewChild,\n      args: ['button']\n    }],\n    id: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    appearance: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }]\n  });\n})();\nclass MatButtonToggleModule {\n  static ɵfac = function MatButtonToggleModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatButtonToggleModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatButtonToggleModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatRippleModule, MatButtonToggle, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatButtonToggleGroup, MatButtonToggle],\n      exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]\n    }]\n  }], null, null);\n})();\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","<div class=\"table-wrapper\">\n  <mat-form-field>\n    <mat-label i18n=\"@@ProgramsList.inputFilterLabel\">Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"E.g. Seated back stretch\"\n      i18n-placeholder=\"@@ProgramsList.inputPlaceholder\"\n      #input\n    />\n  </mat-form-field>\n\n  <div class=\"search-segmented-btns\">\n    <mat-button-toggle-group\n      class=\"segmented-btns\"\n      [(ngModel)]=\"listOption\"\n      name=\"listOption\"\n      aria-label=\"List Option\"\n      i18n-aria-label=\"@@ProgramsList.listOptionAriaLabel\"\n      (change)=\"getPrograms(listOption)\"\n      hideSingleSelectionIndicator=\"true\"\n    >\n      <mat-button-toggle value=\"all\" i18n=\"@@ProgramsList.listOptionAll\"\n        >All</mat-button-toggle\n      >\n      <mat-button-toggle\n        value=\"template\"\n        i18n=\"@@ProgramsList.listOptionTemplate\"\n        >Template</mat-button-toggle\n      >\n\n      <mat-button-toggle value=\"client\" i18n=\"@@ProgramsList.listOptionClient\"\n        >Client</mat-button-toggle\n      >\n      <mat-button-toggle\n        value=\"favorite\"\n        i18n=\"@@ProgramsList.listOptionFavorite\"\n        >Favorite</mat-button-toggle\n      >\n    </mat-button-toggle-group>\n  </div>\n\n  <!-- <div class=\"mat-elevation-z8 programs-table\"> -->\n  <div class=\"programs-table-container\">\n    <div\n      class=\"programs-table table-scroll-container\"\n      overlay-scrollbars\n      [options]=\"themeSignal()\"\n      [defer]\n    >\n      <!-- @if (!isFetchingData()) { -->\n      @if (isFetchingData()) {\n        <div class=\"fetchingDataSpinner\">\n          <mat-spinner diameter=\"50\"></mat-spinner>\n        </div>\n      }\n      <table\n        mat-table\n        class=\"mat-table-background\"\n        [dataSource]=\"dataSource\"\n        matSort\n      >\n        <!-- ID Column -->\n        <!-- <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container> -->\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            mat-sort-header\n            i18n=\"@@ProgramsList.tableColumnName\"\n          >\n            Name\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n        </ng-container>\n        <!-- Program Type Column -->\n        <ng-container matColumnDef=\"type\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            i18n=\"@@ProgramsList.tableColumnType\"\n          >\n            Type\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            @if (row.isTemplate) {\n              <span i18n=\"@@ProgramsList.tableColumnTemplate\">Template</span>\n              @if (row.isAdminProgram) {\n                <span\n                  class=\"template-icon\"\n                  matTooltip=\"Default program\"\n                  i18n-matTooltip=\"@@ProgramsList.defaultProgramTooltip\"\n                  ><img width=\"16\" src=\"assets/images/leaf-img.svg\" alt=\"\"\n                /></span>\n              } @else {\n                <span\n                  class=\"template-icon\"\n                  matTooltip=\"User's program\"\n                  i18n-matTooltip=\"@@ProgramsList.UsersProgramTooltip\"\n                  ><img\n                    width=\"14\"\n                    src=\"assets/images/blue-user-icon.svg\"\n                    alt=\"\"\n                /></span>\n              }\n            } @else {\n              <span>{{ row.clientName }}</span>\n            }\n            <!-- {{ row.isTemplate ? 'Template' : row.clientName }} -->\n          </td>\n        </ng-container>\n        <!-- Number of Exercises Column -->\n        <ng-container matColumnDef=\"numberOfExercises\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            i18n=\"@@ProgramsList.tableColumnNumberOfExercises\"\n          >\n            No. exercises\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.selectedExercises.length }}\n          </td>\n        </ng-container>\n        <!-- Options Column -->\n        <ng-container matColumnDef=\"options\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div class=\"program-options\">\n              @if (row.clientName) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Add to client\"\n                  i18n-matTooltip=\"@@ProgramsList.addToClientTooltip\"\n                  aria-label=\"Add to client icon button\"\n                  i18n-aria-label=\"@@ProgramsList.addToClientAriaLabel\"\n                  (click)=\"\n                    $event.stopPropagation();\n                    reuseEditProgram(row.position, row.id)\n                  \"\n                >\n                  <!-- <mat-icon>content_copy</mat-icon> -->\n                  <mat-icon>person_add</mat-icon>\n                </button>\n              } @else {\n                @if (!(row.isAdminProgram && !isAdmin)) {\n                  <button\n                    mat-icon-button\n                    matTooltip=\"Edit\"\n                    i18n-matTooltip=\"@@ProgramsList.editProgramTooltip\"\n                    aria-label=\"Edit icon button\"\n                    i18n-aria-label=\"@@ProgramsList.editProgramAriaLabel\"\n                    (click)=\"openEditProgram(row.id)\"\n                    [disabled]=\"row.isAdminProgram && !isAdmin\"\n                  >\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                }\n              }\n              @if (!row.clientName) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Add to client\"\n                  i18n-matTooltip=\"@@ProgramsList.addToClientTooltip\"\n                  aria-label=\"Add to client icon button\"\n                  i18n-aria-label=\"@@ProgramsList.addToClientAriaLabel\"\n                  (click)=\"\n                    $event.stopPropagation();\n                    reuseEditProgram(row.position, row.id)\n                  \"\n                >\n                  <!-- <mat-icon>content_copy</mat-icon> -->\n                  <mat-icon>person_add</mat-icon>\n                </button>\n              }\n              @if (!(row.isAdminProgram && !isAdmin)) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Delete\"\n                  i18n-matTooltip=\"@@ProgramsList.deleteProgramTooltip\"\n                  aria-label=\"Delete icon button\"\n                  i18n-aria-label=\"@@ProgramsList.deleteProgramAriaLabel\"\n                  (click)=\"openDeleteConfirmationDialog(row.id, listOption)\"\n                  [disabled]=\"row.isAdminProgram && !isAdmin\"\n                >\n                  <mat-icon>delete_outline</mat-icon>\n                </button>\n              }\n              @if (row.isTemplate) {\n                @if (row.isFavorite) {\n                  <button\n                    (click)=\"removeFromFavorites(row)\"\n                    mat-icon-button\n                    class=\"favorite-program-star\"\n                    matTooltip=\"Remove from favorites\"\n                    i18n-matTooltip=\"\n                      @@ProgramsList.removeProgramFromFavoritesTooltip\"\n                    aria-label=\"Favorite icon-button with a star icon\"\n                    i18n-aria-label=\"\n                      @@ProgramsList.removeProgramFromFavoritesAriaLabel\"\n                  >\n                    <mat-icon>star</mat-icon>\n                  </button>\n                } @else {\n                  <button\n                    (click)=\"addToFavorites(row)\"\n                    mat-icon-button\n                    matTooltip=\"Add to favorites\"\n                    i18n-matTooltip=\"\n                      @@ProgramsList.addProgramToFavoritesTooltip\"\n                    aria-label=\"Favorite icon-button with a star icon\"\n                    i18n-aria-label=\"\n                      @@ProgramsList.addProgramToFavoritesAriaLabel\"\n                  >\n                    <mat-icon>star_border</mat-icon>\n                  </button>\n                }\n              }\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          class=\"table-rows\"\n        ></tr>\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td\n            class=\"mat-cell\"\n            colspan=\"4\"\n            i18n=\"@@ProgramsList.noMatchingFilter\"\n          >\n            No data matching the filter \"{{ input.value }}\"\n          </td>\n        </tr>\n      </table>\n      <!-- } @else {\n        <div class=\"programs-table-skeleton\">\n          <div class=\"row-skeleton\" style=\"height: 48px; margin-top: 8px\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n      } -->\n    </div>\n    <mat-paginator\n      class=\"mat-paginator-background\"\n      pageSize=\"10\"\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      aria-label=\"Select page of programs\"\n      i18n-aria-label=\"@@ProgramsList.selectPageOfPrograms\"\n    ></mat-paginator>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  inject,\n  Input,\n  ViewChild,\n  output,\n} from '@angular/core';\nimport { MatSort, Sort, MatSortModule } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { Program, ShareStateService } from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonToggleGroup,\n  MatButtonToggle,\n} from '@angular/material/button-toggle';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n@Component({\n  selector: 'ui-programs-table',\n  templateUrl: './programs-table.component.html',\n  styleUrl: './programs-table.component.scss',\n  imports: [\n    MatFormField,\n    MatLabel,\n    MatInput,\n    MatButtonToggleGroup,\n    FormsModule,\n    MatButtonToggle,\n    OverlayscrollbarsModule,\n    MatTableModule,\n    MatSort,\n    MatSortModule,\n    MatIconButton,\n    MatTooltip,\n    MatIcon,\n    MatPaginatorModule,\n    MatProgressSpinnerModule\n  ],\n})\nexport class ProgramsTableComponent implements AfterViewInit {\n  private shareStateService = inject(ShareStateService);\n\n  isFetchingData = this.shareStateService.isFetchingData;\n\n  displayedColumns: string[] = ['name', 'numberOfExercises', 'type', 'options'];\n  @Input() isAdmin = false;\n  @Input() isAdminProgram = false;\n  @Input() dataSource = new MatTableDataSource<Program>();\n  @Input() listOption = 'all';\n  @Input() mainProgramsList = false;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  readonly getProgramsEvent = output<string>();\n  readonly reuseEditProgramEvent = output<{\n    programPosition: number;\n    programId: string;\n  }>();\n  readonly openEditProgramEvent = output<string>();\n  readonly openDeleteConfirmationDialogEvent = output<{\n    itemId: string;\n    listOption: string;\n  }>();\n\n  readonly favoriteProgram = output<Program>();\n  readonly removeFavoriteProgram = output<Program>();\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  // @Output() viewProgramEvent: EventEmitter<any> = new EventEmitter();\n  // @Output() addProgramToClientEvent: EventEmitter<any> = new EventEmitter();\n\n  getPrograms(listOption: string) {\n    console.log(this.dataSource.data);\n    this.getProgramsEvent.emit(listOption);\n    console.log(this.dataSource.data);\n  }\n\n  reuseEditProgram(programPosition: number, programId: string) {\n    this.reuseEditProgramEvent.emit({ programPosition, programId });\n  }\n\n  openEditProgram(programId: string) {\n    this.openEditProgramEvent.emit(programId);\n  }\n\n  openDeleteConfirmationDialog(itemId: string, listOption: string) {\n    this.openDeleteConfirmationDialogEvent.emit({ itemId, listOption });\n  }\n\n  // viewProgram(programId: string) {\n  //   this.viewProgramEvent.emit(programId);\n  //   console.log('this is open view program', programId);\n  // }\n\n  // addProgramToClient(programId: string) {\n  //   this.addProgramToClientEvent.emit(programId);\n  // }\n\n  addToFavorites(program: Program) {\n    program.isFavorite = true;\n    this.favoriteProgram.emit(program);\n    console.log(program);\n  }\n\n  removeFromFavorites(program: Program) {\n    program.isFavorite = false;\n    this.removeFavoriteProgram.emit(program);\n    console.log(program);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<mat-form-field appearance=\"outline\" class=\"add-clients\">\n  <mat-label i18n=\"@@FilterSelectClients.addClientsLabel\"\n    >Add client(s)</mat-label\n  >\n  <mat-icon matPrefix>people_outline</mat-icon>\n  <mat-select\n    [formControl]=\"clientCtrl\"\n    placeholder=\"Add client(s)\"\n    i18n-placeholder=\"@@FilterSelectClients.addClientsInputPlaceholder\"\n    [multiple]=\"true\"\n    #singleSelect\n  >\n    <mat-option>\n      <ngx-mat-select-search\n        [formControl]=\"clientFilterCtrl\"\n        placeholderLabel=\"Find clients...\"\n        i18n-placeholderLabel=\"@@FilterSelectClients.addClientsPlaceholderLabel\"\n        noEntriesFoundLabel=\"No entries found\"\n        i18n-noEntriesFoundLabel=\"@@FilterSelectClients.noEntriesFoundLabel\"\n        [showToggleAllCheckbox]=\"true\"\n        toggleAllCheckboxTooltipMessage=\"Select / Unselect All\"\n        i18n-toggleAllCheckboxTooltipMessage=\"\n          @@FilterSelectClients.toggleAllCheckboxTooltipMessage\"\n        [toggleAllCheckboxIndeterminate]=\"isIndeterminate\"\n        [toggleAllCheckboxChecked]=\"isChecked\"\n        (toggleAll)=\"toggleSelectAll($event)\"\n      >\n        <mat-icon ngxMatSelectSearchClear>close</mat-icon>\n      </ngx-mat-select-search>\n    </mat-option>\n\n    @for (client of filteredClients | async; track client) {\n      <mat-option [value]=\"client\">\n        {{ client.name }}\n      </mat-option>\n    }\n  </mat-select>\n\n  <!-- Add this if attribute is set to \"required\" -->\n  <!-- @if (clientCtrl.invalid) {\n    <mat-hint>*required</mat-hint>\n  } -->\n</mat-form-field>\n<!-- <div class=\"inner-wrap\">\n    <h3>Selected Values</h3>\n    <ul *ngFor=\"let client of clientCtrl?.value\">\n      <li>{{ client.id }}</li>\n    </ul>\n  </div> -->\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormControl,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  Client,\n  ClientsService,\n  ShareClientsDataService,\n} from '@slowautomobile/exercises';\nimport { ReplaySubject, Subject, Subscription, take, takeUntil } from 'rxjs';\nimport { AsyncPipe } from '@angular/common';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { MatOption } from '@angular/material/core';\nimport { MatIcon } from '@angular/material/icon';\nimport {\n  MatFormField,\n  MatLabel,\n  MatPrefix,\n} from '@angular/material/form-field';\n\n// export interface Client {\n//   id: string | undefined;\n//   name: string;\n// }\n\n/** list of clients */\n// export const CLIENTS: Client[] = [\n//   { name: 'John Doe', id: 'A' },\n//   { name: 'Lucy Jay', id: 'B' },\n//   { name: 'Jimmy Jeep', id: 'C' },\n//   { name: 'Vince Bretton', id: 'D' },\n// ];\n\n@Component({\n    selector: 'ui-filter-select-clients',\n    templateUrl: './filter-select-clients.component.html',\n    styleUrl: './filter-select-clients.component.scss',\n    imports: [\n        MatFormField,\n        MatLabel,\n        MatIcon,\n        MatPrefix,\n        MatSelect,\n        FormsModule,\n        ReactiveFormsModule,\n        MatOption,\n        NgxMatSelectSearchModule,\n        AsyncPipe,\n    ]\n})\nexport class FilterSelectClientsComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  private shareClientsDataService = inject(ShareClientsDataService);\n  private clientsService = inject(ClientsService);\n  private controlContainer = inject(ControlContainer);\n\n  /** list of clients */\n  clients: Client[] = [];\n  // clients = this.shareClientsDataService.clients;\n  /** control for the selected client */\n  public clientCtrl!: FormControl;\n  subscriptions = new Subscription();\n\n  /** control for the MatSelect filter keyword */\n  public clientFilterCtrl: FormControl = new FormControl();\n\n  /** list of clients filtered by search keyword */\n  public filteredClients: ReplaySubject<Client[]> = new ReplaySubject<Client[]>(\n    1,\n  );\n\n  reuseProgram = this.shareClientsDataService.reuseProgram;\n\n  // Emit new value to parent on change\n  // @Output() valueChange = new EventEmitter<string>();\n\n  @ViewChild('singleSelect', { static: true })\n  singleSelect!: MatSelect;\n\n  /** Subject that emits when the component has been destroyed. */\n  protected _onDestroy = new Subject<void>();\n\n  /** flags to set the toggle all checkbox state */\n  isIndeterminate = false;\n  isChecked = false;\n\n  isClientProgramSignal = this.shareClientsDataService.isClientProgram;\n  clientInfo = this.shareClientsDataService.clientInfo;\n\n  ngOnInit() {\n    this.clientCtrl = this.controlContainer.control?.get(\n      'selectedClients',\n    ) as FormControl;\n    console.log(this.clientCtrl);\n    console.log(this.clientInfo());\n\n    // this.clientCtrl.setValidators([Validators.required]);\n    // this.clientCtrl.updateValueAndValidity();\n    // set initial selection\n    // this.clientCtrl.setValue([this.clients[1], this.clients[2]]);\n    if (this.isClientProgramSignal() && !this.reuseProgram()) {\n      const subscription = this.clientsService\n        .getClient(this.clientInfo().clientId)\n        .subscribe(client => {\n          // Return a whole client document, so that createProgram/updateProgram can have programs property\n          console.log('this is client', client);\n\n          this.clientCtrl.setValue([\n            client,\n            // { name: this.clientInfo().clientName, id: this.clientInfo().clientId },\n          ]);\n        });\n      this.subscriptions.add(subscription);\n    }\n\n    const subscription = this.clientsService\n      .getClients()\n      .subscribe(clientsList => {\n        // clientsList.forEach(client => {\n        //   this.clients.push({\n        //     id: client.id,\n        //     name: `${client.lastName} ${client.firstName}`,\n        //   });\n        // });\n        this.clients = clientsList;\n        console.log(this.clients);\n        // load the initial client list\n        this.filteredClients.next(this.clients.slice());\n      });\n    this.subscriptions.add(subscription);\n\n    // this.clientCtrl.valueChanges.subscribe(clients => {\n    //   this.valueChange.emit(clients)\n    // });\n\n    // listen for search field value changes\n    this.clientFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterClients();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.setInitialValue();\n    // this.filteredClients.next(this.clients().slice());\n    // console.log(this.clients());\n    /// TRY TO LAZY LOAD COMPONENT, MODULE OR TO MAKE STEPS IN STEPPER DIFFERENT COMPONENTS??? IT WORKS, REFACTOR MORE ELEGANTLY!\n  }\n\n  /**\n   * Sets the initial value after the filteredClients are loaded initially\n   */\n  protected setInitialValue() {\n    this.filteredClients\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.singleSelect.compareWith = (a: Client, b: Client) =>\n          a && b && a.id === b.id;\n      });\n  }\n\n  protected filterClients() {\n    if (!this.clients) {\n      return;\n    }\n    // get the search keyword\n    let search = this.clientFilterCtrl.value;\n    if (!search) {\n      this.filteredClients.next(this.clients.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the clients\n    this.filteredClients.next(\n      this.clients.filter(\n        client => client.name.toLowerCase().indexOf(search) > -1,\n      ),\n    );\n  }\n\n  toggleSelectAll(selectAllValue: boolean) {\n    this.filteredClients\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(val => {\n        if (selectAllValue) {\n          this.clientCtrl.patchValue(val);\n        } else {\n          this.clientCtrl.patchValue([]);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    this.subscriptions.unsubscribe();\n  }\n}\n","<!-- <div class=\"search-container\">\n  <form [formGroup]=\"options\">\n    <div class=\"search-form-fields\">\n      <mat-form-field\n        [hideRequiredMarker]=\"hideRequiredControl.value\"\n      >\n        <input matInput placeholder=\"Search exercises\" required />\n         <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      </mat-form-field>\n    </div>\n  </form>\n</div> -->\n\n<div class=\"search-container\">\n  <div class=\"search-form-fields\">\n    <!-- <input type=\"text\" [formControl]=\"term\"/> -->\n    <mat-form-field class=\"search-input\">\n      <input\n        matInput\n        [formControl]=\"searchTerm\"\n        placeholder=\"Search exercises\"\n        i18n-placeholder=\"@@SearchSegmentedBtns.searchExercisesPlaceholder\"\n      />\n      @if (searchTerm.value) {\n        <button\n          matSuffix\n          mat-icon-button\n          matTooltip=\"Clear\"\n          i18n-matTooltip=\"@@SearchSegmentedBtns.clearSearch\"\n          aria-label=\"Clear\"\n          i18n-aria-label=\"@@SearchSegmentedBtns.clearSearchAriaLabel\"\n          (click)=\"clearSearch()\"\n        >\n          <mat-icon>close</mat-icon>\n        </button>\n      }\n      <button\n        matTooltip=\"Filter\"\n        i18n-matTooltip=\"@@SearchSegmentedBtns.filterSearch\"\n        aria-label=\"Filter button\"\n        i18n-aria-label=\"@@SearchSegmentedBtns.filterSearchAriaLabel\"\n        (click)=\"toggleDrawer()\"\n        mat-icon-button\n        matSuffix\n      >\n        <mat-icon>tune</mat-icon>\n      </button>\n      <!-- <button\n        mat-icon-button\n        matPrefix\n        aria-label=\"Filter button\"\n        style=\"color: black\"\n      >\n        <mat-icon>search</mat-icon>\n      </button> -->\n      <mat-icon matPrefix>search</mat-icon>\n    </mat-form-field>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { FloatLabelType } from '@angular/material/form-field';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  SearchService,\n  ShareDataService,\n  ShareStateService,\n} from '@slowautomobile/exercises';\nimport {\n  Subscription,\n  combineLatest,\n  concat,\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  of,\n  startWith,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatInput } from '@angular/material/input';\nimport {\n  MatFormField,\n  MatSuffix,\n  MatPrefix,\n} from '@angular/material/form-field';\nimport { LocalstorageService } from '@slowautomobile/users';\n\n@Component({\n    selector: 'ui-search',\n    templateUrl: './search.component.html',\n    styleUrl: './search.component.scss',\n    imports: [\n        MatFormField,\n        MatInput,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconButton,\n        MatSuffix,\n        MatTooltip,\n        MatIcon,\n        MatPrefix,\n    ]\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n  private searchService = inject(SearchService);\n  private shareDataService = inject(ShareDataService);\n  private shareStateService = inject(ShareStateService);\n  private localstorageService = inject(LocalstorageService);\n\n  searchTerm = new FormControl();\n  // @Output() toggleDrawerSignal = new EventEmitter<void>();\n  filter?: any;\n  drawerOpen = false;\n  subscriptions = new Subscription();\n  selectedLanguage!: string;\n  isFetchingData = this.shareStateService.isFetchingData;\n\n  // constructor(\n  //   private searchService: SearchService,\n  //   private shareDataService: ShareDataService,\n  //   private shareStateService: ShareStateService,\n  // ) {\n  //   // this.searchTerm.valueChanges.pipe(\n  //   //   debounceTime(400),\n  //   //   distinctUntilChanged(),\n  //   //   switchMap(async (searchTerm) => this.searchService\n  //   //       .searchExercises(searchTerm)\n  //   //       .subscribe(exercises => console.log(exercises)),\n  //   //   ),\n  //   // );\n  //   // let filterData = this.shareDataService.filterData$.subscribe(filterData => console.log(filterData))\n  //   // this.searchTerm.valueChanges\n  //   //   .pipe(\n  //   //     debounceTime(400),\n  //   //     distinctUntilChanged(),\n  //   //     switchMap(() => searchService.searchExercises(this.searchTerm.value)),\n  //   //   )\n  //   //   .subscribe(searchResult =>\n  //   //     shareDataService.updateSearchResults(searchResult),\n  //   //   );\n  //   // combineLatest([\n  //   //   this.searchTerm.valueChanges,\n  //   //   this.shareDataService.filterData$,\n  //   // ])\n  //   //   .pipe(\n  //   //     debounceTime(400),\n  //   //     distinctUntilChanged(),\n  //   //     switchMap(([searchTerm, filterData]) =>\n  //   //       searchService.searchExercises(searchTerm, filterData),\n  //   //     ),\n  //   //   )\n  //   //   .subscribe(searchResult =>\n  //   //     shareDataService.updateSearchResults(searchResult),\n  //   //   );\n  // }\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log('running from search');\n    const subscription = combineLatest([\n      // concat(of(''), this.searchTerm.valueChanges),\n      this.searchTerm.valueChanges.pipe(\n        startWith(''),\n        tap(() => this.isFetchingData.set(true)),\n      ),\n      this.shareDataService.filterData$,\n    ])\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(([searchTerm, filterData]) =>\n          this.searchService.searchExercises(\n            searchTerm,\n            filterData,\n            this.selectedLanguage,\n          ),\n        ),\n      )\n      .subscribe(searchResult =>\n        this.shareDataService.updateSearchResults(searchResult),\n      );\n    this.subscriptions.add(subscription);\n  }\n\n  clearSearch() {\n    this.searchTerm.setValue('');\n  }\n\n  // hideRequiredControl = new FormControl(false);\n  // floatLabelControl = new FormControl('auto' as FloatLabelType);\n  // options = this._formBuilder.group({\n  //   hideRequired: this.hideRequiredControl,\n  //   floatLabel: this.floatLabelControl,\n  // });\n  // hide = true;\n  // constructor(private _formBuilder: FormBuilder) {}\n\n  // getFloatLabelValue(): FloatLabelType {\n  //   return this.floatLabelControl.value || 'auto';\n  // }\n\n  // get formValue(): FormControl {\n  //   return this.searchTerm.get('images') as FormArray;\n  // }\n  toggleDrawer() {\n    // BehaviorSubject toggle drawer state\n    // this.shareDataService.toggleDrawerSignal$.subscribe(\n    //   drawerSignal => {\n    //     this.drawerOpen = drawerSignal;\n    //   },\n    // );\n    // this.shareDataService.updateToggleDrawerResults(!this.drawerOpen);\n\n    // Toggle signal drawer state\n    this.shareStateService.drawerSignal.update(value => !value);\n  }\n\n  private _getUserLanguageToken(): string {\n    return <string>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { S as SelectionModel } from './selection-model-0f5fc202.mjs';\nimport { isObservable, Subject, BehaviorSubject, of, combineLatest, EMPTY, concat } from 'rxjs';\nimport { take, filter, takeUntil, startWith, tap, switchMap, map, reduce, concatMap, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ViewContainerRef, Directive, TemplateRef, IterableDiffers, ChangeDetectorRef, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, EventEmitter, booleanAttribute, Output, numberAttribute, NgModule } from '@angular/core';\nimport { T as TREE_KEY_MANAGER } from './tree-key-manager-2f20c79c.mjs';\nimport { D as Directionality } from './directionality-0a678adc.mjs';\nimport { i as isDataSource } from './data-source-5320b6fd.mjs';\nimport { c as coerceObservable } from './observable-97c0792c.mjs';\nimport './typeahead-11ae39bd.mjs';\nimport './keycodes-107cd3e4.mjs';\nimport '@angular/common';\n\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass BaseTreeControl {\n  /** Saved data node for `expandAll` action. */\n  dataNodes;\n  /** A selection model with multi-selection to track expansion status. */\n  expansionModel = new SelectionModel(true);\n  /**\n   * Returns the identifier by which a dataNode should be tracked, should its\n   * reference change.\n   *\n   * Similar to trackBy for *ngFor\n   */\n  trackBy;\n  /** Get depth of a given data node, return the level number. This is for flat tree node. */\n  getLevel;\n  /**\n   * Whether the data node is expandable. Returns true if expandable.\n   * This is for flat tree node.\n   */\n  isExpandable;\n  /** Gets a stream that emits whenever the given data node's children change. */\n  getChildren;\n  /** Toggles one single data node's expanded/collapsed state. */\n  toggle(dataNode) {\n    this.expansionModel.toggle(this._trackByValue(dataNode));\n  }\n  /** Expands one single data node. */\n  expand(dataNode) {\n    this.expansionModel.select(this._trackByValue(dataNode));\n  }\n  /** Collapses one single data node. */\n  collapse(dataNode) {\n    this.expansionModel.deselect(this._trackByValue(dataNode));\n  }\n  /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n  isExpanded(dataNode) {\n    return this.expansionModel.isSelected(this._trackByValue(dataNode));\n  }\n  /** Toggles a subtree rooted at `node` recursively. */\n  toggleDescendants(dataNode) {\n    this.expansionModel.isSelected(this._trackByValue(dataNode)) ? this.collapseDescendants(dataNode) : this.expandDescendants(dataNode);\n  }\n  /** Collapse all dataNodes in the tree. */\n  collapseAll() {\n    this.expansionModel.clear();\n  }\n  /** Expands a subtree rooted at given data node recursively. */\n  expandDescendants(dataNode) {\n    let toBeProcessed = [dataNode];\n    toBeProcessed.push(...this.getDescendants(dataNode));\n    this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n  }\n  /** Collapses a subtree rooted at given data node recursively. */\n  collapseDescendants(dataNode) {\n    let toBeProcessed = [dataNode];\n    toBeProcessed.push(...this.getDescendants(dataNode));\n    this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n  }\n  _trackByValue(value) {\n    return this.trackBy ? this.trackBy(value) : value;\n  }\n}\n\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass FlatTreeControl extends BaseTreeControl {\n  getLevel;\n  isExpandable;\n  options;\n  /** Construct with flat tree data node functions getLevel and isExpandable. */\n  constructor(getLevel, isExpandable, options) {\n    super();\n    this.getLevel = getLevel;\n    this.isExpandable = isExpandable;\n    this.options = options;\n    if (this.options) {\n      this.trackBy = this.options.trackBy;\n    }\n  }\n  /**\n   * Gets a list of the data node's subtree of descendent data nodes.\n   *\n   * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n   * with correct levels.\n   */\n  getDescendants(dataNode) {\n    const startIndex = this.dataNodes.indexOf(dataNode);\n    const results = [];\n    // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n    // The level of descendants of a tree node must be greater than the level of the given\n    // tree node.\n    // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n    // If we reach a node whose level is greater than the level of the tree node, we hit a\n    // sibling of an ancestor.\n    for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n      results.push(this.dataNodes[i]);\n    }\n    return results;\n  }\n  /**\n   * Expands all data nodes in the tree.\n   *\n   * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n   * data nodes of the tree.\n   */\n  expandAll() {\n    this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n  }\n}\n\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass NestedTreeControl extends BaseTreeControl {\n  getChildren;\n  options;\n  /** Construct with nested tree function getChildren. */\n  constructor(getChildren, options) {\n    super();\n    this.getChildren = getChildren;\n    this.options = options;\n    if (this.options) {\n      this.trackBy = this.options.trackBy;\n    }\n    if (this.options?.isExpandable) {\n      this.isExpandable = this.options.isExpandable;\n    }\n  }\n  /**\n   * Expands all dataNodes in the tree.\n   *\n   * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n   * data nodes of the tree.\n   */\n  expandAll() {\n    this.expansionModel.clear();\n    const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n    this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n  }\n  /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n  getDescendants(dataNode) {\n    const descendants = [];\n    this._getDescendants(descendants, dataNode);\n    // Remove the node itself\n    return descendants.splice(1);\n  }\n  /** A helper function to get descendants recursively. */\n  _getDescendants(descendants, dataNode) {\n    descendants.push(dataNode);\n    const childrenNodes = this.getChildren(dataNode);\n    if (Array.isArray(childrenNodes)) {\n      childrenNodes.forEach(child => this._getDescendants(descendants, child));\n    } else if (isObservable(childrenNodes)) {\n      // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n      // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n      childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n        for (const child of children) {\n          this._getDescendants(descendants, child);\n        }\n      });\n    }\n  }\n}\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n  viewContainer = inject(ViewContainerRef);\n  _node = inject(CDK_TREE_NODE_OUTLET_NODE, {\n    optional: true\n  });\n  constructor() {}\n  static ɵfac = function CdkTreeNodeOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTreeNodeOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkTreeNodeOutlet,\n    selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkTreeNodeOutlet]'\n    }]\n  }], () => [], null);\n})();\n\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n  /** Data for the node. */\n  $implicit;\n  /** Depth of the node. */\n  level;\n  /** Index location of the node. */\n  index;\n  /** Length of the number of total dataNodes. */\n  count;\n  constructor(data) {\n    this.$implicit = data;\n  }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n  /** @docs-private */\n  template = inject(TemplateRef);\n  /**\n   * Function that should return true if this node template should be used for the provided node\n   * data and index. If left undefined, this node will be considered the default node template to\n   * use when no other when functions return true for the data.\n   * For every node, there must be at least one when function that passes or an undefined to\n   * default.\n   */\n  when;\n  constructor() {}\n  static ɵfac = function CdkTreeNodeDef_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTreeNodeDef)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkTreeNodeDef,\n    selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]],\n    inputs: {\n      when: [0, \"cdkTreeNodeDefWhen\", \"when\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkTreeNodeDef]',\n      inputs: [{\n        name: 'when',\n        alias: 'cdkTreeNodeDefWhen'\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n  return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n  return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there is no tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n  return Error(`Could not find a tree control, levelAccessor, or childrenAccessor for the tree.`);\n}\n/**\n * Returns an error to be thrown when there are multiple ways of specifying children or level\n * provided to the tree.\n * @docs-private\n */\nfunction getMultipleTreeControlsError() {\n  return Error(`More than one of tree control, levelAccessor, or childrenAccessor were provided.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n  _differs = inject(IterableDiffers);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _dir = inject(Directionality);\n  /** Subject that emits when the component has been destroyed. */\n  _onDestroy = new Subject();\n  /** Differ used to find the changes in the data provided by the data source. */\n  _dataDiffer;\n  /** Stores the node definition that does not have a when predicate. */\n  _defaultNodeDef;\n  /** Data subscription */\n  _dataSubscription;\n  /** Level of nodes */\n  _levels = new Map();\n  /** The immediate parents for a node. This is `null` if there is no parent. */\n  _parents = new Map();\n  /**\n   * Nodes grouped into each set, which is a list of nodes displayed together in the DOM.\n   *\n   * Lookup key is the parent of a set. Root nodes have key of null.\n   *\n   * Values is a 'set' of tree nodes. Each tree node maps to a treeitem element. Sets are in the\n   * order that it is rendered. Each set maps directly to aria-posinset and aria-setsize attributes.\n   */\n  _ariaSets = new Map();\n  /**\n   * Provides a stream containing the latest data array to render. Influenced by the tree's\n   * stream of view window (what dataNodes are currently on screen).\n   * Data source can be an observable of data array, or a data array to render.\n   */\n  get dataSource() {\n    return this._dataSource;\n  }\n  set dataSource(dataSource) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  _dataSource;\n  /**\n   * The tree controller\n   *\n   * @deprecated Use one of `levelAccessor` or `childrenAccessor` instead. To be removed in a\n   * future version.\n   * @breaking-change 21.0.0\n   */\n  treeControl;\n  /**\n   * Given a data node, determines what tree level the node is at.\n   *\n   * One of levelAccessor or childrenAccessor must be specified, not both.\n   * This is enforced at run-time.\n   */\n  levelAccessor;\n  /**\n   * Given a data node, determines what the children of that node are.\n   *\n   * One of levelAccessor or childrenAccessor must be specified, not both.\n   * This is enforced at run-time.\n   */\n  childrenAccessor;\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n   * relative to the function to know if a node should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  trackBy;\n  /**\n   * Given a data node, determines the key by which we determine whether or not this node is expanded.\n   */\n  expansionKey;\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  _nodeOutlet;\n  /** The tree node template for the tree */\n  _nodeDefs;\n  // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n  //     Remove the MAX_VALUE in viewChange\n  /**\n   * Stream containing the latest information on what rows are being displayed on screen.\n   * Can be used by the data source to as a heuristic of what data should be provided.\n   */\n  viewChange = new BehaviorSubject({\n    start: 0,\n    end: Number.MAX_VALUE\n  });\n  /** Keep track of which nodes are expanded. */\n  _expansionModel;\n  /**\n   * Maintain a synchronous cache of flattened data nodes. This will only be\n   * populated after initial render, and in certain cases, will be delayed due to\n   * relying on Observable `getChildren` calls.\n   */\n  _flattenedNodes = new BehaviorSubject([]);\n  /** The automatically determined node type for the tree. */\n  _nodeType = new BehaviorSubject(null);\n  /** The mapping between data and the node that is rendered. */\n  _nodes = new BehaviorSubject(new Map());\n  /**\n   * Synchronous cache of nodes for the `TreeKeyManager`. This is separate\n   * from `_flattenedNodes` so they can be independently updated at different\n   * times.\n   */\n  _keyManagerNodes = new BehaviorSubject([]);\n  _keyManagerFactory = inject(TREE_KEY_MANAGER);\n  /** The key manager for this tree. Handles focus and activation based on user keyboard input. */\n  _keyManager;\n  _viewInit = false;\n  constructor() {}\n  ngAfterContentInit() {\n    this._initializeKeyManager();\n  }\n  ngAfterContentChecked() {\n    this._updateDefaultNodeDefinition();\n    this._subscribeToDataChanges();\n  }\n  ngOnDestroy() {\n    this._nodeOutlet.viewContainer.clear();\n    this.viewChange.complete();\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n      this.dataSource.disconnect(this);\n    }\n    if (this._dataSubscription) {\n      this._dataSubscription.unsubscribe();\n      this._dataSubscription = null;\n    }\n    // In certain tests, the tree might be destroyed before this is initialized\n    // in `ngAfterContentInit`.\n    this._keyManager?.destroy();\n  }\n  ngOnInit() {\n    this._checkTreeControlUsage();\n    this._initializeDataDiffer();\n  }\n  ngAfterViewInit() {\n    this._viewInit = true;\n  }\n  _updateDefaultNodeDefinition() {\n    const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n    if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTreeMultipleDefaultNodeDefsError();\n    }\n    this._defaultNodeDef = defaultNodeDefs[0];\n  }\n  /**\n   * Sets the node type for the tree, if it hasn't been set yet.\n   *\n   * This will be called by the first node that's rendered in order for the tree\n   * to determine what data transformations are required.\n   */\n  _setNodeTypeIfUnset(newType) {\n    const currentType = this._nodeType.value;\n    if (currentType === null) {\n      this._nodeType.next(newType);\n    } else if ((typeof ngDevMode === 'undefined' || ngDevMode) && currentType !== newType) {\n      console.warn(`Tree is using conflicting node types which can cause unexpected behavior. ` + `Please use tree nodes of the same type (e.g. only flat or only nested). ` + `Current node type: \"${currentType}\", new node type \"${newType}\".`);\n    }\n  }\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the node outlet. Otherwise start listening for new data.\n   */\n  _switchDataSource(dataSource) {\n    if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n      this.dataSource.disconnect(this);\n    }\n    if (this._dataSubscription) {\n      this._dataSubscription.unsubscribe();\n      this._dataSubscription = null;\n    }\n    // Remove the all dataNodes if there is now no data source\n    if (!dataSource) {\n      this._nodeOutlet.viewContainer.clear();\n    }\n    this._dataSource = dataSource;\n    if (this._nodeDefs) {\n      this._subscribeToDataChanges();\n    }\n  }\n  _getExpansionModel() {\n    if (!this.treeControl) {\n      this._expansionModel ??= new SelectionModel(true);\n      return this._expansionModel;\n    }\n    return this.treeControl.expansionModel;\n  }\n  /** Set up a subscription for the data provided by the data source. */\n  _subscribeToDataChanges() {\n    if (this._dataSubscription) {\n      return;\n    }\n    let dataStream;\n    if (isDataSource(this._dataSource)) {\n      dataStream = this._dataSource.connect(this);\n    } else if (isObservable(this._dataSource)) {\n      dataStream = this._dataSource;\n    } else if (Array.isArray(this._dataSource)) {\n      dataStream = of(this._dataSource);\n    }\n    if (!dataStream) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getTreeNoValidDataSourceError();\n      }\n      return;\n    }\n    this._dataSubscription = this._getRenderData(dataStream).pipe(takeUntil(this._onDestroy)).subscribe(renderingData => {\n      this._renderDataChanges(renderingData);\n    });\n  }\n  /** Given an Observable containing a stream of the raw data, returns an Observable containing the RenderingData */\n  _getRenderData(dataStream) {\n    const expansionModel = this._getExpansionModel();\n    return combineLatest([dataStream, this._nodeType,\n    // We don't use the expansion data directly, however we add it here to essentially\n    // trigger data rendering when expansion changes occur.\n    expansionModel.changed.pipe(startWith(null), tap(expansionChanges => {\n      this._emitExpansionChanges(expansionChanges);\n    }))]).pipe(switchMap(([data, nodeType]) => {\n      if (nodeType === null) {\n        return of({\n          renderNodes: data,\n          flattenedNodes: null,\n          nodeType\n        });\n      }\n      // If we're here, then we know what our node type is, and therefore can\n      // perform our usual rendering pipeline, which necessitates converting the data\n      return this._computeRenderingData(data, nodeType).pipe(map(convertedData => ({\n        ...convertedData,\n        nodeType\n      })));\n    }));\n  }\n  _renderDataChanges(data) {\n    if (data.nodeType === null) {\n      this.renderNodeChanges(data.renderNodes);\n      return;\n    }\n    // If we're here, then we know what our node type is, and therefore can\n    // perform our usual rendering pipeline.\n    this._updateCachedData(data.flattenedNodes);\n    this.renderNodeChanges(data.renderNodes);\n    this._updateKeyManagerItems(data.flattenedNodes);\n  }\n  _emitExpansionChanges(expansionChanges) {\n    if (!expansionChanges) {\n      return;\n    }\n    const nodes = this._nodes.value;\n    for (const added of expansionChanges.added) {\n      const node = nodes.get(added);\n      node?._emitExpansionState(true);\n    }\n    for (const removed of expansionChanges.removed) {\n      const node = nodes.get(removed);\n      node?._emitExpansionState(false);\n    }\n  }\n  _initializeKeyManager() {\n    const items = combineLatest([this._keyManagerNodes, this._nodes]).pipe(map(([keyManagerNodes, renderNodes]) => keyManagerNodes.reduce((items, data) => {\n      const node = renderNodes.get(this._getExpansionKey(data));\n      if (node) {\n        items.push(node);\n      }\n      return items;\n    }, [])));\n    const keyManagerOptions = {\n      trackBy: node => this._getExpansionKey(node.data),\n      skipPredicate: node => !!node.isDisabled,\n      typeAheadDebounceInterval: true,\n      horizontalOrientation: this._dir.value\n    };\n    this._keyManager = this._keyManagerFactory(items, keyManagerOptions);\n  }\n  _initializeDataDiffer() {\n    // Provide a default trackBy based on `_getExpansionKey` if one isn't provided.\n    const trackBy = this.trackBy ?? ((_index, item) => this._getExpansionKey(item));\n    this._dataDiffer = this._differs.find([]).create(trackBy);\n  }\n  _checkTreeControlUsage() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Verify that Tree follows API contract of using one of TreeControl, levelAccessor or\n      // childrenAccessor. Throw an appropriate error if contract is not met.\n      let numTreeControls = 0;\n      if (this.treeControl) {\n        numTreeControls++;\n      }\n      if (this.levelAccessor) {\n        numTreeControls++;\n      }\n      if (this.childrenAccessor) {\n        numTreeControls++;\n      }\n      if (!numTreeControls) {\n        throw getTreeControlMissingError();\n      } else if (numTreeControls > 1) {\n        throw getMultipleTreeControlsError();\n      }\n    }\n  }\n  /** Check for changes made in the data and render each change (node added/removed/moved). */\n  renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n    const changes = dataDiffer.diff(data);\n    // Some tree consumers expect change detection to propagate to nodes\n    // even when the array itself hasn't changed; we explicitly detect changes\n    // anyways in order for nodes to update their data.\n    //\n    // However, if change detection is called while the component's view is\n    // still initing, then the order of child views initing will be incorrect;\n    // to prevent this, we only exit early if the view hasn't initialized yet.\n    if (!changes && !this._viewInit) {\n      return;\n    }\n    changes?.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n      if (item.previousIndex == null) {\n        this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n      } else if (currentIndex == null) {\n        viewContainer.remove(adjustedPreviousIndex);\n      } else {\n        const view = viewContainer.get(adjustedPreviousIndex);\n        viewContainer.move(view, currentIndex);\n      }\n    });\n    // If the data itself changes, but keeps the same trackBy, we need to update the templates'\n    // context to reflect the new object.\n    changes?.forEachIdentityChange(record => {\n      const newData = record.item;\n      if (record.currentIndex != undefined) {\n        const view = viewContainer.get(record.currentIndex);\n        view.context.$implicit = newData;\n      }\n    });\n    // Note: we only `detectChanges` from a top-level call, otherwise we risk overflowing\n    // the call stack since this method is called recursively (see #29733.)\n    // TODO: change to `this._changeDetectorRef.markForCheck()`,\n    // or just switch this component to use signals.\n    if (parentData) {\n      this._changeDetectorRef.markForCheck();\n    } else {\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  /**\n   * Finds the matching node definition that should be used for this node data. If there is only\n   * one node definition, it is returned. Otherwise, find the node definition that has a when\n   * predicate that returns true with the data. If none return true, return the default node\n   * definition.\n   */\n  _getNodeDef(data, i) {\n    if (this._nodeDefs.length === 1) {\n      return this._nodeDefs.first;\n    }\n    const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n    if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTreeMissingMatchingNodeDefError();\n    }\n    return nodeDef;\n  }\n  /**\n   * Create the embedded view for the data node template and place it in the correct index location\n   * within the data node view container.\n   */\n  insertNode(nodeData, index, viewContainer, parentData) {\n    const levelAccessor = this._getLevelAccessor();\n    const node = this._getNodeDef(nodeData, index);\n    const key = this._getExpansionKey(nodeData);\n    // Node context that will be provided to created embedded view\n    const context = new CdkTreeNodeOutletContext(nodeData);\n    parentData ??= this._parents.get(key) ?? undefined;\n    // If the tree is flat tree, then use the `getLevel` function in flat tree control\n    // Otherwise, use the level of parent node.\n    if (levelAccessor) {\n      context.level = levelAccessor(nodeData);\n    } else if (parentData !== undefined && this._levels.has(this._getExpansionKey(parentData))) {\n      context.level = this._levels.get(this._getExpansionKey(parentData)) + 1;\n    } else {\n      context.level = 0;\n    }\n    this._levels.set(key, context.level);\n    // Use default tree nodeOutlet, or nested node's nodeOutlet\n    const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n    container.createEmbeddedView(node.template, context, index);\n    // Set the data to just created `CdkTreeNode`.\n    // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n    //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n    if (CdkTreeNode.mostRecentTreeNode) {\n      CdkTreeNode.mostRecentTreeNode.data = nodeData;\n    }\n  }\n  /** Whether the data node is expanded or collapsed. Returns true if it's expanded. */\n  isExpanded(dataNode) {\n    return !!(this.treeControl?.isExpanded(dataNode) || this._expansionModel?.isSelected(this._getExpansionKey(dataNode)));\n  }\n  /** If the data node is currently expanded, collapse it. Otherwise, expand it. */\n  toggle(dataNode) {\n    if (this.treeControl) {\n      this.treeControl.toggle(dataNode);\n    } else if (this._expansionModel) {\n      this._expansionModel.toggle(this._getExpansionKey(dataNode));\n    }\n  }\n  /** Expand the data node. If it is already expanded, does nothing. */\n  expand(dataNode) {\n    if (this.treeControl) {\n      this.treeControl.expand(dataNode);\n    } else if (this._expansionModel) {\n      this._expansionModel.select(this._getExpansionKey(dataNode));\n    }\n  }\n  /** Collapse the data node. If it is already collapsed, does nothing. */\n  collapse(dataNode) {\n    if (this.treeControl) {\n      this.treeControl.collapse(dataNode);\n    } else if (this._expansionModel) {\n      this._expansionModel.deselect(this._getExpansionKey(dataNode));\n    }\n  }\n  /**\n   * If the data node is currently expanded, collapse it and all its descendants.\n   * Otherwise, expand it and all its descendants.\n   */\n  toggleDescendants(dataNode) {\n    if (this.treeControl) {\n      this.treeControl.toggleDescendants(dataNode);\n    } else if (this._expansionModel) {\n      if (this.isExpanded(dataNode)) {\n        this.collapseDescendants(dataNode);\n      } else {\n        this.expandDescendants(dataNode);\n      }\n    }\n  }\n  /**\n   * Expand the data node and all its descendants. If they are already expanded, does nothing.\n   */\n  expandDescendants(dataNode) {\n    if (this.treeControl) {\n      this.treeControl.expandDescendants(dataNode);\n    } else if (this._expansionModel) {\n      const expansionModel = this._expansionModel;\n      expansionModel.select(this._getExpansionKey(dataNode));\n      this._getDescendants(dataNode).pipe(take(1), takeUntil(this._onDestroy)).subscribe(children => {\n        expansionModel.select(...children.map(child => this._getExpansionKey(child)));\n      });\n    }\n  }\n  /** Collapse the data node and all its descendants. If it is already collapsed, does nothing. */\n  collapseDescendants(dataNode) {\n    if (this.treeControl) {\n      this.treeControl.collapseDescendants(dataNode);\n    } else if (this._expansionModel) {\n      const expansionModel = this._expansionModel;\n      expansionModel.deselect(this._getExpansionKey(dataNode));\n      this._getDescendants(dataNode).pipe(take(1), takeUntil(this._onDestroy)).subscribe(children => {\n        expansionModel.deselect(...children.map(child => this._getExpansionKey(child)));\n      });\n    }\n  }\n  /** Expands all data nodes in the tree. */\n  expandAll() {\n    if (this.treeControl) {\n      this.treeControl.expandAll();\n    } else if (this._expansionModel) {\n      this._forEachExpansionKey(keys => this._expansionModel?.select(...keys));\n    }\n  }\n  /** Collapse all data nodes in the tree. */\n  collapseAll() {\n    if (this.treeControl) {\n      this.treeControl.collapseAll();\n    } else if (this._expansionModel) {\n      this._forEachExpansionKey(keys => this._expansionModel?.deselect(...keys));\n    }\n  }\n  /** Level accessor, used for compatibility between the old Tree and new Tree */\n  _getLevelAccessor() {\n    return this.treeControl?.getLevel?.bind(this.treeControl) ?? this.levelAccessor;\n  }\n  /** Children accessor, used for compatibility between the old Tree and new Tree */\n  _getChildrenAccessor() {\n    return this.treeControl?.getChildren?.bind(this.treeControl) ?? this.childrenAccessor;\n  }\n  /**\n   * Gets the direct children of a node; used for compatibility between the old tree and the\n   * new tree.\n   */\n  _getDirectChildren(dataNode) {\n    const levelAccessor = this._getLevelAccessor();\n    const expansionModel = this._expansionModel ?? this.treeControl?.expansionModel;\n    if (!expansionModel) {\n      return of([]);\n    }\n    const key = this._getExpansionKey(dataNode);\n    const isExpanded = expansionModel.changed.pipe(switchMap(changes => {\n      if (changes.added.includes(key)) {\n        return of(true);\n      } else if (changes.removed.includes(key)) {\n        return of(false);\n      }\n      return EMPTY;\n    }), startWith(this.isExpanded(dataNode)));\n    if (levelAccessor) {\n      return combineLatest([isExpanded, this._flattenedNodes]).pipe(map(([expanded, flattenedNodes]) => {\n        if (!expanded) {\n          return [];\n        }\n        return this._findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, 1);\n      }));\n    }\n    const childrenAccessor = this._getChildrenAccessor();\n    if (childrenAccessor) {\n      return coerceObservable(childrenAccessor(dataNode) ?? []);\n    }\n    throw getTreeControlMissingError();\n  }\n  /**\n   * Given the list of flattened nodes, the level accessor, and the level range within\n   * which to consider children, finds the children for a given node.\n   *\n   * For example, for direct children, `levelDelta` would be 1. For all descendants,\n   * `levelDelta` would be Infinity.\n   */\n  _findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, levelDelta) {\n    const key = this._getExpansionKey(dataNode);\n    const startIndex = flattenedNodes.findIndex(node => this._getExpansionKey(node) === key);\n    const dataNodeLevel = levelAccessor(dataNode);\n    const expectedLevel = dataNodeLevel + levelDelta;\n    const results = [];\n    // Goes through flattened tree nodes in the `flattenedNodes` array, and get all\n    // descendants within a certain level range.\n    //\n    // If we reach a node whose level is equal to or less than the level of the tree node,\n    // we hit a sibling or parent's sibling, and should stop.\n    for (let i = startIndex + 1; i < flattenedNodes.length; i++) {\n      const currentLevel = levelAccessor(flattenedNodes[i]);\n      if (currentLevel <= dataNodeLevel) {\n        break;\n      }\n      if (currentLevel <= expectedLevel) {\n        results.push(flattenedNodes[i]);\n      }\n    }\n    return results;\n  }\n  /**\n   * Adds the specified node component to the tree's internal registry.\n   *\n   * This primarily facilitates keyboard navigation.\n   */\n  _registerNode(node) {\n    this._nodes.value.set(this._getExpansionKey(node.data), node);\n    this._nodes.next(this._nodes.value);\n  }\n  /** Removes the specified node component from the tree's internal registry. */\n  _unregisterNode(node) {\n    this._nodes.value.delete(this._getExpansionKey(node.data));\n    this._nodes.next(this._nodes.value);\n  }\n  /**\n   * For the given node, determine the level where this node appears in the tree.\n   *\n   * This is intended to be used for `aria-level` but is 0-indexed.\n   */\n  _getLevel(node) {\n    return this._levels.get(this._getExpansionKey(node));\n  }\n  /**\n   * For the given node, determine the size of the parent's child set.\n   *\n   * This is intended to be used for `aria-setsize`.\n   */\n  _getSetSize(dataNode) {\n    const set = this._getAriaSet(dataNode);\n    return set.length;\n  }\n  /**\n   * For the given node, determine the index (starting from 1) of the node in its parent's child set.\n   *\n   * This is intended to be used for `aria-posinset`.\n   */\n  _getPositionInSet(dataNode) {\n    const set = this._getAriaSet(dataNode);\n    const key = this._getExpansionKey(dataNode);\n    return set.findIndex(node => this._getExpansionKey(node) === key) + 1;\n  }\n  /** Given a CdkTreeNode, gets the node that renders that node's parent's data. */\n  _getNodeParent(node) {\n    const parent = this._parents.get(this._getExpansionKey(node.data));\n    return parent && this._nodes.value.get(this._getExpansionKey(parent));\n  }\n  /** Given a CdkTreeNode, gets the nodes that renders that node's child data. */\n  _getNodeChildren(node) {\n    return this._getDirectChildren(node.data).pipe(map(children => children.reduce((nodes, child) => {\n      const value = this._nodes.value.get(this._getExpansionKey(child));\n      if (value) {\n        nodes.push(value);\n      }\n      return nodes;\n    }, [])));\n  }\n  /** `keydown` event handler; this just passes the event to the `TreeKeyManager`. */\n  _sendKeydownToKeyManager(event) {\n    // Only handle events directly on the tree or directly on one of the nodes, otherwise\n    // we risk interfering with events in the projected content (see #29828).\n    if (event.target === this._elementRef.nativeElement) {\n      this._keyManager.onKeydown(event);\n    } else {\n      const nodes = this._nodes.getValue();\n      for (const [, node] of nodes) {\n        if (event.target === node._elementRef.nativeElement) {\n          this._keyManager.onKeydown(event);\n          break;\n        }\n      }\n    }\n  }\n  /** Gets all nested descendants of a given node. */\n  _getDescendants(dataNode) {\n    if (this.treeControl) {\n      return of(this.treeControl.getDescendants(dataNode));\n    }\n    if (this.levelAccessor) {\n      const results = this._findChildrenByLevel(this.levelAccessor, this._flattenedNodes.value, dataNode, Infinity);\n      return of(results);\n    }\n    if (this.childrenAccessor) {\n      return this._getAllChildrenRecursively(dataNode).pipe(reduce((allChildren, nextChildren) => {\n        allChildren.push(...nextChildren);\n        return allChildren;\n      }, []));\n    }\n    throw getTreeControlMissingError();\n  }\n  /**\n   * Gets all children and sub-children of the provided node.\n   *\n   * This will emit multiple times, in the order that the children will appear\n   * in the tree, and can be combined with a `reduce` operator.\n   */\n  _getAllChildrenRecursively(dataNode) {\n    if (!this.childrenAccessor) {\n      return of([]);\n    }\n    return coerceObservable(this.childrenAccessor(dataNode)).pipe(take(1), switchMap(children => {\n      // Here, we cache the parents of a particular child so that we can compute the levels.\n      for (const child of children) {\n        this._parents.set(this._getExpansionKey(child), dataNode);\n      }\n      return of(...children).pipe(concatMap(child => concat(of([child]), this._getAllChildrenRecursively(child))));\n    }));\n  }\n  _getExpansionKey(dataNode) {\n    // In the case that a key accessor function was not provided by the\n    // tree user, we'll default to using the node object itself as the key.\n    //\n    // This cast is safe since:\n    // - if an expansionKey is provided, TS will infer the type of K to be\n    //   the return type.\n    // - if it's not, then K will be defaulted to T.\n    return this.expansionKey?.(dataNode) ?? dataNode;\n  }\n  _getAriaSet(node) {\n    const key = this._getExpansionKey(node);\n    const parent = this._parents.get(key);\n    const parentKey = parent ? this._getExpansionKey(parent) : null;\n    const set = this._ariaSets.get(parentKey);\n    return set ?? [node];\n  }\n  /**\n   * Finds the parent for the given node. If this is a root node, this\n   * returns null. If we're unable to determine the parent, for example,\n   * if we don't have cached node data, this returns undefined.\n   */\n  _findParentForNode(node, index, cachedNodes) {\n    // In all cases, we have a mapping from node to level; all we need to do here is backtrack in\n    // our flattened list of nodes to determine the first node that's of a level lower than the\n    // provided node.\n    if (!cachedNodes.length) {\n      return null;\n    }\n    const currentLevel = this._levels.get(this._getExpansionKey(node)) ?? 0;\n    for (let parentIndex = index - 1; parentIndex >= 0; parentIndex--) {\n      const parentNode = cachedNodes[parentIndex];\n      const parentLevel = this._levels.get(this._getExpansionKey(parentNode)) ?? 0;\n      if (parentLevel < currentLevel) {\n        return parentNode;\n      }\n    }\n    return null;\n  }\n  /**\n   * Given a set of root nodes and the current node level, flattens any nested\n   * nodes into a single array.\n   *\n   * If any nodes are not expanded, then their children will not be added into the array.\n   * This will still traverse all nested children in order to build up our internal data\n   * models, but will not include them in the returned array.\n   */\n  _flattenNestedNodesWithExpansion(nodes, level = 0) {\n    const childrenAccessor = this._getChildrenAccessor();\n    // If we're using a level accessor, we don't need to flatten anything.\n    if (!childrenAccessor) {\n      return of([...nodes]);\n    }\n    return of(...nodes).pipe(concatMap(node => {\n      const parentKey = this._getExpansionKey(node);\n      if (!this._parents.has(parentKey)) {\n        this._parents.set(parentKey, null);\n      }\n      this._levels.set(parentKey, level);\n      const children = coerceObservable(childrenAccessor(node));\n      return concat(of([node]), children.pipe(take(1), tap(childNodes => {\n        this._ariaSets.set(parentKey, [...(childNodes ?? [])]);\n        for (const child of childNodes ?? []) {\n          const childKey = this._getExpansionKey(child);\n          this._parents.set(childKey, node);\n          this._levels.set(childKey, level + 1);\n        }\n      }), switchMap(childNodes => {\n        if (!childNodes) {\n          return of([]);\n        }\n        return this._flattenNestedNodesWithExpansion(childNodes, level + 1).pipe(map(nestedNodes => this.isExpanded(node) ? nestedNodes : []));\n      })));\n    }), reduce((results, children) => {\n      results.push(...children);\n      return results;\n    }, []));\n  }\n  /**\n   * Converts children for certain tree configurations.\n   *\n   * This also computes parent, level, and group data.\n   */\n  _computeRenderingData(nodes, nodeType) {\n    // The only situations where we have to convert children types is when\n    // they're mismatched; i.e. if the tree is using a childrenAccessor and the\n    // nodes are flat, or if the tree is using a levelAccessor and the nodes are\n    // nested.\n    if (this.childrenAccessor && nodeType === 'flat') {\n      // clear previously generated data so we don't keep end up retaining data overtime causing\n      // memory leaks.\n      this._clearPreviousCache();\n      // This flattens children into a single array.\n      this._ariaSets.set(null, [...nodes]);\n      return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n        renderNodes: flattenedNodes,\n        flattenedNodes\n      })));\n    } else if (this.levelAccessor && nodeType === 'nested') {\n      // In the nested case, we only look for root nodes. The CdkNestedNode\n      // itself will handle rendering each individual node's children.\n      const levelAccessor = this.levelAccessor;\n      return of(nodes.filter(node => levelAccessor(node) === 0)).pipe(map(rootNodes => ({\n        renderNodes: rootNodes,\n        flattenedNodes: nodes\n      })), tap(({\n        flattenedNodes\n      }) => {\n        this._calculateParents(flattenedNodes);\n      }));\n    } else if (nodeType === 'flat') {\n      // In the case of a TreeControl, we know that the node type matches up\n      // with the TreeControl, and so no conversions are necessary. Otherwise,\n      // we've already confirmed that the data model matches up with the\n      // desired node type here.\n      return of({\n        renderNodes: nodes,\n        flattenedNodes: nodes\n      }).pipe(tap(({\n        flattenedNodes\n      }) => {\n        this._calculateParents(flattenedNodes);\n      }));\n    } else {\n      // clear previously generated data so we don't keep end up retaining data overtime causing\n      // memory leaks.\n      this._clearPreviousCache();\n      // For nested nodes, we still need to perform the node flattening in order\n      // to maintain our caches for various tree operations.\n      this._ariaSets.set(null, [...nodes]);\n      return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n        renderNodes: nodes,\n        flattenedNodes\n      })));\n    }\n  }\n  _updateCachedData(flattenedNodes) {\n    this._flattenedNodes.next(flattenedNodes);\n  }\n  _updateKeyManagerItems(flattenedNodes) {\n    this._keyManagerNodes.next(flattenedNodes);\n  }\n  /** Traverse the flattened node data and compute parents, levels, and group data. */\n  _calculateParents(flattenedNodes) {\n    const levelAccessor = this._getLevelAccessor();\n    if (!levelAccessor) {\n      return;\n    }\n    // clear previously generated data so we don't keep end up retaining data overtime causing\n    // memory leaks.\n    this._clearPreviousCache();\n    for (let index = 0; index < flattenedNodes.length; index++) {\n      const dataNode = flattenedNodes[index];\n      const key = this._getExpansionKey(dataNode);\n      this._levels.set(key, levelAccessor(dataNode));\n      const parent = this._findParentForNode(dataNode, index, flattenedNodes);\n      this._parents.set(key, parent);\n      const parentKey = parent ? this._getExpansionKey(parent) : null;\n      const group = this._ariaSets.get(parentKey) ?? [];\n      group.splice(index, 0, dataNode);\n      this._ariaSets.set(parentKey, group);\n    }\n  }\n  /** Invokes a callback with all node expansion keys. */\n  _forEachExpansionKey(callback) {\n    const toToggle = [];\n    const observables = [];\n    this._nodes.value.forEach(node => {\n      toToggle.push(this._getExpansionKey(node.data));\n      observables.push(this._getDescendants(node.data));\n    });\n    if (observables.length > 0) {\n      combineLatest(observables).pipe(take(1), takeUntil(this._onDestroy)).subscribe(results => {\n        results.forEach(inner => inner.forEach(r => toToggle.push(this._getExpansionKey(r))));\n        callback(toToggle);\n      });\n    } else {\n      callback(toToggle);\n    }\n  }\n  /** Clears the maps we use to store parents, level & aria-sets in. */\n  _clearPreviousCache() {\n    this._parents.clear();\n    this._levels.clear();\n    this._ariaSets.clear();\n  }\n  static ɵfac = function CdkTree_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTree)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CdkTree,\n    selectors: [[\"cdk-tree\"]],\n    contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n      }\n    },\n    viewQuery: function CdkTree_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(CdkTreeNodeOutlet, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"],\n    hostBindings: function CdkTree_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function CdkTree_keydown_HostBindingHandler($event) {\n          return ctx._sendKeydownToKeyManager($event);\n        });\n      }\n    },\n    inputs: {\n      dataSource: \"dataSource\",\n      treeControl: \"treeControl\",\n      levelAccessor: \"levelAccessor\",\n      childrenAccessor: \"childrenAccessor\",\n      trackBy: \"trackBy\",\n      expansionKey: \"expansionKey\"\n    },\n    exportAs: [\"cdkTree\"],\n    decls: 1,\n    vars: 0,\n    consts: [[\"cdkTreeNodeOutlet\", \"\"]],\n    template: function CdkTree_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [CdkTreeNodeOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTree, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-tree',\n      exportAs: 'cdkTree',\n      template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n      host: {\n        'class': 'cdk-tree',\n        'role': 'tree',\n        '(keydown)': '_sendKeydownToKeyManager($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n      // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n      // declared elsewhere, they are checked when their declaration points are checked.\n      // tslint:disable-next-line:validate-decorators\n      changeDetection: ChangeDetectionStrategy.Default,\n      imports: [CdkTreeNodeOutlet]\n    }]\n  }], () => [], {\n    dataSource: [{\n      type: Input\n    }],\n    treeControl: [{\n      type: Input\n    }],\n    levelAccessor: [{\n      type: Input\n    }],\n    childrenAccessor: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    expansionKey: [{\n      type: Input\n    }],\n    _nodeOutlet: [{\n      type: ViewChild,\n      args: [CdkTreeNodeOutlet, {\n        static: true\n      }]\n    }],\n    _nodeDefs: [{\n      type: ContentChildren,\n      args: [CdkTreeNodeDef, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n  _elementRef = inject(ElementRef);\n  _tree = inject(CdkTree);\n  _tabindex = -1;\n  _type = 'flat';\n  /**\n   * The role of the tree node.\n   *\n   * @deprecated This will be ignored; the tree will automatically determine the appropriate role\n   * for tree node. This input will be removed in a future version.\n   * @breaking-change 21.0.0\n   */\n  get role() {\n    return 'treeitem';\n  }\n  set role(_role) {\n    // ignore any role setting, we handle this internally.\n  }\n  /**\n   * Whether or not this node is expandable.\n   *\n   * If not using `FlatTreeControl`, or if `isExpandable` is not provided to\n   * `NestedTreeControl`, this should be provided for correct node a11y.\n   */\n  get isExpandable() {\n    return this._isExpandable();\n  }\n  set isExpandable(isExpandable) {\n    this._inputIsExpandable = isExpandable;\n    if (this.data && !this._isExpandable || !this._inputIsExpandable) {\n      return;\n    }\n    // If the node is being set to expandable, ensure that the status of the\n    // node is propagated\n    if (this._inputIsExpanded) {\n      this.expand();\n    } else if (this._inputIsExpanded === false) {\n      this.collapse();\n    }\n  }\n  get isExpanded() {\n    return this._tree.isExpanded(this._data);\n  }\n  set isExpanded(isExpanded) {\n    this._inputIsExpanded = isExpanded;\n    if (isExpanded) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  }\n  /**\n   * Whether or not this node is disabled. If it's disabled, then the user won't be able to focus\n   * or activate this node.\n   */\n  isDisabled;\n  /**\n   * The text used to locate this item during typeahead. If not specified, the `textContent` will\n   * will be used.\n   */\n  typeaheadLabel;\n  getLabel() {\n    return this.typeaheadLabel || this._elementRef.nativeElement.textContent?.trim() || '';\n  }\n  /** This emits when the node has been programatically activated or activated by keyboard. */\n  activation = new EventEmitter();\n  /** This emits when the node's expansion status has been changed. */\n  expandedChange = new EventEmitter();\n  /**\n   * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n   * in `CdkTree` and set the data to it.\n   */\n  static mostRecentTreeNode = null;\n  /** Subject that emits when the component has been destroyed. */\n  _destroyed = new Subject();\n  /** Emits when the node's data has changed. */\n  _dataChanges = new Subject();\n  _inputIsExpandable = false;\n  _inputIsExpanded = undefined;\n  /**\n   * Flag used to determine whether or not we should be focusing the actual element based on\n   * some user interaction (click or focus). On click, we don't forcibly focus the element\n   * since the click could trigger some other component that wants to grab its own focus\n   * (e.g. menu, dialog).\n   */\n  _shouldFocus = true;\n  _parentNodeAriaLevel;\n  /** The tree node's data. */\n  get data() {\n    return this._data;\n  }\n  set data(value) {\n    if (value !== this._data) {\n      this._data = value;\n      this._dataChanges.next();\n    }\n  }\n  _data;\n  /* If leaf node, return true to not assign aria-expanded attribute */\n  get isLeafNode() {\n    // If flat tree node data returns false for expandable property, it's a leaf node\n    if (this._tree.treeControl?.isExpandable !== undefined && !this._tree.treeControl.isExpandable(this._data)) {\n      return true;\n      // If nested tree node data returns 0 descendants, it's a leaf node\n    } else if (this._tree.treeControl?.isExpandable === undefined && this._tree.treeControl?.getDescendants(this._data).length === 0) {\n      return true;\n    }\n    return false;\n  }\n  get level() {\n    // If the tree has a levelAccessor, use it to get the level. Otherwise read the\n    // aria-level off the parent node and use it as the level for this node (note aria-level is\n    // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n    return this._tree._getLevel(this._data) ?? this._parentNodeAriaLevel;\n  }\n  /** Determines if the tree node is expandable. */\n  _isExpandable() {\n    if (this._tree.treeControl) {\n      if (this.isLeafNode) {\n        return false;\n      }\n      // For compatibility with trees created using TreeControl before we added\n      // CdkTreeNode#isExpandable.\n      return true;\n    }\n    return this._inputIsExpandable;\n  }\n  /**\n   * Determines the value for `aria-expanded`.\n   *\n   * For non-expandable nodes, this is `null`.\n   */\n  _getAriaExpanded() {\n    if (!this._isExpandable()) {\n      return null;\n    }\n    return String(this.isExpanded);\n  }\n  /**\n   * Determines the size of this node's parent's child set.\n   *\n   * This is intended to be used for `aria-setsize`.\n   */\n  _getSetSize() {\n    return this._tree._getSetSize(this._data);\n  }\n  /**\n   * Determines the index (starting from 1) of this node in its parent's child set.\n   *\n   * This is intended to be used for `aria-posinset`.\n   */\n  _getPositionInSet() {\n    return this._tree._getPositionInSet(this._data);\n  }\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  constructor() {\n    CdkTreeNode.mostRecentTreeNode = this;\n  }\n  ngOnInit() {\n    this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n    this._tree._getExpansionModel().changed.pipe(map(() => this.isExpanded), distinctUntilChanged()).subscribe(() => this._changeDetectorRef.markForCheck());\n    this._tree._setNodeTypeIfUnset(this._type);\n    this._tree._registerNode(this);\n  }\n  ngOnDestroy() {\n    // If this is the last tree node being destroyed,\n    // clear out the reference to avoid leaking memory.\n    if (CdkTreeNode.mostRecentTreeNode === this) {\n      CdkTreeNode.mostRecentTreeNode = null;\n    }\n    this._dataChanges.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  getParent() {\n    return this._tree._getNodeParent(this) ?? null;\n  }\n  getChildren() {\n    return this._tree._getNodeChildren(this);\n  }\n  /** Focuses this data node. Implemented for TreeKeyManagerItem. */\n  focus() {\n    this._tabindex = 0;\n    if (this._shouldFocus) {\n      this._elementRef.nativeElement.focus();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Defocus this data node. */\n  unfocus() {\n    this._tabindex = -1;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits an activation event. Implemented for TreeKeyManagerItem. */\n  activate() {\n    if (this.isDisabled) {\n      return;\n    }\n    this.activation.next(this._data);\n  }\n  /** Collapses this data node. Implemented for TreeKeyManagerItem. */\n  collapse() {\n    if (this.isExpandable) {\n      this._tree.collapse(this._data);\n    }\n  }\n  /** Expands this data node. Implemented for TreeKeyManagerItem. */\n  expand() {\n    if (this.isExpandable) {\n      this._tree.expand(this._data);\n    }\n  }\n  /** Makes the node focusable. Implemented for TreeKeyManagerItem. */\n  makeFocusable() {\n    this._tabindex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n  _focusItem() {\n    if (this.isDisabled) {\n      return;\n    }\n    this._tree._keyManager.focusItem(this);\n  }\n  _setActiveItem() {\n    if (this.isDisabled) {\n      return;\n    }\n    this._shouldFocus = false;\n    this._tree._keyManager.focusItem(this);\n    this._shouldFocus = true;\n  }\n  _emitExpansionState(expanded) {\n    this.expandedChange.emit(expanded);\n  }\n  static ɵfac = function CdkTreeNode_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTreeNode)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkTreeNode,\n    selectors: [[\"cdk-tree-node\"]],\n    hostAttrs: [\"role\", \"treeitem\", 1, \"cdk-tree-node\"],\n    hostVars: 5,\n    hostBindings: function CdkTreeNode_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkTreeNode_click_HostBindingHandler() {\n          return ctx._setActiveItem();\n        })(\"focus\", function CdkTreeNode_focus_HostBindingHandler() {\n          return ctx._focusItem();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabindex\", ctx._tabindex);\n        i0.ɵɵattribute(\"aria-expanded\", ctx._getAriaExpanded())(\"aria-level\", ctx.level + 1)(\"aria-posinset\", ctx._getPositionInSet())(\"aria-setsize\", ctx._getSetSize());\n      }\n    },\n    inputs: {\n      role: \"role\",\n      isExpandable: [2, \"isExpandable\", \"isExpandable\", booleanAttribute],\n      isExpanded: \"isExpanded\",\n      isDisabled: [2, \"isDisabled\", \"isDisabled\", booleanAttribute],\n      typeaheadLabel: [0, \"cdkTreeNodeTypeaheadLabel\", \"typeaheadLabel\"]\n    },\n    outputs: {\n      activation: \"activation\",\n      expandedChange: \"expandedChange\"\n    },\n    exportAs: [\"cdkTreeNode\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTreeNode, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-tree-node',\n      exportAs: 'cdkTreeNode',\n      host: {\n        'class': 'cdk-tree-node',\n        '[attr.aria-expanded]': '_getAriaExpanded()',\n        '[attr.aria-level]': 'level + 1',\n        '[attr.aria-posinset]': '_getPositionInSet()',\n        '[attr.aria-setsize]': '_getSetSize()',\n        '[tabindex]': '_tabindex',\n        'role': 'treeitem',\n        '(click)': '_setActiveItem()',\n        '(focus)': '_focusItem()'\n      }\n    }]\n  }], () => [], {\n    role: [{\n      type: Input\n    }],\n    isExpandable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    isExpanded: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    typeaheadLabel: [{\n      type: Input,\n      args: ['cdkTreeNodeTypeaheadLabel']\n    }],\n    activation: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }]\n  });\n})();\nfunction getParentNodeAriaLevel(nodeElement) {\n  let parent = nodeElement.parentElement;\n  while (parent && !isNodeElement(parent)) {\n    parent = parent.parentElement;\n  }\n  if (!parent) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw Error('Incorrect tree structure containing detached node.');\n    } else {\n      return -1;\n    }\n  } else if (parent.classList.contains('cdk-nested-tree-node')) {\n    return numberAttribute(parent.getAttribute('aria-level'));\n  } else {\n    // The ancestor element is the cdk-tree itself\n    return 0;\n  }\n}\nfunction isNodeElement(element) {\n  const classList = element.classList;\n  return !!(classList?.contains('cdk-nested-tree-node') || classList?.contains('cdk-tree'));\n}\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n  _type = 'nested';\n  _differs = inject(IterableDiffers);\n  /** Differ used to find the changes in the data provided by the data source. */\n  _dataDiffer;\n  /** The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`. */\n  _children;\n  /** The children node placeholder. */\n  nodeOutlet;\n  constructor() {\n    super();\n  }\n  ngAfterContentInit() {\n    this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n    this._tree._getDirectChildren(this.data).pipe(takeUntil(this._destroyed)).subscribe(result => this.updateChildrenNodes(result));\n    this.nodeOutlet.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this.updateChildrenNodes());\n  }\n  ngOnDestroy() {\n    this._clear();\n    super.ngOnDestroy();\n  }\n  /** Add children dataNodes to the NodeOutlet */\n  updateChildrenNodes(children) {\n    const outlet = this._getNodeOutlet();\n    if (children) {\n      this._children = children;\n    }\n    if (outlet && this._children) {\n      const viewContainer = outlet.viewContainer;\n      this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n    } else {\n      // Reset the data differ if there's no children nodes displayed\n      this._dataDiffer.diff([]);\n    }\n  }\n  /** Clear the children dataNodes. */\n  _clear() {\n    const outlet = this._getNodeOutlet();\n    if (outlet) {\n      outlet.viewContainer.clear();\n      this._dataDiffer.diff([]);\n    }\n  }\n  /** Gets the outlet for the current node. */\n  _getNodeOutlet() {\n    const outlets = this.nodeOutlet;\n    // Note that since we use `descendants: true` on the query, we have to ensure\n    // that we don't pick up the outlet of a child node by accident.\n    return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n  }\n  static ɵfac = function CdkNestedTreeNode_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkNestedTreeNode)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkNestedTreeNode,\n    selectors: [[\"cdk-nested-tree-node\"]],\n    contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n      }\n    },\n    hostAttrs: [1, \"cdk-nested-tree-node\"],\n    exportAs: [\"cdkNestedTreeNode\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTreeNode,\n      useExisting: CdkNestedTreeNode\n    }, {\n      provide: CDK_TREE_NODE_OUTLET_NODE,\n      useExisting: CdkNestedTreeNode\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-nested-tree-node',\n      exportAs: 'cdkNestedTreeNode',\n      providers: [{\n        provide: CdkTreeNode,\n        useExisting: CdkNestedTreeNode\n      }, {\n        provide: CDK_TREE_NODE_OUTLET_NODE,\n        useExisting: CdkNestedTreeNode\n      }],\n      host: {\n        'class': 'cdk-nested-tree-node'\n      }\n    }]\n  }], () => [], {\n    nodeOutlet: [{\n      type: ContentChildren,\n      args: [CdkTreeNodeOutlet, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n  _treeNode = inject(CdkTreeNode);\n  _tree = inject(CdkTree);\n  _element = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM. */\n  _currentPadding;\n  /** Subject that emits when the component has been destroyed. */\n  _destroyed = new Subject();\n  /** CSS units used for the indentation value. */\n  indentUnits = 'px';\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  get level() {\n    return this._level;\n  }\n  set level(value) {\n    this._setLevelInput(value);\n  }\n  _level;\n  /**\n   * The indent for each level. Can be a number or a CSS string.\n   * Default number 40px from material design menu sub-menu spec.\n   */\n  get indent() {\n    return this._indent;\n  }\n  set indent(indent) {\n    this._setIndentInput(indent);\n  }\n  _indent = 40;\n  constructor() {\n    this._setPadding();\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n    // In Ivy the indentation binding might be set before the tree node's data has been added,\n    // which means that we'll miss the first render. We have to subscribe to changes in the\n    // data to ensure that everything is up to date.\n    this._treeNode._dataChanges.subscribe(() => this._setPadding());\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n  _paddingIndent() {\n    const nodeLevel = (this._treeNode.data && this._tree._getLevel(this._treeNode.data)) ?? null;\n    const level = this._level == null ? nodeLevel : this._level;\n    return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n  }\n  _setPadding(forceChange = false) {\n    const padding = this._paddingIndent();\n    if (padding !== this._currentPadding || forceChange) {\n      const element = this._element.nativeElement;\n      const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n      const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n      element.style[paddingProp] = padding || '';\n      element.style[resetProp] = '';\n      this._currentPadding = padding;\n    }\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setLevelInput(value) {\n    // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n    // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n    // they set 0 explicitly.\n    this._level = isNaN(value) ? null : value;\n    this._setPadding();\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setIndentInput(indent) {\n    let value = indent;\n    let units = 'px';\n    if (typeof indent === 'string') {\n      const parts = indent.split(cssUnitPattern);\n      value = parts[0];\n      units = parts[1] || units;\n    }\n    this.indentUnits = units;\n    this._indent = numberAttribute(value);\n    this._setPadding();\n  }\n  static ɵfac = function CdkTreeNodePadding_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTreeNodePadding)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkTreeNodePadding,\n    selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]],\n    inputs: {\n      level: [2, \"cdkTreeNodePadding\", \"level\", numberAttribute],\n      indent: [0, \"cdkTreeNodePaddingIndent\", \"indent\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkTreeNodePadding]'\n    }]\n  }], () => [], {\n    level: [{\n      type: Input,\n      args: [{\n        alias: 'cdkTreeNodePadding',\n        transform: numberAttribute\n      }]\n    }],\n    indent: [{\n      type: Input,\n      args: ['cdkTreeNodePaddingIndent']\n    }]\n  });\n})();\n\n/**\n * Node toggle to expand and collapse the node.\n */\nclass CdkTreeNodeToggle {\n  _tree = inject(CdkTree);\n  _treeNode = inject(CdkTreeNode);\n  /** Whether expand/collapse the node recursively. */\n  recursive = false;\n  constructor() {}\n  // Toggle the expanded or collapsed state of this node.\n  //\n  // Focus this node with expanding or collapsing it. This ensures that the active node will always\n  // be visible when expanding and collapsing.\n  _toggle() {\n    this.recursive ? this._tree.toggleDescendants(this._treeNode.data) : this._tree.toggle(this._treeNode.data);\n    this._tree._keyManager.focusItem(this._treeNode);\n  }\n  static ɵfac = function CdkTreeNodeToggle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTreeNodeToggle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkTreeNodeToggle,\n    selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]],\n    hostAttrs: [\"tabindex\", \"-1\"],\n    hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) {\n          ctx._toggle();\n          return $event.stopPropagation();\n        })(\"keydown.Enter\", function CdkTreeNodeToggle_keydown_Enter_HostBindingHandler($event) {\n          ctx._toggle();\n          return $event.preventDefault();\n        })(\"keydown.Space\", function CdkTreeNodeToggle_keydown_Space_HostBindingHandler($event) {\n          ctx._toggle();\n          return $event.preventDefault();\n        });\n      }\n    },\n    inputs: {\n      recursive: [2, \"cdkTreeNodeToggleRecursive\", \"recursive\", booleanAttribute]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkTreeNodeToggle]',\n      host: {\n        '(click)': '_toggle(); $event.stopPropagation();',\n        '(keydown.Enter)': '_toggle(); $event.preventDefault();',\n        '(keydown.Space)': '_toggle(); $event.preventDefault();',\n        'tabindex': '-1'\n      }\n    }]\n  }], () => [], {\n    recursive: [{\n      type: Input,\n      args: [{\n        alias: 'cdkTreeNodeToggleRecursive',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst EXPORTED_DECLARATIONS = [CdkNestedTreeNode, CdkTreeNodeDef, CdkTreeNodePadding, CdkTreeNodeToggle, CdkTree, CdkTreeNode, CdkTreeNodeOutlet];\nclass CdkTreeModule {\n  static ɵfac = function CdkTreeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTreeModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkTreeModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTreeModule, [{\n    type: NgModule,\n    args: [{\n      imports: EXPORTED_DECLARATIONS,\n      exports: EXPORTED_DECLARATIONS\n    }]\n  }], null, null);\n})();\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getMultipleTreeControlsError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n","import { CdkTreeNode, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTree, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport * as i0 from '@angular/core';\nimport { inject, HostAttributeToken, numberAttribute, booleanAttribute, Directive, Input, ViewContainerRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/**\n * Determinte if argument TreeKeyManager is the NoopTreeKeyManager. This function is safe to use with SSR.\n */\nfunction isNoopTreeKeyManager(keyManager) {\n  return !!keyManager._isNoopTreeKeyManager;\n}\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends CdkTreeNode {\n  /**\n   * The tabindex of the tree node.\n   *\n   * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n   *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n   *   an unexpected state. Tabindex to be removed in a future version.\n   * @breaking-change 21.0.0 Remove this attribute.\n   */\n  get tabIndexInputBinding() {\n    return this._tabIndexInputBinding;\n  }\n  set tabIndexInputBinding(value) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndexInputBinding = value;\n  }\n  _tabIndexInputBinding;\n  /**\n   * The default tabindex of the tree node.\n   *\n   * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n   *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n   *   an unexpected state. Tabindex to be removed in a future version.\n   * @breaking-change 21.0.0 Remove this attribute.\n   */\n  defaultTabIndex = 0;\n  _getTabindexAttribute() {\n    if (isNoopTreeKeyManager(this._tree._keyManager)) {\n      return this.tabIndexInputBinding;\n    }\n    return this._tabindex;\n  }\n  /**\n   * Whether the component is disabled.\n   *\n   * @deprecated This is an alias for `isDisabled`.\n   * @breaking-change 21.0.0 Remove this input\n   */\n  get disabled() {\n    return this.isDisabled;\n  }\n  set disabled(value) {\n    this.isDisabled = value;\n  }\n  constructor() {\n    super();\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    this.tabIndexInputBinding = Number(tabIndex) || this.defaultTabIndex;\n  }\n  // This is a workaround for https://github.com/angular/angular/issues/23091\n  // In aot mode, the lifecycle hooks from parent class are not called.\n  ngOnInit() {\n    super.ngOnInit();\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n  static ɵfac = function MatTreeNode_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTreeNode)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTreeNode,\n    selectors: [[\"mat-tree-node\"]],\n    hostAttrs: [1, \"mat-tree-node\"],\n    hostVars: 5,\n    hostBindings: function MatTreeNode_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatTreeNode_click_HostBindingHandler() {\n          return ctx._focusItem();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabindex\", ctx._getTabindexAttribute());\n        i0.ɵɵattribute(\"aria-expanded\", ctx._getAriaExpanded())(\"aria-level\", ctx.level + 1)(\"aria-posinset\", ctx._getPositionInSet())(\"aria-setsize\", ctx._getSetSize());\n      }\n    },\n    inputs: {\n      tabIndexInputBinding: [2, \"tabIndex\", \"tabIndexInputBinding\", value => value == null ? 0 : numberAttribute(value)],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      activation: \"activation\",\n      expandedChange: \"expandedChange\"\n    },\n    exportAs: [\"matTreeNode\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTreeNode,\n      useExisting: MatTreeNode\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTreeNode, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-tree-node',\n      exportAs: 'matTreeNode',\n      outputs: ['activation', 'expandedChange'],\n      providers: [{\n        provide: CdkTreeNode,\n        useExisting: MatTreeNode\n      }],\n      host: {\n        'class': 'mat-tree-node',\n        '[attr.aria-expanded]': '_getAriaExpanded()',\n        '[attr.aria-level]': 'level + 1',\n        '[attr.aria-posinset]': '_getPositionInSet()',\n        '[attr.aria-setsize]': '_getSetSize()',\n        '(click)': '_focusItem()',\n        '[tabindex]': '_getTabindexAttribute()'\n      }\n    }]\n  }], () => [], {\n    tabIndexInputBinding: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value),\n        alias: 'tabIndex'\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n  data;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTreeNodeDef_BaseFactory;\n    return function MatTreeNodeDef_Factory(__ngFactoryType__) {\n      return (ɵMatTreeNodeDef_BaseFactory || (ɵMatTreeNodeDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatTreeNodeDef)))(__ngFactoryType__ || MatTreeNodeDef);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTreeNodeDef,\n    selectors: [[\"\", \"matTreeNodeDef\", \"\"]],\n    inputs: {\n      when: [0, \"matTreeNodeDefWhen\", \"when\"],\n      data: [0, \"matTreeNode\", \"data\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTreeNodeDef,\n      useExisting: MatTreeNodeDef\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTreeNodeDef, [{\n    type: Directive,\n    args: [{\n      selector: '[matTreeNodeDef]',\n      inputs: [{\n        name: 'when',\n        alias: 'matTreeNodeDefWhen'\n      }],\n      providers: [{\n        provide: CdkTreeNodeDef,\n        useExisting: MatTreeNodeDef\n      }]\n    }]\n  }], null, {\n    data: [{\n      type: Input,\n      args: ['matTreeNode']\n    }]\n  });\n})();\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n  node;\n  /**\n   * Whether the node is disabled.\n   *\n   * @deprecated This is an alias for `isDisabled`.\n   * @breaking-change 21.0.0 Remove this input\n   */\n  get disabled() {\n    return this.isDisabled;\n  }\n  set disabled(value) {\n    this.isDisabled = value;\n  }\n  /** Tabindex of the node. */\n  get tabIndex() {\n    return this.isDisabled ? -1 : this._tabIndex;\n  }\n  set tabIndex(value) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndex = value;\n  }\n  _tabIndex;\n  // This is a workaround for https://github.com/angular/angular/issues/19145\n  // In aot mode, the lifecycle hooks from parent class are not called.\n  // TODO(tinayuangao): Remove when the angular issue #19145 is fixed\n  ngOnInit() {\n    super.ngOnInit();\n  }\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatNestedTreeNode_BaseFactory;\n    return function MatNestedTreeNode_Factory(__ngFactoryType__) {\n      return (ɵMatNestedTreeNode_BaseFactory || (ɵMatNestedTreeNode_BaseFactory = i0.ɵɵgetInheritedFactory(MatNestedTreeNode)))(__ngFactoryType__ || MatNestedTreeNode);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatNestedTreeNode,\n    selectors: [[\"mat-nested-tree-node\"]],\n    hostAttrs: [1, \"mat-nested-tree-node\"],\n    inputs: {\n      node: [0, \"matNestedTreeNode\", \"node\"],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n    },\n    outputs: {\n      activation: \"activation\",\n      expandedChange: \"expandedChange\"\n    },\n    exportAs: [\"matNestedTreeNode\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkNestedTreeNode,\n      useExisting: MatNestedTreeNode\n    }, {\n      provide: CdkTreeNode,\n      useExisting: MatNestedTreeNode\n    }, {\n      provide: CDK_TREE_NODE_OUTLET_NODE,\n      useExisting: MatNestedTreeNode\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNestedTreeNode, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-nested-tree-node',\n      exportAs: 'matNestedTreeNode',\n      outputs: ['activation', 'expandedChange'],\n      providers: [{\n        provide: CdkNestedTreeNode,\n        useExisting: MatNestedTreeNode\n      }, {\n        provide: CdkTreeNode,\n        useExisting: MatNestedTreeNode\n      }, {\n        provide: CDK_TREE_NODE_OUTLET_NODE,\n        useExisting: MatNestedTreeNode\n      }],\n      host: {\n        'class': 'mat-nested-tree-node'\n      }\n    }]\n  }], null, {\n    node: [{\n      type: Input,\n      args: ['matNestedTreeNode']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }]\n  });\n})();\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  get level() {\n    return this._level;\n  }\n  set level(value) {\n    this._setLevelInput(value);\n  }\n  /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n  get indent() {\n    return this._indent;\n  }\n  set indent(indent) {\n    this._setIndentInput(indent);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTreeNodePadding_BaseFactory;\n    return function MatTreeNodePadding_Factory(__ngFactoryType__) {\n      return (ɵMatTreeNodePadding_BaseFactory || (ɵMatTreeNodePadding_BaseFactory = i0.ɵɵgetInheritedFactory(MatTreeNodePadding)))(__ngFactoryType__ || MatTreeNodePadding);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTreeNodePadding,\n    selectors: [[\"\", \"matTreeNodePadding\", \"\"]],\n    inputs: {\n      level: [2, \"matTreeNodePadding\", \"level\", numberAttribute],\n      indent: [0, \"matTreeNodePaddingIndent\", \"indent\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTreeNodePadding,\n      useExisting: MatTreeNodePadding\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTreeNodePadding, [{\n    type: Directive,\n    args: [{\n      selector: '[matTreeNodePadding]',\n      providers: [{\n        provide: CdkTreeNodePadding,\n        useExisting: MatTreeNodePadding\n      }]\n    }]\n  }], null, {\n    level: [{\n      type: Input,\n      args: [{\n        alias: 'matTreeNodePadding',\n        transform: numberAttribute\n      }]\n    }],\n    indent: [{\n      type: Input,\n      args: ['matTreeNodePaddingIndent']\n    }]\n  });\n})();\n\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n  viewContainer = inject(ViewContainerRef);\n  _node = inject(CDK_TREE_NODE_OUTLET_NODE, {\n    optional: true\n  });\n  static ɵfac = function MatTreeNodeOutlet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTreeNodeOutlet)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTreeNodeOutlet,\n    selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTreeNodeOutlet,\n      useExisting: MatTreeNodeOutlet\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n    type: Directive,\n    args: [{\n      selector: '[matTreeNodeOutlet]',\n      providers: [{\n        provide: CdkTreeNodeOutlet,\n        useExisting: MatTreeNodeOutlet\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  // We need an initializer here to avoid a TS error. The value will be set in `ngAfterViewInit`.\n  _nodeOutlet = undefined;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTree_BaseFactory;\n    return function MatTree_Factory(__ngFactoryType__) {\n      return (ɵMatTree_BaseFactory || (ɵMatTree_BaseFactory = i0.ɵɵgetInheritedFactory(MatTree)))(__ngFactoryType__ || MatTree);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatTree,\n    selectors: [[\"mat-tree\"]],\n    viewQuery: function MatTree_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatTreeNodeOutlet, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-tree\"],\n    exportAs: [\"matTree\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTree,\n      useExisting: MatTree\n    }]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"matTreeNodeOutlet\", \"\"]],\n    template: function MatTree_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainer(0, 0);\n      }\n    },\n    dependencies: [MatTreeNodeOutlet],\n    styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-sys-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-sys-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-sys-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height, 48px)}.mat-nested-tree-node{border-bottom-width:0}\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTree, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tree',\n      exportAs: 'matTree',\n      template: `<ng-container matTreeNodeOutlet></ng-container>`,\n      host: {\n        'class': 'mat-tree'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: CdkTree,\n        useExisting: MatTree\n      }],\n      imports: [MatTreeNodeOutlet],\n      styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-sys-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-sys-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-sys-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height, 48px)}.mat-nested-tree-node{border-bottom-width:0}\"]\n    }]\n  }], null, {\n    _nodeOutlet: [{\n      type: ViewChild,\n      args: [MatTreeNodeOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatTreeNodeToggle_BaseFactory;\n    return function MatTreeNodeToggle_Factory(__ngFactoryType__) {\n      return (ɵMatTreeNodeToggle_BaseFactory || (ɵMatTreeNodeToggle_BaseFactory = i0.ɵɵgetInheritedFactory(MatTreeNodeToggle)))(__ngFactoryType__ || MatTreeNodeToggle);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatTreeNodeToggle,\n    selectors: [[\"\", \"matTreeNodeToggle\", \"\"]],\n    inputs: {\n      recursive: [0, \"matTreeNodeToggleRecursive\", \"recursive\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkTreeNodeToggle,\n      useExisting: MatTreeNodeToggle\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[matTreeNodeToggle]',\n      providers: [{\n        provide: CdkTreeNodeToggle,\n        useExisting: MatTreeNodeToggle\n      }],\n      inputs: [{\n        name: 'recursive',\n        alias: 'matTreeNodeToggleRecursive'\n      }]\n    }]\n  }], null, null);\n})();\nconst MAT_TREE_DIRECTIVES = [MatNestedTreeNode, MatTreeNodeDef, MatTreeNodePadding, MatTreeNodeToggle, MatTree, MatTreeNode, MatTreeNodeOutlet];\nclass MatTreeModule {\n  static ɵfac = function MatTreeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatTreeModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatTreeModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CdkTreeModule, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTreeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkTreeModule, MatCommonModule, ...MAT_TREE_DIRECTIVES],\n      exports: [MatCommonModule, MAT_TREE_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n *\n * @deprecated Use MatTree#childrenAccessor and MatTreeNode#isExpandable\n * instead. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlattener {\n  transformFunction;\n  getLevel;\n  isExpandable;\n  getChildren;\n  constructor(transformFunction, getLevel, isExpandable, getChildren) {\n    this.transformFunction = transformFunction;\n    this.getLevel = getLevel;\n    this.isExpandable = isExpandable;\n    this.getChildren = getChildren;\n  }\n  _flattenNode(node, level, resultNodes, parentMap) {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (childrenNodes) {\n        if (Array.isArray(childrenNodes)) {\n          this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n        } else {\n          childrenNodes.pipe(take(1)).subscribe(children => {\n            this._flattenChildren(children, level, resultNodes, parentMap);\n          });\n        }\n      }\n    }\n    return resultNodes;\n  }\n  _flattenChildren(children, level, resultNodes, parentMap) {\n    children.forEach((child, index) => {\n      let childParentMap = parentMap.slice();\n      childParentMap.push(index != children.length - 1);\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData) {\n    let resultNodes = [];\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes, treeControl) {\n    let results = [];\n    let currentExpand = [];\n    currentExpand[0] = true;\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlatDataSource extends DataSource {\n  _treeControl;\n  _treeFlattener;\n  _flattenedData = new BehaviorSubject([]);\n  _expandedData = new BehaviorSubject([]);\n  get data() {\n    return this._data.value;\n  }\n  set data(value) {\n    this._data.next(value);\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n    this._treeControl.dataNodes = this._flattenedData.value;\n  }\n  _data = new BehaviorSubject([]);\n  constructor(_treeControl, _treeFlattener, initialData) {\n    super();\n    this._treeControl = _treeControl;\n    this._treeFlattener = _treeFlattener;\n    if (initialData) {\n      // Assign the data through the constructor to ensure that all of the logic is executed.\n      this.data = initialData;\n    }\n  }\n  connect(collectionViewer) {\n    return merge(collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData).pipe(map(() => {\n      this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n      return this._expandedData.value;\n    }));\n  }\n  disconnect() {\n    // no op\n  }\n}\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n  /**\n   * Data for the nested tree\n   */\n  get data() {\n    return this._data.value;\n  }\n  set data(value) {\n    this._data.next(value);\n  }\n  _data = new BehaviorSubject([]);\n  connect(collectionViewer) {\n    return merge(...[collectionViewer.viewChange, this._data]).pipe(map(() => this.data));\n  }\n  disconnect() {\n    // no op\n  }\n}\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n","<div class=\"filter-title-wrapper\">\n  <h3 class=\"title mat-title-large\" i18n=\"@@FilterExercises.title\">Filters</h3>\n  <button\n    (click)=\"toggleDrawer()\"\n    mat-icon-button\n    aria-label=\"Icon button with a close icon\"\n  >\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n<div class=\"chips-selection-wrapper\">\n  <mat-chip-set aria-label=\"Category selection\">\n    @for (\n      category of addRemoveDataService.dataSignal();\n      track category.name;\n      let i = $index\n    ) {\n      @for (localeName of category.localeNames; track localeName) {\n        <mat-chip\n          >{{ localeName }}\n          <button matChipRemove (click)=\"chipRemoveNode(localeName)\">\n            <mat-icon>cancel</mat-icon>\n          </button></mat-chip\n        >\n      }\n    }\n  </mat-chip-set>\n  <mat-chip\n    class=\"clear-filter\"\n    (click)=\"resetAll()\"\n    i18n=\"@@FilterExercises.clearAllChip\"\n    >Clear all</mat-chip\n  >\n</div>\n<div class=\"category-data\">\n  <mat-tree\n    class=\"custom-mat-tree\"\n    [dataSource]=\"dataSource\"\n    [treeControl]=\"treeControl\"\n  >\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n      <!-- use a disabled button to provide padding for tree leaf -->\n      <!-- <button mat-icon-button disabled></button> -->\n\n      <mat-checkbox\n        color=\"primary\"\n        [(ngModel)]=\"node.isChecked\"\n        (change)=\"onCheckboxChange(node)\"\n      >\n        {{ node.localeName }}\n      </mat-checkbox>\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node\n      *matTreeNodeDef=\"let node; when: hasChild\"\n      matTreeNodePadding\n    >\n      <button\n        mat-icon-button\n        matTreeNodeToggle\n        [attr.aria-label]=\"'Toggle ' + node.name\"\n      >\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n        </mat-icon>\n      </button>\n      {{ node.name }}\n    </mat-tree-node>\n  </mat-tree>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  inject,\n  signal,\n  output\n} from '@angular/core';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  AddRemoveDataService,\n  BodyArea,\n  BodyAreasService,\n  Equipment,\n  EquipmentService,\n  Movement,\n  MovementsService,\n  ShareDataService,\n  ShareStateService,\n  StartingPosition,\n  StartingPositionsService,\n} from '@slowautomobile/exercises';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport {\n  MatTreeFlatDataSource,\n  MatTreeFlattener,\n  MatTree,\n  MatTreeNodeDef,\n  MatTreeNode,\n  MatTreeNodePadding,\n  MatTreeNodeToggle,\n} from '@angular/material/tree';\nimport { Observable, Subscription, filter, forkJoin, of, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, FormsModule } from '@angular/forms';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatChip, MatChipsModule } from '@angular/material/chips';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { LocalstorageService } from '@slowautomobile/users';\n\ninterface CategoryNode {\n  name: string;\n  localeName?: string;\n  children?: CategoryNode[];\n  isChecked?: boolean;\n  categoryName?: string;\n  categoryNameLocale?: string;\n  values?: string[];\n  localeNames?: string[];\n}\n\ninterface CategoryFlatNode {\n  expandable: boolean;\n  name: string;\n  // localeName: string;\n  level: number;\n  isChecked: boolean | undefined;\n  categoryName: CategoryNode['categoryName'];\n  // categoryNameLocale: CategoryNode['categoryNameLocale'];\n}\n\ninterface CategoryGroup {\n  name: string;\n  value: string[];\n}\n\n// const TREE_DATA: CategoryNode[] = [\n//   {\n//     name: 'Fruit',\n//     children: [{ name: 'Apple' }, { name: 'Banana' }, { name: 'Fruit loops' }],\n//   },\n//   {\n//     name: 'Vegetables',\n//     children: [\n//       {\n//         name: 'Green',\n//         children: [{ name: 'Broccoli' }, { name: 'Brussels sprouts' }],\n//       },\n//       {\n//         name: 'Orange',\n//         children: [{ name: 'Pumpkins' }, { name: 'Carrots' }],\n//       },\n//     ],\n//   },\n// ];\n\nexport const CATEGORIES = [\n  {\n    categoryName: 'bodyAreas',\n    categoryNameLocale: $localize`:@@SearchFilter.bodyAreas:Body areas`,\n  },\n  {\n    categoryName: 'movements',\n    categoryNameLocale: $localize`:@@SearchFilter.movements:Movements`,\n  },\n  {\n    categoryName: 'startingPositions',\n    categoryNameLocale: $localize`:@@SearchFilter.startingPositions:Starting positions`,\n  },\n  {\n    categoryName: 'equipment',\n    categoryNameLocale: $localize`:@@SearchFilter.equipment:Equipment`,\n  },\n];\n\n@Component({\n    selector: 'ui-search-filter',\n    templateUrl: './search-filter.component.html',\n    styleUrl: './search-filter.component.scss',\n    imports: [\n        MatIconButton,\n        MatIcon,\n        MatChip,\n        MatTree,\n        MatTreeNodeDef,\n        MatTreeNode,\n        MatTreeNodePadding,\n        MatCheckbox,\n        FormsModule,\n        MatTreeNodeToggle,\n        MatChipsModule,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchFilterComponent implements OnInit, OnDestroy {\n  private bodyAreasService = inject(BodyAreasService);\n  private movementsService = inject(MovementsService);\n  private startingPositionsService = inject(StartingPositionsService);\n  private equipmentService = inject(EquipmentService);\n  public addRemoveDataService = inject(AddRemoveDataService);\n  private localstorageService = inject(LocalstorageService);\n  private shareDataService = inject(ShareDataService);\n  private shareStateService = inject(ShareStateService);\n\n  isFetchingData = this.shareStateService.isFetchingData;\n  bodyAreas!: BodyArea[];\n  movements!: Movement[];\n  startingPositions!: StartingPosition[];\n  equipment!: Equipment[];\n  subscriptions = new Subscription();\n  categoryData!: CategoryNode;\n  // TREE_DATA!: CategoryNode[];\n  readonly toggleDrawerSignal = output<void>();\n  categoriesData: CategoryNode[] = [];\n  filterData: any[] = [];\n  selectedLanguage!: string;\n\n  ngOnInit(): void {\n    // this._getBodyAreas();\n    // this._getMovements();\n    // this._getStartingPositions();\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log(this.selectedLanguage);\n\n    // console.log(this.categoriesData, TREE_DATA)\n\n    const observables: Observable<any>[] = [\n      this._getBodyAreas(),\n      this._getMovements(),\n      this._getStartingPositions(),\n      this._getEquipment(),\n    ];\n\n    const subscription = forkJoin(observables).subscribe({\n      next: data => {\n        // console.log(data);\n        data.forEach((category, i) => {\n          const categoryNameLocale = CATEGORIES[i].categoryNameLocale;\n          // console.log(categoryNameLocale);\n          // console.log(category);\n\n          const categoryChildren: any[] = [];\n          category.forEach((nameValue: any) => {\n            // console.log(nameValue);\n            categoryChildren.push({\n              name: nameValue.name,\n              localeName: nameValue.translations[this.selectedLanguage],\n              isChecked: false,\n              categoryName: CATEGORIES[i].categoryName,\n            });\n          });\n          // console.log(categoryChildren);\n\n          this.categoriesData.push({\n            name: categoryNameLocale,\n            children: categoryChildren,\n          });\n        });\n        // console.log(this.categoriesData);\n        // console.log(TREE_DATA);\n        // for(let i = 0; i < 4; i++) {\n        //   this.categoriesData[i].children?.forEach(value => value.isChecked = true)\n        // }\n        // console.log(this.treeControl);\n        this.dataSource.data = this.categoriesData;\n        // console.log(this.dataSource);\n      },\n      error: error => {\n        console.error(error);\n      },\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  // addDataItem(name: string | undefined, value: string): void {\n  //   const itemIndex = this.data.findIndex(item => item.name === name);\n\n  //   if (itemIndex !== -1) {\n  //     // If the item already exists, add the value to its array\n  //     this.data[itemIndex].values.push(value);\n  //   } else {\n  //     // If the item does not exist, create a new one\n  //     this.data.push({ name, values: [value] });\n  //   }\n  // }\n\n  // removeDataItem(name: string | undefined, value: string): void {\n  //   const itemIndex = this.data.findIndex(item => item.name === name);\n\n  //   if (itemIndex !== -1) {\n  //     // If the item exists, remove the value from its array\n  //     this.data[itemIndex].values = this.data[itemIndex].values.filter(\n  //       (v: any) => v !== value,\n  //     );\n\n  //     // Remove the entire item if the values array is empty\n  //     if (this.data[itemIndex].values.length === 0) {\n  //       this.data.splice(itemIndex, 1);\n  //     }\n  //   }\n  // }\n\n  chipRemoveNode(localeNameToRemove: string) {\n    // console.log(localeName);\n    let indexToRemove = 0;\n    let nodeToRemove;\n    this.addRemoveDataService.dataSignal().forEach(category => {\n      nodeToRemove = category.localeNames.find((localeName, i) => {\n        indexToRemove = i;\n        return localeName === localeNameToRemove;\n      });\n      if (nodeToRemove) {\n        this.onCheckboxChange(category as CategoryNode, indexToRemove, true);\n      }\n    });\n  }\n\n  onCheckboxChange(\n    node: CategoryNode,\n    indexToRemove = 0,\n    toggleChecked?: boolean,\n  ) {\n    const { name, localeName, categoryName } = node;\n    console.log(node);\n    console.log(indexToRemove);\n\n    this.isFetchingData.set(true);\n\n    // When node is removed when clicking on chip remove icon\n    if (toggleChecked) {\n      // node.isChecked = false;\n      const valueChipRemove = node.values?.[indexToRemove];\n      const localeNameChipRemove = node.localeNames?.[indexToRemove];\n\n      this.addRemoveDataService.removeDataItem(\n        node.name,\n        valueChipRemove as string,\n        localeNameChipRemove as string,\n      );\n\n      this.treeControl.dataNodes?.forEach(x => {\n        if (x.expandable === false && x.name === valueChipRemove) {\n          console.log(x);\n          x.isChecked = false;\n        }\n      });\n    }\n\n    if (node.isChecked) {\n      this.addRemoveDataService.addDataItem(\n        categoryName,\n        name,\n        localeName as string,\n      );\n    } else {\n      this.addRemoveDataService.removeDataItem(\n        categoryName,\n        name,\n        localeName as string,\n      );\n    }\n    // console.log(this.addRemoveDataService.getData());\n\n    // this.filterData = this.addRemoveDataService.getData();\n    // console.log(this.dataSource._flattenedData._value);\n  }\n\n  resetAll() {\n    // this.categoriesData.forEach(category => {\n    //   category.forEach(value => value.isChecked = false)\n    // })\n    // this.dataSource._flattenedData._value\n    // for (const rootNode of this.categoriesData) {\n    //   this.updateCheckedProperty(rootNode, false);\n    //   console.log(rootNode)\n    // }\n    this.isFetchingData.set(true);\n\n    this.treeControl.dataNodes?.forEach(x => {\n      // console.log(x)\n      if (x.expandable === false) {\n        x.isChecked = false;\n      }\n    });\n    // console.log(this.addRemoveDataService.getData());\n    this.addRemoveDataService.resetAll();\n    //  console.log(this.addRemoveDataService.getData());\n\n    //  console.log(this.treeControl.dataNodes);\n  }\n\n  // updateCheckedProperty(node: CategoryNode, isChecked: boolean): void {\n  //   node.isChecked = false;\n\n  //   if (node.children) {\n  //     for (const child of node.children) {\n  //       this.updateCheckedProperty(child, false);\n  //     }\n  //   }\n  // }\n\n  private _transformer = (node: CategoryNode, level: number) => {\n    /*  const combinedName = node.categoryName\n      ?.split(' ')\n      .map((word, i) =>\n        i === 0 ? word.toLowerCase() : word[0].toUpperCase() + word.slice(1),\n      )\n      .join(''); */\n    // console.log(combinedName);\n    // console.log(node);\n\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      localeName: node.localeName,\n      level: level,\n      categoryName: node.categoryName,\n      isChecked: node.isChecked,\n    } as CategoryFlatNode;\n  };\n\n  treeControl = new FlatTreeControl<CategoryFlatNode>(\n    node => node.level,\n    node => node.expandable,\n  );\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource<CategoryNode, CategoryFlatNode>(\n    this.treeControl,\n    this.treeFlattener,\n  );\n\n  hasChild = (_: number, node: CategoryFlatNode) => node.expandable;\n\n  private _getBodyAreas(): Observable<any> {\n    return this.bodyAreasService.getBodyAreas().pipe(\n      tap(bodyAreasList => {\n        this.bodyAreas = bodyAreasList;\n        this.bodyAreas = this.bodyAreas.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n        // this.bodyAreas.forEach((bodyArea: any) => {\n        //   if (this.lang) {\n        //     bodyArea.combinedName = `${bodyArea.translations[this.lang]} (${\n        //       bodyArea.name\n        //     })`;\n        //   }\n        // });\n      }),\n    );\n  }\n\n  private _getMovements(): Observable<any> {\n    return this.movementsService.getMovements().pipe(\n      tap(movementsList => {\n        this.movements = movementsList;\n        this.movements = this.movements.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n\n        // this.movements.forEach((movement: any) => {\n        //   if (this.lang) {\n        //     movement.combinedName = `${movement.translations[this.lang]} (${\n        //       movement.name\n        //     })`;\n        //   }\n        // });\n      }),\n    );\n  }\n\n  private _getStartingPositions(): Observable<any> {\n    return this.startingPositionsService.getStartingPositions().pipe(\n      tap(startingPositionsList => {\n        this.startingPositions = startingPositionsList;\n        this.startingPositions = this.startingPositions.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n\n        // this.startingPositions.forEach((startingPosition: any) => {\n        //   if (this.lang) {\n        //     startingPosition.translatedName =\n        //       startingPosition.translations[this.lang];\n        //   }\n        // });\n      }),\n    );\n  }\n\n  private _getEquipment(): Observable<any> {\n    return this.equipmentService.getEquipments().pipe(\n      tap(equipmentList => {\n        this.equipment = equipmentList;\n        this.equipment = this.equipment.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n\n        // this.equipment.forEach((movement: any) => {\n        //   if (this.lang) {\n        //     movement.combinedName = `${movement.translations[this.lang]} (${\n        //       movement.name\n        //     })`;\n        //   }\n        // });\n      }),\n    );\n  }\n\n  // private _getMovements() {\n  //   this.movementsService.getMovements().subscribe(movementList => {\n  //     console.log(movementList);\n  //     this.movements = movementList;\n  //   });\n  // }\n\n  private _getUserLanguageToken(): string {\n    return <string>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  toggleDrawer() {\n    this.toggleDrawerSignal.emit();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    console.log(this.categoriesData);\n\n    this.resetAll();\n\n    console.log(this.categoriesData);\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  inject,\n  output\n} from '@angular/core';\nimport { DeleteConfirmationDialogComponent } from '../../components/deleteConfirmationDialog/deleteConfirmationDialog.component';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  ClientsService,\n  ProgramDataService,\n  ProgramsService,\n  ShareClientsDataService,\n} from '@slowautomobile/exercises';\nimport { Location } from '@angular/common';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { lastValueFrom, Subscription, timer } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatDivider } from '@angular/material/divider';\n\n@Component({\n    selector: 'ui-program-options-bar',\n    templateUrl: './program-options-bar.component.html',\n    styleUrl: './program-options-bar.component.scss',\n    imports: [MatDivider, MatIconButton, MatTooltip, MatIcon]\n})\nexport class ProgramOptionsBarComponent implements OnDestroy {\n  private programsService = inject(ProgramsService);\n  private _snackBar = inject(MatSnackBar);\n  dialog = inject(MatDialog);\n  private router = inject(Router);\n  private programDataService = inject(ProgramDataService);\n  private shareClientsDataService = inject(ShareClientsDataService);\n  private clientsService = inject(ClientsService);\n  private location = inject(Location);\n  subscriptions = new Subscription();\n\n  programId = this.programDataService.programId;\n  clientInfo = this.shareClientsDataService.clientInfo;\n  // selectedTabIndex = this.shareClientsDataService.selectedTabIndex;\n  readonly printProgramEvent = output<void>();\n\n  openDeleteConfirmationDialog(itemId: string): void {\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '312px',\n      data: {\n        title: $localize`:@@DeleteConfirmationDialog.deleteTitleProgram:Delete selected program?`,\n        message: this.clientInfo().clientName\n          ? $localize`:@@DeleteConfirmationDialog.deleteTitleClientProgram:Deleting the selected program will remove it from clients profile.`\n          : $localize`:@@DeleteConfirmationDialog.deleteTitleUserProgram:Deleting the selected program will remove it from your account.`,\n        // message:\n        //   'Deleting the selected program will remove it from your account.',\n      },\n      panelClass: 'custom-dialog',\n    });\n\n    const subscription = dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // User confirmed deletion, handle deletion logic here\n        console.log('User confirmed deletion');\n        this.deleteProgram(itemId);\n        dialogRef.close();\n      } else {\n        // User canceled deletion\n        console.log('User canceled deletion');\n        dialogRef.close();\n      }\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  deleteProgram(programId: string) {\n    if (this.clientInfo().clientName) {\n      const subscription = this.clientsService\n        .deleteClientProgram(\n          this.clientInfo().clientId,\n          this.clientInfo().programPosition,\n        )\n        .subscribe(deletedProgram => {\n          console.log(deletedProgram);\n          lastValueFrom(timer(2000)).then(() => {\n            this.location.back();\n          });\n        });\n      this.subscriptions.add(subscription);\n    } else {\n      const subscription = this.programsService\n        .deleteProgram(programId)\n        .subscribe(() => {\n          console.log(programId);\n          lastValueFrom(timer(2000)).then(() => {\n            // this.selectedTabIndex.set(1);\n            this.router.navigateByUrl(`programs`);\n          });\n        });\n      this.subscriptions.add(subscription);\n    }\n\n    this._snackBar.open($localize`:@@Snackbar.programDeleted:Program deleted`, '', {\n      duration: 2000,\n      panelClass: ['custom-snackbar-style'],\n    });\n  }\n\n  printProgram() {\n    this.printProgramEvent.emit();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"program-options-wrapper\">\n  <mat-divider\n    vertical\n    style=\"display: inline-block; height: 24px\"\n  ></mat-divider>\n  <button\n    mat-icon-button\n    matTooltip=\"Email program\"\n    aria-label=\"Email icon button\"\n  >\n    <mat-icon>mail_outline</mat-icon>\n  </button>\n  <button mat-icon-button matTooltip=\"Share\" aria-label=\"Share icon button\">\n    <mat-icon>share</mat-icon>\n  </button>\n  <button\n    mat-icon-button\n    matTooltip=\"Print\"\n    aria-label=\"Print icon button\"\n    (click)=\"printProgram()\"\n  >\n    <mat-icon>print_outline</mat-icon>\n  </button>\n\n  <mat-divider\n    vertical\n    style=\"display: inline-block; height: 24px\"\n  ></mat-divider>\n  <button\n    mat-icon-button\n    matTooltip=\"Delete\"\n    aria-label=\"Delete icon button\"\n    (click)=\"openDeleteConfirmationDialog(programId())\"\n  >\n    <mat-icon>delete_outline</mat-icon>\n  </button>\n</div>\n","import {\n  Component,\n  effect,\n  inject,\n  Input,\n  OnInit,\n  output\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatButtonToggle,\n  MatButtonToggleGroup,\n} from '@angular/material/button-toggle';\nimport { SearchComponent } from '../../pages/search/search.component';\nimport { FormsModule } from '@angular/forms';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ShareStateService } from '@slowautomobile/exercises';\n\ntype ListOption = 'all' | 'selected' | 'favorite';\n\n@Component({\n    selector: 'ui-exercise-search-btns-wrapper',\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatButtonToggleGroup,\n        MatButtonToggle,\n        SearchComponent,\n    ],\n    templateUrl: './exercise-search-btns-wrapper.component.html',\n    styleUrl: './exercise-search-btns-wrapper.component.scss'\n})\nexport class ExerciseSearchBtnsWrapperComponent {\n  private shareStateService = inject(ShareStateService);\n\n  listOptionSignal = this.shareStateService.listOption;\n  drawerOpen!: boolean;\n  listOption!: ListOption;\n\n  readonly listOptionValue = output<ListOption>();\n\n  constructor() {\n    effect(() => {\n      this.listOption = this.listOptionSignal();\n    });\n  }\n\n  changeListOption(listOptionValue: ListOption) {\n    this.listOptionSignal.set(listOptionValue);\n    this.listOptionValue.emit(listOptionValue);\n  }\n\n  toggleDrawer() {\n    this.drawerOpen = !this.drawerOpen;\n  }\n}\n","<div class=\"search-segmented-btns\">\n  <ui-search (toggleDrawerSignal)=\"toggleDrawer()\"></ui-search>\n  <mat-button-toggle-group\n    class=\"segmented-btns\"\n    [(ngModel)]=\"listOption\"\n    name=\"listOption\"\n    aria-label=\"List Option\"\n    i18n-aria-label=\"@@SearchSegmentedBtns.listOptionAriaLabel\"\n    (change)=\"changeListOption($event.value)\"\n    hideSingleSelectionIndicator=\"true\"\n  >\n    <mat-button-toggle value=\"all\" i18n=\"@@SearchSegmentedBtns.listOptionAll\"\n      >All</mat-button-toggle\n    >\n    <mat-button-toggle\n      value=\"selected\"\n      i18n=\"@@SearchSegmentedBtns.listOptionSelected\"\n      >Selected</mat-button-toggle\n    >\n    <mat-button-toggle\n      value=\"favorite\"\n      i18n=\"@@SearchSegmentedBtns.listOptionFavorite\"\n      >Favorite</mat-button-toggle\n    >\n  </mat-button-toggle-group>\n</div>\n\n<!-- (change)=\"testOption($event.value)\" -->\n","<div\n  [class.img-wrapper-player]=\"!isModal()\"\n  [class.reset-width-padding]=\"isDash()\"\n>\n  <!-- Thumbnail Image -->\n  @if (getIsModalIsPlayingStatus()) {\n    <img\n      [src]=\"thumbnail\"\n      alt=\"Video Thumbnail\"\n      class=\"exercise-img-player\"\n      [class.remove-width]=\"isDash()\"\n    />\n  }\n\n  <video\n    (timeupdate)=\"logVideoTime()\"\n    #videoPlayer\n    muted\n    disablepictureinpicture\n    controlslist=\"nodownload nofullscreen noplaybackrate\"\n    [controls]=\"isModal()\"\n    [preload]=\"isModal() ? 'auto' : 'none'\"\n    playsinline\n    [poster]=\"isModal() ? '' : thumbnail\"\n    [ngClass]=\"{\n      'remove-width': isDash(),\n      'exercise-img-player': !isModal(),\n      'modal-img': isModal(),\n    }\"\n    (click)=\"isModal() ? togglePlay() : ''\"\n    [class.video-hidden]=\"getIsModalIsPlayingStatus()\"\n  >\n    @if (videoSrc) {\n      <source [src]=\"videoSrc\" type=\"video/mp4\" />\n    }\n    <p>Your browser does not support the video tag.</p>\n  </video>\n  @if (mouseOver()) {\n    <div class=\"progress-bar-wrapper\" [class.progress-dash]=\"isDash()\">\n      <mat-progress-bar\n        class=\"progress-bar\"\n        [class.play-progress]=\"isPlaying()\"\n        mode=\"determinate\"\n        [value]=\"progressValue()\"\n      ></mat-progress-bar>\n    </div>\n  }\n</div>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  input,\n  Input,\n  OnDestroy,\n  signal,\n  ViewChild,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { interval, map, takeUntil, takeWhile, timer } from 'rxjs';\n\n@Component({\n  selector: 'ui-video-player',\n  imports: [CommonModule, MatProgressBarModule],\n  templateUrl: './video-player.component.html',\n  styleUrl: './video-player.component.scss',\n})\nexport class VideoPlayerComponent implements AfterViewInit {\n  @ViewChild('videoPlayer', { static: false })\n  videoPlayer!: ElementRef<HTMLVideoElement>;\n  @Input() videoSrc!: string | undefined;\n  @Input() thumbnail?: string | undefined;\n  // @Input() isModal()? = true;\n  isModal = input<boolean>(true);\n  isDash = input<boolean>(false);\n  private video!: HTMLVideoElement;\n  isPlaying = signal<boolean>(false);\n  private hoverTimeout: any;\n\n  progressValue = signal(0);\n  private progressInterval: any;\n  mouseOver = signal(false);\n\n  ngAfterViewInit() {\n    this.video = this.videoPlayer.nativeElement;\n  }\n\n  logVideoTime() {\n    if (!this.isPlaying()) {\n      return;\n    }\n\n    const currentTime = this.videoPlayer.nativeElement.currentTime;\n    const duration = this.videoPlayer.nativeElement.duration;\n    const percent = (currentTime / duration) * 100;\n    this.progressValue.update(() => +percent.toFixed(1));\n  }\n\n  public getIsModalIsPlayingStatus() {\n    return !this.isModal() && !this.isPlaying();\n  }\n\n  onMouseEnter() {\n    if (this.isModal()) return;\n    this.mouseOver.set(true);\n    // this.progressValue.set(0);\n\n    const interval = setInterval(() => {\n      this.progressValue.update(value => value + 50);\n      if (this.progressValue() >= 100) {\n        this.progressValue.set(100);\n\n        clearInterval(interval);\n      }\n    }, 100);\n\n    // Store interval reference to clear on mouse leave\n    this.progressInterval = interval;\n\n    this.hoverTimeout = setTimeout(() => {\n      this.playVideo();\n    }, 500);\n  }\n\n  onMouseLeave() {\n    if (this.isModal()) {\n      return;\n    }\n    this.progressValue.set(0);\n    this.pauseVideo();\n    clearTimeout(this.hoverTimeout);\n    clearInterval(this.progressInterval);\n  }\n\n  // Play video on mouse enter\n  async playVideo() {\n    // if (this.isPlaying) return; // Prevents unnecessary restarts\n    if (!this.isModal() && !this.isPlaying()) {\n      try {\n        // Load the video explicitly\n        this.video.load();\n\n        // Wait for the video to be ready\n        await new Promise<void>(resolve => {\n          this.video.addEventListener('canplay', () => resolve(), {\n            once: true,\n          });\n        });\n\n        // Attempt to play the video\n        this.isPlaying.set(true);\n        await this.video.play();\n        this.video.loop = true;\n        // console.log('Video is playing');\n      } catch (error) {\n        console.error('Video playback failed:', error);\n      }\n    }\n  }\n\n  // Pause video on mouse leave\n  pauseVideo() {\n    this.isPlaying.set(false);\n    this.video.loop = false;\n    this.video.pause();\n    // console.log('Video is paused');\n  }\n\n  togglePlay() {\n    const video = this.videoPlayer.nativeElement;\n    if (video.paused) {\n      video.play();\n    } else {\n      video.pause();\n    }\n  }\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, TemplateRef, ApplicationRef, Injector, ViewContainerRef, Directive, QueryList, EventEmitter, ANIMATION_MODULE_TYPE, afterNextRender, ContentChildren, ViewChild, ContentChild, Output, NgZone, Renderer2, NgModule } from '@angular/core';\nimport { FocusMonitor, _IdGenerator, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { startWith, switchMap, takeUntil, take, filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-326dcb39.mjs';\nimport { M as MatRipple } from './ripple-5bdada85.mjs';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { _bindEventWithOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { M as MatRippleModule } from './index-a36e3c7c.mjs';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport '@angular/cdk/coercion';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [[[\"mat-icon\"], [\"\", \"matMenuItemIcon\", \"\"]], \"*\"];\nconst _c2 = [\"mat-icon, [matMenuItemIcon]\", \"*\"];\nfunction MatMenuItem_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 2);\n    i0.ɵɵelement(1, \"polygon\", 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵlistener(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closed.emit(\"click\"));\n    })(\"animationstart\", function MatMenu_ng_template_0_Template_div_animationstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationStart($event.animationName));\n    })(\"animationend\", function MatMenu_ng_template_0_Template_div_animationend_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationDone($event.animationName));\n    })(\"animationcancel\", function MatMenu_ng_template_0_Template_div_animationcancel_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onAnimationDone($event.animationName));\n    });\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵclassProp(\"mat-menu-panel-animations-disabled\", ctx_r1._animationsDisabled)(\"mat-menu-panel-exit-animation\", ctx_r1._panelAnimationState === \"void\")(\"mat-menu-panel-animating\", ctx_r1._isAnimating);\n    i0.ɵɵproperty(\"id\", ctx_r1.panelId);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1.ariaLabelledby || null)(\"aria-describedby\", ctx_r1.ariaDescribedby || null);\n  }\n}\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * Single item inside a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem {\n  _elementRef = inject(ElementRef);\n  _document = inject(DOCUMENT);\n  _focusMonitor = inject(FocusMonitor);\n  _parentMenu = inject(MAT_MENU_PANEL, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  /** ARIA role for the menu item. */\n  role = 'menuitem';\n  /** Whether the menu item is disabled. */\n  disabled = false;\n  /** Whether ripples are disabled on the menu item. */\n  disableRipple = false;\n  /** Stream that emits when the menu item is hovered. */\n  _hovered = new Subject();\n  /** Stream that emits when the menu item is focused. */\n  _focused = new Subject();\n  /** Whether the menu item is highlighted. */\n  _highlighted = false;\n  /** Whether the menu item acts as a trigger for a sub-menu. */\n  _triggersSubmenu = false;\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    this._parentMenu?.addItem?.(this);\n  }\n  /** Focuses the menu item. */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n    this._focused.next(this);\n  }\n  ngAfterViewInit() {\n    if (this._focusMonitor) {\n      // Start monitoring the element, so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      this._focusMonitor.monitor(this._elementRef, false);\n    }\n  }\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n    this._hovered.complete();\n    this._focused.complete();\n  }\n  /** Used to set the `tabindex`. */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Returns the host DOM element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /** Prevents the default element actions if it is disabled. */\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /** Emits to the hover stream. */\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    const clone = this._elementRef.nativeElement.cloneNode(true);\n    const icons = clone.querySelectorAll('mat-icon, .material-icons');\n    // Strip away icons, so they don't show up in the text.\n    for (let i = 0; i < icons.length; i++) {\n      icons[i].remove();\n    }\n    return clone.textContent?.trim() || '';\n  }\n  _setHighlighted(isHighlighted) {\n    // We need to mark this for check for the case where the content is coming from a\n    // `matMenuContent` whose change detection tree is at the declaration position,\n    // not the insertion position. See #23175.\n    this._highlighted = isHighlighted;\n    this._changeDetectorRef.markForCheck();\n  }\n  _setTriggersSubmenu(triggersSubmenu) {\n    this._triggersSubmenu = triggersSubmenu;\n    this._changeDetectorRef.markForCheck();\n  }\n  _hasFocus() {\n    return this._document && this._document.activeElement === this._getHostElement();\n  }\n  static ɵfac = function MatMenuItem_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMenuItem)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatMenuItem,\n    selectors: [[\"\", \"mat-menu-item\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-menu-item\", \"mat-focus-indicator\"],\n    hostVars: 8,\n    hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n          return ctx._checkDisabled($event);\n        })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n          return ctx._handleMouseEnter();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx.disabled || null);\n        i0.ɵɵclassProp(\"mat-mdc-menu-item-highlighted\", ctx._highlighted)(\"mat-mdc-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n      }\n    },\n    inputs: {\n      role: \"role\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n    },\n    exportAs: [\"matMenuItem\"],\n    attrs: _c0,\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"mat-mdc-menu-item-text\"], [\"matRipple\", \"\", 1, \"mat-mdc-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"], [\"viewBox\", \"0 0 5 10\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mat-mdc-menu-submenu-icon\"], [\"points\", \"0,0 5,5 0,10\"]],\n    template: function MatMenuItem_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵprojection(0);\n        i0.ɵɵelementStart(1, \"span\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 1);\n        i0.ɵɵtemplate(4, MatMenuItem_Conditional_4_Template, 2, 0, \":svg:svg\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._triggersSubmenu ? 4 : -1);\n      }\n    },\n    dependencies: [MatRipple],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      host: {\n        '[attr.role]': 'role',\n        'class': 'mat-mdc-menu-item mat-focus-indicator',\n        '[class.mat-mdc-menu-item-highlighted]': '_highlighted',\n        '[class.mat-mdc-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      imports: [MatRipple],\n      template: \"<ng-content select=\\\"mat-icon, [matMenuItemIcon]\\\"></ng-content>\\n<span class=\\\"mat-mdc-menu-item-text\\\"><ng-content></ng-content></span>\\n<div class=\\\"mat-mdc-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n@if (_triggersSubmenu) {\\n     <svg\\n       class=\\\"mat-mdc-menu-submenu-icon\\\"\\n       viewBox=\\\"0 0 5 10\\\"\\n       focusable=\\\"false\\\"\\n       aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n}\\n\"\n    }]\n  }], () => [], {\n    role: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` + `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/** Menu content that will be rendered lazily once the menu is opened. */\nclass MatMenuContent {\n  _template = inject(TemplateRef);\n  _appRef = inject(ApplicationRef);\n  _injector = inject(Injector);\n  _viewContainerRef = inject(ViewContainerRef);\n  _document = inject(DOCUMENT);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _portal;\n  _outlet;\n  /** Emits when the menu content has been attached. */\n  _attached = new Subject();\n  constructor() {}\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n    this.detach();\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), null, this._appRef, this._injector);\n    }\n    const element = this._template.elementRef.nativeElement;\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode.insertBefore(this._outlet.outletElement, element);\n    // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    this._changeDetectorRef.markForCheck();\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal?.isAttached) {\n      this._portal.detach();\n    }\n  }\n  ngOnDestroy() {\n    this.detach();\n    this._outlet?.dispose();\n  }\n  static ɵfac = function MatMenuContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMenuContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatMenuContent,\n    selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_MENU_CONTENT,\n      useExisting: MatMenuContent\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]',\n      providers: [{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n/** Name of the enter animation `@keyframes`. */\nconst ENTER_ANIMATION = '_mat-menu-enter';\n/** Name of the exit animation `@keyframes`. */\nconst EXIT_ANIMATION = '_mat-menu-exit';\nclass MatMenu {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _injector = inject(Injector);\n  _keyManager;\n  _xPosition;\n  _yPosition;\n  _firstItemFocusRef;\n  _exitFallbackTimeout;\n  /** Whether animations are currently disabled. */\n  _animationsDisabled;\n  /** All items inside the menu. Includes items nested inside another menu. */\n  _allItems;\n  /** Only the direct descendant menu items. */\n  _directDescendantItems = new QueryList();\n  /** Classes to be applied to the menu panel. */\n  _classList = {};\n  /** Current state of the panel animation. */\n  _panelAnimationState = 'void';\n  /** Emits whenever an animation on the menu completes. */\n  _animationDone = new Subject();\n  /** Whether the menu is animating. */\n  _isAnimating = false;\n  /** Parent menu of the current menu panel. */\n  parentMenu;\n  /** Layout direction of the menu. */\n  direction;\n  /** Class or list of classes to be added to the overlay panel. */\n  overlayPanelClass;\n  /** Class to be added to the backdrop element. */\n  backdropClass;\n  /** aria-label for the menu panel. */\n  ariaLabel;\n  /** aria-labelledby for the menu panel. */\n  ariaLabelledby;\n  /** aria-describedby for the menu panel. */\n  ariaDescribedby;\n  /** Position of the menu in the X axis. */\n  get xPosition() {\n    return this._xPosition;\n  }\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n  /** Position of the menu in the Y axis. */\n  get yPosition() {\n    return this._yPosition;\n  }\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n  /** @docs-private */\n  templateRef;\n  /**\n   * List of the items inside of a menu.\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  items;\n  /**\n   * Menu content that will be rendered lazily.\n   * @docs-private\n   */\n  lazyContent;\n  /** Whether the menu should overlap its trigger. */\n  overlapTrigger;\n  /** Whether the menu has a backdrop. */\n  hasBackdrop;\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  set panelClass(classes) {\n    const previousPanelClass = this._previousPanelClass;\n    const newClassList = {\n      ...this._classList\n    };\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach(className => {\n        newClassList[className] = false;\n      });\n    }\n    this._previousPanelClass = classes;\n    if (classes && classes.length) {\n      classes.split(' ').forEach(className => {\n        newClassList[className] = true;\n      });\n      this._elementRef.nativeElement.className = '';\n    }\n    this._classList = newClassList;\n  }\n  _previousPanelClass;\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  get classList() {\n    return this.panelClass;\n  }\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n  /** Event emitted when the menu is closed. */\n  closed = new EventEmitter();\n  /**\n   * Event emitted when the menu is closed.\n   * @deprecated Switch to `closed` instead\n   * @breaking-change 8.0.0\n   */\n  close = this.closed;\n  panelId = inject(_IdGenerator).getId('mat-menu-panel-');\n  constructor() {\n    const defaultOptions = inject(MAT_MENU_DEFAULT_OPTIONS);\n    this.overlayPanelClass = defaultOptions.overlayPanelClass || '';\n    this._xPosition = defaultOptions.xPosition;\n    this._yPosition = defaultOptions.yPosition;\n    this.backdropClass = defaultOptions.backdropClass;\n    this.overlapTrigger = defaultOptions.overlapTrigger;\n    this.hasBackdrop = defaultOptions.hasBackdrop;\n    this._animationsDisabled = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    }) === 'NoopAnimations';\n  }\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n    this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n    // is internal and we know that it gets completed on destroy.\n    this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    this._directDescendantItems.changes.subscribe(itemsList => {\n      // Move focus to another item, if the active item is removed from the list.\n      // We need to debounce the callback, because multiple items might be removed\n      // in quick succession.\n      const manager = this._keyManager;\n      if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n        const items = itemsList.toArray();\n        const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n        if (items[index] && !items[index].disabled) {\n          manager.setActiveItem(index);\n        } else {\n          manager.setNextItemActive();\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._directDescendantItems.destroy();\n    this.closed.complete();\n    this._firstItemFocusRef?.destroy();\n    clearTimeout(this._exitFallbackTimeout);\n  }\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered() {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    const itemChanges = this._directDescendantItems.changes;\n    return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._hovered))));\n  }\n  /*\n   * Registers a menu item with the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  addItem(_item) {}\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  removeItem(_item) {}\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n        manager.onKeydown(event);\n        return;\n    }\n  }\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin = 'program') {\n    // Wait for `afterNextRender` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n    this._firstItemFocusRef?.destroy();\n    this._firstItemFocusRef = afterNextRender(() => {\n      const menuPanel = this._resolvePanel();\n      // If an item in the menuPanel is already focused, avoid overriding the focus.\n      if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && menuPanel) {\n          menuPanel.focus();\n        }\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n  /**\n   * @deprecated No longer used and will be removed.\n   * @breaking-change 21.0.0\n   */\n  setElevation(_depth) {}\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    this._classList = {\n      ...this._classList,\n      ['mat-menu-before']: posX === 'before',\n      ['mat-menu-after']: posX === 'after',\n      ['mat-menu-above']: posY === 'above',\n      ['mat-menu-below']: posY === 'below'\n    };\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(state) {\n    const isExit = state === EXIT_ANIMATION;\n    if (isExit || state === ENTER_ANIMATION) {\n      if (isExit) {\n        clearTimeout(this._exitFallbackTimeout);\n        this._exitFallbackTimeout = undefined;\n      }\n      this._animationDone.next(isExit ? 'void' : 'enter');\n      this._isAnimating = false;\n    }\n  }\n  _onAnimationStart(state) {\n    if (state === ENTER_ANIMATION || state === EXIT_ANIMATION) {\n      this._isAnimating = true;\n    }\n  }\n  _setIsOpen(isOpen) {\n    this._panelAnimationState = isOpen ? 'enter' : 'void';\n    if (isOpen) {\n      if (this._keyManager.activeItemIndex === 0) {\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        const menuPanel = this._resolvePanel();\n        if (menuPanel) {\n          menuPanel.scrollTop = 0;\n        }\n      }\n    } else if (!this._animationsDisabled) {\n      // Some apps do `* { animation: none !important; }` in tests which will prevent the\n      // `animationend` event from firing. Since the exit animation is loading-bearing for\n      // removing the content from the DOM, add a fallback timer.\n      this._exitFallbackTimeout = setTimeout(() => this._onAnimationDone(EXIT_ANIMATION), 200);\n    }\n    // Animation events won't fire when animations are disabled so we simulate them.\n    if (this._animationsDisabled) {\n      setTimeout(() => {\n        this._onAnimationDone(isOpen ? ENTER_ANIMATION : EXIT_ANIMATION);\n      });\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   */\n  _updateDirectDescendants() {\n    this._allItems.changes.pipe(startWith(this._allItems)).subscribe(items => {\n      this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n      this._directDescendantItems.notifyOnChanges();\n    });\n  }\n  /** Gets the menu panel DOM node. */\n  _resolvePanel() {\n    let menuPanel = null;\n    if (this._directDescendantItems.length) {\n      // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n      // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n      // because the panel is inside an `ng-template`. We work around it by starting from one of\n      // the items and walking up the DOM.\n      menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n    }\n    return menuPanel;\n  }\n  static ɵfac = function MatMenu_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMenu)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatMenu,\n    selectors: [[\"mat-menu\"]],\n    contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    viewQuery: function MatMenu_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function MatMenu_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n      }\n    },\n    inputs: {\n      backdropClass: \"backdropClass\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n      xPosition: \"xPosition\",\n      yPosition: \"yPosition\",\n      overlapTrigger: [2, \"overlapTrigger\", \"overlapTrigger\", booleanAttribute],\n      hasBackdrop: [2, \"hasBackdrop\", \"hasBackdrop\", value => value == null ? null : booleanAttribute(value)],\n      panelClass: [0, \"class\", \"panelClass\"],\n      classList: \"classList\"\n    },\n    outputs: {\n      closed: \"closed\",\n      close: \"close\"\n    },\n    exportAs: [\"matMenu\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_MENU_PANEL,\n      useExisting: MatMenu\n    }])],\n    ngContentSelectors: _c3,\n    decls: 1,\n    vars: 0,\n    consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-mdc-menu-panel\", 3, \"click\", \"animationstart\", \"animationend\", \"animationcancel\", \"id\"], [1, \"mat-mdc-menu-content\"]],\n    template: function MatMenu_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 12, \"ng-template\");\n      }\n    },\n    styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      host: {\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null'\n      },\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-mdc-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-menu-panel-animations-disabled]=\\\"_animationsDisabled\\\"\\n    [class.mat-menu-panel-exit-animation]=\\\"_panelAnimationState === 'void'\\\"\\n    [class.mat-menu-panel-animating]=\\\"_isAnimating\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    (animationstart)=\\\"_onAnimationStart($event.animationName)\\\"\\n    (animationend)=\\\"_onAnimationDone($event.animationName)\\\"\\n    (animationcancel)=\\\"_onAnimationDone($event.animationName)\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-mdc-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"mat-menu{display:none}.mat-mdc-menu-content{margin:0;padding:8px 0;outline:0}.mat-mdc-menu-content,.mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;flex:1;white-space:normal;font-family:var(--mat-menu-item-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-menu-item-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-menu-item-label-text-size, var(--mat-sys-label-large-size));letter-spacing:var(--mat-menu-item-label-text-tracking, var(--mat-sys-label-large-tracking));font-weight:var(--mat-menu-item-label-text-weight, var(--mat-sys-label-large-weight))}@keyframes _mat-menu-enter{from{opacity:0;transform:scale(0.8)}to{opacity:1;transform:none}}@keyframes _mat-menu-exit{from{opacity:1}to{opacity:0}}.mat-mdc-menu-panel{min-width:112px;max-width:280px;overflow:auto;box-sizing:border-box;outline:0;animation:_mat-menu-enter 120ms cubic-bezier(0, 0, 0.2, 1);border-radius:var(--mat-menu-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mat-menu-container-color, var(--mat-sys-surface-container));box-shadow:var(--mat-menu-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12));will-change:transform,opacity}.mat-mdc-menu-panel.mat-menu-panel-exit-animation{animation:_mat-menu-exit 100ms 25ms linear forwards}.mat-mdc-menu-panel.mat-menu-panel-animations-disabled{animation:none}.mat-mdc-menu-panel.mat-menu-panel-animating{pointer-events:none}.mat-mdc-menu-panel.mat-menu-panel-animating:has(.mat-mdc-menu-content:empty){display:none}@media(forced-colors: active){.mat-mdc-menu-panel{outline:solid 1px}}.mat-mdc-menu-panel .mat-divider{color:var(--mat-menu-divider-color, var(--mat-sys-surface-variant));margin-bottom:var(--mat-menu-divider-bottom-spacing, 8px);margin-top:var(--mat-menu-divider-top-spacing, 8px)}.mat-mdc-menu-item{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;cursor:pointer;width:100%;text-align:left;box-sizing:border-box;color:inherit;font-size:inherit;background:none;text-decoration:none;margin:0;min-height:48px;padding-left:var(--mat-menu-item-leading-spacing, 12px);padding-right:var(--mat-menu-item-trailing-spacing, 12px);-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-menu-item::-moz-focus-inner{border:0}[dir=rtl] .mat-mdc-menu-item{padding-left:var(--mat-menu-item-trailing-spacing, 12px);padding-right:var(--mat-menu-item-leading-spacing, 12px)}.mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-leading-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-trailing-spacing, 12px)}[dir=rtl] .mat-mdc-menu-item:has(.material-icons,mat-icon,[matButtonIcon]){padding-left:var(--mat-menu-item-with-icon-trailing-spacing, 12px);padding-right:var(--mat-menu-item-with-icon-leading-spacing, 12px)}.mat-mdc-menu-item,.mat-mdc-menu-item:visited,.mat-mdc-menu-item:link{color:var(--mat-menu-item-label-text-color, var(--mat-sys-on-surface))}.mat-mdc-menu-item .mat-icon-no-color,.mat-mdc-menu-item .mat-mdc-menu-submenu-icon{color:var(--mat-menu-item-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-menu-item[disabled]{cursor:default;opacity:.38}.mat-mdc-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.mat-mdc-menu-item:focus{outline:0}.mat-mdc-menu-item .mat-icon{flex-shrink:0;margin-right:var(--mat-menu-item-spacing, 12px);height:var(--mat-menu-item-icon-size, 24px);width:var(--mat-menu-item-icon-size, 24px)}[dir=rtl] .mat-mdc-menu-item{text-align:right}[dir=rtl] .mat-mdc-menu-item .mat-icon{margin-right:0;margin-left:var(--mat-menu-item-spacing, 12px)}.mat-mdc-menu-item:not([disabled]):hover{background-color:var(--mat-menu-item-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}.mat-mdc-menu-item:not([disabled]).cdk-program-focused,.mat-mdc-menu-item:not([disabled]).cdk-keyboard-focused,.mat-mdc-menu-item:not([disabled]).mat-mdc-menu-item-highlighted{background-color:var(--mat-menu-item-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}@media(forced-colors: active){.mat-mdc-menu-item{margin-top:1px}}.mat-mdc-menu-submenu-icon{width:var(--mat-menu-item-icon-size, 24px);height:10px;fill:currentColor;padding-left:var(--mat-menu-item-spacing, 12px)}[dir=rtl] .mat-mdc-menu-submenu-icon{padding-right:var(--mat-menu-item-spacing, 12px);padding-left:0}[dir=rtl] .mat-mdc-menu-submenu-icon polygon{transform:scaleX(-1);transform-origin:center}@media(forced-colors: active){.mat-mdc-menu-submenu-icon{fill:CanvasText}}.mat-mdc-menu-item .mat-mdc-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], () => [], {\n    _allItems: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: true\n      }]\n    }],\n    backdropClass: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: false\n      }]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MAT_MENU_CONTENT]\n    }],\n    overlapTrigger: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hasBackdrop: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? null : booleanAttribute(value)\n      }]\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }]\n  });\n})();\n\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Mapping between menu panels and the last trigger that opened them. */\nconst PANELS_TO_TRIGGERS = new WeakMap();\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n  _overlay = inject(Overlay);\n  _element = inject(ElementRef);\n  _viewContainerRef = inject(ViewContainerRef);\n  _menuItemInstance = inject(MatMenuItem, {\n    optional: true,\n    self: true\n  });\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _focusMonitor = inject(FocusMonitor);\n  _ngZone = inject(NgZone);\n  _scrollStrategy = inject(MAT_MENU_SCROLL_STRATEGY);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _cleanupTouchstart;\n  _portal;\n  _overlayRef = null;\n  _menuOpen = false;\n  _closingActionsSubscription = Subscription.EMPTY;\n  _hoverSubscription = Subscription.EMPTY;\n  _menuCloseSubscription = Subscription.EMPTY;\n  _pendingRemoval;\n  /**\n   * We're specifically looking for a `MatMenu` here since the generic `MatMenuPanel`\n   * interface lacks some functionality around nested menus and animations.\n   */\n  _parentMaterialMenu;\n  /**\n   * Cached value of the padding of the parent menu panel.\n   * Used to offset sub-menus to compensate for the padding.\n   */\n  _parentInnerPadding;\n  // Tracking input type is necessary so it's possible to only auto-focus\n  // the first item of the list when the menu is opened via the keyboard\n  _openedBy = undefined;\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n  /** References the menu instance that the trigger is associated with. */\n  get menu() {\n    return this._menu;\n  }\n  set menu(menu) {\n    if (menu === this._menu) {\n      return;\n    }\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n    if (menu) {\n      if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuRecursiveError();\n      }\n      this._menuCloseSubscription = menu.close.subscribe(reason => {\n        this._destroyMenu(reason);\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n          this._parentMaterialMenu.closed.emit(reason);\n        }\n      });\n    }\n    this._menuItemInstance?._setTriggersSubmenu(this.triggersSubmenu());\n  }\n  _menu;\n  /** Data to be passed along to any lazily-rendered content. */\n  menuData;\n  /**\n   * Whether focus should be restored when the menu is closed.\n   * Note that disabling this option can have accessibility implications\n   * and it's up to you to manage focus, if you decide to turn it off.\n   */\n  restoreFocus = true;\n  /** Event emitted when the associated menu is opened. */\n  menuOpened = new EventEmitter();\n  /**\n   * Event emitted when the associated menu is opened.\n   * @deprecated Switch to `menuOpened` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  onMenuOpen = this.menuOpened;\n  /** Event emitted when the associated menu is closed. */\n  menuClosed = new EventEmitter();\n  /**\n   * Event emitted when the associated menu is closed.\n   * @deprecated Switch to `menuClosed` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  onMenuClose = this.menuClosed;\n  constructor() {\n    const parentMenu = inject(MAT_MENU_PANEL, {\n      optional: true\n    });\n    const renderer = inject(Renderer2);\n    this._parentMaterialMenu = parentMenu instanceof MatMenu ? parentMenu : undefined;\n    this._cleanupTouchstart = _bindEventWithOptions(renderer, this._element.nativeElement, 'touchstart', event => {\n      if (!isFakeTouchstartFromScreenReader(event)) {\n        this._openedBy = 'touch';\n      }\n    }, passiveEventListenerOptions);\n  }\n  ngAfterContentInit() {\n    this._handleHover();\n  }\n  ngOnDestroy() {\n    if (this.menu && this._ownsMenu(this.menu)) {\n      PANELS_TO_TRIGGERS.delete(this.menu);\n    }\n    this._cleanupTouchstart();\n    this._pendingRemoval?.unsubscribe();\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n  /** Whether the menu is open. */\n  get menuOpen() {\n    return this._menuOpen;\n  }\n  /** The text direction of the containing app. */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMaterialMenu && this.menu);\n  }\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n  /** Opens the menu. */\n  openMenu() {\n    const menu = this.menu;\n    if (this._menuOpen || !menu) {\n      return;\n    }\n    this._pendingRemoval?.unsubscribe();\n    const previousTrigger = PANELS_TO_TRIGGERS.get(menu);\n    PANELS_TO_TRIGGERS.set(menu, this);\n    // If the same menu is currently attached to another trigger,\n    // we need to close it so it doesn't end up in a broken state.\n    if (previousTrigger && previousTrigger !== this) {\n      previousTrigger.closeMenu();\n    }\n    const overlayRef = this._createOverlay(menu);\n    const overlayConfig = overlayRef.getConfig();\n    const positionStrategy = overlayConfig.positionStrategy;\n    this._setPosition(menu, positionStrategy);\n    overlayConfig.hasBackdrop = menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n    // We need the `hasAttached` check for the case where the user kicked off a removal animation,\n    // but re-entered the menu. Re-attaching the same portal will trigger an error otherwise.\n    if (!overlayRef.hasAttached()) {\n      overlayRef.attach(this._getPortal(menu));\n      menu.lazyContent?.attach(this.menuData);\n    }\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n    menu.direction = this.dir;\n    menu.focusFirstItem(this._openedBy || 'program');\n    this._setIsMenuOpen(true);\n    if (menu instanceof MatMenu) {\n      menu._setIsOpen(true);\n      menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n        // Re-adjust the position without locking when the amount of items\n        // changes so that the overlay is allowed to pick a new optimal position.\n        positionStrategy.withLockedPosition(false).reapplyLastPosition();\n        positionStrategy.withLockedPosition(true);\n      });\n    }\n  }\n  /** Closes the menu. */\n  closeMenu() {\n    this.menu?.close.emit();\n  }\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n  /**\n   * Updates the position of the menu to ensure that it fits all options within the viewport.\n   */\n  updatePosition() {\n    this._overlayRef?.updatePosition();\n  }\n  /** Closes the menu and does the necessary cleanup. */\n  _destroyMenu(reason) {\n    const overlayRef = this._overlayRef;\n    const menu = this._menu;\n    if (!overlayRef || !this.menuOpen) {\n      return;\n    }\n    this._closingActionsSubscription.unsubscribe();\n    this._pendingRemoval?.unsubscribe();\n    // Note that we don't wait for the animation to finish if another trigger took\n    // over the menu, because the panel will end up empty which looks glitchy.\n    if (menu instanceof MatMenu && this._ownsMenu(menu)) {\n      this._pendingRemoval = menu._animationDone.pipe(take(1)).subscribe(() => {\n        overlayRef.detach();\n        menu.lazyContent?.detach();\n      });\n      menu._setIsOpen(false);\n    } else {\n      overlayRef.detach();\n      menu?.lazyContent?.detach();\n    }\n    if (menu && this._ownsMenu(menu)) {\n      PANELS_TO_TRIGGERS.delete(menu);\n    }\n    // Always restore focus if the user is navigating using the keyboard or the menu was opened\n    // programmatically. We don't restore for non-root triggers, because it can prevent focus\n    // from making it back to the root trigger when closing a long chain of menus by clicking\n    // on the backdrop.\n    if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n      this.focus(this._openedBy);\n    }\n    this._openedBy = undefined;\n    this._setIsMenuOpen(false);\n  }\n  // set state rather than toggle to support triggers sharing a menu\n  _setIsMenuOpen(isOpen) {\n    if (isOpen !== this._menuOpen) {\n      this._menuOpen = isOpen;\n      this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n      if (this.triggersSubmenu()) {\n        this._menuItemInstance._setHighlighted(isOpen);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  _createOverlay(menu) {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig(menu);\n      this._subscribeToPositions(menu, config.positionStrategy);\n      this._overlayRef = this._overlay.create(config);\n      this._overlayRef.keydownEvents().subscribe(event => {\n        if (this.menu instanceof MatMenu) {\n          this.menu._handleKeydown(event);\n        }\n      });\n    }\n    return this._overlayRef;\n  }\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  _getOverlayConfig(menu) {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      panelClass: menu.overlayPanelClass,\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir || 'ltr'\n    });\n  }\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  _subscribeToPositions(menu, position) {\n    if (menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        this._ngZone.run(() => {\n          const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n          const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n          menu.setPositionClasses(posX, posY);\n        });\n      });\n    }\n  }\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  _setPosition(menu, positionStrategy) {\n    let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      if (this._parentMaterialMenu) {\n        if (this._parentInnerPadding == null) {\n          const firstItem = this._parentMaterialMenu.items.first;\n          this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n        }\n        offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n      }\n    } else if (!menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  _menuClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n    const detachments = this._overlayRef.detachments();\n    const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n    const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => this._menuOpen && active !== this._menuItemInstance)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : undefined;\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    // Pressing enter on the trigger will trigger the click handler later.\n    if (keyCode === ENTER || keyCode === SPACE) {\n      this._openedBy = 'keyboard';\n    }\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n  /** Handles click events on the trigger. */\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n  /** Handles the cases where the user hovers over the trigger. */\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (this.triggersSubmenu() && this._parentMaterialMenu) {\n      this._hoverSubscription = this._parentMaterialMenu._hovered().subscribe(active => {\n        if (active === this._menuItemInstance && !active.disabled) {\n          this._openedBy = 'mouse';\n          this.openMenu();\n        }\n      });\n    }\n  }\n  /** Gets the portal that should be attached to the overlay. */\n  _getPortal(menu) {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n      this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n    }\n    return this._portal;\n  }\n  /**\n   * Determines whether the trigger owns a specific menu panel, at the current point in time.\n   * This allows us to distinguish the case where the same panel is passed into multiple triggers\n   * and multiple are open at a time.\n   */\n  _ownsMenu(menu) {\n    return PANELS_TO_TRIGGERS.get(menu) === this;\n  }\n  static ɵfac = function MatMenuTrigger_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMenuTrigger)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatMenuTrigger,\n    selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-menu-trigger\"],\n    hostVars: 3,\n    hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n          return ctx._handleMousedown($event);\n        })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-haspopup\", ctx.menu ? \"menu\" : null)(\"aria-expanded\", ctx.menuOpen)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n      }\n    },\n    inputs: {\n      _deprecatedMatMenuTriggerFor: [0, \"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n      menu: [0, \"matMenuTriggerFor\", \"menu\"],\n      menuData: [0, \"matMenuTriggerData\", \"menuData\"],\n      restoreFocus: [0, \"matMenuTriggerRestoreFocus\", \"restoreFocus\"]\n    },\n    outputs: {\n      menuOpened: \"menuOpened\",\n      onMenuOpen: \"onMenuOpen\",\n      menuClosed: \"menuClosed\",\n      onMenuClose: \"onMenuClose\"\n    },\n    exportAs: [\"matMenuTrigger\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'class': 'mat-mdc-menu-trigger',\n        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n        '[attr.aria-expanded]': 'menuOpen',\n        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n        '(click)': '_handleClick($event)',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], () => [], {\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }],\n    restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }],\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }]\n  });\n})();\nclass MatMenuModule {\n  static ɵfac = function MatMenuModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatMenuModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatMenuModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    imports: [MatRippleModule, MatCommonModule, OverlayModule, CdkScrollableModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, MatCommonModule, OverlayModule, MatMenu, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      exports: [CdkScrollableModule, MatMenu, MatCommonModule, MatMenuItem, MatMenuContent, MatMenuTrigger],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matMenuAnimations = {\n  // Represents:\n  // trigger('transformMenu', [\n  //   state(\n  //     'void',\n  //     style({\n  //       opacity: 0,\n  //       transform: 'scale(0.8)',\n  //     }),\n  //   ),\n  //   transition(\n  //     'void => enter',\n  //     animate(\n  //       '120ms cubic-bezier(0, 0, 0.2, 1)',\n  //       style({\n  //         opacity: 1,\n  //         transform: 'scale(1)',\n  //       }),\n  //     ),\n  //   ),\n  //   transition('* => void', animate('100ms 25ms linear', style({opacity: 0}))),\n  // ])\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: {\n    type: 7,\n    name: 'transformMenu',\n    definitions: [{\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          opacity: 0,\n          transform: 'scale(0.8)'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => enter',\n      animation: {\n        type: 4,\n        styles: {\n          type: 6,\n          styles: {\n            opacity: 1,\n            transform: 'scale(1)'\n          },\n          offset: null\n        },\n        timings: '120ms cubic-bezier(0, 0, 0.2, 1)'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: '* => void',\n      animation: {\n        type: 4,\n        styles: {\n          type: 6,\n          styles: {\n            opacity: 0\n          },\n          offset: null\n        },\n        timings: '100ms 25ms linear'\n      },\n      options: null\n    }],\n    options: {}\n  },\n  // Represents:\n  // trigger('fadeInItems', [\n  //   // TODO(crisbeto): this is inside the `transformMenu`\n  //   // now. Remove next time we do breaking changes.\n  //   state('showing', style({opacity: 1})),\n  //   transition('void => *', [\n  //     style({opacity: 0}),\n  //     animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n  //   ]),\n  // ])\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: {\n    type: 7,\n    name: 'fadeInItems',\n    definitions: [{\n      type: 0,\n      name: 'showing',\n      styles: {\n        type: 6,\n        styles: {\n          opacity: 1\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => *',\n      animation: [{\n        type: 6,\n        styles: {\n          opacity: 0\n        },\n        offset: null\n      }, {\n        type: 4,\n        styles: null,\n        timings: '400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'\n      }],\n      options: null\n    }],\n    options: {}\n  }\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MENU_PANEL_TOP_PADDING, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i0 from '@angular/core';\nimport { Directive, inject, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, NgModule } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { M as MatCommonModule } from './common-module-a39ee957.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarRow {\n  static ɵfac = function MatToolbarRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbarRow)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatToolbarRow,\n    selectors: [[\"mat-toolbar-row\"]],\n    hostAttrs: [1, \"mat-toolbar-row\"],\n    exportAs: [\"matToolbarRow\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      }\n    }]\n  }], null, null);\n})();\nclass MatToolbar {\n  _elementRef = inject(ElementRef);\n  _platform = inject(Platform);\n  _document = inject(DOCUMENT);\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the toolbar. This API is supported in M2 themes only, it has\n   * no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/toolbar/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Reference to all toolbar row elements that have been projected. */\n  _toolbarRows;\n  constructor() {}\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._checkToolbarMixedModes();\n      this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n  }\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  _checkToolbarMixedModes() {\n    if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      // Check if there are any other DOM nodes that can display content but aren't inside of\n      // a <mat-toolbar-row> element.\n      const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }\n  static ɵfac = function MatToolbar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbar)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatToolbar,\n    selectors: [[\"mat-toolbar\"]],\n    contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-toolbar\"],\n    hostVars: 6,\n    hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n        i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n      }\n    },\n    inputs: {\n      color: \"color\"\n    },\n    exportAs: [\"matToolbar\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatToolbar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      host: {\n        'class': 'mat-toolbar',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color, var(--mat-sys-surface));color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font, var(--mat-sys-title-large-font));font-size:var(--mat-toolbar-title-text-size, var(--mat-sys-title-large-size));line-height:var(--mat-toolbar-title-text-line-height, var(--mat-sys-title-large-line-height));font-weight:var(--mat-toolbar-title-text-weight, var(--mat-sys-title-large-weight));letter-spacing:var(--mat-toolbar-title-text-tracking, var(--mat-sys-title-large-tracking));margin:0}@media(forced-colors: active){.mat-toolbar{outline:solid 1px}}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface));--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color, var(--mat-sys-on-surface))}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height, 56px)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height, 64px)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height, 56px)}}\"]\n    }]\n  }], () => [], {\n    color: [{\n      type: Input\n    }],\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nclass MatToolbarModule {\n  static ɵfac = function MatToolbarModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatToolbarModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatToolbarModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","<mat-toolbar\n  class=\"mat-toolbar\"\n  [class.back-navigation-flex]=\"backNavigation()\"\n>\n  <div class=\"menu-logo-wrapper\" [class.back-nav-item]=\"backNavigation()\">\n    <!-- THIS IS SUSPENDED (NOT VISIBLE)IN DEMO -->\n    <!-- <button\n      type=\"button\"\n      aria-label=\"Toggle sidenav\"\n      i18n-aria-label=\"@@NavigationRail.toggleSidenav\"\n      mat-icon-button\n      (click)=\"toggleNavDrawer()\"\n      style=\"display: none\"\n    >\n      <mat-icon>menu</mat-icon>\n    </button> -->\n    <div class=\"logo\">\n      <!-- <img src=\"assets/images/text-logo-placeholder.png\" alt=\"\" /> -->\n      <!-- <img src=\"assets/images/leaf-sanare-thin-logo-2.svg\" alt=\"\" /> -->\n      @if (screenSize()?.isCompact) {\n        @if (backNavigation()) {\n          <button\n            mat-icon-button\n            matTooltip=\"Back\"\n            class=\"back-button\"\n            i18n-matTooltip=\"@@PageToolbar.backBtnTooltip\"\n            aria-label=\"Arrow back icon button\"\n            i18n-aria-label=\"@@PageToolbar.backButtonAriaLabel\"\n            (click)=\"onBack()\"\n          >\n            <mat-icon>arrow_back</mat-icon>\n          </button>\n        } @else {\n          <img src=\"assets/images/leaf-img.svg\" alt=\"\" />\n        }\n      } @else {\n        @if (isDark()) {\n          <img\n            src=\"assets/images/leaf-sanare-thin-dark-logo-2-DEMO.svg\"\n            alt=\"\"\n          />\n        } @else {\n          <img\n            src=\"assets/images/leaf-sanare-thin-light-logo-2-DEMO.svg\"\n            alt=\"\"\n          />\n        }\n      }\n    </div>\n  </div>\n  @if (screenSize()?.isCompact) {\n    <span class=\"page-title mat-headline-small\">{{ pageTitle() }}</span>\n  }\n  <div\n    [class.toolbar-buttons-container]=\"profileThumbnail()\"\n    [class.back-nav-margin]=\"backNavigation()\"\n  >\n    @if (screenSize()?.isCompact === false) {\n      <button\n        mat-icon-button\n        matTooltip=\"Settings\"\n        routerLink=\"/settings\"\n        i18n-matTooltip=\"@@NavigationRail.settings\"\n        aria-label=\"Settings icon-button\"\n        i18n-aria-label=\"@@NavigationRail.settingsAriaLabel\"\n      >\n        <mat-icon>settings</mat-icon>\n      </button>\n    }\n    @if (profileThumbnail()) {\n      <button [matMenuTriggerFor]=\"menu\" class=\"circle-thumbnail\">\n        <img [src]=\"profileThumbnail()\" alt=\"Thumbnail\" class=\"thumbnail-img\" />\n      </button>\n    } @else {\n      <button\n        mat-icon-button\n        [matMenuTriggerFor]=\"menu\"\n        matTooltip=\"Profile\"\n        i18n-matTooltip=\"@@NavigationRail.profile\"\n        aria-label=\"User icon-button with a menu\"\n        i18n-aria-label=\"@@NavigationRail.profileAriaLabel\"\n      >\n        @if (screenSize()?.isCompact) {\n          <mat-icon>more_vert</mat-icon>\n        } @else {\n          <mat-icon>person</mat-icon>\n        }\n      </button>\n    }\n    <mat-menu #menu=\"matMenu\">\n      <div class=\"menu-username\">\n        <span class=\"circle\">\n          {{ getInitial(userName()) }}\n        </span>\n        <span class=\"mat-title-small\">{{ userName() }}</span>\n      </div>\n      @if (screenSize()?.isCompact) {\n        <button mat-menu-item routerLink=\"/settings\" style=\"min-width: 200px\">\n          <mat-icon>settings</mat-icon>\n          <span i18n=\"@@NavigationRail.settings\">Settings</span>\n        </button>\n      }\n      <button mat-menu-item routerLink=\"/profile\" style=\"min-width: 200px\">\n        <mat-icon>account_circle</mat-icon>\n        <span i18n=\"@@NavigationRail.profileMenuItem\">Profile</span>\n      </button>\n      <!-- <button mat-menu-item disabled>\n    <mat-icon>edit</mat-icon>\n    <span>Edit profile</span>\n    </button> -->\n      <button mat-menu-item (click)=\"logoutUser()\">\n        <mat-icon>logout</mat-icon>\n        <span i18n=\"@@NavigationRail.logoutMenuItem\">Logout</span>\n      </button>\n    </mat-menu>\n  </div>\n</mat-toolbar>\n","import { Component, inject } from '@angular/core';\nimport { CommonModule, Location } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AuthService, UsersService } from '@slowautomobile/users';\nimport { Router, RouterLink } from '@angular/router';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { ActivePageService } from '../../services/active-page.service';\nimport { ScreenSizeService } from '../../services/screen-size.service';\n\n@Component({\n  selector: 'ui-toolbar-buttons',\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    RouterLink,\n  ],\n  templateUrl: './toolbar-buttons.component.html',\n  styleUrl: './toolbar-buttons.component.scss',\n})\nexport class ToolbarButtonsComponent {\n  private usersService = inject(UsersService);\n  private authService = inject(AuthService);\n  themeManager = inject(ThemeManagerService);\n  private activePageTitle = inject(ActivePageService);\n  private location = inject(Location);\n  private router = inject(Router);\n  private screenSizeService = inject(ScreenSizeService);\n\n  // @Input() pageTitle?: string;\n  screenSize = this.screenSizeService.screenSize;\n  pageTitle = this.activePageTitle.pageTitle;\n  backNavigation = this.activePageTitle.backNavigation;\n\n  isDark = this.themeManager.isDark;\n  userName = this.usersService.userName;\n  profileThumbnail = this.usersService.profileThumbnail;\n\n  getInitial(name: string): string {\n    return name.trim().charAt(0).toUpperCase();\n  }\n\n  onBack() {\n    // this.location.back();\n    this.router.navigateByUrl('/');\n  }\n\n  logoutUser() {\n    this.authService.logout();\n  }\n}\n","<div class=\"favorite-programs-container\">\n  <h3\n    class=\"mat-title-medium-margin-plus\"\n    i18n=\"@@Dashboard.favoriteProgramsTitle\"\n  >\n    Favorite programs\n  </h3>\n  <div\n    class=\"list-container\"\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n  >\n    <div>\n      <mat-list>\n        @for (program of favoritePrograms(); track program.id) {\n          <div class=\"list-item-wrapper\">\n            <mat-list-item>\n              <mat-icon matListItemIcon>\n                @if (program.isAdminProgram) {\n                  <div\n                    class=\"template-icon\"\n                    matTooltip=\"Default program\"\n                    i18n-matTooltip=\"@@ProgramsList.defaultProgramTooltip\"\n                  >\n                    <img width=\"16\" src=\"assets/images/leaf-img.svg\" alt=\"\" />\n                  </div>\n                } @else {\n                  <div\n                    class=\"template-icon\"\n                    matTooltip=\"User's program\"\n                    i18n-matTooltip=\"@@ProgramsList.UsersProgramTooltip\"\n                  >\n                    <img\n                      width=\"14\"\n                      src=\"assets/images/blue-user-icon.svg\"\n                      alt=\"\"\n                    />\n                  </div>\n                }\n              </mat-icon>\n              <p class=\"list-title\" matListItemTitle>\n                {{ program.name }}\n              </p>\n            </mat-list-item>\n            @if (!program.isAdminProgram || isAdmin()) {\n              <button\n                mat-icon-button\n                matTooltip=\"Edit\"\n                i18n-matTooltip=\"@@ProgramsList.editProgramTooltip\"\n                aria-label=\"Edit icon button\"\n                i18n-aria-label=\"@@ProgramsList.editProgramAriaLabel\"\n                (click)=\"openEditProgram(program)\"\n              >\n                <mat-icon>edit</mat-icon>\n              </button>\n            }\n            <button\n              mat-icon-button\n              matTooltip=\"Add to client\"\n              i18n-matTooltip=\"@@ProgramsList.addToClientTooltip\"\n              aria-label=\"Add to client icon button\"\n              i18n-aria-label=\"@@ProgramsList.addToClientAriaLabel\"\n              (click)=\"reuseEditProgram(program)\"\n            >\n              <mat-icon>person_add</mat-icon>\n            </button>\n          </div>\n        }\n      </mat-list>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  OnInit,\n  output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { Program } from '@slowautomobile/exercises';\n\n@Component({\n  selector: 'ui-favorite-programs',\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatTooltipModule,\n    OverlayscrollbarsModule,\n  ],\n  templateUrl: './favorite-programs.component.html',\n  styleUrl: './favorite-programs.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FavoriteProgramsComponent implements OnInit {\n  readonly isAdmin = input<boolean>();\n  readonly themeSignal = input<any>();\n  readonly favoritePrograms = input<any[]>();\n\n  readonly reuseEditProgramEvent = output<Program>();\n  readonly openEditProgramEvent = output<Program>();\n\n  ngOnInit(): void {}\n\n  reuseEditProgram(program: Program) {\n    this.reuseEditProgramEvent.emit(program);\n  }\n\n  openEditProgram(program: Program) {\n    this.openEditProgramEvent.emit(program);\n  }\n}\n","<div class=\"favorite-exercises-container\">\n  <h3\n    class=\"mat-title-medium-margin-plus\"\n    i18n=\"@@Dashboard.favoriteExercisesTitle\"\n  >\n    Favorite exercises\n  </h3>\n\n  <div\n    class=\"scroll-list-container\"\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n  >\n    <div>\n      <div class=\"dash-grid-container\">\n        @for (exercise of favoriteExercises(); track exercise.id) {\n          <div\n            matRipple\n            class=\"grid-item\"\n            (mouseenter)=\"videoPlayer.onMouseEnter()\"\n            (mouseleave)=\"videoPlayer.onMouseLeave()\"\n            (click)=\"viewExercise(exercise.id)\"\n          >\n            <div class=\"video-container\">\n              <ui-video-player\n                #videoPlayer\n                [videoSrc]=\"exercise.video\"\n                [thumbnail]=\"exercise.images?.mainImg[0]\"\n                [isModal]=\"false\"\n                [isDash]=\"true\"\n              />\n            </div>\n            <div class=\"exercise-name mat-body-medium\">\n              {{ exercise.name[selectedLanguage] }}\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  input,\n  OnInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoPlayerComponent } from '../video-player/video-player.component';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LocalstorageService } from '@slowautomobile/users';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ui-favorite-exercises',\n  imports: [\n    CommonModule,\n    VideoPlayerComponent,\n    OverlayscrollbarsModule,\n    MatRippleModule,\n  ],\n  templateUrl: './favorite-exercises.component.html',\n  styleUrl: './favorite-exercises.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FavoriteExercisesComponent implements OnInit {\n  private router = inject(Router);\n  private localstorageService = inject(LocalstorageService);\n\n  readonly favoriteExercises = input<any[]>();\n  readonly themeSignal = input<any>();\n\n  selectedLanguage!: 'en' | 'de' | 'sr';\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n  }\n\n  viewExercise(exerciseId: string) {\n    this.router.navigate(['/exercise', exerciseId]);\n  }\n}\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'slowautomobile-spinner',\n  imports: [CommonModule, MatProgressSpinnerModule],\n  template: `\n    <div class=\"spinner-container\">\n      <mat-spinner diameter=\"50\"></mat-spinner>\n    </div>\n  `,\n  styles: [\n    `\n      .spinner-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class SpinnerComponent {}\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  imports: [CommonModule],\n  template: ` <div class=\"overlay-placeholder\"></div>`,\n  styles: [\n    `\n      .overlay-placeholder {\n        width: 100vw;\n        height: 100vh;\n        pointer-events: auto;\n        background-color: transparent;\n      }\n    `,\n  ],\n})\nexport class BlankOverlayComponent {}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Exercise } from '../models/exercise';\nimport { Muscle } from '../models/muscle';\nimport { BodyArea } from '../models/bodyArea';\nimport { Movement } from '../models/movement';\nimport { StartingPosition } from '../models/startingPosition';\nimport { Equipment } from '../models/equipment';\nimport { environment } from '@env/environment';\nimport { LoadingOverlayService } from '@slowautomobile/ui';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExercisesService {\n  private http = inject(HttpClient);\n  private loadingOverlayService = inject(LoadingOverlayService);\n\n  apiURLExercises = environment.apiURL + 'exercises';\n  apiURLMuscles = environment.apiURL + 'muscles';\n  apiURLBodyAreas = environment.apiURL + 'bodyareas';\n  apiURLMovements = environment.apiURL + 'movements';\n  apiURLStartingPositions = environment.apiURL + 'startingpositions';\n  apiURLEquipments = environment.apiURL + 'equipments';\n\n  getExercises(): Observable<Exercise[]> {\n    return this.http.get<Exercise[]>(this.apiURLExercises);\n  }\n\n  getExercise(exerciseId: string): Observable<Exercise> {\n    // const options = { headers: headers };\n\n    return this.http.get<Exercise>(\n      `${this.apiURLExercises}/${exerciseId}`\n    );\n  }\n\n  createExercise(exerciseData: FormData): Observable<Exercise> {\n    return this.http.post<Exercise>(this.apiURLExercises, exerciseData);\n  }\n\n  updateExercise(\n    exerciseData: FormData,\n    exerciseId: string\n  ): Observable<Exercise> {\n    return this.http.put<Exercise>(\n      `${this.apiURLExercises}/${exerciseId}`,\n      exerciseData\n    );\n  }\n\n  deleteExercise(exerciseId: string): Observable<Exercise> {\n    return this.http.delete<Exercise>(`${this.apiURLExercises}/${exerciseId}`);\n  }\n\n  getMuscles(): Observable<Muscle[]> {\n    return this.http.get<Muscle[]>(this.apiURLMuscles);\n  }\n\n  createMuscle(muscle: Muscle) {\n    return this.http.post(this.apiURLMuscles, muscle);\n  }\n\n  getBodyAreas(): Observable<BodyArea[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<BodyArea[]>(this.apiURLBodyAreas);\n  }\n\n  createBodyArea(bodyArea: BodyArea) {\n    return this.http.post(this.apiURLBodyAreas, bodyArea);\n  }\n\n  getMovements(): Observable<Movement[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<Movement[]>(this.apiURLMovements);\n  }\n\n  createMovement(movement: Movement) {\n    return this.http.post(this.apiURLMovements, movement);\n  }\n\n  getStartingPositions(): Observable<StartingPosition[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<StartingPosition[]>(\n      this.apiURLStartingPositions\n    );\n  }\n\n  createStartingPosition(startingPosition: StartingPosition) {\n    return this.http.post(this.apiURLStartingPositions, startingPosition);\n  }\n\n  getEquipments(): Observable<Equipment[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<Equipment[]>(this.apiURLEquipments);\n  }\n\n  createEquipment(equipment: Equipment) {\n    return this.http.post(this.apiURLEquipments, equipment);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { Muscle } from '../../models/muscle';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MusclesService {\n  private http = inject(HttpClient);\n\n  apiURLMuscles = environment.apiURL + 'muscles';\n\n  getMuscles(): Observable<Muscle[]> {\n    return this.http.get<Muscle[]>(this.apiURLMuscles);\n  }\n\n  getMuscle(muscleId: string): Observable<Muscle> {\n    return this.http.get<Muscle>(`${this.apiURLMuscles}/${muscleId}`);\n  }\n\n  createMuscle(muscle: Muscle) {\n    return this.http.post(this.apiURLMuscles, muscle);\n  }\n\n  updateMuscle(muscle: Muscle): Observable<Muscle> {\n    return this.http.put<Muscle>(`${this.apiURLMuscles}/${muscle.id}`, muscle);\n  }\n\n  deleteMuscle(muscleId: string): Observable<Muscle> {\n    return this.http.delete<Muscle>(`${this.apiURLMuscles}/${muscleId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { BodyArea } from '../../models/bodyArea';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BodyAreasService {\n  private http = inject(HttpClient);\n\n  apiURLBodyAreas = environment.apiURL + 'bodyareas';\n\n  getBodyAreas(): Observable<BodyArea[]> {\n    return this.http.get<BodyArea[]>(this.apiURLBodyAreas);\n  }\n\n  getBodyArea(bodyAreaId: string): Observable<BodyArea> {\n    return this.http.get<BodyArea>(`${this.apiURLBodyAreas}/${bodyAreaId}`);\n  }\n\n  createBodyArea(bodyArea: BodyArea) {\n    return this.http.post(this.apiURLBodyAreas, bodyArea);\n  }\n\n  updateBodyArea(bodyArea: BodyArea): Observable<BodyArea> {\n    return this.http.put<BodyArea>(`${this.apiURLBodyAreas}/${bodyArea.id}`, bodyArea);\n  }\n\n  deleteBodyArea(bodyAreaId: string): Observable<BodyArea> {\n    return this.http.delete<BodyArea>(`${this.apiURLBodyAreas}/${bodyAreaId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { Movement } from '../../models/movement';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovementsService {\n  private http = inject(HttpClient);\n\n  apiURLMovements = environment.apiURL + 'movements';\n\n  getMovements(): Observable<Movement[]> {\n    return this.http.get<Movement[]>(this.apiURLMovements);\n  }\n\n  getMovement(movementId: string): Observable<Movement> {\n    return this.http.get<Movement>(`${this.apiURLMovements}/${movementId}`);\n  }\n\n  createMovement(movement: Movement) {\n    return this.http.post(this.apiURLMovements, movement);\n  }\n\n  updateMovement(movement: Movement): Observable<Movement> {\n    return this.http.put<Movement>(\n      `${this.apiURLMovements}/${movement.id}`,\n      movement\n    );\n  }\n\n  deleteMovement(movementId: string): Observable<Movement> {\n    return this.http.delete<Movement>(`${this.apiURLMovements}/${movementId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { StartingPosition } from '../../models/startingPosition';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StartingPositionsService {\n  private http = inject(HttpClient);\n\n  apiURLStartingPositions = environment.apiURL + 'startingpositions';\n\n  getStartingPositions(): Observable<StartingPosition[]> {\n    return this.http.get<StartingPosition[]>(this.apiURLStartingPositions);\n  }\n\n  getStartingPosition(startingPositionId: string): Observable<StartingPosition> {\n    return this.http.get<StartingPosition>(`${this.apiURLStartingPositions}/${startingPositionId}`);\n  }\n\n  createStartingPosition(startingPosition: StartingPosition) {\n    return this.http.post(this.apiURLStartingPositions, startingPosition);\n  }\n\n  updateStartingPosition(startingPosition: StartingPosition): Observable<StartingPosition> {\n    return this.http.put<StartingPosition>(\n      `${this.apiURLStartingPositions}/${startingPosition.id}`,\n      startingPosition\n    );\n  }\n\n  deleteStartingPosition(startingPositionId: string): Observable<StartingPosition> {\n    return this.http.delete<StartingPosition>(`${this.apiURLStartingPositions}/${startingPositionId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { Equipment } from '../../models/equipment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EquipmentService {\n  private http = inject(HttpClient);\n\n  apiURLEquipments = environment.apiURL + 'equipments';\n\n  getEquipments(): Observable<Equipment[]> {\n    return this.http.get<Equipment[]>(this.apiURLEquipments);\n  }\n\n  getEquipment(equipmentId: string): Observable<Equipment> {\n    return this.http.get<Equipment>(`${this.apiURLEquipments}/${equipmentId}`);\n  }\n\n  createEquipment(equipment: Equipment) {\n    return this.http.post(this.apiURLEquipments, equipment);\n  }\n\n  updateEquipment(equipment: Equipment): Observable<Equipment> {\n    return this.http.put<Equipment>(\n      `${this.apiURLEquipments}/${equipment.id}`,\n      equipment\n    );\n  }\n\n  deleteEquipment(equipmentId: string): Observable<Equipment> {\n    return this.http.delete<Equipment>(`${this.apiURLEquipments}/${equipmentId}`);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'languageName',\n    standalone: true,\n})\nexport class LanguageNamePipe implements PipeTransform {\n  transform(languageCode: string): string {\n    const languageMap: {[key:string]: string} = {\n      en: 'English',\n      de: 'Deutsch',\n      sr: 'Srpski'\n    };\n\n    return languageMap[languageCode] || languageCode;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Exercise } from '../models/exercise';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  private http = inject(HttpClient);\n\n  apiURLSearch = environment.apiURL + 'search';\n\n  searchExercises(\n    searchTerm: string,\n    filters: any,\n    langCode: string,\n  ): Observable<Exercise[]> {\n    const requstBody = {\n      searchTerm: searchTerm,\n      filters: filters,\n    };\n\n    const params = {\n      langCode: langCode,\n    };\n\n    return this.http.post<Exercise[]>(this.apiURLSearch, requstBody, {\n      params,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Exercise } from '../models/exercise';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShareDataService {\n  private data$ = new BehaviorSubject<Exercise[]>([]);\n  searchedData$ = this.data$.asObservable();\n\n  private data2$ = new BehaviorSubject<Exercise[]>([]);\n  filterData$: Observable<Exercise[]> | [] = this.data2$.asObservable();\n\n  // private data3$ = new BehaviorSubject<boolean>(false);\n  // toggleDrawerSignal$: Observable<boolean> = this.data3$.asObservable();\n\n  constructor() {}\n\n  updateSearchResults(data: Exercise[]) {\n    this.data$.next(data);\n  }\n\n  updateFilterResults(data2: any) {\n    this.data2$.next(data2);\n  }\n\n  // updateToggleDrawerResults(data3: any) {\n  //   this.data3$.next(data3);\n  // }\n}\n","import { Injectable, inject, signal } from '@angular/core';\nimport { ShareDataService } from './share-data.service';\n\ninterface DataItem {\n  name: string | undefined;\n  localeNames: string[];\n  values: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddRemoveDataService {\n  private sharedDataService = inject(ShareDataService);\n\n  // private data: DataItem[] = [];\n  public dataSignal = signal<DataItem[]>([]);\n\n  addDataItem(\n    name: string | undefined,\n    value: string,\n    localeName: string,\n  ): void {\n    const itemIndex = this.dataSignal().findIndex(item => item.name === name);\n    console.log(name, value);\n    if (itemIndex !== -1) {\n      // If the item already exists, add the value to its array\n      this.dataSignal.update(data => {\n        const updatedData = [...data];\n        updatedData[itemIndex].values.push(value);\n        updatedData[itemIndex].localeNames.push(localeName);\n\n        console.log('when updateng: ', data === updatedData);\n        return updatedData;\n      });\n      console.log(this.dataSignal());\n      // this.data[itemIndex].values.push(value);\n      // this.data[itemIndex].localeNames.push(localeName);\n    } else {\n      // If the item does not exist, create a new one\n      this.dataSignal.update(data => {\n        const updatedData = [...data];\n        console.log('when adding new: ', data === updatedData);\n\n        updatedData.push({ name, values: [value], localeNames: [localeName] });\n        return updatedData;\n      });\n      console.log(this.dataSignal());\n    }\n    this.sharedDataService.updateFilterResults(this.dataSignal());\n  }\n\n  removeDataItem(\n    name: string | undefined,\n    value: string,\n    localeName: string,\n  ): void {\n    const itemIndex = this.dataSignal().findIndex(item => item.name === name);\n\n    if (itemIndex !== -1) {\n      // If the item exists, remove the value from its array\n      this.dataSignal.update(data => {\n        const updatedData = [...data];\n        console.log('this is updated before removal: ', updatedData);\n\n        // Update latin name(value)\n        updatedData[itemIndex].values = updatedData[itemIndex].values.filter(\n          (v: any) => v !== value,\n        );\n\n        console.log('this is updated after removal: ', updatedData);\n\n        // Update locale name(localeName)\n        updatedData[itemIndex].localeNames = updatedData[\n          itemIndex\n        ].localeNames.filter((v: any) => v !== localeName);\n\n        return updatedData;\n      });\n\n      // Remove the entire item if the values array is empty\n      if (this.dataSignal()[itemIndex].values.length === 0) {\n        this.dataSignal.update(data => {\n          const updatedData = [...data];\n\n          updatedData.splice(itemIndex, 1);\n\n          return updatedData;\n        });\n      }\n    }\n    this.sharedDataService.updateFilterResults(this.dataSignal());\n  }\n\n  // getData(): DataItem[] {\n  //   return this.data;\n  // }\n\n  resetAll(): void {\n    this.dataSignal.set([]);\n    this.sharedDataService.updateFilterResults(this.dataSignal());\n  }\n}\n","import { Injectable, signal } from '@angular/core';\n\ntype ListOption = 'all' | 'selected' | 'favorite';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShareStateService {\n  // Manage drawer state with signal\n  drawerSignal = signal<boolean>(false);\n\n  listOption = signal<ListOption>('all');\n\n  isFetchingData = signal<boolean>(false);\n\n  isLoading = signal<boolean>(false);\n\n  constructor() {}\n}\n","import { Injectable, signal } from '@angular/core';\nimport { Exercise } from '../models/exercise';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectedExercisesService {\n  selectedExercises = signal<Exercise[]>([]);\n\n  // Add exercise to selected list\n  addToSelected(exercise: Exercise): void {\n    console.log(exercise);\n    // Check if exercise is already in the list\n    const index = this.selectedExercises().findIndex(\n      selectedExercise => selectedExercise.id === exercise.id,\n    );\n\n    // Not already in the list, so add it\n    if (index === -1) {\n      exercise.isSelected = true;\n      exercise.reps = 10;\n      exercise.sets = 3;\n      exercise.pause = '1min';\n      exercise.weight = '';\n      this.selectedExercises.update(selectedExercises => [\n        ...selectedExercises,\n        exercise,\n      ]);\n    }\n  }\n\n  removeFromSelected(exercise: Exercise): void {\n    exercise.isSelected = false;\n    this.selectedExercises.update(selectedExercises =>\n      selectedExercises.filter(\n        selectedExercise => selectedExercise.id !== exercise.id,\n      ),\n    );\n  }\n\n  // updateInSelected(exercise: Exercise): void {\n  //   exercise.isSelected = true;\n  //   this.selectedExercises.update(selectedExercises =>\n  //     selectedExercises.map(selectedExercise =>\n  //       selectedExercise.id === exercise.id\n  //         ? (selectedExercise = exercise)\n  //         : selectedExercise,\n  //     ),\n  //   );\n  // }\n}\n","import { Injectable, signal } from '@angular/core';\nimport { Program } from '../../models/program';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramDataService {\n  programData = signal<Program>({ name: '', notes: '' });\n\n  programId = signal<string>('');\n\n  programName = signal<string>('');\n\n  constructor() {}\n}\n","import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramClientsDataService {\n  programClientsData = signal<any>({ selectedClients: [], dateRange: '' });\n\n  constructor() {}\n}\n","import { Injectable, inject, signal } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Program } from '../../models/program';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramsService {\n  private http = inject(HttpClient);\n\n  apiURLPrograms = environment.apiURL + 'programs';\n\n  getPrograms(): Observable<Program[]> {\n    return this.http.get<Program[]>(this.apiURLPrograms);\n  }\n\n  getProgram(programId: string, showSpinner?: boolean): Observable<Program> {\n    const options: { headers?: HttpHeaders } = {};\n\n    if (showSpinner) {\n      options.headers = new HttpHeaders().set('x-show-spinner', 'true');\n    }\n\n    return this.http.get<Program>(`${this.apiURLPrograms}/${programId}`,options);\n  }\n\n  createProgram(programData: Program): Observable<Program> {\n    return this.http.post<Program>(this.apiURLPrograms, programData);\n  }\n\n  updateProgram(programData: Program, programId: string): Observable<Program> {\n    return this.http.put<Program>(\n      `${this.apiURLPrograms}/${programId}`,\n      programData,\n    );\n  }\n\n  deleteProgram(programId: string): Observable<Program> {\n    return this.http.delete<Program>(`${this.apiURLPrograms}/${programId}`);\n  }\n\n  isAdminProgram = signal<boolean>(false);\n}\n","import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsClientValidService {\n  isClientValid = signal<boolean>(false);\n\n  constructor() {}\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Client } from '../../models/client';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Program } from '../../models/program';\nimport { getHeadersWithSpinner } from '@slowautomobile/ui';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientsService {\n  private http = inject(HttpClient);\n\n  apiURLClients = environment.apiURL + 'clients';\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(this.apiURLClients);\n  }\n\n  getClientsBasic(): Observable<Client[]> {\n    return this.http.get<Client[]>(`${this.apiURLClients}/basic`);\n  }\n\n  getClient(clientId: string): Observable<Client> {\n    return this.http.get<Client>(`${this.apiURLClients}/${clientId}`);\n  }\n\n  createClient(clientData: Client): Observable<Client> {\n    return this.http.post<Client>(this.apiURLClients, clientData);\n  }\n\n  updateClient(\n    clientData: Client,\n    clientId: string,\n    showSpinner?: boolean,\n  ): Observable<Client> {\n    const options: { headers?: HttpHeaders } = {};\n\n    if (showSpinner) {\n      options.headers = new HttpHeaders().set('x-show-spinner', 'true');\n    }\n\n    return this.http.put<Client>(\n      `${this.apiURLClients}/${clientId}`,\n      clientData,\n      // {\n      //   headers: \n      // },\n      options,\n    );\n  }\n\n  deleteClient(clientId: string): Observable<Client> {\n    return this.http.delete<Client>(`${this.apiURLClients}/${clientId}`);\n  }\n\n  getClientProgram(programId: string): Observable<Program> {\n    return this.http.get<Program>(`${this.apiURLClients}/program/${programId}`);\n  }\n\n  getAllClientsPrograms(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiURLClients}/programs/all`);\n  }\n\n  getAllClientsProgramsBasic(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiURLClients}/programs/all/basic`);\n  }\n\n  updateClientProgram(\n    clientId: string,\n    updatedProgram: any,\n    programPosition: number,\n  ): Observable<any> {\n    // Pass program position using URL params\n    const positionParam = programPosition;\n    return this.http.put<any>(\n      `${this.apiURLClients}/program/${clientId}?pos=${positionParam}`,\n      updatedProgram,\n    );\n  }\n\n  deleteClientProgram(\n    clientId: string,\n    programPosition: number,\n  ): Observable<any> {\n    // Pass program position using URL params\n    const positionParam = programPosition;\n    return this.http.delete<any>(\n      `${this.apiURLClients}/program/${clientId}?pos=${positionParam}`,\n    );\n  }\n}\n","import { Injectable, signal } from '@angular/core';\n\nexport interface ClientInfo {\n  clientId: string;\n  clientName: string;\n  programPosition: number;\n  programId: string;\n  programName: string;\n  dateRange: {\n    start: string;\n    end: string;\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShareClientsDataService {\n  clients = signal<any[]>([]);\n\n  isClientProgram = signal<boolean>(false);\n\n  clientInfo = signal<ClientInfo>({\n    clientId: '',\n    clientName: '',\n    programPosition: 0,\n    programId: '',\n    programName: '',\n    dateRange: { start: '', end: '' },\n  });\n\n  reuseProgram = signal<boolean>(false);\n\n  // Use this signal to control new program component, so that it automatically set client, but leave all other fields empty\n  // IMPLEMENT THIS !!!!!\n  isBrandNewClientsProgram = signal<boolean>(false);\n}\n","import { Injectable, signal } from '@angular/core';\nimport { Exercise } from '../models/exercise';\n\n@Injectable({ providedIn: 'root' })\nexport class DropListTransferItemService {\n  transferringItem = signal<Exercise | undefined>(undefined);\n}\n","<!-- <div class=\"custom-modal\"> -->\n<div class=\"confirmation-dialog-wrapper\">\n  <div\n    class=\"title-wrapper\"\n    [ngClass]=\"{ 'program-exercise': data.isProgramExercise }\"\n  >\n    @if (data.isProgramExercise) {\n      <button\n        mat-icon-button\n        matTooltip=\"Back to programs\"\n        i18n-matTooltip=\"@@ExerciseModal.backToProgramsTooltip\"\n        aria-label=\"Arrow back icon-button\"\n        i18n-aria-label=\"@@ExerciseModal.backToProgramsAriaLabel\"\n        mat-dialog-close\n      >\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n    }\n    @if (!data.isProgramExercise) {\n      <h1\n        mat-dialog-title\n        class=\"mat-title-large\"\n        i18n=\"@@ExerciseModal.exerciseDetails\"\n      >\n        Exercise details\n      </h1>\n      <button\n        mat-icon-button\n        mat-dialog-close\n        aria-label=\"Icon button with a close icon\"\n        i18n-aria-label=\"@@ExerciseModal.closeModalIconAriaLabel\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    }\n  </div>\n  <div\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n    class=\"dialog-content-wrapper\"\n    [ngClass]=\"{ 'program-exercise': data.isProgramExercise }\"\n  >\n    <div class=\"modal-img-wrapper\">\n      <!-- <img class=\"modal-img\" [src]=\"data.fullExercise.images?.mainImg\" /> -->\n      <ui-video-player\n      [videoSrc]=\"data.fullExercise.video\"\n      [thumbnail]=\"data.fullExercise.images?.mainImg\"\n    />\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.exerciseName\" class=\"label\"\n        >Exercise name:\n      </span>\n      <span class=\"category-value\">{{\n        data.fullExercise.name[selectedLang]\n      }}</span>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.exerciseDescription\" class=\"label\"\n        >Description:\n      </span>\n      <span class=\"category-value\">{{\n        data.fullExercise.description[selectedLang]\n      }}</span>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.muscles\" class=\"label\">Muscles: </span>\n      <mat-chip-set>\n        @for (muscle of data.fullExercise.muscles; track muscle) {\n          <mat-chip class=\"chips-category\">{{ muscle }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.bodyAreas\" class=\"label\">Body areas: </span>\n      <mat-chip-set>\n        @for (bodyArea of data.fullExercise.bodyAreas; track bodyArea) {\n          <mat-chip class=\"chips-category\">{{\n            bodyArea.translations?.[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.movements\" class=\"label\">Movements: </span>\n      <mat-chip-set>\n        @for (movement of data.fullExercise.movements; track movement) {\n          <mat-chip class=\"chips-category\">{{\n            movement.translations?.[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.startingPositions\" class=\"label\"\n        >Starting positions:\n      </span>\n      <mat-chip-set>\n        @for (\n          startingPosition of data.fullExercise.startingPositions;\n          track startingPosition\n        ) {\n          <mat-chip class=\"chips-category\">{{\n            startingPosition.translations?.[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.equipment\" class=\"label\">Equipment: </span>\n      <mat-chip-set>\n        @for (equipment of data.fullExercise.equipments; track equipment) {\n          <mat-chip class=\"chips-category\">{{\n            equipment.translations[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n  </div>\n  @if (!data.isProgramExercise) {\n    <mat-dialog-actions class=\"exercise-modal-actions\">\n      @if (data.exerciseCard.isSelected) {\n        <button\n          (click)=\"removeFromSelected(data.exerciseCard)\"\n          (mouseenter)=\"showHoverIcon(true)\"\n          (mouseleave)=\"showHoverIcon(false)\"\n          mat-fab\n          [color]=\"isHovered ? 'warn' : 'primary'\"\n          matTooltip=\"Remove exercise\"\n          i18n-matTooltip=\"@@ExerciseModal.removeExerciseTooltip\"\n          aria-label=\"Remove icon-button with a close icon\"\n          i18n-aria-label=\"@@ExerciseModal.removeExerciseAriaLabel\"\n        >\n          <mat-icon>{{ isHovered ? 'close' : 'done' }}</mat-icon>\n        </button>\n      } @else {\n        <button\n          (click)=\"addToSelected(data.exerciseCard)\"\n          mat-fab\n          matTooltip=\"Add exercise\"\n          i18n-matTooltip=\"@@ExerciseModal.addExerciseTooltip\"\n          color=\"primary\"\n          aria-label=\"Add icon button with a add icon\"\n          i18n-aria-label=\"@@ExerciseModal.addExerciseAriaLabel\"\n        >\n          <mat-icon>add</mat-icon>\n        </button>\n        <!-- <mat-chip-option color=\"primary\"\n                  ><mat-icon>add</mat-icon></mat-chip-option\n                > -->\n      }\n    </mat-dialog-actions>\n  } @else {\n    <mat-dialog-actions></mat-dialog-actions>\n  }\n</div>\n<!-- </div> -->\n","import { Component, inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogClose,\n  MatDialogTitle,\n  MatDialogActions,\n} from '@angular/material/dialog';\nimport { Exercise } from '../../models/exercise';\nimport { SelectedExercisesService } from '../../services/selected-exercises.service';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ThemeManagerService, VideoPlayerComponent } from '@slowautomobile/ui';\nimport { MatChipSet, MatChip } from '@angular/material/chips';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton, MatFabButton } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\n\nexport interface DialogData {\n  fullExercise: Exercise;\n  exerciseCard: Exercise;\n  isProgramExercise: boolean;\n  selectedLang: 'en' | 'de' | 'sr';\n}\n\n@Component({\n    selector: 'exercises-single-modal',\n    templateUrl: './exercise-modal.component.html',\n    imports: [\n        NgClass,\n        MatIconButton,\n        MatTooltip,\n        MatDialogClose,\n        MatIcon,\n        MatDialogTitle,\n        OverlayscrollbarsModule,\n        MatChipSet,\n        MatChip,\n        MatDialogActions,\n        MatFabButton,\n        VideoPlayerComponent\n    ]\n})\nexport class ExerciseModalComponent {\n  data = inject<DialogData>(MAT_DIALOG_DATA);\n  private selectedExercisesService = inject(SelectedExercisesService);\n  themeManager = inject(ThemeManagerService);\n\n  selectedLang: 'en' | 'de' | 'sr' = this.data.selectedLang;\n  themeSignal = this.themeManager.themeSignal;\n  isHovered = false;\n\n  addToSelected(exercise: Exercise) {\n    this.selectedExercisesService.addToSelected(exercise);\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  removeFromSelected(exercise: Exercise) {\n    this.selectedExercisesService.removeFromSelected(exercise);\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  showHoverIcon(isHovered: boolean): void {\n    this.isHovered = isHovered;\n    // console.log(isHovered)\n  }\n}\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, NgZone, RendererFactory2, Injectable, InjectionToken, ElementRef, booleanAttribute, Directive, Input, ViewContainerRef, ChangeDetectorRef, EventEmitter, Injector, afterNextRender, numberAttribute, Output, TemplateRef, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { _ as _getEventTarget, a as _getShadowRoot } from './shadow-dom-9f403d00.mjs';\nimport { a as isFakeTouchstartFromScreenReader, i as isFakeMousedownFromScreenReader } from './fake-event-detection-7055b1bd.mjs';\nimport { c as coerceElement, a as coerceNumberProperty } from './element-705567fe.mjs';\nimport { _ as _bindEventWithOptions } from './backwards-compatibility-bcbe473e.mjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-51b80670.mjs';\nimport { V as ViewportRuler, S as ScrollDispatcher, C as CdkScrollableModule } from './scrolling-module-3dd0744a.mjs';\nexport { b as ɵɵCdkScrollable } from './scrolling-module-3dd0744a.mjs';\nimport { D as Directionality } from './directionality-0a678adc.mjs';\nimport { _ as _IdGenerator } from './id-generator-1959b006.mjs';\nimport { c as coerceArray } from './array-ee3b4bab.mjs';\nimport './platform-610a08ae.mjs';\nimport './scrolling-61955dd1.mjs';\nimport './recycle-view-repeater-strategy-c1712813.mjs';\nimport './data-source-5320b6fd.mjs';\nimport './bidi-module-56dd006c.mjs';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n  const clone = node.cloneNode(true);\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n  if (nodeName === 'canvas') {\n    transferCanvasData(node, clone);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node, clone);\n  }\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n  const descendantElements = node.querySelectorAll(selector);\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll(selector);\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n  // Browsers throw an error when assigning the value of a file input programmatically.\n  if (clone.type !== 'file') {\n    clone.value = source.value;\n  }\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n  const context = clone.getContext('2d');\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n  const rect = element.getBoundingClientRect();\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `DOMRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    x: rect.x,\n    y: rect.y\n  };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n  const {\n    top,\n    bottom,\n    left,\n    right\n  } = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n  domRect.top += top;\n  domRect.bottom = domRect.top + domRect.height;\n  domRect.left += left;\n  domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height\n  } = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n  _document;\n  /** Cached positions of the scrollable parent elements. */\n  positions = new Map();\n  constructor(_document) {\n    this._document = _document;\n  }\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this.getViewportScrollPosition()\n    });\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {\n          top: element.scrollTop,\n          left: element.scrollLeft\n        },\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event) {\n    const target = _getEventTarget(event);\n    const cachedPosition = this.positions.get(target);\n    if (!cachedPosition) {\n      return null;\n    }\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop;\n    let newLeft;\n    if (target === this._document) {\n      const viewportScrollPosition = this.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = target.scrollTop;\n      newLeft = target.scrollLeft;\n    }\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && target.contains(node)) {\n        adjustDomRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n    return {\n      top: topDifference,\n      left: leftDifference\n    };\n  }\n  /**\n   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n   * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n   * if the element is offset by something like the `BlockScrollStrategy`.\n   */\n  getViewportScrollPosition() {\n    return {\n      top: window.scrollY,\n      left: window.scrollX\n    };\n  }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n  const rootNodes = viewRef.rootNodes;\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0];\n  }\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      if (value) {\n        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n      } else {\n        dest.removeProperty(key);\n      }\n    }\n  }\n  return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n  const userSelect = enable ? '' : 'none';\n  extendStyles(element.style, {\n    'touch-action': enable ? '' : 'none',\n    '-webkit-user-drag': enable ? '' : 'none',\n    '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n    'user-select': userSelect,\n    '-ms-user-select': userSelect,\n    '-webkit-user-select': userSelect,\n    '-moz-user-select': userSelect\n  });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n  extendStyles(element.style, {\n    position: enable ? '' : 'fixed',\n    top: enable ? '' : '0',\n    opacity: enable ? '' : '0',\n    left: enable ? '' : '-999em'\n  }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\nclass PreviewRef {\n  _document;\n  _rootElement;\n  _direction;\n  _initialDomRect;\n  _previewTemplate;\n  _previewClass;\n  _pickupPositionOnPage;\n  _initialTransform;\n  _zIndex;\n  _renderer;\n  /** Reference to the view of the preview element. */\n  _previewEmbeddedView;\n  /** Reference to the preview element. */\n  _preview;\n  get element() {\n    return this._preview;\n  }\n  constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex, _renderer) {\n    this._document = _document;\n    this._rootElement = _rootElement;\n    this._direction = _direction;\n    this._initialDomRect = _initialDomRect;\n    this._previewTemplate = _previewTemplate;\n    this._previewClass = _previewClass;\n    this._pickupPositionOnPage = _pickupPositionOnPage;\n    this._initialTransform = _initialTransform;\n    this._zIndex = _zIndex;\n    this._renderer = _renderer;\n  }\n  attach(parent) {\n    this._preview = this._createPreview();\n    parent.appendChild(this._preview);\n    // The null check is necessary for browsers that don't support the popover API.\n    // Note that we use a string access for compatibility with Closure.\n    if (supportsPopover(this._preview)) {\n      this._preview['showPopover']();\n    }\n  }\n  destroy() {\n    this._preview.remove();\n    this._previewEmbeddedView?.destroy();\n    this._preview = this._previewEmbeddedView = null;\n  }\n  setTransform(value) {\n    this._preview.style.transform = value;\n  }\n  getBoundingClientRect() {\n    return this._preview.getBoundingClientRect();\n  }\n  addClass(className) {\n    this._preview.classList.add(className);\n  }\n  getTransitionDuration() {\n    return getTransformTransitionDurationInMs(this._preview);\n  }\n  addEventListener(name, handler) {\n    return this._renderer.listen(this._preview, name, handler);\n  }\n  _createPreview() {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this._previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview;\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewEmbeddedView = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect);\n      } else {\n        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      preview = deepCloneNode(this._rootElement);\n      matchElementSize(preview, this._initialDomRect);\n      if (this._initialTransform) {\n        preview.style.transform = this._initialTransform;\n      }\n    }\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      'pointer-events': 'none',\n      // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n      // value for `margin-right` needs to be `auto` when opened as a popover, because our\n      // positioning is always top/left based, but native popover seems to position itself\n      // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n      // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n      'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n      'position': 'fixed',\n      'top': '0',\n      'left': '0',\n      'z-index': this._zIndex + ''\n    }, importantProperties);\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('popover', 'manual');\n    preview.setAttribute('dir', this._direction);\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n    return preview;\n  }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n  return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = {\n  passive: true\n};\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = {\n  passive: false\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = {\n  passive: false,\n  capture: true\n};\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n'position']);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n  _config;\n  _document;\n  _ngZone;\n  _viewportRuler;\n  _dragDropRegistry;\n  _renderer;\n  _rootElementCleanups;\n  _cleanupShadowRootSelectStart;\n  /** Element displayed next to the user's pointer while the element is dragged. */\n  _preview;\n  /** Container into which to insert the preview. */\n  _previewContainer;\n  /** Reference to the view of the placeholder element. */\n  _placeholderRef;\n  /** Element that is rendered instead of the draggable item while it is being sorted. */\n  _placeholder;\n  /** Coordinates within the element at which the user picked up the element. */\n  _pickupPositionInElement;\n  /** Coordinates on the page at which the user picked up the element. */\n  _pickupPositionOnPage;\n  /**\n   * Anchor node used to save the place in the DOM where the element was\n   * picked up so that it can be restored at the end of the drag sequence.\n   */\n  _anchor;\n  /**\n   * CSS `transform` applied to the element when it isn't being dragged. We need a\n   * passive transform in order for the dragged element to retain its new position\n   * after the user has stopped dragging and because we need to know the relative\n   * position in case they start dragging again. This corresponds to `element.style.transform`.\n   */\n  _passiveTransform = {\n    x: 0,\n    y: 0\n  };\n  /** CSS `transform` that is applied to the element while it's being dragged. */\n  _activeTransform = {\n    x: 0,\n    y: 0\n  };\n  /** Inline `transform` value that the element had before the first dragging sequence. */\n  _initialTransform;\n  /**\n   * Whether the dragging sequence has been started. Doesn't\n   * necessarily mean that the element has been moved.\n   */\n  _hasStartedDragging = signal(false);\n  /** Whether the element has moved since the user started dragging it. */\n  _hasMoved;\n  /** Drop container in which the DragRef resided when dragging began. */\n  _initialContainer;\n  /** Index at which the item started in its initial container. */\n  _initialIndex;\n  /** Cached positions of scrollable parent elements. */\n  _parentPositions;\n  /** Emits when the item is being moved. */\n  _moveEvents = new Subject();\n  /** Keeps track of the direction in which the user is dragging along each axis. */\n  _pointerDirectionDelta;\n  /** Pointer position at which the last change in the delta occurred. */\n  _pointerPositionAtLastDirectionChange;\n  /** Position of the pointer at the last pointer event. */\n  _lastKnownPointerPosition;\n  /**\n   * Root DOM node of the drag instance. This is the element that will\n   * be moved around as the user is dragging.\n   */\n  _rootElement;\n  /**\n   * Nearest ancestor SVG, relative to which coordinates are calculated if dragging SVGElement\n   */\n  _ownerSVGElement;\n  /**\n   * Inline style value of `-webkit-tap-highlight-color` at the time the\n   * dragging was started. Used to restore the value once we're done dragging.\n   */\n  _rootElementTapHighlight;\n  /** Subscription to pointer movement events. */\n  _pointerMoveSubscription = Subscription.EMPTY;\n  /** Subscription to the event that is dispatched when the user lifts their pointer. */\n  _pointerUpSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being scrolled. */\n  _scrollSubscription = Subscription.EMPTY;\n  /** Subscription to the viewport being resized. */\n  _resizeSubscription = Subscription.EMPTY;\n  /**\n   * Time at which the last touch event occurred. Used to avoid firing the same\n   * events multiple times on touch devices where the browser will fire a fake\n   * mouse event for each touch event, after a certain time.\n   */\n  _lastTouchEventTime;\n  /** Time at which the last dragging sequence was started. */\n  _dragStartTime;\n  /** Cached reference to the boundary element. */\n  _boundaryElement = null;\n  /** Whether the native dragging interactions have been enabled on the root element. */\n  _nativeInteractionsEnabled = true;\n  /** Client rect of the root element when the dragging sequence has started. */\n  _initialDomRect;\n  /** Cached dimensions of the preview element. Should be read via `_getPreviewRect`. */\n  _previewRect;\n  /** Cached dimensions of the boundary element. */\n  _boundaryRect;\n  /** Element that will be used as a template to create the draggable item's preview. */\n  _previewTemplate;\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  _placeholderTemplate;\n  /** Elements that can be used to drag the draggable item. */\n  _handles = [];\n  /** Registered handles that are currently disabled. */\n  _disabledHandles = new Set();\n  /** Droppable container that the draggable is a part of. */\n  _dropContainer;\n  /** Layout direction of the item. */\n  _direction = 'ltr';\n  /** Ref that the current drag item is nested in. */\n  _parentDragRef;\n  /**\n   * Cached shadow root that the element is placed in. `null` means that the element isn't in\n   * the shadow DOM and `undefined` means that it hasn't been resolved yet. Should be read via\n   * `_getShadowRoot`, not directly.\n   */\n  _cachedShadowRoot;\n  /** Axis along which dragging is locked. */\n  lockAxis;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay = 0;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value) {\n    if (value !== this._disabled) {\n      this._disabled = value;\n      this._toggleNativeDragInteractions();\n      this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n    }\n  }\n  _disabled = false;\n  /** Emits as the drag sequence is being prepared. */\n  beforeStarted = new Subject();\n  /** Emits when the user starts dragging the item. */\n  started = new Subject();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new Subject();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new Subject();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new Subject();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new Subject();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new Subject();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = this._moveEvents;\n  /** Arbitrary data that can be attached to the drag item. */\n  data;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry, _renderer) {\n    this._config = _config;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._dragDropRegistry = _dragDropRegistry;\n    this._renderer = _renderer;\n    this.withRootElement(element).withParent(_config.parentDragRef || null);\n    this._parentPositions = new ParentPositionTracker(_document);\n    _dragDropRegistry.registerDragItem(this);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._placeholder;\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._rootElement;\n  }\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement() {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles) {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n    this._toggleNativeDragInteractions();\n    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n    // the set, rather than iterate over it and filter out the destroyed handles, because while\n    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n    // use an array internally which may throw an error.\n    const disabledHandles = new Set();\n    this._disabledHandles.forEach(handle => {\n      if (this._handles.indexOf(handle) > -1) {\n        disabledHandles.add(handle);\n      }\n    });\n    this._disabledHandles = disabledHandles;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template) {\n    this._previewTemplate = template;\n    return this;\n  }\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template) {\n    this._placeholderTemplate = template;\n    return this;\n  }\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement) {\n    const element = coerceElement(rootElement);\n    if (element !== this._rootElement) {\n      this._removeRootElementListeners();\n      this._rootElementCleanups = this._ngZone.runOutsideAngular(() => [_bindEventWithOptions(this._renderer, element, 'mousedown', this._pointerDown, activeEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'touchstart', this._pointerDown, passiveEventListenerOptions), _bindEventWithOptions(this._renderer, element, 'dragstart', this._nativeDragStart, activeEventListenerOptions)]);\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n    return this;\n  }\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement) {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n  /** Sets the parent ref that the ref is nested in.  */\n  withParent(parent) {\n    this._parentDragRef = parent;\n    return this;\n  }\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners();\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      this._rootElement?.remove();\n    }\n    this._anchor?.remove();\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeListeners();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;\n  }\n  /** Checks whether the element is currently being dragged. */\n  isDragging() {\n    return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform = {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle) {\n    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n      toggleNativeDragInteractions(handle, true);\n    }\n  }\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle) {\n    if (this._disabledHandles.has(handle)) {\n      this._disabledHandles.delete(handle);\n      toggleNativeDragInteractions(handle, this.disabled);\n    }\n  }\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction) {\n    this._direction = direction;\n    return this;\n  }\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container) {\n    this._dropContainer = container;\n  }\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {\n      x: position.x,\n      y: position.y\n    };\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._activeTransform = {\n      x: 0,\n      y: 0\n    };\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n    return this;\n  }\n  /**\n   * Sets the container into which to insert the preview element.\n   * @param value Container into which to insert the preview.\n   */\n  withPreviewContainer(value) {\n    this._previewContainer = value;\n    return this;\n  }\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n  /** Unsubscribes from the global subscriptions. */\n  _removeListeners() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n    this._cleanupShadowRootSelectStart?.();\n    this._cleanupShadowRootSelectStart = undefined;\n  }\n  /** Destroys the preview element and its ViewRef. */\n  _destroyPreview() {\n    this._preview?.destroy();\n    this._preview = null;\n  }\n  /** Destroys the placeholder element and its ViewRef. */\n  _destroyPlaceholder() {\n    this._placeholder?.remove();\n    this._placeholderRef?.destroy();\n    this._placeholder = this._placeholderRef = null;\n  }\n  /** Handler for the `mousedown`/`touchstart` events. */\n  _pointerDown = event => {\n    this.beforeStarted.next();\n    // Delegate the event based on whether it started from a handle or the element itself.\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        this._initializeDragSequence(targetHandle, event);\n      }\n    } else if (!this.disabled) {\n      this._initializeDragSequence(this._rootElement, event);\n    }\n  };\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  _pointerMove = event => {\n    const pointerPosition = this._getPointerPositionOnPage(event);\n    if (!this._hasStartedDragging()) {\n      const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n      const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n      const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (isOverThreshold) {\n        const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n        const container = this._dropContainer;\n        if (!isDelayElapsed) {\n          this._endDragSequence(event);\n          return;\n        }\n        // Prevent other drag sequences from starting while something in the container is still\n        // being dragged. This can happen while we're waiting for the drop animation to finish\n        // and can cause errors, because some elements might still be moving around.\n        if (!container || !container.isDragging() && !container.isReceiving()) {\n          // Prevent the default action as soon as the dragging sequence is considered as\n          // \"started\" since waiting for the next event can allow the device to begin scrolling.\n          if (event.cancelable) {\n            event.preventDefault();\n          }\n          this._hasStartedDragging.set(true);\n          this._ngZone.run(() => this._startDragSequence(event));\n        }\n      }\n      return;\n    }\n    // We prevent the default action down here so that we know that dragging has started. This is\n    // important for touch devices where doing this too early can unnecessarily block scrolling,\n    // if there's a dragging delay.\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n    this._hasMoved = true;\n    this._lastKnownPointerPosition = pointerPosition;\n    this._updatePointerDirectionDelta(constrainedPointerPosition);\n    if (this._dropContainer) {\n      this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n    } else {\n      // If there's a position constraint function, we want the element's top/left to be at the\n      // specific position on the page. Use the initial position as a reference if that's the case.\n      const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n      const activeTransform = this._activeTransform;\n      activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n      activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n      this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n    }\n    // Since this event gets fired for every pixel while dragging, we only\n    // want to fire it if the consumer opted into it. Also we have to\n    // re-enter the zone because we run all of the events on the outside.\n    if (this._moveEvents.observers.length) {\n      this._ngZone.run(() => {\n        this._moveEvents.next({\n          source: this,\n          pointerPosition: constrainedPointerPosition,\n          event,\n          distance: this._getDragDistance(constrainedPointerPosition),\n          delta: this._pointerDirectionDelta\n        });\n      });\n    }\n  };\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  _pointerUp = event => {\n    this._endDragSequence(event);\n  };\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  _endDragSequence(event) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n    this._removeListeners();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n    if (!this._hasStartedDragging()) {\n      return;\n    }\n    this.released.next({\n      source: this,\n      event\n    });\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(pointerPosition),\n          dropPoint: pointerPosition,\n          event\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n  /** Starts the dragging sequence. */\n  _startDragSequence(event) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n    this._toggleNativeDragInteractions();\n    // Needs to happen before the root element is moved.\n    const shadowRoot = this._getShadowRoot();\n    const dropContainer = this._dropContainer;\n    if (shadowRoot) {\n      // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n      // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupShadowRootSelectStart = _bindEventWithOptions(this._renderer, shadowRoot, 'selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n      });\n    }\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode;\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-anchor' : '');\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n      // There's no risk of transforms stacking when inside a drop container so\n      // we can keep the initial transform up to date any time dragging starts.\n      this._initialTransform = element.style.transform || '';\n      // Create the preview after the initial transform has\n      // been cached, because it can be affected by the transform.\n      this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000, this._renderer);\n      this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      toggleVisibility(element, false, dragImportantProperties);\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      this.started.next({\n        source: this,\n        event\n      }); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({\n        source: this,\n        event\n      });\n      this._initialContainer = this._initialIndex = undefined;\n    }\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  _initializeDragSequence(referenceElement, event) {\n    // Stop propagation if the item is inside another\n    // draggable so we don't start multiple drag sequences.\n    if (this._parentDragRef) {\n      event.stopPropagation();\n    }\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n    const rootElement = this._rootElement;\n    const target = _getEventTarget(event);\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n    const isFakeEvent = isTouchSequence ? isFakeTouchstartFromScreenReader(event) : isFakeMousedownFromScreenReader(event);\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (target && target.draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n      return;\n    }\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      const rootStyles = rootElement.style;\n      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n      rootStyles.webkitTapHighlightColor = 'transparent';\n    }\n    this._hasMoved = false;\n    this._hasStartedDragging.set(this._hasMoved);\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeListeners();\n    this._initialDomRect = this._rootElement.getBoundingClientRect();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {\n      x: 0,\n      y: 0\n    } : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {\n      x: 0,\n      y: 0\n    };\n    this._pointerPositionAtLastDirectionChange = {\n      x: pointerPosition.x,\n      y: pointerPosition.y\n    };\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  _cleanupDragArtifacts(event) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    toggleVisibility(this._rootElement, true, dragImportantProperties);\n    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._initialDomRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(pointerPosition);\n      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n      this.ended.next({\n        source: this,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance,\n        dropPoint: pointerPosition,\n        event\n      });\n      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  _updateActiveDropContainer({\n    x,\n    y\n  }, {\n    x: rawX,\n    y: rawY\n  }) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({\n          item: this,\n          container: this._dropContainer\n        });\n        this._dropContainer.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n        // If we're re-entering the initial container and sorting is disabled,\n        // put item the into its starting index to begin with.\n        newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer,\n          currentIndex: newContainer.getItemIndex(this)\n        });\n      });\n    }\n    // Dragging may have been interrupted as a result of the events above.\n    if (this.isDragging()) {\n      this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n      if (this.constrainPosition) {\n        this._applyPreviewTransform(x, y);\n      } else {\n        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n      }\n    }\n  }\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  _animatePreviewToPlaceholder() {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n    // Apply the class that adds a transition to the preview.\n    this._preview.addClass('cdk-drag-animating');\n    // Move the preview to the placeholder position.\n    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = this._preview.getTransitionDuration();\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = event => {\n          if (!event || this._preview && _getEventTarget(event) === this._preview.element && event.propertyName === 'transform') {\n            cleanupListener();\n            resolve();\n            clearTimeout(timeout);\n          }\n        };\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler, duration * 1.5);\n        const cleanupListener = this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  _createPlaceholderElement() {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder;\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n    // Stop pointer events on the preview so the user can't\n    // interact with it while the preview is animating.\n    placeholder.style.pointerEvents = 'none';\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  _getPointerPositionInElement(elementRect, referenceElement, event) {\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n  /** Determines the point of the page that was touched by the user. */\n  _getPointerPositionOnPage(event) {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n    // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n    // throwing an error. The value returned here will be incorrect, but since this only\n    // breaks inside a developer tool and the value is only used for secondary information,\n    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n    event.touches[0] || event.changedTouches[0] || {\n      pageX: 0,\n      pageY: 0\n    } : event;\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  _getConstrainedPointerPosition(point) {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {\n      x,\n      y\n    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement) : point;\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y - (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x - (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n    }\n    if (this._boundaryRect) {\n      // If not using a custom constrain we need to account for the pickup position in the element\n      // otherwise we do not need to do this, as it has already been accounted for\n      const {\n        x: pickupX,\n        y: pickupY\n      } = !this.constrainPosition ? this._pickupPositionInElement : {\n        x: 0,\n        y: 0\n      };\n      const boundaryRect = this._boundaryRect;\n      const {\n        width: previewWidth,\n        height: previewHeight\n      } = this._getPreviewRect();\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewWidth - pickupX);\n      x = clamp$1(x, minX, maxX);\n      y = clamp$1(y, minY, maxY);\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  _updatePointerDirectionDelta(pointerPositionOnPage) {\n    const {\n      x,\n      y\n    } = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n    return delta;\n  }\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n  /** Removes the manually-added event listeners from the root element. */\n  _removeRootElementListeners() {\n    this._rootElementCleanups?.forEach(cleanup => cleanup());\n    this._rootElementCleanups = undefined;\n  }\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyRootElementTransform(x, y) {\n    const scale = 1 / this.scale;\n    const transform = getTransform(x * scale, y * scale);\n    const styles = this._rootElement.style;\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    // Should be excluded none because none + translate3d(x, y, x) is invalid css\n    if (this._initialTransform == null) {\n      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';\n    }\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    styles.transform = combineTransforms(transform, this._initialTransform);\n  }\n  /**\n   * Applies a `transform` to the preview, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  _applyPreviewTransform(x, y) {\n    // Only apply the initial transform if the preview is a clone of the original element, otherwise\n    // it could be completely different and the transform might not make sense anymore.\n    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n    const transform = getTransform(x, y);\n    this._preview.setTransform(combineTransforms(transform, initialTransform));\n  }\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  _getDragDistance(currentPosition) {\n    const pickupPosition = this._pickupPositionOnPage;\n    if (pickupPosition) {\n      return {\n        x: currentPosition.x - pickupPosition.x,\n        y: currentPosition.y - pickupPosition.y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  _containInsideBoundaryOnResize() {\n    let {\n      x,\n      y\n    } = this._passiveTransform;\n    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n    // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {\n      return;\n    }\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({\n        y,\n        x\n      });\n    }\n  }\n  /** Gets the drag start delay, based on the event type. */\n  _getDragStartDelay(event) {\n    const value = this.dragStartDelay;\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n    return value ? value.mouse : 0;\n  }\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  _updateOnScroll(event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n    if (scrollDifference) {\n      const target = _getEventTarget(event);\n      // DOMRect dimensions are based on the scroll position of the page and its parent\n      // node so we have to update the cached boundary DOMRect if the user has scrolled.\n      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {\n        adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n  /** Gets the scroll position of the viewport. */\n  _getViewportScrollPosition() {\n    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (this._cachedShadowRoot === undefined) {\n      this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Gets the element into which the drag preview should be inserted. */\n  _getPreviewInsertionPoint(initialParent, shadowRoot) {\n    const previewContainer = this._previewContainer || 'global';\n    if (previewContainer === 'parent') {\n      return initialParent;\n    }\n    if (previewContainer === 'global') {\n      const documentRef = this._document;\n      // We can't use the body if the user is in fullscreen mode,\n      // because the preview will render under the fullscreen element.\n      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;\n    }\n    return coerceElement(previewContainer);\n  }\n  /** Lazily resolves and returns the dimensions of the preview. */\n  _getPreviewRect() {\n    // Cache the preview element rect if we haven't cached it already or if\n    // we cached it too early before the element dimensions were computed.\n    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {\n      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialDomRect;\n    }\n    return this._previewRect;\n  }\n  /** Handles a native `dragstart` event. */\n  _nativeDragStart = event => {\n    if (this._handles.length) {\n      const targetHandle = this._getTargetHandle(event);\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        event.preventDefault();\n      }\n    } else if (!this.disabled) {\n      // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n      // but some cases like dragging of links can slip through (see #24403).\n      event.preventDefault();\n    }\n  };\n  /** Gets a handle that is the target of an event. */\n  _getTargetHandle(event) {\n    return this._handles.find(handle => {\n      return event.target && (event.target === handle || handle.contains(event.target));\n    });\n  }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n  event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n  if (from === to) {\n    return;\n  }\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n  array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n  const to = clamp(targetIndex, targetArray.length);\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n  return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Cache of the dimensions of all the items inside the container. */\n  _itemPositions = [];\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeDraggables;\n  /** Direction in which the list is oriented. */\n  orientation = 'vertical';\n  /** Layout direction of the drop list. */\n  direction;\n  constructor(_dragDropRegistry) {\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    delta: 0,\n    overlaps: false\n  };\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n    if (newIndex === -1 && siblings.length > 0) {\n      return null;\n    }\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n      const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n        adjustDomRect(sibling.clientRect, offset, 0);\n      }\n    });\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    return {\n      previousIndex: currentIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    const newIndex = index == null || index < 0 ?\n    // We use the coordinates of where the item entered the drop\n    // zone to figure out at which index it should be inserted.\n    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference = activeDraggables[newIndex];\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n    // If we didn't find a new position reference, it means that either the item didn't start off\n    // in this container, or that the item requested to be inserted at the end of the list.\n    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      newPositionReference = activeDraggables[0];\n    }\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else {\n      this._element.appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n    // Note that usually `start` is called together with `enter` when an item goes into a new\n    // container. This will cache item positions, but we need to refresh them since the amount\n    // of items has changed.\n    this._cacheItemPositions();\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeDraggables = items.slice();\n    this._cacheItemPositions();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables?.forEach(item => {\n      const rootElement = item.getRootElement();\n      if (rootElement) {\n        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n        rootElement.style.transform = initialTransform || '';\n      }\n    });\n    this._itemPositions = [];\n    this._activeDraggables = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeDraggables;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;\n    return items.findIndex(currentItem => currentItem.drag === item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll(topDifference, leftDifference) {\n    // Since we know the amount that the user has scrolled we can shift all of the\n    // client rectangles ourselves. This is cheaper than re-measuring everything and\n    // we can avoid inconsistent behavior where we might be measuring the element before\n    // its position has changed.\n    this._itemPositions.forEach(({\n      clientRect\n    }) => {\n      adjustDomRect(clientRect, topDifference, leftDifference);\n    });\n    // We need two loops for this, because we want all of the cached\n    // positions to be up-to-date before we re-sort the item.\n    this._itemPositions.forEach(({\n      drag\n    }) => {\n      if (this._dragDropRegistry.isDragging(drag)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        drag._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    this._element = container;\n  }\n  /** Refreshes the position cache of the items and sibling containers. */\n  _cacheItemPositions() {\n    const isHorizontal = this.orientation === 'horizontal';\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {\n        drag,\n        offset: 0,\n        initialTransform: elementToMeasure.style.transform || '',\n        clientRect: getMutableClientRect(elementToMeasure)\n      };\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;\n    });\n  }\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  _getItemOffsetPx(currentPosition, newPosition, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;\n    }\n    return itemOffset;\n  }\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  _getSiblingOffsetPx(currentIndex, siblings, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n    return siblingOffset;\n  }\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _shouldEnterAsFirstChild(pointerX, pointerY) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this.orientation === 'horizontal';\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const index = this._itemPositions.findIndex(({\n      drag,\n      clientRect\n    }) => {\n      // Skip the item itself.\n      if (drag === item) {\n        return false;\n      }\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n      return isHorizontal ?\n      // Round these down since most browsers report client rects with\n      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n  _document;\n  _dragDropRegistry;\n  /** Root element container of the drop list. */\n  _element;\n  /** Function used to determine if an item can be sorted into a specific index. */\n  _sortPredicate;\n  /** Lazily-resolved root node containing the list. Use `_getRootNode` to read this. */\n  _rootNode;\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * that were there at the start of the sequence, as well as any items that have been dragged\n   * in, but haven't been dropped yet.\n   */\n  _activeItems;\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  _previousSwap = {\n    drag: null,\n    deltaX: 0,\n    deltaY: 0,\n    overlaps: false\n  };\n  /**\n   * Keeps track of the relationship between a node and its next sibling. This information\n   * is used to restore the DOM to the order it was in before dragging started.\n   */\n  _relatedNodes = [];\n  constructor(_document, _dragDropRegistry) {\n    this._document = _document;\n    this._dragDropRegistry = _dragDropRegistry;\n  }\n  /**\n   * To be called when the drag sequence starts.\n   * @param items Items that are currently in the list.\n   */\n  start(items) {\n    const childNodes = this._element.childNodes;\n    this._relatedNodes = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i];\n      this._relatedNodes.push([node, node.nextSibling]);\n    }\n    this.withItems(items);\n  }\n  /**\n   * To be called when an item is being sorted.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  sort(item, pointerX, pointerY, pointerDelta) {\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n    const previousSwap = this._previousSwap;\n    if (newIndex === -1 || this._activeItems[newIndex] === item) {\n      return null;\n    }\n    const toSwapWith = this._activeItems[newIndex];\n    // Prevent too many swaps over the same item.\n    if (previousSwap.drag === toSwapWith && previousSwap.overlaps && previousSwap.deltaX === pointerDelta.x && previousSwap.deltaY === pointerDelta.y) {\n      return null;\n    }\n    const previousIndex = this.getItemIndex(item);\n    const current = item.getPlaceholderElement();\n    const overlapElement = toSwapWith.getRootElement();\n    if (newIndex > previousIndex) {\n      overlapElement.after(current);\n    } else {\n      overlapElement.before(current);\n    }\n    moveItemInArray(this._activeItems, previousIndex, newIndex);\n    const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n    // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n    // break this functionality, because the same object is passed for all `sort` calls.\n    previousSwap.deltaX = pointerDelta.x;\n    previousSwap.deltaY = pointerDelta.y;\n    previousSwap.drag = toSwapWith;\n    previousSwap.overlaps = overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n    return {\n      previousIndex,\n      currentIndex: newIndex\n    };\n  }\n  /**\n   * Called when an item is being moved into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    let enterIndex = index == null || index < 0 ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;\n    // In some cases (e.g. when the container has padding) we might not be able to figure\n    // out which item to insert the dragged item next to, because the pointer didn't overlap\n    // with anything. In that case we find the item that's closest to the pointer.\n    if (enterIndex === -1) {\n      enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n    }\n    const targetItem = this._activeItems[enterIndex];\n    const currentIndex = this._activeItems.indexOf(item);\n    if (currentIndex > -1) {\n      this._activeItems.splice(currentIndex, 1);\n    }\n    if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n      this._activeItems.splice(enterIndex, 0, item);\n      targetItem.getRootElement().before(item.getPlaceholderElement());\n    } else {\n      this._activeItems.push(item);\n      this._element.appendChild(item.getPlaceholderElement());\n    }\n  }\n  /** Sets the items that are currently part of the list. */\n  withItems(items) {\n    this._activeItems = items.slice();\n  }\n  /** Assigns a sort predicate to the strategy. */\n  withSortPredicate(predicate) {\n    this._sortPredicate = predicate;\n  }\n  /** Resets the strategy to its initial state before dragging was started. */\n  reset() {\n    const root = this._element;\n    const previousSwap = this._previousSwap;\n    // Moving elements around in the DOM can break things like the `@for` loop, because it\n    // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n    // the DOM nodes in the list to their original order when the list is reset.\n    // Note that this could be simpler if we just saved all the nodes, cleared the root\n    // and then appended them in the original order. We don't do it, because it can break\n    // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n    // placeholder element which is removed after dragging.\n    for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n      const [node, nextSibling] = this._relatedNodes[i];\n      if (node.parentNode === root && node.nextSibling !== nextSibling) {\n        if (nextSibling === null) {\n          root.appendChild(node);\n        } else if (nextSibling.parentNode === root) {\n          root.insertBefore(node, nextSibling);\n        }\n      }\n    }\n    this._relatedNodes = [];\n    this._activeItems = [];\n    previousSwap.drag = null;\n    previousSwap.deltaX = previousSwap.deltaY = 0;\n    previousSwap.overlaps = false;\n  }\n  /**\n   * Gets a snapshot of items currently in the list.\n   * Can include items that we dragged in from another list.\n   */\n  getActiveItemsSnapshot() {\n    return this._activeItems;\n  }\n  /** Gets the index of a specific item. */\n  getItemIndex(item) {\n    return this._activeItems.indexOf(item);\n  }\n  /** Used to notify the strategy that the scroll position has changed. */\n  updateOnScroll() {\n    this._activeItems.forEach(item => {\n      if (this._dragDropRegistry.isDragging(item)) {\n        // We need to re-sort the item manually, because the pointer move\n        // events won't be dispatched while the user is scrolling.\n        item._sortFromLastPointerPosition();\n      }\n    });\n  }\n  withElementContainer(container) {\n    if (container !== this._element) {\n      this._element = container;\n      this._rootNode = undefined;\n    }\n  }\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n    const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n    const index = elementAtPoint ? this._activeItems.findIndex(item => {\n      const root = item.getRootElement();\n      return elementAtPoint === root || root.contains(elementAtPoint);\n    }) : -1;\n    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n  }\n  /** Lazily resolves the list's root node. */\n  _getRootNode() {\n    // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n    if (!this._rootNode) {\n      this._rootNode = _getShadowRoot(this._element) || this._document;\n    }\n    return this._rootNode;\n  }\n  /**\n   * Finds the index of the item that's closest to the item being dragged.\n   * @param item Item being dragged.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n    if (this._activeItems.length === 0) {\n      return -1;\n    }\n    if (this._activeItems.length === 1) {\n      return 0;\n    }\n    let minDistance = Infinity;\n    let minIndex = -1;\n    // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n    // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n    // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n    // for our purposes.\n    for (let i = 0; i < this._activeItems.length; i++) {\n      const current = this._activeItems[i];\n      if (current !== item) {\n        const {\n          x,\n          y\n        } = current.getRootElement().getBoundingClientRect();\n        const distance = Math.hypot(pointerX - x, pointerY - y);\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      }\n    }\n    return minIndex;\n  }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n  AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n  AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n  _dragDropRegistry;\n  _ngZone;\n  _viewportRuler;\n  /** Element that the drop list is attached to. */\n  element;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  disabled = false;\n  /** Whether sorting items within the list is disabled. */\n  sortingDisabled = false;\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /**\n   * Whether auto-scrolling the view when the user\n   * moves their pointer close to the edges is disabled.\n   */\n  autoScrollDisabled = false;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep = 2;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Function that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Emits right before dragging has started. */\n  beforeStarted = new Subject();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new Subject();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new Subject();\n  /** Emits when the user drops an item inside the container. */\n  dropped = new Subject();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new Subject();\n  /** Emits when a dragging sequence is started in a list connected to the current one. */\n  receivingStarted = new Subject();\n  /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n  receivingStopped = new Subject();\n  /** Arbitrary data that can be attached to the drop list. */\n  data;\n  /** Element that is the direct parent of the drag items. */\n  _container;\n  /** Whether an item in the list is being dragged. */\n  _isDragging = false;\n  /** Keeps track of the positions of any parent scrollable elements. */\n  _parentPositions;\n  /** Strategy being used to sort items within the list. */\n  _sortStrategy;\n  /** Cached `DOMRect` of the drop list. */\n  _domRect;\n  /** Draggable items in the container. */\n  _draggables = [];\n  /** Drop lists that are connected to the current one. */\n  _siblings = [];\n  /** Connected siblings that currently have a dragged item. */\n  _activeSiblings = new Set();\n  /** Subscription to the window being scrolled. */\n  _viewportScrollSubscription = Subscription.EMPTY;\n  /** Vertical direction in which the list is currently scrolling. */\n  _verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  /** Horizontal direction in which the list is currently scrolling. */\n  _horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  /** Node that is being auto-scrolled. */\n  _scrollNode;\n  /** Used to signal to the current auto-scroll sequence when to stop. */\n  _stopScrollTimers = new Subject();\n  /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n  _cachedShadowRoot = null;\n  /** Reference to the document. */\n  _document;\n  /** Elements that can be scrolled while the user is dragging. */\n  _scrollableElements = [];\n  /** Initial value for the element's `scroll-snap-type` style. */\n  _initialScrollSnap;\n  /** Direction of the list's layout. */\n  _direction = 'ltr';\n  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n    this._dragDropRegistry = _dragDropRegistry;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    const coercedElement = this.element = coerceElement(element);\n    this._document = _document;\n    this.withOrientation('vertical').withElementContainer(coercedElement);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document);\n  }\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this.receivingStarted.complete();\n    this.receivingStopped.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n  /** Starts dragging an item. */\n  start() {\n    this._draggingStarted();\n    this._notifyReceivingSiblings();\n  }\n  /**\n   * Attempts to move an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item, pointerX, pointerY, index) {\n    this._draggingStarted();\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    if (index == null && this.sortingDisabled) {\n      index = this._draggables.indexOf(item);\n    }\n    this._sortStrategy.enter(item, pointerX, pointerY, index);\n    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n    // can change when the sort strategy moves the item around inside `enter`.\n    this._cacheParentPositions();\n    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n    this._notifyReceivingSiblings();\n    this.entered.next({\n      item,\n      container: this,\n      currentIndex: this.getItemIndex(item)\n    });\n  }\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item) {\n    this._reset();\n    this.exited.next({\n      item,\n      container: this\n    });\n  }\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousIndex Index of the item when dragging started.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param event Event that triggered the dropping sequence.\n   *\n   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n   */\n  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n    this._reset();\n    this.dropped.next({\n      item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance,\n      dropPoint,\n      event\n    });\n  }\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items) {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._sortStrategy.withItems(this._draggables);\n      }\n    }\n    return this;\n  }\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction) {\n    this._direction = direction;\n    if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n      this._sortStrategy.direction = direction;\n    }\n    return this;\n  }\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo) {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation) {\n    if (orientation === 'mixed') {\n      this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n    } else {\n      const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n      strategy.direction = this._direction;\n      strategy.orientation = orientation;\n      this._sortStrategy = strategy;\n    }\n    this._sortStrategy.withElementContainer(this._container);\n    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    return this;\n  }\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements) {\n    const element = this._container;\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n  /**\n   * Configures the drop list so that a different element is used as the container for the\n   * dragged items. This is useful for the cases when one might not have control over the\n   * full DOM that sets up the dragging.\n   * Note that the alternate container needs to be a descendant of the drop list.\n   * @param container New element container to be assigned.\n   */\n  withElementContainer(container) {\n    if (container === this._container) {\n      return this;\n    }\n    const element = coerceElement(this.element);\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && container !== element && !element.contains(container)) {\n      throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n    }\n    const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n    const newContainerIndex = this._scrollableElements.indexOf(container);\n    if (oldContainerIndex > -1) {\n      this._scrollableElements.splice(oldContainerIndex, 1);\n    }\n    if (newContainerIndex > -1) {\n      this._scrollableElements.splice(newContainerIndex, 1);\n    }\n    if (this._sortStrategy) {\n      this._sortStrategy.withElementContainer(container);\n    }\n    this._cachedShadowRoot = null;\n    this._scrollableElements.unshift(container);\n    this._container = container;\n    return this;\n  }\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents() {\n    return this._scrollableElements;\n  }\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item) {\n    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);\n  }\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving() {\n    return this._activeSiblings.size > 0;\n  }\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item, pointerX, pointerY, pointerDelta) {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled || !this._domRect || !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n    if (result) {\n      this.sorted.next({\n        previousIndex: result.previousIndex,\n        currentIndex: result.currentIndex,\n        container: this,\n        item\n      });\n    }\n  }\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX, pointerY) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n    let scrollNode;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n      if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element;\n        }\n      }\n    });\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {\n        width,\n        height\n      } = this._viewportRuler.getViewportSize();\n      const domRect = {\n        width,\n        height,\n        top: 0,\n        right: width,\n        bottom: height,\n        left: 0\n      };\n      verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n      scrollNode = window;\n    }\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n  /** Starts the dragging sequence within the list. */\n  _draggingStarted() {\n    const styles = this._container.style;\n    this.beforeStarted.next();\n    this._isDragging = true;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n    // Prevent the check from running on apps not using an alternate container. Ideally we\n    // would always run it, but introducing it at this stage would be a breaking change.\n    this._container !== coerceElement(this.element)) {\n      for (const drag of this._draggables) {\n        if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n          throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n        }\n      }\n    }\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._sortStrategy.start(this._draggables);\n    this._cacheParentPositions();\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n  /** Caches the positions of the configured scrollable parents. */\n  _cacheParentPositions() {\n    this._parentPositions.cache(this._scrollableElements);\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `DOMRect`.\n    this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n  }\n  /** Resets the container to its initial state. */\n  _reset() {\n    this._isDragging = false;\n    const styles = this._container.style;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._sortStrategy.reset();\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n  /** Starts the interval that'll auto-scroll the element. */\n  _startScrollInterval = () => {\n    this._stopScrolling();\n    interval(0, animationFrameScheduler).pipe(takeUntil(this._stopScrollTimers)).subscribe(() => {\n      const node = this._scrollNode;\n      const scrollStep = this.autoScrollStep;\n      if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n        node.scrollBy(0, -scrollStep);\n      } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n        node.scrollBy(0, scrollStep);\n      }\n      if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n        node.scrollBy(-scrollStep, 0);\n      } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n        node.scrollBy(scrollStep, 0);\n      }\n    });\n  };\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x, y) {\n    return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n  }\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item, x, y) {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item, x, y) {\n    if (!this._domRect || !isInsideClientRect(this._domRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n    // The `DOMRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n  }\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling, items) {\n    const activeSiblings = this._activeSiblings;\n    if (!activeSiblings.has(sibling) && items.every(item => {\n      // Note that we have to add an exception to the `enterPredicate` for items that started off\n      // in this drop list. The drag ref has logic that allows an item to return to its initial\n      // container, if it has left the initial container and none of the connected containers\n      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n    })) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n      this.receivingStarted.next({\n        initiator: sibling,\n        receiver: this,\n        items\n      });\n    }\n  }\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n    this.receivingStopped.next({\n      initiator: sibling,\n      receiver: this\n    });\n  }\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  _getShadowRoot() {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(this._container);\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n    return this._cachedShadowRoot;\n  }\n  /** Notifies any siblings that may potentially receive the item. */\n  _notifyReceivingSiblings() {\n    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());\n    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n  }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n  const {\n    top,\n    bottom,\n    height\n  } = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n  return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n  const {\n    left,\n    right,\n    width\n  } = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n  return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n    if (direction === 'rtl') {\n      if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n        // In RTL `scrollLeft` will be negative when scrolled.\n        if (scrollLeft < 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n        }\n      } else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else {\n      if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n        if (scrollLeft > 0) {\n          horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n        }\n      } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n      }\n    }\n  }\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind a capturing event. */\nconst capturingEventOptions = {\n  capture: true\n};\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = {\n  passive: false,\n  capture: true\n};\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n  static ɵfac = function _ResetsLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _ResetsLoader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _ResetsLoader,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [\"cdk-drag-resets-container\", \"\"],\n    decls: 0,\n    vars: 0,\n    template: function _ResetsLoader_Template(rf, ctx) {},\n    styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_ResetsLoader, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'cdk-drag-resets-container': ''\n      },\n      styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"]\n    }]\n  }], null, null);\n})();\n// TODO(crisbeto): remove generics when making breaking changes.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nclass DragDropRegistry {\n  _ngZone = inject(NgZone);\n  _document = inject(DOCUMENT);\n  _styleLoader = inject(_CdkPrivateStyleLoader);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _cleanupDocumentTouchmove;\n  /** Registered drop container instances. */\n  _dropInstances = new Set();\n  /** Registered drag item instances. */\n  _dragInstances = new Set();\n  /** Drag item instances that are currently being dragged. */\n  _activeDragInstances = signal([]);\n  /** Keeps track of the event listeners that we've bound to the `document`. */\n  _globalListeners;\n  /**\n   * Predicate function to check if an item is being dragged.  Moved out into a property,\n   * because it'll be called a lot and we don't want to create a new function every time.\n   */\n  _draggingPredicate = item => item.isDragging();\n  /**\n   * Map tracking DOM nodes and their corresponding drag directives. Note that this is different\n   * from looking through the `_dragInstances` and getting their root node, because the root node\n   * isn't necessarily the node that the directive is set on.\n   */\n  _domNodesToDirectives = null;\n  /**\n   * Emits the `touchmove` or `mousemove` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerMove = new Subject();\n  /**\n   * Emits the `touchend` or `mouseup` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  pointerUp = new Subject();\n  /**\n   * Emits when the viewport has been scrolled while the user is dragging an item.\n   * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n   * @breaking-change 13.0.0\n   */\n  scroll = new Subject();\n  constructor() {}\n  /** Adds a drop container to the registry. */\n  registerDropContainer(drop) {\n    if (!this._dropInstances.has(drop)) {\n      this._dropInstances.add(drop);\n    }\n  }\n  /** Adds a drag item instance to the registry. */\n  registerDragItem(drag) {\n    this._dragInstances.add(drag);\n    // The `touchmove` event gets bound once, ahead of time, because WebKit\n    // won't preventDefault on a dynamically-added `touchmove` listener.\n    // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n    if (this._dragInstances.size === 1) {\n      this._ngZone.runOutsideAngular(() => {\n        // The event handler has to be explicitly active,\n        // because newer browsers make it passive by default.\n        this._cleanupDocumentTouchmove?.();\n        this._cleanupDocumentTouchmove = _bindEventWithOptions(this._renderer, this._document, 'touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n      });\n    }\n  }\n  /** Removes a drop container from the registry. */\n  removeDropContainer(drop) {\n    this._dropInstances.delete(drop);\n  }\n  /** Removes a drag item instance from the registry. */\n  removeDragItem(drag) {\n    this._dragInstances.delete(drag);\n    this.stopDragging(drag);\n    if (this._dragInstances.size === 0) {\n      this._cleanupDocumentTouchmove?.();\n    }\n  }\n  /**\n   * Starts the dragging sequence for a drag instance.\n   * @param drag Drag instance which is being dragged.\n   * @param event Event that initiated the dragging.\n   */\n  startDragging(drag, event) {\n    // Do not process the same drag twice to avoid memory leaks and redundant listeners\n    if (this._activeDragInstances().indexOf(drag) > -1) {\n      return;\n    }\n    this._styleLoader.load(_ResetsLoader);\n    this._activeDragInstances.update(instances => [...instances, drag]);\n    if (this._activeDragInstances().length === 1) {\n      // We explicitly bind __active__ listeners here, because newer browsers will default to\n      // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n      // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n      const isTouchEvent = event.type.startsWith('touch');\n      const endEventHandler = e => this.pointerUp.next(e);\n      const toBind = [\n      // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n      // the document. See https://github.com/angular/components/issues/17144.\n      ['scroll', e => this.scroll.next(e), capturingEventOptions],\n      // Preventing the default action on `mousemove` isn't enough to disable text selection\n      // on Safari so we need to prevent the selection event as well. Alternatively this can\n      // be done by setting `user-select: none` on the `body`, however it has causes a style\n      // recalculation which can be expensive on pages with a lot of elements.\n      ['selectstart', this._preventDefaultWhileDragging, activeCapturingEventOptions]];\n      if (isTouchEvent) {\n        toBind.push(['touchend', endEventHandler, capturingEventOptions], ['touchcancel', endEventHandler, capturingEventOptions]);\n      } else {\n        toBind.push(['mouseup', endEventHandler, capturingEventOptions]);\n      }\n      // We don't have to bind a move event for touch drag sequences, because\n      // we already have a persistent global one bound from `registerDragItem`.\n      if (!isTouchEvent) {\n        toBind.push(['mousemove', e => this.pointerMove.next(e), activeCapturingEventOptions]);\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._globalListeners = toBind.map(([name, handler, options]) => _bindEventWithOptions(this._renderer, this._document, name, handler, options));\n      });\n    }\n  }\n  /** Stops dragging a drag item instance. */\n  stopDragging(drag) {\n    this._activeDragInstances.update(instances => {\n      const index = instances.indexOf(drag);\n      if (index > -1) {\n        instances.splice(index, 1);\n        return [...instances];\n      }\n      return instances;\n    });\n    if (this._activeDragInstances().length === 0) {\n      this._clearGlobalListeners();\n    }\n  }\n  /** Gets whether a drag item instance is currently being dragged. */\n  isDragging(drag) {\n    return this._activeDragInstances().indexOf(drag) > -1;\n  }\n  /**\n   * Gets a stream that will emit when any element on the page is scrolled while an item is being\n   * dragged.\n   * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n   *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n   *   be used to include an additional top-level listener at the shadow root level.\n   */\n  scrolled(shadowRoot) {\n    const streams = [this.scroll];\n    if (shadowRoot && shadowRoot !== this._document) {\n      // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n      // because we want to guarantee that the event is bound outside of the `NgZone`. With\n      // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n      streams.push(new Observable(observer => {\n        return this._ngZone.runOutsideAngular(() => {\n          const cleanup = _bindEventWithOptions(this._renderer, shadowRoot, 'scroll', event => {\n            if (this._activeDragInstances().length) {\n              observer.next(event);\n            }\n          }, capturingEventOptions);\n          return () => {\n            cleanup();\n          };\n        });\n      }));\n    }\n    return merge(...streams);\n  }\n  /**\n   * Tracks the DOM node which has a draggable directive.\n   * @param node Node to track.\n   * @param dragRef Drag directive set on the node.\n   */\n  registerDirectiveNode(node, dragRef) {\n    this._domNodesToDirectives ??= new WeakMap();\n    this._domNodesToDirectives.set(node, dragRef);\n  }\n  /**\n   * Stops tracking a draggable directive node.\n   * @param node Node to stop tracking.\n   */\n  removeDirectiveNode(node) {\n    this._domNodesToDirectives?.delete(node);\n  }\n  /**\n   * Gets the drag directive corresponding to a specific DOM node, if any.\n   * @param node Node for which to do the lookup.\n   */\n  getDragDirectiveForNode(node) {\n    return this._domNodesToDirectives?.get(node) || null;\n  }\n  ngOnDestroy() {\n    this._dragInstances.forEach(instance => this.removeDragItem(instance));\n    this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n    this._domNodesToDirectives = null;\n    this._clearGlobalListeners();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n  /**\n   * Event listener that will prevent the default browser action while the user is dragging.\n   * @param event Event whose default action should be prevented.\n   */\n  _preventDefaultWhileDragging = event => {\n    if (this._activeDragInstances().length > 0) {\n      event.preventDefault();\n    }\n  };\n  /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n  _persistentTouchmoveListener = event => {\n    if (this._activeDragInstances().length > 0) {\n      // Note that we only want to prevent the default action after dragging has actually started.\n      // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n      // but it could be pushed back if the user has set up a drag delay or threshold.\n      if (this._activeDragInstances().some(this._draggingPredicate)) {\n        event.preventDefault();\n      }\n      this.pointerMove.next(event);\n    }\n  };\n  /** Clears out the global event listeners from the `document`. */\n  _clearGlobalListeners() {\n    this._globalListeners?.forEach(cleanup => cleanup());\n    this._globalListeners = undefined;\n  }\n  static ɵfac = function DragDropRegistry_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropRegistry)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DragDropRegistry,\n    factory: DragDropRegistry.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n  _document = inject(DOCUMENT);\n  _ngZone = inject(NgZone);\n  _viewportRuler = inject(ViewportRuler);\n  _dragDropRegistry = inject(DragDropRegistry);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  constructor() {}\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag(element, config = DEFAULT_CONFIG) {\n    return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry, this._renderer);\n  }\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList(element) {\n    return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n  }\n  static ɵfac = function DragDrop_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDrop)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DragDrop,\n    factory: DragDrop.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDrop, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n  if (node.nodeType !== 1) {\n    throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n  }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n  element = inject(ElementRef);\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  /** Emits when the state of the handle has changed. */\n  _stateChanges = new Subject();\n  /** Whether starting to drag through this handle is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._stateChanges.next(this);\n  }\n  _disabled = false;\n  constructor() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDragHandle');\n    }\n    this._parentDrag?._addHandle(this);\n  }\n  ngAfterViewInit() {\n    if (!this._parentDrag) {\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const ref = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (ref) {\n          this._parentDrag = ref;\n          ref._addHandle(this);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._parentDrag?._removeHandle(this);\n    this._stateChanges.complete();\n  }\n  static ɵfac = function CdkDragHandle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragHandle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragHandle,\n    selectors: [[\"\", \"cdkDragHandle\", \"\"]],\n    hostAttrs: [1, \"cdk-drag-handle\"],\n    inputs: {\n      disabled: [2, \"cdkDragHandleDisabled\", \"disabled\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_HANDLE,\n      useExisting: CdkDragHandle\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDragHandle]',\n      host: {\n        'class': 'cdk-drag-handle'\n      },\n      providers: [{\n        provide: CDK_DRAG_HANDLE,\n        useExisting: CdkDragHandle\n      }]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragHandleDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n  element = inject(ElementRef);\n  dropContainer = inject(CDK_DROP_LIST, {\n    optional: true,\n    skipSelf: true\n  });\n  _ngZone = inject(NgZone);\n  _viewContainerRef = inject(ViewContainerRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _selfHandle = inject(CDK_DRAG_HANDLE, {\n    optional: true,\n    self: true\n  });\n  _parentDrag = inject(CDK_DRAG_PARENT, {\n    optional: true,\n    skipSelf: true\n  });\n  _dragDropRegistry = inject(DragDropRegistry);\n  _destroyed = new Subject();\n  _handles = new BehaviorSubject([]);\n  _previewTemplate;\n  _placeholderTemplate;\n  /** Reference to the underlying drag instance. */\n  _dragRef;\n  /** Arbitrary data to attach to this drag instance. */\n  data;\n  /** Locks the position of the dragged element along the specified axis. */\n  lockAxis;\n  /**\n   * Selector that will be used to determine the root draggable element, starting from\n   * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n   * when trying to enable dragging on an element that you might not have access to.\n   */\n  rootElementSelector;\n  /**\n   * Node or selector that will be used to determine the element to which the draggable's\n   * position will be constrained. If a string is passed in, it'll be used as a selector that\n   * will be matched starting from the element's parent and going up the DOM until a match\n   * has been found.\n   */\n  boundaryElement;\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay;\n  /**\n   * Sets the position of a `CdkDrag` that is outside of a drop container.\n   * Can be used to restore the element's position for a returning user.\n   */\n  freeDragPosition;\n  /** Whether starting to drag this element is disabled. */\n  get disabled() {\n    return this._disabled || !!(this.dropContainer && this.dropContainer.disabled);\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._dragRef.disabled = this._disabled;\n  }\n  _disabled;\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page, a reference to the item being dragged and its dimensions.\n   * Should return a point describing where the item should be rendered.\n   */\n  constrainPosition;\n  /** Class to be added to the preview element. */\n  previewClass;\n  /**\n   * Configures the place into which the preview of the item will be inserted. Can be configured\n   * globally through `CDK_DROP_LIST`. Possible values:\n   * - `global` - Preview will be inserted at the bottom of the `<body>`. The advantage is that\n   * you don't have to worry about `overflow: hidden` or `z-index`, but the item won't retain\n   * its inherited styles.\n   * - `parent` - Preview will be inserted into the parent of the drag item. The advantage is that\n   * inherited styles will be preserved, but it may be clipped by `overflow: hidden` or not be\n   * visible due to `z-index`. Furthermore, the preview is going to have an effect over selectors\n   * like `:nth-child` and some flexbox configurations.\n   * - `ElementRef<HTMLElement> | HTMLElement` - Preview will be inserted into a specific element.\n   * Same advantages and disadvantages as `parent`.\n   */\n  previewContainer;\n  /**\n   * If the parent of the dragged element has a `scale` transform, it can throw off the\n   * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n   */\n  scale = 1;\n  /** Emits when the user starts dragging the item. */\n  started = new EventEmitter();\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new EventEmitter();\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new EventEmitter();\n  /** Emits when the user has moved the item into a new container. */\n  entered = new EventEmitter();\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new EventEmitter();\n  /** Emits when the user drops the item inside a container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved = new Observable(observer => {\n    const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n      source: this,\n      pointerPosition: movedEvent.pointerPosition,\n      event: movedEvent.event,\n      delta: movedEvent.delta,\n      distance: movedEvent.distance\n    }))).subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n    };\n  });\n  _injector = inject(Injector);\n  constructor() {\n    const dropContainer = this.dropContainer;\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    const dragDrop = inject(DragDrop);\n    this._dragRef = dragDrop.createDrag(this.element, {\n      dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n      pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,\n      zIndex: config?.zIndex\n    });\n    this._dragRef.data = this;\n    this._dragDropRegistry.registerDirectiveNode(this.element.nativeElement, this);\n    if (config) {\n      this._assignDefaults(config);\n    }\n    // Note that usually the container is assigned when the drop list is picks up the item, but in\n    // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n    // where there are no items on the first change detection pass, but the items get picked up as\n    // soon as the user triggers another pass by dragging. This is a problem, because the item would\n    // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n    // is too late since the two modes save different kinds of information. We work around it by\n    // assigning the drop container both from here and the list.\n    if (dropContainer) {\n      this._dragRef._withDropContainer(dropContainer._dropListRef);\n      dropContainer.addItem(this);\n      // The drop container reads this so we need to sync it here.\n      dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._dragRef.scale = this.scale;\n      });\n    }\n    this._syncInputs(this._dragRef);\n    this._handleEvents(this._dragRef);\n  }\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement() {\n    return this._dragRef.getPlaceholderElement();\n  }\n  /** Returns the root draggable element. */\n  getRootElement() {\n    return this._dragRef.getRootElement();\n  }\n  /** Resets a standalone drag item to its initial position. */\n  reset() {\n    this._dragRef.reset();\n  }\n  /**\n   * Gets the pixel coordinates of the draggable outside of a drop container.\n   */\n  getFreeDragPosition() {\n    return this._dragRef.getFreeDragPosition();\n  }\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value) {\n    this._dragRef.setFreeDragPosition(value);\n  }\n  ngAfterViewInit() {\n    // We need to wait until after render, in order for the reference\n    // element to be in the proper place in the DOM. This is mostly relevant\n    // for draggable elements inside portals since they get stamped out in\n    // their original DOM position, and then they get transferred to the portal.\n    afterNextRender(() => {\n      this._updateRootElement();\n      this._setupHandlesListener();\n      this._dragRef.scale = this.scale;\n      if (this.freeDragPosition) {\n        this._dragRef.setFreeDragPosition(this.freeDragPosition);\n      }\n    }, {\n      injector: this._injector\n    });\n  }\n  ngOnChanges(changes) {\n    const rootSelectorChange = changes['rootElementSelector'];\n    const positionChange = changes['freeDragPosition'];\n    // We don't have to react to the first change since it's being\n    // handled in the `afterNextRender` queued up in the constructor.\n    if (rootSelectorChange && !rootSelectorChange.firstChange) {\n      this._updateRootElement();\n    }\n    // Scale affects the free drag position so we need to sync it up here.\n    this._dragRef.scale = this.scale;\n    // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n    // constructor.\n    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n      this._dragRef.setFreeDragPosition(this.freeDragPosition);\n    }\n  }\n  ngOnDestroy() {\n    if (this.dropContainer) {\n      this.dropContainer.removeItem(this);\n    }\n    this._dragDropRegistry.removeDirectiveNode(this.element.nativeElement);\n    // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n    this._ngZone.runOutsideAngular(() => {\n      this._handles.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._dragRef.dispose();\n    });\n  }\n  _addHandle(handle) {\n    const handles = this._handles.getValue();\n    handles.push(handle);\n    this._handles.next(handles);\n  }\n  _removeHandle(handle) {\n    const handles = this._handles.getValue();\n    const index = handles.indexOf(handle);\n    if (index > -1) {\n      handles.splice(index, 1);\n      this._handles.next(handles);\n    }\n  }\n  _setPreviewTemplate(preview) {\n    this._previewTemplate = preview;\n  }\n  _resetPreviewTemplate(preview) {\n    if (preview === this._previewTemplate) {\n      this._previewTemplate = null;\n    }\n  }\n  _setPlaceholderTemplate(placeholder) {\n    this._placeholderTemplate = placeholder;\n  }\n  _resetPlaceholderTemplate(placeholder) {\n    if (placeholder === this._placeholderTemplate) {\n      this._placeholderTemplate = null;\n    }\n  }\n  /** Syncs the root element with the `DragRef`. */\n  _updateRootElement() {\n    const element = this.element.nativeElement;\n    let rootElement = element;\n    if (this.rootElementSelector) {\n      rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :\n      // Comment tag doesn't have closest method, so use parent's one.\n      element.parentElement?.closest(this.rootElementSelector);\n    }\n    if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      assertElementNode(rootElement, 'cdkDrag');\n    }\n    this._dragRef.withRootElement(rootElement || element);\n  }\n  /** Gets the boundary element, based on the `boundaryElement` value. */\n  _getBoundaryElement() {\n    const boundary = this.boundaryElement;\n    if (!boundary) {\n      return null;\n    }\n    if (typeof boundary === 'string') {\n      return this.element.nativeElement.closest(boundary);\n    }\n    return coerceElement(boundary);\n  }\n  /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n  _syncInputs(ref) {\n    ref.beforeStarted.subscribe(() => {\n      if (!ref.isDragging()) {\n        const dir = this._dir;\n        const dragStartDelay = this.dragStartDelay;\n        const placeholder = this._placeholderTemplate ? {\n          template: this._placeholderTemplate.templateRef,\n          context: this._placeholderTemplate.data,\n          viewContainer: this._viewContainerRef\n        } : null;\n        const preview = this._previewTemplate ? {\n          template: this._previewTemplate.templateRef,\n          context: this._previewTemplate.data,\n          matchSize: this._previewTemplate.matchSize,\n          viewContainer: this._viewContainerRef\n        } : null;\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.scale = this.scale;\n        ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : coerceNumberProperty(dragStartDelay);\n        ref.constrainPosition = this.constrainPosition;\n        ref.previewClass = this.previewClass;\n        ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');\n        if (dir) {\n          ref.withDirection(dir.value);\n        }\n      }\n    });\n    // This only needs to be resolved once.\n    ref.beforeStarted.pipe(take(1)).subscribe(() => {\n      // If we managed to resolve a parent through DI, use it.\n      if (this._parentDrag) {\n        ref.withParent(this._parentDrag._dragRef);\n        return;\n      }\n      // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n      // the item was projected into another item by something like `ngTemplateOutlet`.\n      let parent = this.element.nativeElement.parentElement;\n      while (parent) {\n        const parentDrag = this._dragDropRegistry.getDragDirectiveForNode(parent);\n        if (parentDrag) {\n          ref.withParent(parentDrag._dragRef);\n          break;\n        }\n        parent = parent.parentElement;\n      }\n    });\n  }\n  /** Handles the events from the underlying `DragRef`. */\n  _handleEvents(ref) {\n    ref.started.subscribe(startEvent => {\n      this.started.emit({\n        source: this,\n        event: startEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.released.subscribe(releaseEvent => {\n      this.released.emit({\n        source: this,\n        event: releaseEvent.event\n      });\n    });\n    ref.ended.subscribe(endEvent => {\n      this.ended.emit({\n        source: this,\n        distance: endEvent.distance,\n        dropPoint: endEvent.dropPoint,\n        event: endEvent.event\n      });\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(enterEvent => {\n      this.entered.emit({\n        container: enterEvent.container.data,\n        item: this,\n        currentIndex: enterEvent.currentIndex\n      });\n    });\n    ref.exited.subscribe(exitEvent => {\n      this.exited.emit({\n        container: exitEvent.container.data,\n        item: this\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        item: this,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n    });\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      dragStartDelay,\n      constrainPosition,\n      previewClass,\n      boundaryElement,\n      draggingDisabled,\n      rootElementSelector,\n      previewContainer\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.dragStartDelay = dragStartDelay || 0;\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n    if (constrainPosition) {\n      this.constrainPosition = constrainPosition;\n    }\n    if (previewClass) {\n      this.previewClass = previewClass;\n    }\n    if (boundaryElement) {\n      this.boundaryElement = boundaryElement;\n    }\n    if (rootElementSelector) {\n      this.rootElementSelector = rootElementSelector;\n    }\n    if (previewContainer) {\n      this.previewContainer = previewContainer;\n    }\n  }\n  /** Sets up the listener that syncs the handles with the drag ref. */\n  _setupHandlesListener() {\n    // Listen for any newly-added handles.\n    this._handles.pipe(\n    // Sync the new handles with the DragRef.\n    tap(handles => {\n      const handleElements = handles.map(handle => handle.element);\n      // Usually handles are only allowed to be a descendant of the drag element, but if\n      // the consumer defined a different drag root, we should allow the drag element\n      // itself to be a handle too.\n      if (this._selfHandle && this.rootElementSelector) {\n        handleElements.push(this.element);\n      }\n      this._dragRef.withHandles(handleElements);\n    }),\n    // Listen if the state of any of the handles changes.\n    switchMap(handles => {\n      return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n    }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n      // Enabled/disable the handle that changed in the DragRef.\n      const dragRef = this._dragRef;\n      const handle = handleInstance.element.nativeElement;\n      handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n    });\n  }\n  static ɵfac = function CdkDrag_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDrag)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDrag,\n    selectors: [[\"\", \"cdkDrag\", \"\"]],\n    hostAttrs: [1, \"cdk-drag\"],\n    hostVars: 4,\n    hostBindings: function CdkDrag_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n      }\n    },\n    inputs: {\n      data: [0, \"cdkDragData\", \"data\"],\n      lockAxis: [0, \"cdkDragLockAxis\", \"lockAxis\"],\n      rootElementSelector: [0, \"cdkDragRootElement\", \"rootElementSelector\"],\n      boundaryElement: [0, \"cdkDragBoundary\", \"boundaryElement\"],\n      dragStartDelay: [0, \"cdkDragStartDelay\", \"dragStartDelay\"],\n      freeDragPosition: [0, \"cdkDragFreeDragPosition\", \"freeDragPosition\"],\n      disabled: [2, \"cdkDragDisabled\", \"disabled\", booleanAttribute],\n      constrainPosition: [0, \"cdkDragConstrainPosition\", \"constrainPosition\"],\n      previewClass: [0, \"cdkDragPreviewClass\", \"previewClass\"],\n      previewContainer: [0, \"cdkDragPreviewContainer\", \"previewContainer\"],\n      scale: [2, \"cdkDragScale\", \"scale\", numberAttribute]\n    },\n    outputs: {\n      started: \"cdkDragStarted\",\n      released: \"cdkDragReleased\",\n      ended: \"cdkDragEnded\",\n      entered: \"cdkDragEntered\",\n      exited: \"cdkDragExited\",\n      dropped: \"cdkDragDropped\",\n      moved: \"cdkDragMoved\"\n    },\n    exportAs: [\"cdkDrag\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PARENT,\n      useExisting: CdkDrag\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDrag, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDrag]',\n      exportAs: 'cdkDrag',\n      host: {\n        'class': 'cdk-drag',\n        '[class.cdk-drag-disabled]': 'disabled',\n        '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n      },\n      providers: [{\n        provide: CDK_DRAG_PARENT,\n        useExisting: CdkDrag\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input,\n      args: ['cdkDragData']\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDragLockAxis']\n    }],\n    rootElementSelector: [{\n      type: Input,\n      args: ['cdkDragRootElement']\n    }],\n    boundaryElement: [{\n      type: Input,\n      args: ['cdkDragBoundary']\n    }],\n    dragStartDelay: [{\n      type: Input,\n      args: ['cdkDragStartDelay']\n    }],\n    freeDragPosition: [{\n      type: Input,\n      args: ['cdkDragFreeDragPosition']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    constrainPosition: [{\n      type: Input,\n      args: ['cdkDragConstrainPosition']\n    }],\n    previewClass: [{\n      type: Input,\n      args: ['cdkDragPreviewClass']\n    }],\n    previewContainer: [{\n      type: Input,\n      args: ['cdkDragPreviewContainer']\n    }],\n    scale: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDragScale',\n        transform: numberAttribute\n      }]\n    }],\n    started: [{\n      type: Output,\n      args: ['cdkDragStarted']\n    }],\n    released: [{\n      type: Output,\n      args: ['cdkDragReleased']\n    }],\n    ended: [{\n      type: Output,\n      args: ['cdkDragEnded']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDragEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDragExited']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDragDropped']\n    }],\n    moved: [{\n      type: Output,\n      args: ['cdkDragMoved']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n  /** Drop lists registered inside the group. */\n  _items = new Set();\n  /** Whether starting a dragging sequence from inside this group is disabled. */\n  disabled = false;\n  ngOnDestroy() {\n    this._items.clear();\n  }\n  static ɵfac = function CdkDropListGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropListGroup)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDropListGroup,\n    selectors: [[\"\", \"cdkDropListGroup\", \"\"]],\n    inputs: {\n      disabled: [2, \"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute]\n    },\n    exportAs: [\"cdkDropListGroup\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DROP_LIST_GROUP,\n      useExisting: CdkDropListGroup\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDropListGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropListGroup]',\n      exportAs: 'cdkDropListGroup',\n      providers: [{\n        provide: CDK_DROP_LIST_GROUP,\n        useExisting: CdkDropListGroup\n      }]\n    }]\n  }], null, {\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListGroupDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n  element = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _scrollDispatcher = inject(ScrollDispatcher);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _group = inject(CDK_DROP_LIST_GROUP, {\n    optional: true,\n    skipSelf: true\n  });\n  /** Emits when the list has been destroyed. */\n  _destroyed = new Subject();\n  /** Whether the element's scrollable parents have been resolved. */\n  _scrollableParentsResolved;\n  /** Keeps track of the drop lists that are currently on the page. */\n  static _dropLists = [];\n  /** Reference to the underlying drop list instance. */\n  _dropListRef;\n  /**\n   * Other draggable containers that this container is connected to and into which the\n   * container's items can be transferred. Can either be references to other drop containers,\n   * or their unique IDs.\n   */\n  connectedTo = [];\n  /** Arbitrary data to attach to this container. */\n  data;\n  /** Direction in which the list is oriented. */\n  orientation;\n  /**\n   * Unique ID for the drop zone. Can be used as a reference\n   * in the `connectedTo` of another `CdkDropList`.\n   */\n  id = inject(_IdGenerator).getId('cdk-drop-list-');\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis;\n  /** Whether starting a dragging sequence from this container is disabled. */\n  get disabled() {\n    return this._disabled || !!this._group && this._group.disabled;\n  }\n  set disabled(value) {\n    // Usually we sync the directive and ref state right before dragging starts, in order to have\n    // a single point of failure and to avoid having to use setters for everything. `disabled` is\n    // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n    // the user in a disabled state, so we also need to sync it as it's being set.\n    this._dropListRef.disabled = this._disabled = value;\n  }\n  _disabled;\n  /** Whether sorting within this drop list is disabled. */\n  sortingDisabled;\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate = () => true;\n  /** Functions that is used to determine whether an item can be sorted into a particular index. */\n  sortPredicate = () => true;\n  /** Whether to auto-scroll the view when the user moves their pointer close to the edges. */\n  autoScrollDisabled;\n  /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n  autoScrollStep;\n  /**\n   * Selector that will be used to resolve an alternate element container for the drop list.\n   * Passing an alternate container is useful for the cases where one might not have control\n   * over the parent node of the draggable items within the list (e.g. due to content projection).\n   * This allows for usages like:\n   *\n   * ```\n   * <div cdkDropList cdkDropListElementContainer=\".inner\">\n   *   <div class=\"inner\">\n   *     <div cdkDrag></div>\n   *   </div>\n   * </div>\n   * ```\n   */\n  elementContainerSelector;\n  /** Emits when the user drops an item inside the container. */\n  dropped = new EventEmitter();\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new EventEmitter();\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new EventEmitter();\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new EventEmitter();\n  /**\n   * Keeps track of the items that are registered with this container. Historically we used to\n   * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n   * well which means that we can't handle cases like dragging the headers of a `mat-table`\n   * correctly. What we do instead is to have the items register themselves with the container\n   * and then we sort them based on their position in the DOM.\n   */\n  _unsortedItems = new Set();\n  constructor() {\n    const dragDrop = inject(DragDrop);\n    const config = inject(CDK_DRAG_CONFIG, {\n      optional: true\n    });\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      assertElementNode(this.element.nativeElement, 'cdkDropList');\n    }\n    this._dropListRef = dragDrop.createDropList(this.element);\n    this._dropListRef.data = this;\n    if (config) {\n      this._assignDefaults(config);\n    }\n    this._dropListRef.enterPredicate = (drag, drop) => {\n      return this.enterPredicate(drag.data, drop.data);\n    };\n    this._dropListRef.sortPredicate = (index, drag, drop) => {\n      return this.sortPredicate(index, drag.data, drop.data);\n    };\n    this._setupInputSyncSubscription(this._dropListRef);\n    this._handleEvents(this._dropListRef);\n    CdkDropList._dropLists.push(this);\n    if (this._group) {\n      this._group._items.add(this);\n    }\n  }\n  /** Registers an items with the drop list. */\n  addItem(item) {\n    this._unsortedItems.add(item);\n    // Only sync the items while dragging since this method is\n    // called when items are being initialized one-by-one.\n    if (this._dropListRef.isDragging()) {\n      this._syncItemsWithRef();\n    }\n  }\n  /** Removes an item from the drop list. */\n  removeItem(item) {\n    this._unsortedItems.delete(item);\n    // This method might be called on destroy so we always want to sync with the ref.\n    this._syncItemsWithRef();\n  }\n  /** Gets the registered items in the list, sorted by their position in the DOM. */\n  getSortedItems() {\n    return Array.from(this._unsortedItems).sort((a, b) => {\n      const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n      // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n      // tslint:disable-next-line:no-bitwise\n      return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n    });\n  }\n  ngOnDestroy() {\n    const index = CdkDropList._dropLists.indexOf(this);\n    if (index > -1) {\n      CdkDropList._dropLists.splice(index, 1);\n    }\n    if (this._group) {\n      this._group._items.delete(this);\n    }\n    this._unsortedItems.clear();\n    this._dropListRef.dispose();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n  _setupInputSyncSubscription(ref) {\n    if (this._dir) {\n      this._dir.change.pipe(startWith(this._dir.value), takeUntil(this._destroyed)).subscribe(value => ref.withDirection(value));\n    }\n    ref.beforeStarted.subscribe(() => {\n      const siblings = coerceArray(this.connectedTo).map(drop => {\n        if (typeof drop === 'string') {\n          const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n          if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n          }\n          return correspondingDropList;\n        }\n        return drop;\n      });\n      if (this._group) {\n        this._group._items.forEach(drop => {\n          if (siblings.indexOf(drop) === -1) {\n            siblings.push(drop);\n          }\n        });\n      }\n      // Note that we resolve the scrollable parents here so that we delay the resolution\n      // as long as possible, ensuring that the element is in its final place in the DOM.\n      if (!this._scrollableParentsResolved) {\n        const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);\n        this._dropListRef.withScrollableParents(scrollableParents);\n        // Only do this once since it involves traversing the DOM and the parents\n        // shouldn't be able to change without the drop list being destroyed.\n        this._scrollableParentsResolved = true;\n      }\n      if (this.elementContainerSelector) {\n        const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n        if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n        }\n        ref.withElementContainer(container);\n      }\n      ref.disabled = this.disabled;\n      ref.lockAxis = this.lockAxis;\n      ref.sortingDisabled = this.sortingDisabled;\n      ref.autoScrollDisabled = this.autoScrollDisabled;\n      ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n      ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);\n    });\n  }\n  /** Handles events from the underlying DropListRef. */\n  _handleEvents(ref) {\n    ref.beforeStarted.subscribe(() => {\n      this._syncItemsWithRef();\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.entered.subscribe(event => {\n      this.entered.emit({\n        container: this,\n        item: event.item.data,\n        currentIndex: event.currentIndex\n      });\n    });\n    ref.exited.subscribe(event => {\n      this.exited.emit({\n        container: this,\n        item: event.item.data\n      });\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.sorted.subscribe(event => {\n      this.sorted.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        container: this,\n        item: event.item.data\n      });\n    });\n    ref.dropped.subscribe(dropEvent => {\n      this.dropped.emit({\n        previousIndex: dropEvent.previousIndex,\n        currentIndex: dropEvent.currentIndex,\n        previousContainer: dropEvent.previousContainer.data,\n        container: dropEvent.container.data,\n        item: dropEvent.item.data,\n        isPointerOverContainer: dropEvent.isPointerOverContainer,\n        distance: dropEvent.distance,\n        dropPoint: dropEvent.dropPoint,\n        event: dropEvent.event\n      });\n      // Mark for check since all of these events run outside of change\n      // detection and we're not guaranteed for something else to have triggered it.\n      this._changeDetectorRef.markForCheck();\n    });\n    merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Assigns the default input values based on a provided config object. */\n  _assignDefaults(config) {\n    const {\n      lockAxis,\n      draggingDisabled,\n      sortingDisabled,\n      listAutoScrollDisabled,\n      listOrientation\n    } = config;\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n    this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n    this.orientation = listOrientation || 'vertical';\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n  }\n  /** Syncs up the registered drag items with underlying drop list ref. */\n  _syncItemsWithRef() {\n    this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n  }\n  static ɵfac = function CdkDropList_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDropList)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDropList,\n    selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]],\n    hostAttrs: [1, \"cdk-drop-list\"],\n    hostVars: 7,\n    hostBindings: function CdkDropList_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n      }\n    },\n    inputs: {\n      connectedTo: [0, \"cdkDropListConnectedTo\", \"connectedTo\"],\n      data: [0, \"cdkDropListData\", \"data\"],\n      orientation: [0, \"cdkDropListOrientation\", \"orientation\"],\n      id: \"id\",\n      lockAxis: [0, \"cdkDropListLockAxis\", \"lockAxis\"],\n      disabled: [2, \"cdkDropListDisabled\", \"disabled\", booleanAttribute],\n      sortingDisabled: [2, \"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute],\n      enterPredicate: [0, \"cdkDropListEnterPredicate\", \"enterPredicate\"],\n      sortPredicate: [0, \"cdkDropListSortPredicate\", \"sortPredicate\"],\n      autoScrollDisabled: [2, \"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute],\n      autoScrollStep: [0, \"cdkDropListAutoScrollStep\", \"autoScrollStep\"],\n      elementContainerSelector: [0, \"cdkDropListElementContainer\", \"elementContainerSelector\"]\n    },\n    outputs: {\n      dropped: \"cdkDropListDropped\",\n      entered: \"cdkDropListEntered\",\n      exited: \"cdkDropListExited\",\n      sorted: \"cdkDropListSorted\"\n    },\n    exportAs: [\"cdkDropList\"],\n    features: [i0.ɵɵProvidersFeature([\n    // Prevent child drop lists from picking up the same group as their parent.\n    {\n      provide: CDK_DROP_LIST_GROUP,\n      useValue: undefined\n    }, {\n      provide: CDK_DROP_LIST,\n      useExisting: CdkDropList\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDropList, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkDropList], cdk-drop-list',\n      exportAs: 'cdkDropList',\n      providers: [\n      // Prevent child drop lists from picking up the same group as their parent.\n      {\n        provide: CDK_DROP_LIST_GROUP,\n        useValue: undefined\n      }, {\n        provide: CDK_DROP_LIST,\n        useExisting: CdkDropList\n      }],\n      host: {\n        'class': 'cdk-drop-list',\n        '[attr.id]': 'id',\n        '[class.cdk-drop-list-disabled]': 'disabled',\n        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n      }\n    }]\n  }], () => [], {\n    connectedTo: [{\n      type: Input,\n      args: ['cdkDropListConnectedTo']\n    }],\n    data: [{\n      type: Input,\n      args: ['cdkDropListData']\n    }],\n    orientation: [{\n      type: Input,\n      args: ['cdkDropListOrientation']\n    }],\n    id: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input,\n      args: ['cdkDropListLockAxis']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    sortingDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListSortingDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    enterPredicate: [{\n      type: Input,\n      args: ['cdkDropListEnterPredicate']\n    }],\n    sortPredicate: [{\n      type: Input,\n      args: ['cdkDropListSortPredicate']\n    }],\n    autoScrollDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkDropListAutoScrollDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    autoScrollStep: [{\n      type: Input,\n      args: ['cdkDropListAutoScrollStep']\n    }],\n    elementContainerSelector: [{\n      type: Input,\n      args: ['cdkDropListElementContainer']\n    }],\n    dropped: [{\n      type: Output,\n      args: ['cdkDropListDropped']\n    }],\n    entered: [{\n      type: Output,\n      args: ['cdkDropListEntered']\n    }],\n    exited: [{\n      type: Output,\n      args: ['cdkDropListExited']\n    }],\n    sorted: [{\n      type: Output,\n      args: ['cdkDropListSorted']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the preview template instance. */\n  data;\n  /** Whether the preview should preserve the same size as the item that is being dragged. */\n  matchSize = false;\n  constructor() {\n    this._drag?._setPreviewTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPreviewTemplate(this);\n  }\n  static ɵfac = function CdkDragPreview_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPreview)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragPreview,\n    selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]],\n    inputs: {\n      data: \"data\",\n      matchSize: [2, \"matchSize\", \"matchSize\", booleanAttribute]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PREVIEW,\n      useExisting: CdkDragPreview\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragPreview, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPreview]',\n      providers: [{\n        provide: CDK_DRAG_PREVIEW,\n        useExisting: CdkDragPreview\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }],\n    matchSize: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n  templateRef = inject(TemplateRef);\n  _drag = inject(CDK_DRAG_PARENT, {\n    optional: true\n  });\n  /** Context data to be added to the placeholder template instance. */\n  data;\n  constructor() {\n    this._drag?._setPlaceholderTemplate(this);\n  }\n  ngOnDestroy() {\n    this._drag?._resetPlaceholderTemplate(this);\n  }\n  static ɵfac = function CdkDragPlaceholder_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkDragPlaceholder)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkDragPlaceholder,\n    selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]],\n    inputs: {\n      data: \"data\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CDK_DRAG_PLACEHOLDER,\n      useExisting: CdkDragPlaceholder\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[cdkDragPlaceholder]',\n      providers: [{\n        provide: CDK_DRAG_PLACEHOLDER,\n        useExisting: CdkDragPlaceholder\n      }]\n    }]\n  }], () => [], {\n    data: [{\n      type: Input\n    }]\n  });\n})();\nconst DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];\nclass DragDropModule {\n  static ɵfac = function DragDropModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DragDropModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DragDropModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DragDrop],\n    imports: [CdkScrollableModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropModule, [{\n    type: NgModule,\n    args: [{\n      imports: DRAG_DROP_DIRECTIVES,\n      exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n      providers: [DragDrop]\n    }]\n  }], null, null);\n})();\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","<div\n  overlay-scrollbars\n  [options]=\"themeSignal()\"\n  [defer]\n  class=\"selected-expansion-panel-wrapper\"\n>\n  <div\n    cdkDropList\n    class=\"edit-program-list\"\n    (cdkDropListDropped)=\"drop($event)\"\n  >\n    <mat-accordion multi>\n      @for (\n        selectedExercise of selectedExercises();\n        track selectedExercise;\n        let i = $index\n      ) {\n        <!-- @for (selectedExercise of exercises; track selectedExercise; let i = $index) { -->\n        <mat-expansion-panel\n          class=\"exer-expansion-panel\"\n          cdkDrag\n          [cdkDragPreviewClass]=\"previewClass\"\n          [hideToggle]=\"false\"\n          [expanded]=\"isExpanded\"\n        >\n          <div\n            class=\"exercise-card-placeholder expansion-panel-placeholder\"\n            *cdkDragPlaceholder\n          ></div>\n          <mat-expansion-panel-header\n            collapsedHeight=\"80px\"\n            class=\"exer-expansion-panel-header\"\n          >\n            <div class=\"expansion-panel-handle\" cdkDragHandle>\n              <span class=\"handle-number\">{{ i + 1 }}</span>\n\n              <span>\n                <!-- <mat-icon>drag_handle</mat-icon> -->\n                <mat-icon>drag_indicator</mat-icon>\n              </span>\n            </div>\n            <mat-panel-title>\n              <div class=\"img-wrapper expanded-panels\">\n                <img\n                  class=\"selected-exercise-img expansion-img\"\n                  [src]=\"selectedExercise.images?.mainImg\"\n                  [alt]=\"selectedExercise.name[selectedLanguage]\"\n                />\n              </div>\n              <span class=\"title-name mat-body-medium\">{{\n                selectedExercise.name[selectedLanguage]\n              }}</span>\n              <!-- <button\n              (click)=\" $event.stopPropagation(); showExerciseModal(selectedExercise.id, selectedExercise)\"\n              mat-icon-button\n              matTooltip=\"Details\"\n              aria-label=\"Info icon-button with a info icon\"\n            >\n              <mat-icon>info</mat-icon>\n            </button> -->\n            </mat-panel-title>\n            <mat-panel-description class=\"panel-description\">\n              <div class=\"session-overview mat-body-medium\">\n                <!-- @if (selectedExercise.sets) { -->\n                <div>\n                  <span i18n=\"@@EditProgram.exerciseSets\">Sets: </span>\n                  <span>{{ selectedExercise.sets }}</span>\n                </div>\n                <!-- } -->\n                <!-- @if (selectedExercise.reps) { -->\n                <div>\n                  <span i18n=\"@@EditProgram.exerciseReps\">Reps: </span>\n                  <span>{{ selectedExercise.reps }}</span>\n                </div>\n                <!-- } -->\n                @if (selectedExercise.pause) {\n                  <div>\n                    <span i18n=\"@@EditProgram.exercisePause\">Pause: </span>\n                    <span>{{ selectedExercise.pause }}</span>\n                  </div>\n                }\n                @if (selectedExercise.weight) {\n                  <div>\n                    <span i18n=\"@@EditProgram.exerciseWeight\">Weight: </span>\n                    <span>{{ selectedExercise.weight }}</span>\n                  </div>\n                }\n                @if (selectedExercise.equipments.length !== 0) {\n                  <div>\n                    <span i18n=\"@@EditProgram.exerciseEquipment\">Eq: </span>\n                    @for (\n                      equipment of selectedExercise.equipments;\n                      track equipment;\n                      let last = $last\n                    ) {\n                      <span>{{\n                        equipment.translations[selectedLanguage]\n                      }}</span>\n                      @if (!last) {\n                        <span>, </span>\n                      }\n                    }\n                  </div>\n                }\n              </div>\n              <div class=\"options-wrapper\">\n                <!-- <button\n                (click)=\"\n                  $event.stopPropagation(); removeFromSelected(selectedExercise);\n                \"\n                mat-icon-button\n                matTooltip=\"Delete\"\n                aria-label=\"Delete icon-button with a delete icon\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button> -->\n                <button\n                  (click)=\"\n                    $event.stopPropagation();\n                    removeFromSelected(selectedExercise)\n                  \"\n                  mat-icon-button\n                  matTooltip=\"Delete\"\n                  i18n-matTooltip=\"@@EditProgram.removeExerciseTooltip\"\n                  aria-label=\"Delete icon-button with a delete icon\"\n                  i18n-aria-label=\"@@EditProgram.removeExerciseAriaLabel\"\n                >\n                  <mat-icon>delete_outline</mat-icon>\n                </button>\n                <button\n                  (click)=\"\n                    $event.stopPropagation();\n                    showExerciseModal(\n                      selectedExercise.id,\n                      selectedExercise,\n                      false\n                    )\n                  \"\n                  mat-icon-button\n                  matTooltip=\"Details\"\n                  i18n-matTooltip=\"@@EditProgram.detailsTooltip\"\n                  aria-label=\"Info icon-button with a info icon\"\n                  i18n-aria-label=\"@@EditProgram.detailsAriaLabel\"\n                >\n                  <mat-icon>info_outline</mat-icon>\n                </button>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"panel-content\">\n            <div class=\"name-description-label\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exerciseName\">Name</mat-label>\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.name[selectedLanguage]\"\n                  type=\"text\"\n                  maxlength=\"100\"\n                  placeholder=\"Enter exercise name\"\n                  i18n-placeholder=\"@@EditProgram.exerciseNamePlaceholder\"\n                />\n              </mat-form-field>\n              <mat-form-field\n                appearance=\"outline\"\n                class=\"description-text-area\"\n              >\n                <mat-label i18n=\"@@EditProgram.exerciseDescription\"\n                  >Description</mat-label\n                >\n                <textarea\n                  matInput\n                  cdkTextareaAutosize\n                  placeholder=\"Enter exercise description\"\n                  i18n-placeholder=\"\n                    @@EditProgram.exerciseDescriptionPlaceholder\"\n                  [(ngModel)]=\"selectedExercise.description[selectedLanguage]\"\n                ></textarea>\n              </mat-form-field>\n            </div>\n            <div class=\"exercise-session\">\n              <mat-form-field appearance=\"outline\" class=\"panel-input\">\n                <mat-label i18n=\"@@EditProgram.exerciseSetsNoDots\"\n                  >Sets</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.sets\"\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"10\"\n                  value=\"10\"\n                />\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exerciseRepsNoDots\"\n                  >Repetitions</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.reps\"\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"10\"\n                  value=\"10\"\n                />\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exercisePauseNoDots\"\n                  >Pause</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.pause\"\n                  type=\"text\"\n                  placeholder=\"30s\"\n                />\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exerciseWeightNoDots\"\n                  >Weight</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.weight\"\n                  type=\"text\"\n                  placeholder=\"2kg\"\n                />\n              </mat-form-field>\n            </div>\n          </div>\n        </mat-expansion-panel>\n      }\n    </mat-accordion>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Exercise } from '../../models/exercise';\nimport {\n  MatExpansionPanel,\n  MatAccordion,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n  MatExpansionPanelDescription,\n} from '@angular/material/expansion';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  CdkDropList,\n  CdkDrag,\n  CdkDragPlaceholder,\n  CdkDragHandle,\n} from '@angular/cdk/drag-drop';\nimport { SelectedExercisesService } from '../../services/selected-exercises.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, Subscription } from 'rxjs';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ThemeManagerService } from '@slowautomobile/ui';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { FormsModule } from '@angular/forms';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExercisesService } from '../../services/exercises.service';\nimport { ExerciseModalComponent } from '../exercise-modal/exercise-modal.component';\nimport { LocalstorageService } from '@slowautomobile/users';\n\n@Component({\n  selector: 'exercises-selected-expansion-panel',\n  templateUrl: './selected-expansion-panel.component.html',\n  styleUrl: './selected-expansion-panel.component.scss',\n  imports: [\n    OverlayscrollbarsModule,\n    CdkDropList,\n    MatAccordion,\n    MatExpansionPanel,\n    CdkDrag,\n    CdkDragPlaceholder,\n    MatExpansionPanelHeader,\n    CdkDragHandle,\n    MatIcon,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatIconButton,\n    MatTooltip,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    FormsModule,\n    CdkTextareaAutosize,\n  ],\n})\nexport class SelectedExpansionPanelComponent implements OnInit, OnDestroy {\n  private selectedExercisesService = inject(SelectedExercisesService);\n  private _snackBar = inject(MatSnackBar);\n  dialog = inject(MatDialog);\n  private exercisesService = inject(ExercisesService);\n  private localstorageService = inject(LocalstorageService);\n\n  @Input() exercise!: Exercise;\n  // @Input() programName!: string;\n  previewClass = 'expansion-panel-custom-preview';\n\n  @ViewChildren(MatExpansionPanel) panels!: QueryList<MatExpansionPanel>;\n  selectedExercises = this.selectedExercisesService.selectedExercises;\n  removedExercise?: Exercise | null;\n  isExpanded = false;\n  subscriptions = new Subscription();\n  selectedLanguage!: 'en' | 'de' | 'sr';\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n  }\n\n  togglePanel(index: number) {\n    // Use the index to get the specific panel reference from the array and toggle its state\n    const panelToToggle = this.panels.toArray()[index];\n\n    if (panelToToggle) {\n      panelToToggle.toggle();\n    }\n  }\n\n  private _getExercise(exerciseId: string): Observable<Exercise> {\n    return this.exercisesService.getExercise(exerciseId);\n  }\n\n  showExerciseModal(\n    exerciseId: string,\n    exerciseCard: Exercise,\n    isProgramExercise: boolean,\n  ): void {\n    const subscription = this._getExercise(exerciseId).subscribe(exercise => {\n      this.dialog.open(ExerciseModalComponent, {\n        data: {\n          fullExercise: exercise,\n          exerciseCard: exerciseCard,\n          isProgramExercise: isProgramExercise,\n          selectedLang: this.selectedLanguage,\n        },\n        width: '500px',\n        // height: '736px',\n        panelClass: ['custom-dialog', isProgramExercise ? 'custom-shadow' : ''],\n        // disableClose: isProgramExercise,\n        // hasBackdrop: isProgramExercise ? false : true,\n        backdropClass: isProgramExercise ? 'custom-backdrop' : '',\n        // enterAnimationDuration: 0,\n      });\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(\n      this.selectedExercises(),\n      event.previousIndex,\n      event.currentIndex,\n    );\n  }\n\n  // Remove and undo with message snackbar\n  removeFromSelected(exercise: Exercise) {\n    this.selectedExercisesService.removeFromSelected(exercise);\n    this.removedExercise = exercise;\n\n    // Can't set custom style correctly; wait for m3 ng material, until then snackBar component or CHANGE COMPLETE MATERIAL THEME!!!\n    const snackBarRef = this._snackBar.open(\n      $localize`:@@Snackbar.exerciseDeleted:Exercise deleted`,\n      $localize`:@@Snackbar.undoButton:Undo`,\n      {\n        duration: 4000,\n        panelClass: ['custom-snackbar-style'],\n      },\n    );\n\n    // Listen for the Undo action\n    const subscription = snackBarRef\n      .onAction()\n      .subscribe(() => this.undoRemove());\n    this.subscriptions.add(subscription);\n\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  undoRemove(): void {\n    if (this.removedExercise) {\n      // Add the removed item back to its original position\n      // this.items.splice(this.removedItem.index, 0, this.removedItem.value);\n      this.selectedExercisesService.addToSelected(this.removedExercise);\n\n      // Reset the removedItem reference\n      this.removedExercise = null;\n    }\n  }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","@let isClientTable = isClient();\n\n<div\n  class=\"table-wrapper basic-table-wrapper\"\n  [class.no-client]=\"!isClientTable\"\n>\n  <div\n    class=\"programs-filter-container all-programs-input-wrapp\"\n    [style.display]=\"!isClientTable ? 'block' : ''\"\n  >\n    <div class=\"all-program-list-title\">\n      @if (isClientTable) {\n        <h3\n          class=\"mat-title-large\"\n          i18n=\"@@ClientFormBasicProgramsTable.titlePlaceholder\"\n        >\n          List of program templates\n        </h3>\n      }\n    </div>\n    @if (isClientTable) {\n      <mat-divider\n        vertical\n        style=\"display: inline-block; height: 24px\"\n      ></mat-divider>\n    }\n    <mat-form-field appearance=\"outline\" class=\"basic-program-filter\">\n      <mat-label i18n=\"@@ClientFormBasicProgramsTable.searchInputLabel\"\n        >Search</mat-label\n      >\n      <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Ex. Seated back stretch\"\n        i18n-placeholder=\"@@ClientFormBasicProgramsTable.searchInputPlaceholder\"\n        #input\n      />\n    </mat-form-field>\n  </div>\n\n  <!-- <div class=\"mat-elevation-z8 programs-table\"> -->\n  <div class=\"programs-table\" [style.height]=\"!isClientTable ? 'auto' : ''\">\n    <div\n      overlay-scrollbars\n      [options]=\"themeSignal()\"\n      [defer]\n      class=\"table-scroll-container\"\n      [style.height]=\"!isClientTable ? 'auto' : ''\"\n    >\n      <!-- @if (!isFetchingData()) { -->\n      <table\n        mat-table\n        class=\"mat-basic-program-table\"\n        [dataSource]=\"dataSource\"\n        matSort\n      >\n        <!-- ID Column -->\n        <!-- <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container> -->\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            mat-sort-header\n            i18n=\"@@ClientFormBasicProgramsTable.tableColumnName\"\n          >\n            Name\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <span class=\"name-cell-width\">{{ row.name }}</span>\n          </td>\n        </ng-container>\n        <!-- Options Column -->\n        <ng-container matColumnDef=\"options\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div class=\"program-options\">\n              <button\n                mat-icon-button\n                matTooltip=\"View\"\n                i18n-matTooltip=\"\n                  @@ClientFormBasicProgramsTable.viewButtonTooltip\"\n                aria-label=\"View icon button\"\n                i18n-aria-label=\"\n                  @@ClientFormBasicProgramsTable.viewButtonAriaLabel\"\n                (click)=\"viewProgramModal(row.id)\"\n              >\n                <mat-icon>visibility</mat-icon>\n              </button>\n              @if (isClientTable) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Add to client\"\n                  i18n-matTooltip=\"\n                    @@ClientFormBasicProgramsTable.addToClientButtonTooltip\"\n                  aria-label=\"Add icon button\"\n                  i18n-aria-label=\"\n                    @@ClientFormBasicProgramsTable.addToClientButtonAriaLabel\"\n                  (click)=\"addProgramToClient(row.id)\"\n                >\n                  <mat-icon>add</mat-icon>\n                </button>\n              }\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          class=\"table-rows truncate\"\n        ></tr>\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td\n            class=\"mat-cell\"\n            colspan=\"4\"\n            i18n=\"@@ClientFormBasicProgramsTable.noDataMatching\"\n          >\n            No data matching the filter \"{{ input.value }}\"\n          </td>\n        </tr>\n      </table>\n      <!-- } @else {\n        <div class=\"programs-table-skeleton\">\n          <div class=\"row-skeleton\" style=\"height: 48px; margin-top: 8px\">\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n          </div>\n          <div class=\"row-skeleton\">\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n      } -->\n    </div>\n\n    <mat-paginator\n      class=\"mat-basic-program-paginator\"\n      pageSize=\"10\"\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      aria-label=\"Select page of programs\"\n      i18n-aria-label=\"\n        @@ClientFormBasicProgramsTable.selectPageOfProgramsAriaLabel\"\n    ></mat-paginator>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  inject,\n  Input,\n  ViewChild,\n  output,\n  input,\n} from '@angular/core';\nimport {\n  MatPaginator,\n  MatPaginatorIntl,\n  MatPaginatorModule,\n} from '@angular/material/paginator';\nimport { MatSort, MatSortHeader } from '@angular/material/sort';\nimport {\n  MatTableDataSource,\n  MatTable,\n  MatColumnDef,\n  MatHeaderCellDef,\n  MatHeaderCell,\n  MatCellDef,\n  MatCell,\n  MatHeaderRowDef,\n  MatHeaderRow,\n  MatRowDef,\n  MatRow,\n  MatNoDataRow,\n} from '@angular/material/table';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { Program, ShareStateService } from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatDivider } from '@angular/material/divider';\nimport { PaginatorI18nService } from '../../services/paginator-i18n.service';\n\n@Component({\n  selector: 'ui-basic-programs-table',\n  templateUrl: './basic-programs-table.component.html',\n  styleUrl: './basic-programs-table.component.scss',\n  imports: [\n    MatDivider,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    OverlayscrollbarsModule,\n    MatTable,\n    MatSort,\n    MatColumnDef,\n    MatHeaderCellDef,\n    MatHeaderCell,\n    MatSortHeader,\n    MatCellDef,\n    MatCell,\n    MatIconButton,\n    MatTooltip,\n    MatIcon,\n    MatHeaderRowDef,\n    MatHeaderRow,\n    MatRowDef,\n    MatRow,\n    MatNoDataRow,\n    MatPaginatorModule,\n  ],\n  providers: [{ provide: MatPaginatorIntl, useClass: PaginatorI18nService }],\n})\nexport class BasicProgramsTableComponent implements AfterViewInit {\n  private shareStateService = inject(ShareStateService);\n\n  // isFetchingData = this.shareStateService.isFetchingData;\n\n  displayedColumns: string[] = ['name', 'options'];\n  @Input() dataSource = new MatTableDataSource<Program>();\n  isClient = input<boolean>();\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  readonly getProgramsEvent = output<string>();\n\n  readonly viewProgramEvent = output<string>();\n  readonly addProgramToClientEvent = output<string>();\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  getPrograms(listOption: string) {\n    console.log(this.dataSource.data);\n    this.getProgramsEvent.emit(listOption);\n    console.log(this.dataSource.data);\n  }\n\n  viewProgramModal(programId: string) {\n    this.viewProgramEvent.emit(programId);\n    // console.log('this is open view program', programId);\n  }\n\n  addProgramToClient(programId: string) {\n    this.addProgramToClientEvent.emit(programId);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n"]}