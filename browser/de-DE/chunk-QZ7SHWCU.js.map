{"version":3,"mappings":"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","names":["ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","NavigationRailComponent","_NavigationRailComponent","constructor","shareDataService","inject","ShareDataService","shareStateService","ShareStateService","router","Router","tokenService","LocalstorageService","usersService","UsersService","themeManager","ThemeManagerService","activePageTitle","ActivePageService","screenSizeService","ScreenSizeService","screenSize","pageTitle","themeSignal","customScrollbarOptions","isDark","navDrawerToggler","userId","isAdmin","userFavorites","userName","subscriptions","Subscription","ngOnInit","drawerOpen","drawerSignal","getUserInfo","computed","toggleNavDrawer","toggleDrawer","update","value","onBackdropClick","token","getToken","tokenDecode","JSON","parse","atob","split","set","_getFavorites","subscription","getFavorites","subscribe","favorites","console","log","add","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","i18n_0","ɵɵelement","ɵɵtext","ɵɵtemplate","NavigationRailComponent_Conditional_14_Template","NavigationRailComponent_Conditional_15_Template","NavigationRailComponent_Conditional_20_Template","NavigationRailComponent_Conditional_21_Template","NavigationRailComponent_Conditional_26_Template","NavigationRailComponent_Conditional_27_Template","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c0","tmp_1_0","ctx","isCompact","ɵɵpureFunction1","_c1","ɵɵstyleProp","tmp_4_0","ɵɵconditional","tmp_11_0","tmp_12_0","MatIcon","MatTooltip","RouterLink","MatSidenavContainer","MatSidenav","MatNavList","NgClass","MatFabButton","RouterLinkActive","MatSidenavContent","RouterOutlet","ToolbarButtonsComponent","OverlayscrollbarsModule","OverlayScrollbarsComponent","styles","className","filePath","lineNumber"],"ignoreList":[],"sources":["apps/sanare-app/src/app/shared/navigation-rail/navigation-rail.component.html","apps/sanare-app/src/app/shared/navigation-rail/navigation-rail.component.ts"],"sourcesContent":["<!-- @if (screenSize()?.isCompact === false) { -->\n<ui-toolbar-buttons></ui-toolbar-buttons>\n<!-- } -->\n\n<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    [ngClass]=\"{\n      'bottom-sidenav': screenSize()?.isCompact,\n      'bottom-sidenav-container': screenSize()?.isCompact,\n    }\"\n    [attr.role]=\"screenSize()?.isCompact ? 'dialog' : 'navigation'\"\n    mode=\"side\"\n    opened=\"true\"\n  >\n    <mat-nav-list\n      class=\"custom-nav\"\n      [ngClass]=\"{ 'expanded-custom-nav': navDrawerToggler }\"\n    >\n      <!-- @if (navDrawerToggler) {\n        <p style=\"white-space: nowrap\">\n          Lorem, ipsum dolor sit amet consectetur.\n        </p>\n      } -->\n\n      <div class=\"nav-drawer\">\n        <!-- ------------------------------------------------ -->\n        <!-- DISABLED IN DEMO, ADD FUNCTIONALITY WITH ALGOLIA -->\n        <div\n          i18n-matTooltip=\"@@NavigationRail.searchButtonDisabledMsg\"\n          matTooltip=\"Disabled in demo\"\n          style=\"margin-bottom: 30px; visibility: hidden\"\n          [style.display]=\"screenSize()?.isCompact ? 'none' : ''\"\n        >\n          <button\n            mat-fab\n            class=\"custom-fab\"\n            aria-label=\"Search icon button\"\n            i18n-aria-label=\"@@NavigationRail.searchButtonAriaLabel\"\n          >\n            <mat-icon>search</mat-icon>\n          </button>\n        </div>\n        <!-- ------------------------------------------------ -->\n        <div class=\"nav-list-wrapper\">\n          <a\n            class=\"nav-list\"\n            routerLink=\"dashboard\"\n            routerLinkActive=\"active-link\"\n          >\n            <mat-icon\n              aria-label=\"Sidenav dashboard icon\"\n              i18n-aria-label=\"@@NavigationRail.sidenavDashboardAriaLabel\"\n              >grid_view</mat-icon\n            >\n            @if (navDrawerToggler) {\n              <span i18n=\"@@NavigationRail.dashboardBtn\">Dashboard</span>\n            }\n          </a>\n          @if (!navDrawerToggler) {\n            <span i18n=\"@@NavigationRail.dashboardBtn\">Dashboard</span>\n          }\n        </div>\n        <div class=\"nav-list-wrapper\">\n          <a\n            class=\"nav-list\"\n            routerLink=\"clients\"\n            routerLinkActive=\"active-link\"\n          >\n            <mat-icon\n              aria-label=\"Sidenav clients icon\"\n              i18n-aria-label=\"@@NavigationRail.sidenavClientsAriaLabel\"\n              >people_outline</mat-icon\n            >\n            @if (navDrawerToggler) {\n              <span i18n=\"@@NavigationRail.clientsBtn\">Clients</span>\n            }\n          </a>\n          @if (!navDrawerToggler) {\n            <span i18n=\"@@NavigationRail.clientsBtn\">Clients</span>\n          }\n        </div>\n        <div class=\"nav-list-wrapper\">\n          <a\n            class=\"nav-list\"\n            routerLink=\"programs\"\n            routerLinkActive=\"active-link\"\n          >\n            <mat-icon\n              aria-label=\"Sidenav programs icon\"\n              i18n-aria-label=\"@@NavigationRail.sidenavProgramsAriaLabel\"\n              >list</mat-icon\n            >\n            @if (navDrawerToggler) {\n              <span i18n=\"@@NavigationRail.programsBtn\">Programs</span>\n            }\n          </a>\n          @if (!navDrawerToggler) {\n            <span i18n=\"@@NavigationRail.programsBtn\">Programs</span>\n          }\n        </div>\n      </div>\n      <!-- <a class=\"nav-list\" routerLink=\"exercises\" routerLinkActive=\"active-link\"\n          ><mat-icon aria-label=\"Side nav toggle icon\">directions_run</mat-icon>\n          <span>Exercises</span>\n        </a> -->\n      <!-- <a class=\"nav-list\" routerLink=\"settings\" routerLinkActive=\"active-link\"\n          ><mat-icon aria-label=\"Side nav toggle icon\">settings</mat-icon>\n          <span>Settings</span>\n        </a> -->\n      <!-- </div> -->\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content class=\"navigation-sidenav\">\n    <!-- Add Content Here -->\n    <div\n      class=\"main\"\n      overlay-scrollbars\n      [options]=\"\n        screenSize()?.isCompact ? themeSignal() : customScrollbarOptions()\n      \"\n      [defer]\n    >\n      <router-outlet></router-outlet>\n    </div>\n    <footer [style.display]=\"screenSize()?.isCompact ? 'none' : ''\">\n      <p>Copyright © 2025 Marko Bokan. All Rights Reserved.</p>\n    </footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnDestroy, OnInit, computed, inject } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ShareDataService, ShareStateService } from '@slowautomobile/exercises';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { UsersService, LocalstorageService } from '@slowautomobile/users';\nimport {\n  Router,\n  RouterLink,\n  RouterLinkActive,\n  RouterOutlet,\n} from '@angular/router';\nimport { NgClass } from '@angular/common';\nimport { MatNavList } from '@angular/material/list';\nimport {\n  MatSidenavContainer,\n  MatSidenav,\n  MatSidenavContent,\n} from '@angular/material/sidenav';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatFabButton } from '@angular/material/button';\nimport {\n  ActivePageService,\n  ScreenSizeService,\n  ThemeManagerService,\n  ToolbarButtonsComponent,\n} from '@slowautomobile/ui';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\n\n@Component({\n  selector: 'sanareapp-navigation-rail',\n  templateUrl: './navigation-rail.component.html',\n  styleUrls: ['./navigation-rail.component.scss'],\n  imports: [\n    MatIcon,\n    MatTooltip,\n    RouterLink,\n    MatSidenavContainer,\n    MatSidenav,\n    MatNavList,\n    NgClass,\n    MatFabButton,\n    RouterLinkActive,\n    MatSidenavContent,\n    RouterOutlet,\n    ToolbarButtonsComponent,\n    OverlayscrollbarsModule,\n  ],\n})\nexport class NavigationRailComponent implements OnInit, OnDestroy {\n  private shareDataService = inject(ShareDataService);\n  private shareStateService = inject(ShareStateService);\n  // private authService = inject(AuthService);\n  private router = inject(Router);\n  private tokenService = inject(LocalstorageService);\n  private usersService = inject(UsersService);\n  themeManager = inject(ThemeManagerService);\n  activePageTitle = inject(ActivePageService);\n  private screenSizeService = inject(ScreenSizeService);\n\n  screenSize = this.screenSizeService.screenSize;\n  pageTitle = this.activePageTitle.pageTitle;\n  themeSignal = this.themeManager.themeSignal;\n  customScrollbarOptions = this.themeManager.customScrollbarOptions;\n  isDark = this.themeManager.isDark;\n  drawerOpen!: any;\n  navDrawerToggler = false;\n  userId = this.usersService.userId;\n  isAdmin = this.usersService.isAdmin;\n  userFavorites = this.usersService.userFavorites;\n  userName = this.usersService.userName;\n  subscriptions = new Subscription();\n\n  // HOW IS THIS WORKING??\n  ngOnInit(): void {\n    // Assign drawer state signal\n    this.drawerOpen = this.shareStateService.drawerSignal;\n    this.getUserInfo();\n    // BehaviorSubject drawer state\n    // this.shareDataService.toggleDrawerSignal$.subscribe(drawerSignal => {\n    //   this.drawerOpen = drawerSignal;\n\n    // });\n    // Check for preffered system theme and set app theme\n    computed(() => this.isDark());\n  }\n\n  // getInitial(name: string): string {\n  //   return name.trim().charAt(0).toUpperCase();\n  // }\n\n  toggleNavDrawer() {\n    this.navDrawerToggler = !this.navDrawerToggler;\n  }\n\n  toggleDrawer() {\n    // BehaviorSubject drawer state\n    // this.shareDataService.updateToggleDrawerResults(!this.drawerOpen);\n\n    this.shareStateService.drawerSignal.update(value => !value);\n  }\n\n  onBackdropClick() {\n    // BehaviorSubject toggle drawer state\n    // this.shareDataService.updateToggleDrawerResults(!this.drawerOpen);\n\n    // Toggle signal drawer state\n    this.shareStateService.drawerSignal.update(value => !value);\n  }\n\n  getUserInfo() {\n    const token = this.tokenService.getToken('jwtToken');\n\n    if (token) {\n      const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n      // Set global signal for logged user\n      this.userId.set(tokenDecode.userId);\n      this.isAdmin.set(tokenDecode.isAdmin);\n\n      this._getFavorites(this.userId());\n    }\n  }\n\n  _getFavorites(userId: string) {\n    // Set user favorites\n    const subscription = this.usersService\n      .getFavorites(userId)\n      .subscribe(favorites => {\n        console.log('Favorites object on init: ', favorites);\n        this.userFavorites.set(favorites);\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  // editUser() {\n  //   const userId = this.getUserInfo();\n  //   this.router.navigateByUrl(`profile/form/${userId}`);\n\n  // }\n\n  // logoutUser() {\n  //   this.authService.logout();\n  // }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}