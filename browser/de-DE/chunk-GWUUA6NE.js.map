{"version":3,"mappings":"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","names":["ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","exercise","video","images","mainImg","ɵɵtext","ɵɵtextInterpolate","muscle_r2","bodyArea_r3","translations","selectedLanguage","movement_r4","startingPosition_r5","equipment_r6","FullExerciseComponent","_FullExerciseComponent","constructor","location","inject","Location","exercisesService","ExercisesService","localstorageService","LocalstorageService","themeManager","ThemeManagerService","programsService","ProgramsService","dialog","MatDialog","exerciseId","input","themeSignal","dataSourceAllPrograms","MatTableDataSource","subscriptions","Subscription","ngOnInit","_getUserLanguageToken","getExercise","subscribe","data","programs","getToken","split","viewProgramModal","programId","subscription","getProgram","program","dialogRef","open","ProgramModalComponent","width","title","selectedLang","isClient","panelClass","afterClosed","result","console","log","add","onBack","back","ngOnDestroy","unsubscribe","selectors","inputs","decls","vars","consts","i18n_0","ɵɵlistener","FullExerciseComponent_Template_ui_page_toolbar_cancelEvent_0_listener","ctx","ɵɵtemplate","FullExerciseComponent_Defer_2_Template","FullExerciseComponent_DeferPlaceholder_3_Template","ɵɵdefer","FullExerciseComponent_Defer_4_DepsFn","ɵɵdeferEnableTimerScheduling","ɵɵi18n","ɵɵrepeaterCreate","FullExerciseComponent_For_24_Template","ɵɵrepeaterTrackByIdentity","FullExerciseComponent_For_30_Template","FullExerciseComponent_For_36_Template","FullExerciseComponent_For_42_Template","FullExerciseComponent_For_48_Template","FullExerciseComponent_Template_ui_basic_programs_table_viewProgramEvent_50_listener","$event","name","description","ɵɵrepeater","muscles","bodyAreas","movements","startingPositions","equipments","CommonModule","PageToolbarComponent","MatChipsModule","MatChip","MatChipSet","OverlayscrollbarsModule","OverlayScrollbarsComponent","BasicProgramsTableComponent","styles","changeDetection","className","filePath","lineNumber"],"ignoreList":[],"sources":["apps/sanare-app/src/app/pages/exercises/full-exercise/full-exercise.component.html","apps/sanare-app/src/app/pages/exercises/full-exercise/full-exercise.component.ts"],"sourcesContent":["<ui-page-toolbar\n  [pageType]=\"'exercise'\"\n  [editMode]=\"true\"\n  (cancelEvent)=\"onBack()\"\n></ui-page-toolbar>\n<!-- @if (exercise$ | async; as exercise) { -->\n<div class=\"content-container\">\n  @defer {\n    <div class=\"exercise-video-wrapper\">\n      <ui-video-player\n        [videoSrc]=\"exercise.video\"\n        [thumbnail]=\"exercise.images?.mainImg\"\n        [isModal]=\"true\"\n      />\n    </div>\n  } @placeholder (minimum 500ms) {\n    <div class=\"video-skeleton-wrapper\">\n      <div class=\"video-skeleton\"></div>\n    </div>\n  }\n  <div\n    class=\"exercise-info-wrapper\"\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n  >\n    <div class=\"info-flex-container\">\n      <div class=\"dialog-content-wrapper\">\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.exerciseName\" class=\"label\"\n            >Exercise name:\n          </span>\n          <span class=\"category-value\">{{\n            exercise.name[selectedLanguage]\n          }}</span>\n        </div>\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.exerciseDescription\" class=\"label\"\n            >Description:\n          </span>\n          <span class=\"category-value\">{{\n            exercise.description[selectedLanguage]\n          }}</span>\n        </div>\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.muscles\" class=\"label\">Muscles: </span>\n          <mat-chip-set>\n            @for (muscle of exercise.muscles; track muscle) {\n              <mat-chip class=\"chips-category\">{{ muscle }}</mat-chip>\n            }\n          </mat-chip-set>\n        </div>\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.bodyAreas\" class=\"label\"\n            >Body areas:\n          </span>\n          <mat-chip-set>\n            @for (bodyArea of exercise.bodyAreas; track bodyArea) {\n              <mat-chip class=\"chips-category\">{{\n                bodyArea.translations?.[selectedLanguage]\n              }}</mat-chip>\n            }\n          </mat-chip-set>\n        </div>\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.movements\" class=\"label\"\n            >Movements:\n          </span>\n          <mat-chip-set>\n            @for (movement of exercise.movements; track movement) {\n              <mat-chip class=\"chips-category\">{{\n                movement.translations?.[selectedLanguage]\n              }}</mat-chip>\n            }\n          </mat-chip-set>\n        </div>\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.startingPositions\" class=\"label\"\n            >Starting positions:\n          </span>\n          <mat-chip-set>\n            @for (\n              startingPosition of exercise.startingPositions;\n              track startingPosition\n            ) {\n              <mat-chip class=\"chips-category\">{{\n                startingPosition.translations?.[selectedLanguage]\n              }}</mat-chip>\n            }\n          </mat-chip-set>\n        </div>\n        <div class=\"category-labels\">\n          <span i18n=\"@@ExerciseModal.equipment\" class=\"label\"\n            >Equipment:\n          </span>\n          <mat-chip-set>\n            @for (equipment of exercise.equipments; track equipment) {\n              <mat-chip class=\"chips-category\">{{\n                equipment.translations[selectedLanguage]\n              }}</mat-chip>\n            }\n          </mat-chip-set>\n        </div>\n      </div>\n      <div class=\"programs-wrapper\">\n        <ui-basic-programs-table\n          class=\"ui-programs-table\"\n          [dataSource]=\"dataSourceAllPrograms\"\n          [isClient]=\"false\"\n          (viewProgramEvent)=\"viewProgramModal($event)\"\n        ></ui-basic-programs-table>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- } -->\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  inject,\n  Injector,\n  input,\n  OnDestroy,\n  OnInit,\n  Signal,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { PageToolbarComponent } from '../../../../../../../libs/ui/src/lib/components/page-toolbar/page-toolbar.component';\nimport { Location } from '@angular/common';\nimport { ExercisesService } from '../../../../../../../libs/exercises/src/lib/services/exercises.service';\nimport { Exercise } from '../../../../../../../libs/exercises/src/lib/models/exercise';\nimport { Observable, Subscription } from 'rxjs';\nimport { LocalstorageService } from '@slowautomobile/users';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { VideoPlayerComponent } from '../../../../../../../libs/ui/src/lib/components/video-player/video-player.component';\nimport { ProgramModalComponent, ThemeManagerService } from '@slowautomobile/ui';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Program } from '../../../../../../../libs/exercises/src/lib/models/program';\nimport { BasicProgramsTableComponent } from '../../../../../../../libs/ui/src/lib/components/basic-programs-table/basic-programs-table.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProgramsService } from '../../../../../../../libs/exercises/src/lib/services/programs/programs.service';\n\n@Component({\n  selector: 'full-exercise',\n  imports: [\n    CommonModule,\n    PageToolbarComponent,\n    MatChipsModule,\n    VideoPlayerComponent,\n    OverlayscrollbarsModule,\n    BasicProgramsTableComponent,\n  ],\n  templateUrl: './full-exercise.component.html',\n  styleUrl: './full-exercise.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FullExerciseComponent implements OnInit, OnDestroy {\n  private location = inject(Location);\n  private exercisesService = inject(ExercisesService);\n  private localstorageService = inject(LocalstorageService);\n  themeManager = inject(ThemeManagerService);\n  private programsService = inject(ProgramsService);\n  dialog = inject(MatDialog);\n\n  exerciseId = input<string>('');\n  exercise$!: Observable<Exercise>;\n  exercise!: Exercise;\n  selectedLanguage!: 'en' | 'de' | 'sr';\n  themeSignal = this.themeManager.themeSignal;\n  dataSourceAllPrograms = new MatTableDataSource<Program>();\n  subscriptions = new Subscription();\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n\n    this.exercisesService.getExercise(this.exerciseId()).subscribe(exercise => {\n      this.exercise = exercise;\n\n      this.dataSourceAllPrograms.data = exercise.programs as Program[];\n    });\n  }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  viewProgramModal(programId: string) {\n    const subscription = this.programsService\n      .getProgram(programId)\n      .subscribe((program: any) => {\n        const dialogRef = this.dialog.open(ProgramModalComponent, {\n          width: '500px',\n          // height: '736px',\n          data: {\n            title: $localize`:@@ProgramModal.modalTitle:Program info`,\n            program: program,\n            selectedLang: this.selectedLanguage,\n            isClient: false,\n          },\n          // disableClose: true, // Disable closing when clicked outside\n          panelClass: 'custom-dialog',\n          // enterAnimationDuration: 0,\n        });\n\n        const subscription = dialogRef.afterClosed().subscribe(result => {\n          console.log('Program modal exited');\n        });\n        this.subscriptions.add(subscription);\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  onBack() {\n    this.location.back();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}