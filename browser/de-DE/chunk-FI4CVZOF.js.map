{"version":3,"mappings":"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","names":["ɵɵelementStart","ɵɵi18n","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","programData_r1","name","ɵɵelement","ɵɵproperty","ctx_r1","isDashboard","progress","ɵɵtextInterpolate1","ɵɵpipeBind2","dateRange","end","ɵɵlistener","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Conditional_0_Template_button_click_0_listener","$event","ɵɵrestoreView","_r3","ɵɵnextContext","$implicit","stopPropagation","ɵɵresetView","viewClientProgram","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Conditional_1_Template_button_click_0_listener","_r4","openEditClientProgram","ɵɵtemplate","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Conditional_0_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Conditional_1_Template","ɵɵconditional","isProgramCompleted","ɵ$index_11_r5","ClientsProgressComponent_Conditional_2_For_2_Conditional_6_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_7_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_8_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Template","ɵɵpureFunction0","_c0","_c1","program","clientName","ClientsProgressComponent_Conditional_2_Conditional_0_Template","ɵɵrepeaterCreate","ClientsProgressComponent_Conditional_2_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","programs","ClientsProgressComponent","_ClientsProgressComponent","constructor","input","openEditClientProgramEvent","output","programData","emit","console","log","selectors","inputs","outputs","decls","vars","consts","i18n_0","ClientsProgressComponent_Conditional_2_Template","ctx","MatList","NgClass","MatListSubheaderCssMatStyler","MatListItem","NgStyle","MatIcon","MatListItemIcon","MatListItemTitle","MatListItemLine","MatProgressBar","MatListItemMeta","MatIconButton","MatTooltip","DatePipe","styles","className","filePath","lineNumber"],"ignoreList":[],"sources":["libs/clients/src/lib/components/clients-progress/clients-progress.component.html","libs/clients/src/lib/components/clients-progress/clients-progress.component.ts"],"sourcesContent":["<div class=\"status-toggle\">\n  <mat-list\n    class=\"program-list\"\n    [ngClass]=\"isDashboard ? 'custom-height-background' : ''\"\n  >\n    @if (programs()) {\n      @if (!isDashboard) {\n        <span\n          mat-subheader\n          class=\"subheader-text mat-body-large\"\n          i18n=\"@@ClientsProgress.title\"\n          >Programs</span\n        >\n      }\n      @for (programData of programs(); track programData; let i = $index) {\n        <div class=\"list-item-wrapper\">\n          <mat-list-item\n            class=\"program-list-item\"\n            [ngStyle]=\"isDashboard ? { height: '78px' } : { height: '64px' }\"\n          >\n            <mat-icon matListItemIcon>{{\n              isDashboard ? 'account_circle' : 'description'\n            }}</mat-icon>\n            <span matListItemTitle>{{\n              programData.program\n                ? programData.program.name\n                : programData.clientName\n            }}</span>\n            <!-- Should this info be in clients progress bar on dashboard? -->\n            @if (isDashboard) {\n              <span matListItemLine class=\"status-tooltip\">{{\n                programData.name\n              }}</span>\n            }\n            @if (isProgramCompleted[i]) {\n              <!-- <span matListItemLine [matTooltip]=\"'Ended: ' + (program.dateRange.end | date: 'd MMM yyyy')\" class=\"status-tooltip\" style=\"background-color: #3f51b5;\">\n                    Completed\n                  </span> -->\n              <span\n                matListItemLine\n                class=\"status-tooltip progress-list-line\"\n                [ngClass]=\"!isDashboard ? 'progress-margin' : ''\"\n              >\n                <mat-progress-bar\n                  class=\"progress-bar\"\n                  [ngClass]=\"isDashboard ? 'dash-progress-width' : ''\"\n                  color=\"primary\"\n                  mode=\"determinate\"\n                  [value]=\"programData.progress\"\n                >\n                </mat-progress-bar>\n                <!-- <span\n                  class=\"status-icon-wrapper\"\n                  style=\"background-color: #3f51b5\"\n                  matTooltip=\"Completed\"\n                >\n                  <mat-icon\n                    aria-hidden=\"false\"\n                    aria-label=\"Done icon\"\n                    fontIcon=\"done\"\n                  ></mat-icon>\n                </span> -->\n                <!-- @if (!isDashboard) { -->\n                <span>\n                  <span i18n=\"@@ClientsProgress.programEnded\">Ended: </span>\n                  <span\n                    >{{ programData.dateRange.end | date: 'd MMM yyyy' }}\n                  </span>\n                </span>\n                <!-- } -->\n              </span>\n            } @else {\n              <!-- <span matListItemLine [matTooltip]=\"'Ends: ' + (program.dateRange.end | date: 'd MMM yyyy')\" class=\"status-tooltip\" style=\"background-color: #ff4081;\">In progress</span> -->\n              <span\n                matListItemLine\n                class=\"status-tooltip progress-list-line\"\n                [ngClass]=\"!isDashboard ? 'progress-margin' : ''\"\n              >\n                <!-- <span\n                  class=\"status-icon-wrapper\"\n                  style=\"background-color: #ff4081\"\n                  matTooltip=\"In progress\"\n                >\n                  <mat-icon\n                    aria-hidden=\"false\"\n                    aria-label=\"In progress icon\"\n                    fontIcon=\"autorenew\"\n                  ></mat-icon>\n                </span> -->\n                <mat-progress-bar\n                  class=\"progress-bar\"\n                  [ngClass]=\"isDashboard ? 'dash-progress-width' : ''\"\n                  color=\"accent\"\n                  mode=\"determinate\"\n                  [value]=\"programData.progress\"\n                >\n                </mat-progress-bar>\n                <!-- @if (!isDashboard) { -->\n                <span>\n                  <span i18n=\"@@ClientsProgress.programEnds\">Ends: </span>\n                  <span>\n                    {{ programData.dateRange.end | date: 'd MMM yyyy' }}\n                  </span>\n                </span>\n                <!-- } -->\n              </span>\n            }\n            <!-- It is a question if options should be available for every program, since there is one \"Switch to full edit\" button. For now, only view button is enabled -->\n            <span matListItemMeta class=\"list-action-button\">\n              <!-- <button\n                    mat-icon-button\n                    matTooltip=\"Details\"\n                    aria-label=\"Details icon button\"\n                    (click)=\"viewClientProgram()\"\n                  >\n                    <mat-icon>info_outline</mat-icon>\n                    <mat-icon>visibility</mat-icon>\n                  </button> -->\n              <!-- <button\n                    mat-icon-button\n                    matTooltip=\"Delete\"\n                    aria-label=\"Delete icon button\"\n                    (click)=\"deleteClientProgram()\"\n                  >\n                    <mat-icon>delete_outline</mat-icon>\n                  </button> -->\n            </span>\n          </mat-list-item>\n          @if (isDashboard) {\n            @if (isProgramCompleted[i]) {\n              <button\n                mat-icon-button\n                matTooltip=\"View\"\n                aria-label=\"View icon button\"\n                (click)=\"\n                  $event.stopPropagation(); viewClientProgram(programData)\n                \"\n              >\n                <mat-icon>visibility</mat-icon>\n              </button>\n            } @else {\n              <button\n                mat-icon-button\n                matTooltip=\"Edit\"\n                i18n-matTooltip=\"@@ClientsProgress.editProgramBtn\"\n                aria-label=\"Edit icon button\"\n                i18n-aria-label=\"@@ClientsProgress.editProgramBtnAriaLabel\"\n                (click)=\"\n                  $event.stopPropagation(); openEditClientProgram(programData)\n                \"\n              >\n                <mat-icon>edit</mat-icon>\n              </button>\n            }\n          }\n        </div>\n        <!-- <mat-divider></mat-divider> -->\n      }\n    }\n  </mat-list>\n</div>\n","import { Component, input, Input, output } from '@angular/core';\nimport { MatProgressBar } from '@angular/material/progress-bar';\nimport { Observable } from 'rxjs';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { NgClass, NgStyle, DatePipe } from '@angular/common';\nimport {\n  MatList,\n  MatListSubheaderCssMatStyler,\n  MatListItem,\n  MatListItemIcon,\n  MatListItemTitle,\n  MatListItemLine,\n  MatListItemMeta,\n} from '@angular/material/list';\n\n@Component({\n  selector: 'clients-progress',\n  templateUrl: './clients-progress.component.html',\n  styleUrl: './clients-progress.component.scss',\n  imports: [\n    MatList,\n    NgClass,\n    MatListSubheaderCssMatStyler,\n    MatListItem,\n    NgStyle,\n    MatIcon,\n    MatListItemIcon,\n    MatListItemTitle,\n    MatListItemLine,\n    MatProgressBar,\n    MatListItemMeta,\n    MatIconButton,\n    MatTooltip,\n    DatePipe,\n  ],\n})\nexport class ClientsProgressComponent {\n  programs = input<any>();\n  @Input() isProgramCompleted!: boolean[];\n  @Input() isDashboard!: boolean;\n  // @Input() backgroundColor: string = '';\n  // @Input() color!: ThemePalette;\n  // @Input() mode!: ProgressBarMode;\n  // @Input() value!: number;\n  // @Input() color!: ThemePalette;\n  readonly openEditClientProgramEvent = output();\n\n  // color!: ThemePalette;\n  // mode!: ProgressBarMode;\n  value!: number;\n  //  color!: ThemePalette;\n\n  /*  color: ThemePalette = 'primary';\n  // mode: ProgressBarMode = 'determinate';\n  value = 100;\n  bufferValue = 0; */\n\n  openEditClientProgram(programData: any) {\n    this.openEditClientProgramEvent.emit(programData);\n  }\n\n  viewClientProgram(programData: any) {\n    console.log(programData);\n  }\n}\n"]}