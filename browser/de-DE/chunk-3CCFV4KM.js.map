{"version":3,"mappings":"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","names":["ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","column_r2","label","ɵɵtextInterpolate","row_r3","name","email","ɵɵtemplate","ClientsListComponent_For_11_Conditional_0_Conditional_2_mat_cell_0_Conditional_1_Template","ClientsListComponent_For_11_Conditional_0_Conditional_2_mat_cell_0_Conditional_2_Template","ɵɵconditional","tmp_15_0","ctx_r3","screenSize","isCompact","ClientsListComponent_For_11_Conditional_0_Conditional_2_mat_cell_0_Template","element_r5","key","ClientsListComponent_For_11_Conditional_0_Conditional_3_mat_cell_0_Template","ɵɵelementContainerStart","ClientsListComponent_For_11_Conditional_0_mat_header_cell_1_Template","ClientsListComponent_For_11_Conditional_0_Conditional_2_Template","ClientsListComponent_For_11_Conditional_0_Conditional_3_Template","ɵɵproperty","tmp_13_0","ɵɵelement","ɵɵlistener","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Conditional_1_Template_button_click_1_listener","ɵɵrestoreView","_r6","row_r7","ɵɵnextContext","$implicit","ɵɵresetView","openEditClientDialog","id","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Conditional_1_Template_button_click_4_listener","openDeleteConfirmationDialog","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Conditional_2_Template_button_click_5_listener","_r8","ɵɵi18n","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Conditional_2_Template_button_click_10_listener","menu_r9","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Conditional_1_Template","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Conditional_2_Template","tmp_14_0","ClientsListComponent_For_11_Conditional_1_mat_header_cell_1_Template","ClientsListComponent_For_11_Conditional_1_mat_cell_2_Template","ClientsListComponent_For_11_Conditional_0_Template","ClientsListComponent_For_11_Conditional_1_Template","ɵɵi18nExp","input_r10","value","ɵɵpureFunction0","_c0","ClientsListComponent","_ClientsListComponent","constructor","pageType","clientsService","inject","ClientsService","_snackBar","MatSnackBar","dialog","MatDialog","router","Router","ActivePageService","screenSizeService","ScreenSizeService","pageTitle","columnName","columnEmail","columnPhone","displayedColumns","columnKeys","computed","filter","column","map","col","dataSource","MatTableDataSource","clients","subscriptions","Subscription","shareClientsDataService","ShareClientsDataService","clientInfo","themeManager","ThemeManagerService","themeSignal","console","log","getClients","ngOnInit","set","clientId","clientName","programPosition","programId","programName","dateRange","start","end","ngAfterViewInit","paginator","sort","createClient","navigateByUrl","subscription","getClientsBasic","subscribe","clientsList","data","add","applyFilter","event","filterValue","target","trim","toLowerCase","firstPage","itemId","dialogRef","open","DeleteConfirmationDialogComponent","width","title","message","panelClass","afterClosed","result","deleteClient","close","next","duration","error","e","complete","info","ngOnDestroy","unsubscribe","selectors","viewQuery","ClientsListComponent_Query","rf","ctx","MatSort","MatPaginator","provide","MatPaginatorIntl","useClass","PaginatorI18nService","decls","vars","consts","i18n_0","ClientsListComponent_Template_ui_page_toolbar_newEvent_0_listener","_r1","ClientsListComponent_Template_input_keyup_5_listener","$event","ɵɵrepeaterCreate","ClientsListComponent_For_11_Template","_forTrack0","ClientsListComponent_mat_header_row_12_Template","ClientsListComponent_mat_row_13_Template","ClientsListComponent_mat_row_14_Template","ClientsListComponent_Conditional_15_Template","ɵɵrepeater","tmp_9_0","PageToolbarComponent","MatFormField","MatLabel","MatInput","OverlayscrollbarsModule","OverlayScrollbarsComponent","MatTableModule","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatNoDataRow","MatSortModule","MatSortHeader","MatIconModule","MatIcon","MatTooltip","MatButtonModule","MatIconButton","MatPaginatorModule","MatMenuModule","MatMenu","MatMenuItem","MatMenuTrigger","styles","className","filePath","lineNumber"],"ignoreList":[],"sources":["apps/sanare-app/src/app/pages/clients/clients-list/clients-list.component.html","apps/sanare-app/src/app/pages/clients/clients-list/clients-list.component.ts"],"sourcesContent":["<ui-page-toolbar\n  [pageTitle]=\"pageTitle()\"\n  [pageType]=\"pageType\"\n  [newButton]=\"true\"\n  (newEvent)=\"createClient()\"\n></ui-page-toolbar>\n\n<div class=\"table-wrapper\">\n  <mat-form-field class=\"rounded-filter-input\" appearance=\"fill\">\n    <mat-label i18n=\"@@ClientsList.inputFilterLabel\">Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      i18n-placeholder=\"@@ClientsList.inputPlaceholder\"\n      placeholder=\"E.g. John Maurice\"\n      #input\n    />\n  </mat-form-field>\n\n  <!-- <div class=\"mat-elevation-z8 clients-table\"> -->\n  <div class=\"clients-table-container\">\n    <div\n      overlay-scrollbars\n      [options]=\"themeSignal()\"\n      [defer]\n      class=\"clients-list-table table-scroll-container\"\n    >\n      <mat-table class=\"mat-table-background\" [dataSource]=\"dataSource\" matSort>\n        @for (column of displayedColumns; track column.key) {\n          @if (column.key !== 'options') {\n            <ng-container [matColumnDef]=\"column.key\">\n              <mat-header-cell *matHeaderCellDef mat-sort-header>\n                {{ column.label }}</mat-header-cell\n              >\n              @if (screenSize()?.isCompact) {\n                <mat-cell *matCellDef=\"let row\" class=\"dynamic-cell\">\n                  @if (screenSize()?.isCompact) {\n                    <span class=\"mat-body-large\">{{ row.name }}</span>\n                    <span class=\"mat-body-medium-secondary\">{{\n                      row.email\n                    }}</span>\n                  } @else {\n                    {{ row.name }}\n                  }\n                </mat-cell>\n              } @else {\n                <mat-cell *matCellDef=\"let element\">\n                  {{ element[column.key] }}\n                </mat-cell>\n              }\n            </ng-container>\n          } @else {\n            <ng-container matColumnDef=\"options\">\n              <mat-header-cell *matHeaderCellDef></mat-header-cell>\n              <mat-cell *matCellDef=\"let row\" class=\"client-options\">\n                @if (!screenSize()?.isCompact) {\n                  <div>\n                    <button\n                      mat-icon-button\n                      matTooltip=\"Edit\"\n                      i18n-matTooltip=\"@@ClientsList.tableEditButtonTooltip\"\n                      aria-label=\"Edit icon button\"\n                      i18n-aria-label=\"@@ClientsList.tableEditButtonAriaLabel\"\n                      (click)=\"openEditClientDialog(row.id, row.name)\"\n                    >\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                    <button\n                      mat-icon-button\n                      matTooltip=\"Delete\"\n                      i18n-matTooltip=\"@@ClientsList.tableDeleteButtonTooltip\"\n                      aria-label=\"Delete icon button\"\n                      i18n-aria-label=\"@@ClientsList.tableDeleteButtonAriaLabel\"\n                      (click)=\"openDeleteConfirmationDialog(row.id)\"\n                    >\n                      <mat-icon>delete_outline</mat-icon>\n                    </button>\n                  </div>\n                } @else {\n                  <button\n                    mat-icon-button\n                    [matMenuTriggerFor]=\"menu\"\n                    aria-label=\"Example icon-button with a menu\"\n                  >\n                    <mat-icon>more_vert</mat-icon>\n                  </button>\n                  <mat-menu #menu=\"matMenu\">\n                    <button\n                      mat-menu-item\n                      style=\"min-width: 200px\"\n                      (click)=\"openEditClientDialog(row.id, row.name)\"\n                    >\n                      <mat-icon>edit</mat-icon>\n                      <span i18n=\"@@ClientsList.tableEditButtonTooltip\"\n                        >Edit</span\n                      >\n                    </button>\n                    <button\n                      mat-menu-item\n                      (click)=\"openDeleteConfirmationDialog(row.id)\"\n                    >\n                      <mat-icon>delete_outline</mat-icon>\n                      <span i18n=\"@@ClientsList.tableDeleteButtonTooltip\"\n                        >Delete</span\n                      >\n                    </button>\n                  </mat-menu>\n                }\n              </mat-cell>\n            </ng-container>\n          }\n        }\n\n        <mat-header-row *matHeaderRowDef=\"columnKeys()\"></mat-header-row>\n        <mat-row\n          *matRowDef=\"let row; columns: columnKeys()\"\n          class=\"table-rows\"\n        ></mat-row>\n        <!-- Row shown when there is no matching data. -->\n        <mat-row class=\"mat-row\" *matNoDataRow>\n          <td\n            class=\"mat-cell\"\n            colspan=\"4\"\n            i18n=\"@@ClientsList.tableNoMatchingData\"\n          >\n            No data matching the filter \"{{ input.value }}\"\n          </td>\n        </mat-row>\n      </mat-table>\n    </div>\n    @if (!screenSize()?.isCompact) {\n      <mat-paginator\n        pageSize=\"10\"\n        class=\"mat-paginator-background\"\n        [pageSizeOptions]=\"[5, 10, 25, 100]\"\n        i18n-aria-label=\"@@ClientsList.selectPageOfClientsAriaLabel\"\n        aria-label=\"Select page of clients\"\n      ></mat-paginator>\n    }\n  </div>\n</div>\n","/// <reference types=\"@angular/localize\" />\n\nimport {\n  AfterViewInit,\n  Component,\n  computed,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  ViewChild,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  MatPaginator,\n  MatPaginatorIntl,\n  MatPaginatorModule,\n} from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort, MatSortHeader, MatSortModule } from '@angular/material/sort';\nimport {\n  MatTableDataSource,\n  MatTable,\n  MatColumnDef,\n  MatHeaderCellDef,\n  MatHeaderCell,\n  MatCellDef,\n  MatCell,\n  MatHeaderRowDef,\n  MatHeaderRow,\n  MatRowDef,\n  MatRow,\n  MatNoDataRow,\n  MatTableModule,\n} from '@angular/material/table';\nimport {\n  Client,\n  ClientsService,\n  ShareClientsDataService,\n  ShareStateService,\n} from '@slowautomobile/exercises';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { DeleteConfirmationDialogComponent } from 'libs/ui/src/lib/components/deleteConfirmationDialog/deleteConfirmationDialog.component';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ShowClientModalComponent } from 'libs/clients/src/lib/components/show-client-modal/show-client-modal.component';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport {\n  ActivePageService,\n  PaginatorI18nService,\n  ScreenSizeService,\n  ThemeManagerService,\n} from '@slowautomobile/ui';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { PageToolbarComponent } from '@slowautomobile/ui';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@Component({\n  selector: 'sanareapp-clients-list',\n  templateUrl: './clients-list.component.html',\n  styleUrl: './clients-list.component.scss',\n  imports: [\n    PageToolbarComponent,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    OverlayscrollbarsModule,\n    MatTableModule,\n    MatSortModule,\n    MatIconModule,\n    MatTooltip,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatMenuModule,\n  ],\n  providers: [{ provide: MatPaginatorIntl, useClass: PaginatorI18nService }],\n})\nexport class ClientsListComponent implements OnInit, AfterViewInit, OnDestroy {\n  // Page info and inputs for ui-page-toolbar\n  // pageTitle = $localize`:@@ClientsList.pageTitle:Clients`;\n  // pageType = $localize`:@@ClientsList.pageType:client`;\n  pageType = 'client';\n\n  private clientsService = inject(ClientsService);\n  private _snackBar = inject(MatSnackBar);\n  dialog = inject(MatDialog);\n  private router = inject(Router);\n  // private shareStateService = inject(ShareStateService);\n  ActivePageService = inject(ActivePageService);\n  private screenSizeService = inject(ScreenSizeService);\n\n  // isFetchingData = this.shareStateService.isFetchingData;\n  screenSize = this.screenSizeService.screenSize;\n\n  pageTitle = this.ActivePageService.pageTitle;\n\n  columnName = $localize`:@@ClientsList.tableNameColumn:Name`;\n  columnEmail = $localize`:@@ClientsList.tableEmailColumn:Email`;\n  columnPhone = $localize`:@@ClientsList.tablePhoneColumn:Phone`;\n\n  displayedColumns: any[] = [\n    { key: 'name', label: this.columnName },\n    { key: 'email', label: this.columnEmail },\n    { key: 'phone', label: this.columnPhone },\n    { key: 'options', label: '' },\n  ];\n\n  columnKeys = computed(() => {\n    if (this.screenSize()?.isCompact) {\n      return this.displayedColumns\n        .filter(column => column.key !== 'phone' && column.key !== 'email')\n        .map(col => col.key);\n    } else {\n      return this.displayedColumns.map(col => col.key);\n    }\n  });\n\n  dataSource = new MatTableDataSource<Client>();\n  clients: Client[] = [];\n  removedClient!: any | null;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  subscriptions = new Subscription();\n  private shareClientsDataService = inject(ShareClientsDataService);\n  clientInfo = this.shareClientsDataService.clientInfo;\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  constructor() {\n    console.log(this.screenSize()?.isCompact);\n    // Get data and assign the data to the data source for the table to render\n    this.getClients();\n  }\n\n  ngOnInit(): void {\n    this.pageTitle.set($localize`:@@ClientsList.pageTitle:Clients`);\n\n    // Reset clientInfo() signal data\n    this.clientInfo.set({\n      clientId: '',\n      clientName: '',\n      programPosition: 0,\n      programId: '',\n      programName: '',\n      dateRange: { start: '', end: '' },\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  createClient() {\n    this.router.navigateByUrl('/clients/form');\n  }\n\n  private getClients() {\n    // this.isFetchingData.set(true);\n\n    const subscription = this.clientsService\n      .getClientsBasic()\n      .subscribe(clientsList => {\n        // this.clients = [];\n        // clientsList.forEach(client => {\n        //   client.fullName = client.lastName + ' ' + client.firstName;\n        //   this.clients.push(client);\n        this.clients = clientsList;\n        // });\n        this.dataSource.data = this.clients;\n        console.log(this.dataSource.data);\n        // this.isFetchingData.set(false);\n      });\n\n    this.subscriptions.add(subscription);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openEditClientDialog(clientId: string, clientName: string) {\n    this.clientInfo.set({\n      clientId: clientId,\n      clientName: clientName,\n      programPosition: 0,\n      programId: '',\n      programName: '',\n      dateRange: { start: '', end: '' },\n    });\n    this.router.navigateByUrl(`clients/form/${clientId}`);\n\n    // THIS IS ALTERNATIVE WHICH SHOULD BE IMPLEMENTED WHEN ALL SIGNAL DEPENDENCIES ARE ADJUSTED/REMOVED\n    // this.router.navigate([`clients/form/${clientId}`], {\n    //   queryParams: {\n    //     clientName: `${clientName}`,\n    //   },\n    // });\n  }\n\n  openDeleteConfirmationDialog(itemId: string): void {\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '312px',\n      data: {\n        title: $localize`:@@DeleteConfirmationDialog.deleteTitleClient:Delete selected client?`,\n        message: $localize`:@@DeleteConfirmationDialog.deleteMessageClient:Deleting the selected client will remove it from your account.`,\n      },\n      panelClass: 'custom-dialog',\n    });\n\n    const subscription = dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // User confirmed deletion, handle deletion logic here\n        console.log('User confirmed deletion');\n        this.deleteClient(itemId);\n        dialogRef.close();\n      } else {\n        // User canceled deletion\n        console.log('User canceled deletion');\n        dialogRef.close();\n      }\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  deleteClient(clientId: string) {\n    const subscription = this.clientsService.deleteClient(clientId).subscribe({\n      next: () => {\n        this.getClients();\n        this._snackBar.open(\n          $localize`:@@Snackbar.clientDeleted:Client deleted`,\n          '',\n          {\n            duration: 2000,\n            panelClass: ['custom-snackbar-style'],\n          },\n        );\n      },\n      error: e => console.error(e),\n      complete: () => console.info('Client deletion completed'),\n    });\n\n    this.subscriptions.add(subscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n"]}