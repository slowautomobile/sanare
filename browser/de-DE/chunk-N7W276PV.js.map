{"version":3,"mappings":";;;;;;;;IAkBIA,cAAA,cAAuD;IAEnDC,UAAA,mBAAAC,mEAAA;MAAAC,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAC,aAAA;MAAA,OAAAC,WAAA,CAASF,MAAA,CAAAG,SAAA,EAAW;IAAA;IAKpBR,cAAA;IAAUS,MAAA;IAAKC,YAAA,GAAW,EACpB;;;ACfR,IAAOC,oBAAA,GAAP,MAAOC,qBAAA,CAAoB;EANjCC,YAAA;IAOU,KAAAC,gBAAA,GAAmBC,MAAA,CAAOC,gBAAgB;IAKlD,KAAAC,YAAA,GAAe;;EAEfC,SAAA,EAAQ;IACN,KAAKC,qBAAA,GAAwB,KAAKL,gBAAA,CAAiBM,OAAA,EAASC,GAAA,CAC1D,gBAAgB;IAGlB,KAAKC,cAAA,GAAiB,KAAKH,qBAAA,CAAsBI,KAAA;IACjDC,OAAA,CAAQC,GAAA,CAAI,KAAKH,cAAc;EAGjC;EAEAI,iBAAiBC,KAAA,EAAU;IACzB,MAAMC,YAAA,GAAeD,KAAA,CAAME,MAAA,CAAOC,KAAA,CAAM,CAAC;IACzC,IAAIF,YAAA,EAAc;MAChB,KAAKT,qBAAA,CAAsBY,UAAA,CAAWH,YAAY;MAClD,KAAKT,qBAAA,CAAsBa,sBAAA,CAAsB;MACjD,KAAKf,YAAA,GAAe;MAEpB,MAAMgB,UAAA,GAAa,IAAIC,UAAA,CAAU;MACjCD,UAAA,CAAWE,MAAA,GAAS,MAAK;QACvB,KAAKb,cAAA,GAAiBW,UAAA,CAAWG,MAAA;MACnC;MAEAH,UAAA,CAAWI,aAAA,CAAcT,YAAY;IACvC;EACF;EAEApB,UAAA,EAAS;IACP,KAAKS,YAAA,GAAe;IACpB,KAAKK,cAAA,GAAiB;IACtB,KAAKH,qBAAA,CAAsBY,UAAA,CAAW,EAAE;IACxC,KAAKZ,qBAAA,CAAsBa,sBAAA,CAAsB;EACnD;;;uCAxCWpB,qBAAA,EAAoB;IAAA;EAAA;;;YAApBA,qBAAA;MAAoB0B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA,EAAAA,CAAA;QAAA,IAAAC,MAAA;QAAA;;;;uCDAf;;;;;;;mCAWE;;;;;;UAtBpB1C,cAAA,cAA0B;UAKtBC,UAAA,oBAAA0C,sDAAAC,MAAA;YAAA,OAAUC,GAAA,CAAAnB,gBAAA,CAAAkB,MAAA;UAAwB;UAJpClC,YAAA;UAMAV,cAAA,cAAwC,eAMrC;UACWS,MAAA;UAAWC,YAAA,GAAW,EAC1B;UAEVoC,UAAA,IAAAC,2CAAA;UAYA/C,cAAA;UACEgD,SAAA;UACFtC,YAAA,GAAM;;;UAdNuC,SAAA;UAAAC,aAAA,EAAAL,GAAA,CAAA5B,YAAA,IAAA4B,GAAA,CAAAvB,cAAA;UAaO2B,SAAA;UAAAE,UAAA,QAAAN,GAAA,CAAAvB,cAAA,EAAA8B,aAAA,EAAsB,OAAAP,GAAA,CAAAvB,cAAA;;;qBCrBjB+B,UAAA,EAAYC,OAAO;MAAAC,MAAA;IAAA;EAAA;;;wEAEpB5C,oBAAA,EAAoB;IAAA6C,SAAA;IAAAC,QAAA;IAAAC,UAAA;EAAA;AAAA","names":["ɵɵelementStart","ɵɵlistener","UploadImageComponent_Conditional_6_Template_label_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","removeImg","ɵɵtext","ɵɵelementEnd","UploadImageComponent","_UploadImageComponent","constructor","controlContainer","inject","ControlContainer","isImgRemoved","ngOnInit","profilePictureControl","control","get","profilePicture","value","console","log","handleProfileImg","event","selectedFile","target","files","patchValue","updateValueAndValidity","fileReader","FileReader","onload","result","readAsDataURL","selectors","decls","vars","consts","i18n_0","UploadImageComponent_Template_input_change_1_listener","$event","ctx","ɵɵtemplate","UploadImageComponent_Conditional_6_Template","ɵɵelement","ɵɵadvance","ɵɵconditional","ɵɵproperty","ɵɵsanitizeUrl","MatTooltip","MatIcon","styles","className","filePath","lineNumber"],"ignoreList":[],"sources":["libs/ui/src/lib/components/upload-image/upload-image.component.html","libs/ui/src/lib/components/upload-image/upload-image.component.ts"],"sourcesContent":["<div class=\"upload-image\">\n  <input\n    type=\"file\"\n    accept=\"image/*\"\n    id=\"profileImgInput\"\n    (change)=\"handleProfileImg($event)\"\n  />\n  <div class=\"file-upload-button-wrapper\">\n    <label\n      for=\"profileImgInput\"\n      class=\"file-upload-button\"\n      matTooltip=\"Upload a photo\"\n      i18n-matTooltip=\"@@UserForm.uploadPhotoTooltip\"\n    >\n      <mat-icon>add_a_photo</mat-icon>\n    </label>\n  </div>\n  @if (!isImgRemoved && profilePicture) {\n    <div class=\"file-upload-button-wrapper remove-wrapper\">\n      <label\n        (click)=\"removeImg()\"\n        class=\"file-upload-button\"\n        matTooltip=\"Remove photo\"\n        i18n-matTooltip=\"@@UserForm.removePhotoTooltip\"\n      >\n        <mat-icon>close</mat-icon>\n      </label>\n    </div>\n  }\n  <div class=\"profile-img-wrapper\">\n    <img [src]=\"profilePicture\" [alt]=\"profilePicture\" />\n  </div>\n</div>\n","import { AfterViewInit, Component, OnInit, inject } from '@angular/core';\nimport { ControlContainer, FormControl } from '@angular/forms';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Component({\n    selector: 'ui-upload-image',\n    templateUrl: './upload-image.component.html',\n    styleUrl: './upload-image.component.scss',\n    imports: [MatTooltip, MatIcon]\n})\nexport class UploadImageComponent implements OnInit {\n  private controlContainer = inject(ControlContainer);\n\n  // @Input() profilePicture!: string;\n  profilePicture!: any;\n  profilePictureControl!: FormControl;\n  isImgRemoved = false;\n\n  ngOnInit(): void {\n    this.profilePictureControl = this.controlContainer.control?.get(\n      'profilePicture',\n    ) as FormControl;\n\n    this.profilePicture = this.profilePictureControl.value;\n    console.log(this.profilePicture);\n\n    // console.log(this.profilePictureControl);\n  }\n\n  handleProfileImg(event: any) {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      this.profilePictureControl.patchValue(selectedFile);\n      this.profilePictureControl.updateValueAndValidity();\n      this.isImgRemoved = false;\n\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        this.profilePicture = fileReader.result;\n      };\n\n      fileReader.readAsDataURL(selectedFile);\n    }\n  }\n\n  removeImg() {\n    this.isImgRemoved = true;\n    this.profilePicture = '';\n    this.profilePictureControl.patchValue('');\n    this.profilePictureControl.updateValueAndValidity();\n  }\n}\n"]}