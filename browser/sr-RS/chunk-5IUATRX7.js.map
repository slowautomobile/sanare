{"version":3,"mappings":"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","names":["ɵɵelement","F","r","o","e","x","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵlistener","exercise_r3","ɵɵrestoreView","_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","removeFromSelected","ɵɵtemplate","SelectedExercisesListComponent_For_4_div_9_Template","t","C","ɵɵproperty","previewClass","ɵɵadvance","images","mainImg","ɵɵsanitizeUrl","name","selectedLanguage","ɵɵtextInterpolate1","z","ɵɵi18n","SelectedExercisesListComponent","constructor","selectedExercisesService","inject","SelectedExercisesService","transferringItemService","DropListTransferItemService","localstorageService","LocalstorageService","transferringItem","enteredSelectedList","selectedExercises","ngOnInit","_getUserLanguageToken","drop","event","previousContainer","id","container","data","some","item","previousIndex","addToSelected","copyArrayItem","currentIndex","isSelected","console","log","moveItemInArray","set","undefined","enteredSelected","exitedSelected","exercise","removeCard","cardToRemove","indexToRemove","selectedExercise","i","_resetCardState","cardToReset","exercises","length","find","exerciseToReset","getToken","split","ɵfac","ɵcmp","I","type","selectors","inputs","decls","vars","consts","i18n_0","$localize","$event","i0","_r1","ctx","ɵɵrepeaterCreate","SelectedExercisesListComponent_For_4_Template","_forTrack0","SelectedExercisesListComponent_Conditional_5_Template","ɵɵrepeater","ɵɵconditional","dependencies","CommonModule","CdkDropList","CdkDrag","CdkDragPlaceholder","MatIcon","MatIconButton","styles","Z"],"ignoreList":[],"sources":["apps/sanare-app/src/app/pages/exercises/selected-exercises-list/selected-exercises-list.component.html","apps/sanare-app/src/app/pages/exercises/selected-exercises-list/selected-exercises-list.component.ts"],"sourcesContent":["<div class=\"background-wrapper\">\n  <div\n    cdkDropList\n    #selected=\"cdkDropList\"\n    [cdkDropListData]=\"selectedExercises()\"\n    class=\"main-wrap\"\n    (cdkDropListDropped)=\"drop($event)\"\n    (cdkDropListEntered)=\"enteredSelected($event)\"\n    (cdkDropListExited)=\"exitedSelected($event)\"\n  >\n    @for (exercise of selectedExercises(); track exercise.id) {\n      <div\n        class=\"selected-cards-box\"\n        cdkDrag\n        [cdkDragPreviewClass]=\"previewClass\"\n      >\n        <div class=\"selected-card\">\n          <div class=\"img-wrapper\">\n            <img\n              class=\"selected-exercise-img\"\n              [src]=\"exercise.images?.mainImg\"\n              [alt]=\"exercise.name[selectedLanguage]\"\n            />\n          </div>\n          <p class=\"selected-exercise-name mat-body-medium\">\n            {{ exercise.name[selectedLanguage] }}\n          </p>\n          <button mat-icon-button (click)=\"removeFromSelected(exercise)\">\n            <mat-icon>close</mat-icon>\n          </button>\n        </div>\n        <div class=\"exercise-card-placeholder\" *cdkDragPlaceholder></div>\n      </div>\n    }\n    @if (selectedExercises().length === 0 && !enteredSelectedList) {\n      <div class=\"add-exercise-placeholder\">\n        <span class=\"mat-body-large\" i18n=\"@@SelectedExercises.addExercise\"\n          >Add exercises</span\n        >\n        <div class=\"mat-headline-medium\">\n          <mat-icon\n            [inline]=\"true\"\n            aria-hidden=\"false\"\n            aria-label=\"List icon\"\n            i18n-aria-label=\"@@SelectedExercises.listIcon\"\n            fontIcon=\"playlist_add\"\n          ></mat-icon>\n        </div>\n      </div>\n    }\n  </div>\n</div>\n","import { Component, inject, Input, input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { ThemeManagerService } from '@slowautomobile/ui';\nimport {\n  DropListTransferItemService,\n  Exercise,\n  SelectedExercisesService,\n} from '@slowautomobile/exercises';\nimport {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDragEnter,\n  CdkDragExit,\n  CdkDragPlaceholder,\n  CdkDragPreview,\n  CdkDropList,\n  copyArrayItem,\n  moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { LocalstorageService } from '@slowautomobile/users';\n\n@Component({\n  selector: 'sanareapp-selected-exercises-list',\n  imports: [\n    CommonModule,\n    CdkDropList,\n    CdkDrag,\n    CdkDragPlaceholder,\n    MatIcon,\n    MatIconButton,\n  ],\n  templateUrl: './selected-exercises-list.component.html',\n  styleUrl: './selected-exercises-list.component.scss',\n})\nexport class SelectedExercisesListComponent implements OnInit {\n  // themeManager = inject(ThemeManagerService);\n  private selectedExercisesService = inject(SelectedExercisesService);\n  transferringItemService = inject(DropListTransferItemService);\n  private localstorageService = inject(LocalstorageService);\n\n  selectedLanguage!: 'en' | 'de' | 'sr';\n\n  transferringItem = this.transferringItemService.transferringItem;\n\n  previewClass = 'custom-preview';\n  // transferringItem: Exercise | undefined = undefined;\n  enteredSelectedList = false;\n  // exercises = input<Exercise[]>();\n  @Input() exercises!: Exercise[];\n\n  // themeSignal = this.themeManager.themeSignal;\n  selectedExercises = this.selectedExercisesService.selectedExercises;\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n  }\n\n  drop(event: CdkDragDrop<Exercise[]>) {\n    if (\n      event.previousContainer.id !== event.container.id &&\n      !event.container.data.some(\n        item =>\n          item.id === event.previousContainer.data[event.previousIndex].id,\n      )\n    ) {\n      this.selectedExercisesService.addToSelected(\n        event.previousContainer.data[event.previousIndex],\n      );\n      copyArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n      event.previousContainer.data[event.previousIndex].isSelected = true;\n\n      console.log(event.previousContainer.data[event.previousIndex]);\n      console.log(this.selectedExercises());\n      console.log(this.transferringItem());\n    } else {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n    // this.transferringItem = undefined;\n    this.transferringItem.set(undefined);\n\n    this.enteredSelectedList = false;\n\n    // this.enteredSelectedList = true;\n  }\n\n  enteredSelected(event: CdkDragEnter<Exercise[]>) {\n    // this.transferringItem = undefined;\n    this.enteredSelectedList = true;\n  }\n\n  exitedSelected(e: CdkDragExit<any>) {\n    // this.transferringItem = undefined;\n    this.transferringItem.set(undefined);\n\n    this.enteredSelectedList = false;\n    // console.log('asdf');\n  }\n\n  removeFromSelected(exercise: Exercise) {\n    console.log(this.selectedExercisesService.selectedExercises());\n    this.removeCard(exercise);\n\n    this.selectedExercisesService.removeFromSelected(exercise);\n\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  // SEEMS THAT IT WORKS, REFACTOR THESE TWO FUNCTIONS IN ONE AND REMOVE UNNECESSARY CODE\n  removeCard(cardToRemove: Exercise): void {\n    let indexToRemove!: number;\n\n    this.selectedExercises().some((selectedExercise, i) => {\n      if (selectedExercise.id === cardToRemove.id) {\n        indexToRemove = i;\n      }\n    });\n    // console.log(cardToRemove, indexToRemove);\n    this._resetCardState(cardToRemove, indexToRemove);\n    // this.selectedExercises.splice(indexToRemove, 1);\n\n    // if (indexToRemove !== -1) {\n    // }\n  }\n\n  private _resetCardState(cardToReset: Exercise, indexToRemove: number) {\n    if (this.exercises.length === 0) {\n      return;\n    }\n\n    this.exercises.find(exerciseToReset => {\n      if (exerciseToReset.id === cardToReset.id) {\n        exerciseToReset.isSelected = false;\n      }\n    });\n  }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n}\n"]}