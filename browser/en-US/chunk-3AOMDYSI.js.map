{"version":3,"mappings":"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","names":["ɵɵelementStart","ɵɵlistener","ExerciseCardComponent_Conditional_1_Conditional_9_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","ɵɵresetView","removeFromFavorites","exercise","ɵɵtext","ɵɵelementEnd","ExerciseCardComponent_Conditional_1_Conditional_10_Template_button_click_0_listener","_r5","addToFavorites","ExerciseCardComponent_Conditional_1_Conditional_14_Template_button_click_0_listener","_r6","removeFromSelected","ExerciseCardComponent_Conditional_1_Conditional_14_Template_button_mouseenter_0_listener","showHoverIcon","ExerciseCardComponent_Conditional_1_Conditional_14_Template_button_mouseleave_0_listener","ɵɵproperty","isHovered","ɵɵadvance","ɵɵtextInterpolate","ExerciseCardComponent_Conditional_1_Conditional_15_Template_button_click_0_listener","_r7","addToSelected","ExerciseCardComponent_Conditional_1_Template_div_mouseenter_1_listener","_r1","videoPlayer_r2","ɵɵreference","onMouseEnter","ExerciseCardComponent_Conditional_1_Template_div_mouseleave_1_listener","onMouseLeave","ɵɵelement","ɵɵtemplate","ExerciseCardComponent_Conditional_1_Conditional_9_Template","ExerciseCardComponent_Conditional_1_Conditional_10_Template","ExerciseCardComponent_Conditional_1_Template_button_click_11_listener","showExerciseModal","id","ExerciseCardComponent_Conditional_1_Conditional_14_Template","ExerciseCardComponent_Conditional_1_Conditional_15_Template","video","images","mainImg","ɵɵtextInterpolate1","name","selectedLanguage","ɵɵconditional","isFavorite","isSelected","ExerciseCardComponent","_ExerciseCardComponent","constructor","dialog","inject","MatDialog","exercisesService","ExercisesService","shareStateService","ShareStateService","selectedExercisesService","SelectedExercisesService","usersService","UsersService","localstorageService","LocalstorageService","subscriptions","Subscription","isEmptyPlaceholder","selectedExercise","output","removeExercise","favoriteExercise","removeFavoriteExercise","userFavorites","userId","ngOnInit","_getUserLanguageToken","selectExercise","emit","removeCard","_getExercise","exerciseId","getExercise","exerciseCard","isProgramExercise","subscription","subscribe","open","ExerciseModalComponent","data","fullExercise","selectedLang","width","panelClass","backdropClass","add","getToken","split","ngOnDestroy","unsubscribe","selectors","inputs","cardWrapper","outputs","decls","vars","consts","i18n_0","ExerciseCardComponent_Conditional_1_Template","ctx","NgClass","MatIconButton","MatTooltip","MatIcon","MatMiniFabButton","VideoPlayerComponent","styles","className","filePath","lineNumber","CdkDrag","CdkDragPlaceholder","ɵɵi18n","ExercisesGridComponent_For_7_Defer_0_Template_sanareapp_exercise_card_removeExercise_0_listener","$event","_r2","ctx_r2","ExercisesGridComponent_For_7_Defer_0_Template_sanareapp_exercise_card_favoriteExercise_0_listener","ExercisesGridComponent_For_7_Defer_0_Template_sanareapp_exercise_card_removeFavoriteExercise_0_listener","ExercisesGridComponent_For_7_Defer_0_Template_sanareapp_exercise_card_cdkDragStarted_0_listener","onDragStarted","ExercisesGridComponent_For_7_Defer_0_Template_sanareapp_exercise_card_cdkDragEnded_0_listener","onDragEnded","ExercisesGridComponent_For_7_Defer_0_div_1_Template","exercise_r4","ExercisesGridComponent_For_7_Defer_0_Template","ExercisesGridComponent_For_7_DeferPlaceholder_1_Template","ɵɵdefer","ExercisesGridComponent_For_7_Defer_2_DepsFn","ExercisesGridComponent_For_7_Conditional_4_Template","transferringItem","ExercisesGridComponent","_ExercisesGridComponent","themeManager","ThemeManagerService","transferringItemService","DropListTransferItemService","isFetchingData","selectedExercises","themeSignal","isDragging","windowSize$","fromEvent","window","pipe","startWith","debounceTime","map","innerWidth","getGridStyle","windowSize","effectiveSize","drawerOpen","drawerSignal","entered","set","exited","e","item","console","log","noReturnPredicate","cardToRemove","indexToRemove","some","i","_resetCardState","update","favorites","updatedFavorites","__spreadProps","__spreadValues","favExercises","_updateFavorites","updatedFavExercises","filter","favExerciseId","updateFavorites","cardToReset","exercises","length","find","exerciseToReset","ɵɵdeclareLet","ExercisesGridComponent_Conditional_2_Template","ExercisesGridComponent_Conditional_3_Template","ExercisesGridComponent_Template_div_cdkDropListEntered_4_listener","ExercisesGridComponent_Template_div_cdkDropListExited_4_listener","ɵɵrepeaterCreate","ExercisesGridComponent_For_7_Template","_forTrack0","isFetching_r5","ɵɵpipeBind1","ɵɵrepeater","CommonModule","NgStyle","AsyncPipe","CdkDropList","OverlayscrollbarsModule","OverlayScrollbarsComponent","MatProgressSpinnerModule","MatProgressSpinner"],"ignoreList":[],"sources":["apps/sanare-app/src/app/pages/exercises/exercise-card/exercise-card.component.html","apps/sanare-app/src/app/pages/exercises/exercise-card/exercise-card.component.ts","apps/sanare-app/src/app/pages/exercises/exercises-grid/exercises-grid.component.ts","apps/sanare-app/src/app/pages/exercises/exercises-grid/exercises-grid.component.html"],"sourcesContent":["<div [ngClass]=\"cardWrapper\">\n  @if (!isEmptyPlaceholder) {\n    <div class=\"card\">\n      <div\n        class=\"card-head\"\n        (mouseenter)=\"videoPlayer.onMouseEnter()\"\n        (mouseleave)=\"videoPlayer.onMouseLeave()\"\n      >\n        <ui-video-player\n          #videoPlayer\n          [videoSrc]=\"exercise.video\"\n          [thumbnail]=\"exercise.images?.mainImg\"\n          [isModal]=\"false\"\n        />\n      </div>\n      <div class=\"card-body\">\n        <div class=\"exercise-name\">\n          <span class=\"multi-line-text\">\n            {{ exercise.name[selectedLanguage] }}\n          </span>\n        </div>\n        <div class=\"card-icons\">\n          @if (exercise.isFavorite) {\n            <button\n              (click)=\"removeFromFavorites(exercise)\"\n              mat-icon-button\n              class=\"favorite-exercise-star\"\n              matTooltip=\"Remove from favorites\"\n              i18n-matTooltip=\"@@ExerciseCard.removeFromFavoritesTooltip\"\n              aria-label=\"Favorite icon-button with a star icon\"\n              i18n-aria-label=\"@@ExerciseCard.removeFromFavoritesAriaLabel\"\n            >\n              <mat-icon>star</mat-icon>\n            </button>\n          } @else {\n            <button\n              (click)=\"addToFavorites(exercise)\"\n              mat-icon-button\n              matTooltip=\"Add to favorites\"\n              i18n-matTooltip=\"@@ExerciseCard.addToFavoritesTooltip\"\n              aria-label=\"Favorite icon-button with a star icon\"\n              i18n-aria-label=\"@@ExerciseCard.addToFavoritesAriaLabel\"\n            >\n              <mat-icon>star_border</mat-icon>\n            </button>\n          }\n          <!-- <button\n            (click)=\"\n              exercise.isFavorite\n                ? removeFromFavorites(exercise)\n                : addToFavorites(exercise.id)\n            \"\n            mat-icon-button\n            [class.favorite-exercise-star]=\"exercise.isFavorite\"\n            [matTooltip]=\"\n              exercise.isFavorite ? 'Remove from favorites' : 'Add to favorites'\n            \"\n            aria-label=\"Favorite icon-button with a star icon\"\n          >\n            <mat-icon>{{\n              exercise.isFavorite ? 'star' : 'star_border'\n            }}</mat-icon>\n          </button> -->\n          <button\n            (click)=\"showExerciseModal(exercise.id, exercise, false)\"\n            mat-icon-button\n            matTooltip=\"Details\"\n            i18n-matTooltip=\"@@ExerciseCard.details\"\n            aria-label=\"Info icon-button with a info icon\"\n            i18n-aria-label=\"@@ExerciseCard.detailsAriaLabel\"\n          >\n            <mat-icon>info_outline</mat-icon>\n          </button>\n          @if (exercise.isSelected) {\n            <button\n              (click)=\"removeFromSelected(exercise)\"\n              class=\"toggleDoneRemoveBtn\"\n              (mouseenter)=\"showHoverIcon(true)\"\n              (mouseleave)=\"showHoverIcon(false)\"\n              mat-mini-fab\n              [color]=\"isHovered ? 'accent' : 'primary'\"\n              matTooltip=\"Remove exercise\"\n              i18n-matTooltip=\"@@ExerciseCard.removeExercise\"\n              aria-label=\"Remove icon-button with a close icon\"\n              i18n-aria-label=\"@@ExerciseCard.removeExerciseAriaLabel\"\n            >\n              <mat-icon>{{ isHovered ? 'close' : 'done' }}</mat-icon>\n            </button>\n          } @else {\n            <button\n              (click)=\"addToSelected(exercise)\"\n              mat-icon-button\n              matTooltip=\"Add exercise\"\n              i18n-matTooltip=\"@@ExerciseCard.addExercise\"\n              color=\"primary\"\n              aria-label=\"Add icon button with a add icon\"\n              i18n-aria-label=\"@@ExerciseCard.addExerciseAriaLabel\"\n            >\n              <mat-icon>add</mat-icon>\n            </button>\n          }\n        </div>\n      </div>\n    </div>\n  }\n</div>\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  inject,\n  output\n} from '@angular/core';\nimport {\n  Exercise,\n  ExerciseModalComponent,\n  ExercisesService,\n  SelectedExercisesService,\n  ShareStateService,\n} from '@slowautomobile/exercises';\nimport { MatDialog } from '@angular/material/dialog';\n\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { LocalstorageService, UsersService } from '@slowautomobile/users';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton, MatMiniFabButton } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\nimport { Observable, Subscription } from 'rxjs';\nimport { VideoPlayerComponent } from '@slowautomobile/ui';\n\n@Component({\n    selector: 'sanareapp-exercise-card',\n    templateUrl: './exercise-card.component.html',\n    styleUrl: './exercise-card.component.scss',\n    imports: [NgClass, MatIconButton, MatTooltip, MatIcon, MatMiniFabButton, VideoPlayerComponent]\n})\nexport class ExerciseCardComponent implements OnInit, OnDestroy {\n  dialog = inject(MatDialog);\n  private exercisesService = inject(ExercisesService);\n  private shareStateService = inject(ShareStateService);\n  private selectedExercisesService = inject(SelectedExercisesService);\n  private usersService = inject(UsersService);\n  private localstorageService = inject(LocalstorageService);\n\n  subscriptions = new Subscription();\n\n  @Input() exercise!: Exercise;\n  @Input() cardWrapper!: string;\n  @Input() isEmptyPlaceholder = false;\n  readonly selectedExercise = output<Exercise>();\n  readonly removeExercise = output<Exercise>();\n  readonly favoriteExercise = output<Exercise>();\n  readonly removeFavoriteExercise = output<Exercise>();\n\n  selectedLanguage!: 'en' | 'de' | 'sr';\n  isHovered = false;\n  userFavorites = this.usersService.userFavorites;\n  userId = this.usersService.userId;\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n  }\n\n  addToSelected(exercise: Exercise) {\n    this.selectedExercisesService.addToSelected(exercise);\n  }\n\n  removeFromSelected(exercise: Exercise) {\n    this.selectedExercisesService.removeFromSelected(exercise);\n  }\n\n  selectExercise(exercise: Exercise) {\n    exercise.isSelected = true;\n    this.selectedExercise.emit(exercise);\n  }\n\n  removeCard(exercise: Exercise) {\n    this.removeExercise.emit(exercise);\n  }\n\n  showHoverIcon(isHovered: boolean): void {\n    this.isHovered = isHovered;\n  }\n\n  private _getExercise(exerciseId: string): Observable<Exercise> {\n    return this.exercisesService.getExercise(exerciseId);\n  }\n\n  showExerciseModal(\n    exerciseId: string,\n    exerciseCard: Exercise,\n    isProgramExercise: boolean,\n  ): void {\n    const subscription = this._getExercise(exerciseId).subscribe(exercise => {\n      this.dialog.open(ExerciseModalComponent, {\n        data: {\n          fullExercise: exercise,\n          exerciseCard: exerciseCard,\n          isProgramExercise: isProgramExercise,\n          selectedLang: this.selectedLanguage,\n        },\n        width: '500px',\n        // height: '736px',\n        panelClass: ['custom-dialog', isProgramExercise ? 'custom-shadow' : ''],\n        // disableClose: isProgramExercise,\n        // hasBackdrop: isProgramExercise ? false : true,\n        backdropClass: isProgramExercise ? 'custom-backdrop' : '',\n        // enterAnimationDuration: 0,\n      });\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  addToFavorites(exercise: Exercise) {\n    exercise.isFavorite = true;\n    this.favoriteExercise.emit(exercise);\n  }\n\n  removeFromFavorites(exercise: Exercise) {\n    exercise.isFavorite = false;\n    this.removeFavoriteExercise.emit(exercise);\n  }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, inject, Input, input, OnInit } from '@angular/core';\nimport { AsyncPipe, CommonModule, NgStyle } from '@angular/common';\nimport {\n  CdkDrag,\n  CdkDragEnter,\n  CdkDragExit,\n  CdkDragPlaceholder,\n  CdkDragPreview,\n  CdkDropList,\n} from '@angular/cdk/drag-drop';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { ExerciseCardComponent } from '../exercise-card/exercise-card.component';\nimport { ThemeManagerService } from '@slowautomobile/ui';\nimport {\n  DropListTransferItemService,\n  Exercise,\n  SelectedExercisesService,\n  ShareStateService,\n} from '@slowautomobile/exercises';\nimport {\n  debounceTime,\n  fromEvent,\n  map,\n  Observable,\n  startWith,\n  Subscription,\n} from 'rxjs';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { Favorites, UsersService } from '@slowautomobile/users';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'sanareapp-exercises-grid',\n  imports: [\n    CommonModule,\n    CdkDropList,\n    CdkDrag,\n    CdkDragPlaceholder,\n    OverlayscrollbarsModule,\n    ExerciseCardComponent,\n    NgStyle,\n    AsyncPipe,\n    MatProgressSpinnerModule,\n  ],\n  templateUrl: './exercises-grid.component.html',\n  styleUrl: './exercises-grid.component.scss',\n})\nexport class ExercisesGridComponent implements OnInit {\n  themeManager = inject(ThemeManagerService);\n  private shareStateService = inject(ShareStateService);\n  private selectedExercisesService = inject(SelectedExercisesService);\n  private usersService = inject(UsersService);\n  transferringItemService = inject(DropListTransferItemService);\n\n  isFetchingData = this.shareStateService.isFetchingData;\n  transferringItem = this.transferringItemService.transferringItem;\n  userFavorites = this.usersService.userFavorites;\n  userId = this.usersService.userId;\n  selectedExercises = this.selectedExercisesService.selectedExercises;\n  // transferringItem: Exercise | undefined = undefined;\n  themeSignal = this.themeManager.themeSignal;\n  drawerOpen!: boolean;\n  // exercises = input<Exercise[]>();\n  @Input() exercises!: Exercise[];\n  windowSize$?: Observable<number>;\n  subscriptions = new Subscription();\n  isDragging = false;\n\n  ngOnInit(): void {\n    this.windowSize$ = fromEvent(window, 'resize').pipe(\n      startWith(null), // Emit an initial value to trigger the styles on component initialization\n      debounceTime(200),\n      map(() => window.innerWidth),\n    );\n  }\n\n  // Dynamically change filter drawer and exercise display grid behavior\n  getGridStyle(windowSize: number | null): { [key: string]: string } {\n    const effectiveSize = windowSize ?? 0;\n    this.drawerOpen = this.shareStateService.drawerSignal();\n    if (effectiveSize < 1510 && effectiveSize > 1338 && this.drawerOpen) {\n      return {\n        'grid-template-columns': 'repeat(3, 1fr)',\n      };\n    } else if (\n      effectiveSize < 1338 &&\n      effectiveSize > 1168 &&\n      this.drawerOpen\n    ) {\n      return {\n        'grid-template-columns': 'repeat(2, 1fr)',\n      };\n    } else {\n      return {};\n    }\n  }\n\n  entered() {\n    // entered(event: CdkDragEnter<any>) {\n    // this.transferringItem = undefined;\n    this.transferringItem.set(undefined);\n\n    // this.enteredSelectedList = false;\n\n    // console.log(event);\n  }\n\n  exited(e: CdkDragExit<any>) {\n    // this.transferringItem = e.item.data;\n    this.transferringItem.set(e.item.data);\n    console.log(this.transferringItem());\n  }\n\n  noReturnPredicate() {\n    return false;\n  }\n\n  // SEEMS THAT IT WORKS, REFACTOR THESE TWO FUNCTIONS IN ONE AND REMOVE UNNECESSARY CODE\n  removeCard(cardToRemove: Exercise): void {\n    let indexToRemove!: number;\n\n    this.selectedExercises().some((selectedExercise, i) => {\n      if (selectedExercise.id === cardToRemove.id) {\n        indexToRemove = i;\n      }\n    });\n    // console.log(cardToRemove, indexToRemove);\n    this._resetCardState(cardToRemove, indexToRemove);\n    // this.selectedExercises.splice(indexToRemove, 1);\n\n    // if (indexToRemove !== -1) {\n    // }\n  }\n\n  addToFavorites(exercise: Exercise) {\n    this.userFavorites.update(favorites => {\n      const updatedFavorites = {\n        ...favorites,\n        favExercises: [...favorites.favExercises, exercise.id],\n      };\n      this._updateFavorites(this.userId(), updatedFavorites);\n\n      return updatedFavorites;\n    });\n  }\n\n  removeFromFavorites(exercise: Exercise) {\n    const updatedFavExercises = this.userFavorites().favExercises.filter(\n      favExerciseId => favExerciseId !== exercise.id,\n    );\n\n    this.userFavorites.update(favorites => {\n      const updatedFavorites = {\n        ...favorites,\n        favExercises: [...updatedFavExercises],\n      };\n\n      return updatedFavorites;\n    });\n\n    this._updateFavorites(this.userId(), this.userFavorites());\n  }\n\n  // Add/remove favorite exercises\n  _updateFavorites(userId: string, updatedFavorites: Favorites) {\n    const subscription = this.usersService\n      .updateFavorites(userId, updatedFavorites)\n      .subscribe(favorites => console.log(favorites));\n    this.subscriptions.add(subscription);\n  }\n\n  private _resetCardState(cardToReset: Exercise, indexToRemove: number) {\n    if (this.exercises.length === 0) {\n      return;\n    }\n\n    this.exercises.find(exerciseToReset => {\n      if (exerciseToReset.id === cardToReset.id) {\n        exerciseToReset.isSelected = false;\n      }\n    });\n  }\n\n  onDragStarted() {\n    this.isDragging = true;\n  }\n\n  onDragEnded() {\n    this.isDragging = false;\n    // console.log(this.isDragging);\n  }\n}\n","@let isFetching = isFetchingData();\n\n<div\n  overlay-scrollbars\n  [options]=\"themeSignal()\"\n  [defer]\n  class=\"grid-container\"\n>\n  @if (exercises?.length === 0 && !isFetching) {\n    <div class=\"noExercisesFound\">\n      <span i18n=\"@@ExercisesGrid.noExercisesFoundMessage\"\n        >No exercises found for your search</span\n      >\n    </div>\n  }\n  @if (isFetching) {\n    <div class=\"fetchingDataSpinner\">\n      <mat-spinner diameter=\"50\"></mat-spinner>\n    </div>\n  }\n  <div\n    cdkDropList\n    [cdkDropListData]=\"exercises\"\n    [ngStyle]=\"getGridStyle(windowSize$ | async)\"\n    class=\"exercise-cards\"\n    cdkDropListSortingDisabled\n    (cdkDropListEntered)=\"entered()\"\n    (cdkDropListExited)=\"exited($event)\"\n    [cdkDropListEnterPredicate]=\"noReturnPredicate\"\n  >\n    @for (exercise of exercises; track exercise.id) {\n      @defer {\n        <sanareapp-exercise-card\n          (removeExercise)=\"removeCard($event)\"\n          (favoriteExercise)=\"addToFavorites($event)\"\n          (removeFavoriteExercise)=\"removeFromFavorites($event)\"\n          [isEmptyPlaceholder]=\"false\"\n          cardWrapper=\"wrap-default\"\n          [exercise]=\"exercise\"\n          cdkDrag\n          [cdkDragData]=\"exercise\"\n          (cdkDragStarted)=\"onDragStarted()\"\n          (cdkDragEnded)=\"onDragEnded()\"\n        >\n          <div class=\"exercise-card-placeholder\" *cdkDragPlaceholder></div>\n        </sanareapp-exercise-card>\n      } @placeholder {\n        <div class=\"exercise-card-skeleton\"></div>\n      }\n      @if (transferringItem() === exercise) {\n        <div class=\"static-placeholder\">\n          <sanareapp-exercise-card\n            cardWrapper=\"wrap-default\"\n            [exercise]=\"exercise\"\n          >\n            ></sanareapp-exercise-card\n          >\n        </div>\n      }\n    }\n  </div>\n</div>\n"]}