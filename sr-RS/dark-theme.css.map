{"version":3,"sources":["./apps/sanare-app/src/styles/themes/dark.scss","./node_modules/@angular/material/core/tokens/_token-utils.scss","./apps/sanare-app/src/app/pages/dashboard/_dashboard-theme.scss","./libs/ui/src/lib/components/client-full-edit-form/_client-full-edit-form-theme.scss","./libs/ui/src/lib/components/basic-programs-table/_basic-programs-table-theme.scss","./libs/ui/src/lib/components/client-full-edit-programs/_client-full-edit-programs-theme.scss","./apps/sanare-app/src/app/pages/clients/clients-list/_clients-list-theme.scss","./apps/sanare-app/src/app/pages/programs/programs-list/_programs-list-theme.scss","./apps/sanare-app/src/app/pages/exercises/new-program-stepper/_new-program-stepper-theme.scss","./libs/clients/src/lib/components/clients-progress/_clients-progress-theme.scss","./apps/sanare-app/src/app/pages/exercises/exercises-list/_exercises-list-theme.scss","./apps/sanare-app/src/app/pages/exercises/exercise-card/_exercise-card-theme.scss","./apps/sanare-app/src/app/pages/exercises/edit-program/_edit-program-theme.scss","./apps/sanare-app/src/app/pages/exercises/program-add-client/_program-add-client-theme.scss","./libs/ui/src/lib/components/program-modal/_program-modal-theme.scss","./libs/exercises/src/lib/pages/exercise-modal/_exercise-modal-theme.scss","./libs/ui/src/lib/components/upload-image/_upload-image-theme.scss","./libs/ui/src/lib/pages/search-filter/_search-filter-theme.scss","./libs/clients/src/lib/components/show-client-modal/_show-client-modal-theme.scss","./apps/sanare-app/src/app/pages/exercises/exercises-grid/_exercises-grid-theme.scss","./apps/sanare-app/src/app/shared/navigation-rail/_navigation-rail-theme.scss"],"sourcesContent":["@use '@angular/material' as mat;\n@use './all' as themes;\n@use '../components';\n\n.dark-theme {\n  @include mat.core-color(themes.$dark-theme);\n  //   @include mat.core-typography(themes.$dark-theme);\n  @include mat.button-color(themes.$dark-theme);\n  //   @include mat.button-typography(themes.$dark-theme);\n  @include mat.card-color(themes.$dark-theme);\n  //   @include mat.card-typography(themes.$dark-theme);\n  @include mat.progress-bar-color(themes.$dark-theme);\n  //   @include mat.progress-bar-typography(themes.$dark-theme);\n  @include mat.tooltip-color(themes.$dark-theme);\n  //   @include mat.tooltip-typography(themes.$dark-theme);\n  @include mat.form-field-color(themes.$dark-theme);\n  //   @include mat.form-field-typography(themes.$dark-theme);\n  @include mat.input-color(themes.$dark-theme);\n  //   @include mat.input-typography(themes.$dark-theme);\n  @include mat.select-color(themes.$dark-theme);\n  //   @include mat.select-typography(themes.$dark-theme);\n  @include mat.dialog-color(themes.$dark-theme);\n  //   @include mat.dialog-typography(themes.$dark-theme);\n  @include mat.chips-color(themes.$dark-theme);\n  //   @include mat.chips-typography(themes.$dark-theme);\n  @include mat.slide-toggle-color(themes.$dark-theme);\n  //   @include mat.slide-toggle-typography(themes.$dark-theme);\n  @include mat.menu-color(themes.$dark-theme);\n  //   @include mat.menu-typography(themes.$dark-theme);\n  @include mat.list-color(themes.$dark-theme);\n  //   @include mat.list-typography(themes.$dark-theme);\n  @include mat.paginator-color(themes.$dark-theme);\n  //   @include mat.paginator-typography(themes.$dark-theme);\n  @include mat.tabs-color(themes.$dark-theme);\n  //   @include mat.tabs-typography(themes.$dark-theme);\n  @include mat.checkbox-color(themes.$dark-theme);\n  //   @include mat.checkbox-typography(themes.$dark-theme);\n  @include mat.icon-button-color(themes.$dark-theme);\n  //   @include mat.icon-button-typography(themes.$dark-theme);\n  @include mat.fab-color(themes.$dark-theme);\n  //   @include mat.fab-typography(themes.$dark-theme);\n  @include mat.snack-bar-color(themes.$dark-theme);\n  //   @include mat.snack-bar-typography(themes.$dark-theme);\n  @include mat.table-color(themes.$dark-theme);\n  //   @include mat.table-typography(themes.$dark-theme);\n  @include mat.progress-spinner-color(themes.$dark-theme);\n  //   @include mat.progress-spinner-typography(themes.$dark-theme);\n  @include mat.button-toggle-color(themes.$dark-theme);\n  //   @include mat.button-toggle-typography(themes.$dark-theme);\n  @include mat.datepicker-color(themes.$dark-theme);\n  //   @include mat.datepicker-typography(themes.$dark-theme);\n  @include mat.divider-color(themes.$dark-theme);\n  //   @include mat.divider-typography(themes.$dark-theme);\n  @include mat.expansion-color(themes.$dark-theme);\n  //   @include mat.expansion-typography(themes.$dark-theme);\n  @include mat.icon-color(themes.$dark-theme);\n  //   @include mat.icon-typography(themes.$dark-theme);\n  @include mat.sidenav-color(themes.$dark-theme);\n  //   @include mat.sidenav-typography(themes.$dark-theme);\n  @include mat.stepper-color(themes.$dark-theme);\n  //   @include mat.stepper-typography(themes.$dark-theme);\n  @include mat.sort-color(themes.$dark-theme);\n  //   @include mat.sort-typography(themes.$dark-theme);\n  @include mat.toolbar-color(themes.$dark-theme);\n  //   @include mat.toolbar-typography(themes.$dark-theme);\n  @include mat.tree-color(themes.$dark-theme);\n  //   @include mat.tree-typography(themes.$dark-theme);\n\n  @include components.theme(themes.$dark-theme);\n\n  // Tables background\n  .mat-table-background {\n    --mat-table-background-color: #0c0e13;\n  }\n  // Paginators for tables\n  .mat-paginator-background {\n    --mat-paginator-container-background-color: #0c0e13;\n  }\n\n  // Basic programs table\n  .mat-basic-program-table {\n    --mat-table-background-color: #191c20;\n  }\n  .mat-basic-program-paginator {\n    --mat-paginator-container-background-color: #191c20;\n  }\n\n  // NOT WORKING!!!! CUSTOM THEME REQUIRED!!!\n  /* Mat slide toggle adjustment \n(mat.color-variants-backwards-compatibility is making mess with some components styles => SOLUTION ARE TOKENS ! ! !) */\n\n  .selected-cards-box {\n    background: #282a2f;\n  }\n\n  .mat-mdc-slide-toggle .mat-internal-form-field {\n    --mat-switch-label-text-color: #e2e2e9;\n  }\n\n  .category-data {\n    .custom-mat-tree {\n      .mat-mdc-checkbox .mat-internal-form-field {\n        --mat-checkbox-label-text-color: #e2e2e9;\n      }\n    }\n  }\n\n  .exer-expansion-panel {\n    --mat-expansion-container-background-color: #282a2f;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '../style/elevation';\n@use '../style/sass-utils';\n@use './m3-tokens';\n\n$_tokens: null;\n$_component-prefix: null;\n$_system-fallbacks: m3-tokens.create-system-fallbacks();\n\n// Sets the token prefix and map to use when creating token slots.\n@mixin use-tokens($prefix, $tokens) {\n  $_component-prefix: $prefix !global;\n  $_tokens: $tokens !global;\n\n  @content;\n\n  $_component-prefix: null !global;\n  $_tokens: null !global;\n}\n\n// Combines a prefix and a string to generate a CSS variable name for a token.\n@function _create-var-name($prefix, $token) {\n  @if $prefix == null or $token == null {\n    @error 'Must specify both prefix and name when generating token';\n  }\n\n  $string-prefix: '';\n\n  // Prefixes are lists so we need to combine them.\n  @each $part in $prefix {\n    $string-prefix: if($string-prefix == '', $part, '#{$string-prefix}-#{$part}');\n  }\n\n  @return string.unquote('--#{$string-prefix}-#{$token}');\n}\n\n// Creates a CSS variable, including the fallback if provided.\n@function _create-var($name, $fallback: null) {\n  @if ($fallback) {\n    @return var($name, $fallback);\n  } @else {\n    @return var($name);\n  }\n}\n\n// Gets the value of the token given the current global context state.\n@function _get-token-value($token, $fallback) {\n  $var-name: _create-var-name($_component-prefix, $token);\n  $fallback: _get-token-fallback($token, $fallback);\n  @return _create-var($var-name, $fallback);\n}\n\n// Assertion mixin that throws an error if the global state has not been set up by wrapping\n// calls with `use-tokens`.\n@function _assert-use-tokens($token) {\n  @if $_component-prefix == null or $_tokens == null {\n    @error 'Function was not called within a wrapping call of `use-tokens`';\n  }\n  @if not map.has-key($_tokens, $token) {\n    @error 'Token #{$token} does not exist. Configured tokens are: #{map.keys($_tokens)}';\n  }\n\n  @return true;\n}\n\n// Emits a slot for the given token, provided that it has a non-null value in the token map passed\n// to `use-tokens`.\n// Accepts an optional fallback parameter to include in the CSS variable.\n// If $fallback is `true`, then use the tokens map to get the fallback.\n// TODO: Remove the use case where we accept \"true\" and handle any failing client screenshots\n@mixin create-token-slot($property, $token, $fallback: null) {\n  $_assert: _assert-use-tokens($token);\n  @if map.get($_tokens, $token) != null {\n    #{$property}: #{_get-token-value($token, $fallback)};\n  }\n}\n\n// Returns the name of a token including the current prefix. Intended to be used in calculations\n// involving tokens. `create-token-slot` should be used when outputting tokens.\n@function get-token-variable-name($token) {\n  $_assert: _assert-use-tokens($token);\n  @return _create-var-name($_component-prefix, $token);\n}\n\n// Returns a `var()` reference to a specific token. Intended for declarations\n// where the token has to be referenced as a part of a larger expression.\n// Accepts an optional fallback parameter to include in the CSS variable.\n// If $fallback is `true`, then use the tokens map to get the fallback.\n// TODO: Remove the use case where we accept \"true\" and handle any failing client screenshots\n@function get-token-variable($token, $fallback: null) {\n  $_assert: _assert-use-tokens($token);\n  @return _get-token-value($token, $fallback);\n}\n\n// Gets the token's fallback value. Prefers adding a system-level fallback if one exists, otherwise\n// use the provided fallback.\n@function _get-token-fallback($token, $fallback: null) {\n  // If the $fallback is `true`, this is the component's signal to use the current token map value\n  @if ($fallback == true) {\n    $fallback: map.get($_tokens, $token);\n  }\n\n  // Check whether there's a system-level fallback. If not, return the optional\n  // provided fallback (otherwise null).\n  $sys-fallback: map.get($_system-fallbacks, $_component-prefix, $token);\n  @if (not $sys-fallback) {\n    @return $fallback;\n  }\n\n  @if (sass-utils.is-css-var-name($sys-fallback)) {\n    @return _create-var($sys-fallback, $fallback);\n  }\n\n  // TODO(mat-app-theme): Return the system-level fallback.\n  // Changing this will affect clients that do not properly call theme mixins since the tokens\n  // will be undefined and now default to M3 system values, causing a number of screenshot failures.\n  // @return $sys-fallback;\n  @return $fallback;\n}\n\n// Outputs a map of tokens under a specific prefix.\n@mixin create-token-values($prefix, $tokens) {\n  @if $tokens != null {\n    @each $key, $value in $tokens {\n      @if $value != null {\n        #{_create-var-name($prefix, $key)}: #{$value};\n      }\n    }\n  }\n}\n\n// MDC doesn't currently handle elevation tokens properly. As a temporary workaround we can combine\n// the elevation and shadow-color tokens into a full box-shadow and use it as the value for the\n// elevation token.\n@function resolve-elevation($tokens, $elevation-token, $shadow-color-token) {\n  $elevation: map.get($tokens, $elevation-token);\n  $shadow-color: map.get($tokens, $shadow-color-token);\n  @return map.merge($tokens, (\n    $elevation-token: elevation.get-box-shadow($elevation, $shadow-color),\n    $shadow-color-token: null,\n  ));\n}\n\n/// Checks whether a list starts wih a given prefix\n/// @param {List} $list The list value to check the prefix of.\n/// @param {List} $prefix The prefix to check.\n/// @return {Boolean} Whether the list starts with the prefix.\n@function _is-prefix($list, $prefix) {\n  @for $i from 1 through list.length($prefix) {\n    @if list.nth($list, $i) != list.nth($prefix, $i) {\n      @return false;\n    }\n  }\n  @return true;\n}\n\n/// Gets the supported color variants in the given token set for the given prefix.\n/// @param {Map} $tokens The full token map.\n/// @param {List} $prefix The component prefix to get color variants for.\n/// @return {List} The supported color variants.\n@function _supported-color-variants($tokens, $prefix) {\n  $result: ();\n  @each $namespace in map.keys($tokens) {\n    @if list.length($prefix) == list.length($namespace) - 1 and _is-prefix($namespace, $prefix) {\n      $result: list.append($result, list.nth($namespace, list.length($namespace)), comma);\n    }\n  }\n  @return $result;\n}\n\n/// Gets the token values for the given components prefix with the given options.\n/// @param {Map} $tokens The full token map.\n/// @param {List} $prefix The component prefix to get the token values for.\n/// @param {ArgList} Any additional options\n///   Currently the additional supported options are:\n//     - $color-variant - The color variant to use for the component\n//     - $emit-overrides-only - Whether to emit *only* the overrides for the\n//                              specific color variant, or all color styles. Defaults to false.\n/// @throws If given options are invalid\n/// @return {Map} The token values for the requested component.\n@function get-tokens-for($tokens, $prefix, $options...) {\n  $options: sass-utils.validate-keyword-args($options, (color-variant, emit-overrides-only));\n  @if $tokens == () {\n    @return ();\n  }\n  $values: map.get($tokens, $prefix);\n  $color-variant: map.get($options, color-variant);\n  $emit-overrides-only: map.get($options, emit-overrides-only);\n  @if $color-variant == null {\n    @return $values;\n  }\n  $overrides: map.get($tokens, list.append($prefix, $color-variant));\n  @if $overrides == null {\n    $variants: _supported-color-variants($tokens, $prefix);\n    $secondary-message: if($variants == (),\n      'Mixin does not support color variants',\n      'Supported color variants are: #{$variants}'\n    );\n\n    @error 'Invalid color variant: #{$color-variant}. #{$secondary-message}.';\n  }\n  @return if($emit-overrides-only, $overrides, map.merge($values, $overrides));\n}\n\n/// Emits new token values for the given token overrides.\n/// Verifies that the overrides passed in are valid tokens.\n/// New token values are emitted under the current selector or root.\n@mixin batch-create-token-values($overrides: (), $token-maps...) {\n  @include _validate-token-overrides($overrides, $token-maps);\n\n  @each $token-map in $token-maps {\n    $prefix: map.get($token-map, prefix);\n    $tokens: map.get($token-map, tokens);\n\n    @each $name, $value in $tokens {\n      $tokens: map.set($tokens, $name, map.get($overrides, $name));\n    }\n\n    @include sass-utils.current-selector-or-root() {\n      @include create-token-values($prefix, $tokens);\n    }\n  }\n}\n\n/// Verifies that the token overrides exist and are used in one of the given token maps.\n@mixin _validate-token-overrides($overrides: (), $token-maps) {\n  $valid-token-names: ();\n\n  @each $token-map in $token-maps {\n    @each $name, $value in map.get($token-map, tokens) {\n      @if ($value != null and list.index($valid-token-names, $name) == null) {\n        $valid-token-names: list.append($valid-token-names, $name);\n      }\n    }\n  }\n\n  @each $name in map.keys($overrides) {\n    @if (list.index($valid-token-names, $name) == null) {\n      @error (\n        'Invalid token: \"' + $name + '\"'\n        'Valid tokens include: ' $valid-token-names\n      );\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  $theme-color: mat.get-theme-color($theme, surface-container-highest);\n\n  .client-progress-container {\n    background: mat.get-theme-color($theme, surface-container-low);\n  }\n\n  .programs-list-wrapper-placeholder {\n    .program-list-skeleton {\n      background: mat.get-theme-color($theme, surface-container-low);\n\n      &::after {\n        background-image: linear-gradient(\n          90deg,\n          color.adjust($theme-color, $alpha: -1) 0%,\n          color.adjust($theme-color, $alpha: -0.8) 20%,\n          color.adjust($theme-color, $alpha: -0.5) 60%,\n          color.adjust($theme-color, $alpha: -1)\n        );\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  $theme-color: mat.get-theme-color($theme, surface-container-highest);\n\n  .inputs-wrapper {\n    .right-input-column {\n      background: mat.get-theme-color($theme, surface-container-low);\n    }\n  }\n\n  .upload-image-placeholder {\n    background: mat.get-theme-color($theme, surface-container-low);\n\n    .upload-image-skeleton {\n      &::after {\n        background-image: linear-gradient(\n          90deg,\n          color.adjust($theme-color, $alpha: -1) 0%,\n          color.adjust($theme-color, $alpha: -0.8) 20%,\n          color.adjust($theme-color, $alpha: -0.5) 60%,\n          color.adjust($theme-color, $alpha: -1)\n        );\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .basic-table-wrapper {\n    background: mat.get-theme-color($theme, surface-container-low);\n\n    .all-programs-input-wrapp {\n      .basic-program-filter {\n        background: mat.get-theme-color($theme, surface-container-lowest);\n      }\n    }\n\n    .programs-table {\n      .mat-basic-program-table {\n        .table-rows:hover {\n          background: mat.get-theme-color($theme, surface-container-high);\n        }\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  $theme-color: mat.get-theme-color($theme, surface-container-highest);\n\n  .clients-program-list-table {\n    .clients-table {\n      tr.client-program-element-row:not(.client-program-expanded-row):hover {\n        background: mat.get-theme-color($theme, surface-container-low);\n      }\n\n      tr.client-program-element-row:not(.client-program-expanded-row):active {\n        background: mat.get-theme-color($theme, surface-container-low);\n      }\n\n      .client-program-element-detail {\n        .table-client-program-wrapper {\n          .list-item {\n            border-bottom: 2px solid\n              mat.get-theme-color($theme, surface-container);\n\n            &:hover {\n              background: mat.get-theme-color($theme, surface-container-low);\n            }\n\n            .list-item-flex {\n              .list-info {\n                .list-info-details {\n                  color: mat.get-theme-color($theme, outline);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .status-chip-wrapper {\n    .status-chip {\n    }\n\n    .status-completed {\n      background: mat.get-theme-color($theme, secondary-container);\n      color: mat.get-theme-color($theme, on-secondary-container);\n    }\n\n    .status-inprogress {\n      background: mat.get-theme-color($theme, error-container);\n      color: mat.get-theme-color($theme, on-error-container);\n    }\n  }\n\n  .basic-programs-table-placeholder {\n    background: mat.get-theme-color($theme, surface-container-low);\n\n    .animate-skeleton {\n      &::after {\n        background-image: linear-gradient(\n          90deg,\n          color.adjust($theme-color, $alpha: -1) 0%,\n          color.adjust($theme-color, $alpha: -0.8) 20%,\n          color.adjust($theme-color, $alpha: -0.5) 60%,\n          color.adjust($theme-color, $alpha: -1)\n        );\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .table-rows:hover {\n    background: mat.get-theme-color($theme, surface-container-low);\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .programs-table {\n    & table {\n      .table-rows:hover {\n        background: mat.get-theme-color($theme, surface-container-low);\n      }\n    }\n\n    .favorite-program-star {\n      color: #fecb33;\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .mat-drawer-container {\n    background: mat.get-theme-color($theme, surface-container);\n  }\n\n  .filter-drawer {\n    background: mat.get-theme-color($theme, surface-container-lowest);\n\n    .drawer-wrapper {\n      background: mat.get-theme-color($theme, surface-container-lowest);\n    }\n  }\n\n  .mat-drawer-content {\n    background: mat.get-theme-color($theme, surface-container-lowest);\n  }\n\n  mat-stepper {\n    background: mat.get-theme-color($theme, surface-container-lowest);\n  }\n\n  .mat-step-header[aria-selected='true'] {\n    background: mat.get-theme-color($theme, surface-container-high);\n\n    // It should be tokenized with border-radius: --mat-stepper-header-hover-state-layer-shape: 12px;\n  }\n\n  .print-template-container {\n    // & * {\n    //   font-family: Roboto, sans-serif !important;\n    // }\n\n    .program-client-container {\n      .info-wrapper {\n        span:first-of-type {\n          font-size: 18px;\n          font-weight: 500;\n        }\n\n        span {\n          font-size: 18px;\n          font-weight: 400;\n        }\n      }\n    }\n\n    .print-grid-table {\n      .exercise-cell {\n        background-color: white;\n        // border: 2px solid black;\n\n        .title {\n          border-bottom: 1px solid black;\n\n          & > span {\n            font-size: 14px;\n          }\n        }\n\n        .exercise-info-wrapper {\n          border-top: 1px solid black;\n\n          .sets-reps {\n            // line-height: 2;\n            // border-bottom: 1px solid black;\n\n            & span {\n              font-size: 14px;\n            }\n\n            & > div:first-of-type {\n              // border-right: 1px solid black;\n            }\n          }\n\n          .notes {\n            & > span {\n              font-size: 14px;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Print template\n  @media print {\n    .print-template-container {\n      & * {\n        font-family: Roboto, sans-serif !important;\n      }\n\n      .program-client-container {\n        .info-wrapper {\n          span:first-of-type {\n            font-size: 18px;\n            font-weight: 500;\n          }\n\n          span {\n            font-size: 18px;\n            font-weight: 400;\n          }\n        }\n      }\n\n      .print-grid-table {\n        .exercise-cell {\n          background-color: white;\n          // border: 2px solid black;\n\n          .title {\n            border-bottom: 1px solid black;\n\n            & > span {\n              font-size: 14px;\n            }\n          }\n\n          .exercise-info-wrapper {\n            border-top: 1px solid black;\n\n            .sets-reps {\n              // line-height: 2;\n              border-bottom: 1px solid black;\n\n              & span {\n                font-size: 14px;\n              }\n            }\n\n            .notes {\n              & > span {\n                font-size: 14px;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .status-toggle {\n    .program-list {\n      .list-item-wrapper {\n        &:hover {\n          background: mat.get-theme-color($theme, surface-container-high);\n        }\n      }\n    }\n    .custom-height-background {\n      background: mat.get-theme-color($theme, surface-container-low);\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  $theme-color: mat.get-theme-color($theme, surface-container-highest);\n\n  .selected-exercises {\n    background: mat.get-theme-color($theme, surface-container-low);\n    color: mat.get-theme-color($theme, on-surface);\n\n    .add-exercise-placeholder {\n      color: mat.get-theme-color($theme, outline);\n    }\n  }\n\n  .search-segmented-btns {\n    background: mat.get-theme-color($theme, surface-container-lowest);\n  }\n\n  .edit-client-name {\n    color: mat.get-theme-color($theme, outline);\n  }\n\n  .edit-program-name {\n    color: mat.get-theme-color($theme, outline);\n  }\n\n  .exercise-card-placeholder {\n    background: mat.get-theme-color($theme, surface-container-highest);\n  }\n\n  .exercise-card-preview {\n    border: 1px solid mat.get-theme-color($theme, surface-container-highest);\n  }\n\n  .selected-cards-box {\n    // background: mat.get-theme-color($theme, surface-container-high);\n    background: mat.get-theme-color($theme, surface);\n    // color: rgba(0, 0, 0, 0.87);\n    border-bottom: solid 1px mat.get-theme-color($theme, surface-dim);\n  }\n\n  // .grid-container-placeholder {\n  //   .exercise-cards-placeholder {\n  .exercise-card-skeleton {\n    background: mat.get-theme-color($theme, surface-container-low);\n\n    &::after {\n      background-image: linear-gradient(\n        90deg,\n        color.adjust($theme-color, $alpha: -1) 0%,\n        color.adjust($theme-color, $alpha: -0.8) 20%,\n        color.adjust($theme-color, $alpha: -0.5) 60%,\n        color.adjust($theme-color, $alpha: -1)\n      );\n    }\n  }\n  //   }\n  // }\n\n  .background-wrapper-placeholder {\n    .main-wrap-placeholder {\n      background: mat.get-theme-color($theme, surface-container-low);\n\n      &::after {\n        background-image: linear-gradient(\n          90deg,\n          color.adjust($theme-color, $alpha: -1) 0%,\n          color.adjust($theme-color, $alpha: -0.7) 20%,\n          color.adjust($theme-color, $alpha: -0.4) 60%,\n          color.adjust($theme-color, $alpha: -1)\n        );\n      }\n      // background-color: red;\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .wrap-default {\n    border: 1px solid mat.get-theme-color($theme, surface-container-high);\n\n    .card {\n      .card-head {\n        // background: mat.get-theme-color($theme, surface-container-lowest);\n        background: #ffffff;\n      }\n\n      .card-body {\n        background: mat.get-theme-color($theme, surface-container-high);\n\n        .card-icons {\n          .favorite-exercise-star {\n            color: #fecb33;\n          }\n        }\n      }\n    }\n\n    &:hover {\n      //   box-shadow: 1px 2px 4px mat.get-theme-color($theme, primary);\n      outline-offset: 2px;\n      outline: 2px solid mat.get-theme-color($theme, inverse-primary);\n    }\n  }\n\n  //   .wrap-selected {\n  //     .card {\n  //       .card-head {\n  //         background-color: #ffffff;\n  //       }\n  //     }\n  //   }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .edit-program-flex {\n    .content-wrapper {\n      background: mat.get-theme-color($theme, surface-container-low);\n    }\n  }\n\n  .exer-expansion-panel {\n    // color: mat.get-theme-color($theme, error);\n\n    .expansion-panel-handle {\n      color: mat.get-theme-color($theme, outline);\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .print-wrapper {\n    background: mat.get-theme-color($theme, surface-container-low);\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .label {\n    color: mat.get-theme-color($theme, outline);\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n// @use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  // $border-color: mat.get-theme-color($theme, surface-container);\n  // $transparent-border-color: color.scale($border-color, $alpha: 60%);\n\n  .confirmation-dialog-wrapper {\n    border: 2px solid mat.get-theme-color($theme, surface-container-high);\n  }\n  .dialog-content-wrapper {\n    .category-labels {\n      .category-value {\n        // color: #000;\n      }\n\n      .chips-category {\n        // background-color: #dbe2f9;\n      }\n    }\n  }\n\n  .label {\n    color: mat.get-theme-color($theme, outline);\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .upload-image {\n    .file-upload-button-wrapper {\n      background: mat.get-theme-color($theme, surface-container-low);\n\n      .file-upload-button {\n        background: mat.get-theme-color($theme, surface-container-high);\n\n        &:hover {\n          background: mat.get-theme-color($theme, surface-container-highest);\n        }\n      }\n    }\n\n    .remove-wrapper {\n      .file-upload-button {\n        background: mat.get-theme-color($theme, error);\n        color: mat.get-theme-color($theme, on-error);\n        \n\n        &:hover {\n        background: mat.get-theme-color($theme, on-error-container);\n\n        }\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .category-data {\n    .custom-mat-tree {\n      background: mat.get-theme-color($theme, surface-container-lowest);\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  $theme-color: mat.get-theme-color($theme, surface-container-highest);\n\n  .programs-list-wrapper-placeholder {\n    .program-list-skeleton {\n      background: mat.get-theme-color($theme, surface-container-low);\n\n      &::after {\n        background-image: linear-gradient(\n          90deg,\n          color.adjust($theme-color, $alpha: -1) 0%,\n          color.adjust($theme-color, $alpha: -0.8) 20%,\n          color.adjust($theme-color, $alpha: -0.5) 60%,\n          color.adjust($theme-color, $alpha: -1)\n        );\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  $theme-color: mat.get-theme-color($theme, surface);\n\n  .fetchingDataSpinner {\n    background: color.adjust($theme-color, $alpha: -0.7);\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin color($theme) {\n  .mat-toolbar {\n    background: mat.get-theme-color($theme, surface-container);\n  }\n\n  .sidenav {\n    background: mat.get-theme-color($theme, surface-container);\n  }\n\n  .navigation-sidenav {\n    background: mat.get-theme-color($theme, surface-container);\n\n    .main {\n      background: mat.get-theme-color($theme, surface-container-lowest);\n    }\n  }\n\n  .custom-nav {\n    .nav-drawer {\n      .nav-list-wrapper {\n        .active-link {\n          background: mat.get-theme-color($theme, secondary-container);\n        }\n\n        .nav-list {\n          mat-icon {\n            color: mat.get-theme-color($theme, on-secondary-container);\n          }\n\n          &:hover {\n            background: mat.get-theme-color($theme, secondary-container);\n          }\n\n          &:visited {\n            color: mat.get-theme-color($theme, on-secondary-container);\n          }\n        }\n      }\n    }\n\n    &.expanded-custom-nav {\n      .nav-drawer {\n        .nav-list-wrapper {\n          .nav-list {\n            &:hover {\n              background: mat.get-theme-color($theme, secondary-container);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// @mixin typography($theme) {\n// }\n\n@mixin theme($theme) {\n  @include color($theme);\n  // @include typography($theme);\n}\n"],"mappings":"AAIA,CAAA,WC2HQ,4BAAA,QAAA,sBAAA,QAAA,oCAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,oCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qCAAA,IAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EA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AAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,qDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,uDAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,sCAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,4CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,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","names":[],"sourceRoot":"webpack:///","file":"dark-theme.css","x_google_ignoreList":[1]}