{"version":3,"file":"847.f5f0399bff802411.js","mappings":"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","sources":["./apps/sanare-app/src/app/pages/settings/settings.component.html","./apps/sanare-app/src/app/pages/settings/settings.component.ts"],"sourcesContent":["<ui-page-toolbar\n  [pageTitle]=\"pageTitle\"\n  [cancelButton]=\"true\"\n  [submitButton]=\"true\"\n  (cancelEvent)=\"onBack()\"\n  (submitEvent)=\"onSubmit()\"\n></ui-page-toolbar>\n\n<div class=\"settings-wrapper\">\n  <h3 class=\"mat-title-large\" i18n=\"@@Settings.userInterfaceTitle\">\n    User interface\n  </h3>\n  <div class=\"theme-toggle-wrapper\">\n    <mat-slide-toggle\n      labelPosition=\"before\"\n      [(ngModel)]=\"isDark\"\n      (change)=\"switchTheme()\"\n      i18n=\"@@Settings.switchThemeToggleLabel\"\n      class=\"mat-headline-small\"\n      >Dark mode</mat-slide-toggle\n    >\n  </div>\n  <div class=\"language-wrapper\">\n    <p i18n=\"@@Settings.languageSettingsTitle\">Language settings</p>\n    <mat-form-field appearance=\"outline\">\n      <mat-label i18n=\"@@Settings.languageSettingsLabel\"\n        >Select your default language</mat-label\n      >\n      <mat-select\n        [(value)]=\"selectedLanguage\"\n        (valueChange)=\"selectValueChanged = true\"\n      >\n        @for (language of languages; track language) {\n          <mat-option [value]=\"language.code\">{{ language.name }}</mat-option>\n        }\n      </mat-select>\n      @if (selectValueChanged) {\n        <mat-hint i18n=\"@@Settings.languageSettingsHint\"\n          >Changes will take effect after saving</mat-hint\n        >\n      }\n    </mat-form-field>\n  </div>\n</div>\n","import {\n  Component,\n  computed,\n  effect,\n  inject,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { Router } from '@angular/router';\nimport { PageToolbarComponent, ThemeManagerService } from '@slowautomobile/ui';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { LocalstorageService, UsersService } from '@slowautomobile/users';\nimport { Subscription } from 'rxjs';\n\ninterface Language {\n  name: string;\n  code: string;\n}\n\n@Component({\n  selector: 'sanareapp-settings',\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss',\n  standalone: true,\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    PageToolbarComponent,\n  ],\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  private router = inject(Router);\n  themeManager = inject(ThemeManagerService);\n  private localstorageService = inject(LocalstorageService);\n  private usersService = inject(UsersService);\n\n  userId = this.usersService.userId;\n  selectValueChanged = false;\n  pageTitle = $localize`:@@Settings.pageTitle:Settings`;\n  isDarkSignal = this.themeManager.isDark;\n  isDark = false;\n  subscriptions = new Subscription();\n\n  languages: Language[] = [\n    { name: 'English', code: 'en-US' },\n    { name: 'Deutsch', code: 'de-DE' },\n    { name: 'Srpski', code: 'sr-RS' },\n  ];\n\n  selectedLanguage!: string;\n  fe!: string;\n\n  ngOnInit(): void {\n    this.isDark = this.isDarkSignal();\n\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log(this.selectedLanguage);\n  }\n\n  switchTheme() {\n    this.isDark\n      ? this.themeManager.changeTheme('dark')\n      : this.themeManager.changeTheme('light');\n  }\n\n  onSubmit() {\n    // This works only when app is deployed on server which serves different localized builds, otherwise, router will navigate to dashboard(every ** path that is not in routes will redirect to '/' ie. /dashboard)\n    // this.router.navigate([`/${this.selectedLanguage}`]);\n    if (this.selectValueChanged) {\n      this._setAndUpdateUserLanguageToken(this.selectedLanguage);\n    } else {\n      this.router.navigateByUrl('/');\n    }\n    // location.replace(`/${this.selectedLanguage}/settings`);\n\n    console.log(this.selectedLanguage);\n  }\n\n  onBack() {\n    this.router.navigateByUrl('');\n  }\n\n  // showValue() {\n  //   this.selectValueChanged = true;\n  //   console.log(this.selectedLanguage);\n  // }\n\n  private _getUserLanguageToken(): string {\n    return this.localstorageService.getToken('userLanguage') || 'en-US';\n  }\n\n  private _setAndUpdateUserLanguageToken(languageCode: string) {\n    this.localstorageService.setToken('userLanguage', languageCode);\n\n    const subscription = this.usersService\n      .updateUserLanguage(this.userId(), { langCode: languageCode })\n      .subscribe(() => {\n        // setTimeout(() => {\n        //   location.replace(`${window.location.origin}/${languageCode}/`);\n        // }, 4000);\n        location.replace(`${window.location.origin}/sanare/${languageCode}/`);\n      });\n\n    this.subscriptions.add(subscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n"],"names":["i0","language_r1","code","name","SettingsComponent","constructor","this","router","inject","Router","themeManager","ThemeManagerService","localstorageService","LocalstorageService","usersService","UsersService","userId","selectValueChanged","pageTitle","$localize","isDarkSignal","isDark","subscriptions","Subscription","languages","ngOnInit","selectedLanguage","_getUserLanguageToken","console","log","switchTheme","changeTheme","onSubmit","_setAndUpdateUserLanguageToken","navigateByUrl","onBack","getToken","languageCode","setToken","subscription","updateUserLanguage","langCode","subscribe","location","replace","window","origin","add","ngOnDestroy","unsubscribe","selectors","standalone","features","decls","vars","consts","i18n_0","ctx","$event","SettingsComponent_For_15_Template","SettingsComponent_Conditional_16_Template","FormsModule","i1","MatInputModule","i2","MatSelectModule","i3","i4","MatFormFieldModule","MatSlideToggleModule","i5","PageToolbarComponent","styles"],"sourceRoot":"webpack:///"}