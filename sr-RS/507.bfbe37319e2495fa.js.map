{"version":3,"file":"507.bfbe37319e2495fa.js","mappings":"+WAaMA,MAAA,wBAIEA,MAAA,sCAAAC,GAAAD,MAAAE,GAAA,MAAAC,EAAAH,QAAA,OAAAA,MAA8BG,EAAAC,sBAAAH,GAA6B,GAC5DD,gCAFCA,MAFA,YAAAG,EAAAE,iBAEAL,CAF8B,qBAAAG,EAAAG,mBAE9BN,CADyC,yCAK3CA,MAAA,WASEA,MARA,UAQAA,CARyC,UAQzCA,CAPyC,UAOzCA,CANyC,UAMzCA,CALyC,UAKzCA,CAJyC,UAIzCA,CAHyC,UAGzCA,CAFyC,UAEzCA,CADyC,WAE3CA,SCPC,IAAMO,EAAkB,MAAzB,MAAOA,EAXbC,cAYUC,KAAAC,kBAAiBC,OAAOC,MACxBH,KAAAI,UAASF,OAAOG,MAChBL,KAAAM,2BAA0BJ,OAAOK,MAGzCP,KAAAH,mBAAgC,GAChCG,KAAAQ,WAAaR,KAAKM,wBAAwBE,WAG1CR,KAAAS,gBAAeP,OAAOQ,MACtBV,KAAAW,YAAcX,KAAKS,aAAaE,YAEhCX,KAAAY,UAAYC,iBAA2CA,CAEvDC,WACEd,KAAKJ,iBAAmBI,KAAKC,eAC1Bc,6BACAC,QACCC,KAAIC,IAEF,MAAMC,EAAc,IAAIC,KAElBC,EAAyB,GAC/BH,SAASI,QAAQC,IAEf,MAAMC,EAAiBD,EAAQA,QACzBE,EAAmB,IAAIL,KAAKI,EAAeE,UAAUC,OACrDC,EAAiB,IAAIR,KAAKI,EAAeE,UAAUG,KAEnDC,EACJF,EAAeG,UAAYN,EAAiBM,UACxCC,EACJb,EAAYY,UAAYN,EAAiBM,UACrCE,EAAWC,KAAKC,IAAKH,EAAcF,EAAiB,IAAK,KAC/DN,EAAeS,SAAWC,KAAKE,MAAMH,GAEjCL,EAAiBT,IACnBnB,KAAKH,mBAAmBwC,MAAK,GAC7BhB,EAAgBgB,KAAKb,GACrBc,QAAQC,IAAI,+BAA6B,GAG7ClB,EAAgBmB,KACd,CAACC,EAAGC,IACF,IAAItB,KAAKsB,EAAEhB,UAAUG,KAAKE,UAC1B,IAAIX,KAAKqB,EAAEf,UAAUG,KAAKE,WAE9BO,QAAQC,IAAIlB,GACLA,IAGf,CAEA1B,sBAAsBgD,GACpBL,QAAQC,IAAII,GAGZ,MAAMC,EAAYD,EAAYE,GACxBC,EAAcH,EAAYI,KAE1BrB,EAAYiB,EAAYjB,UAC9BY,QAAQC,IAAIb,GAEZ1B,KAAKQ,WAAWwC,IAAI,CAClBC,SAAUN,EAAYM,SACtBC,WAAYP,EAAYO,WACxBC,gBAAiBR,EAAYS,SAC7BR,UAAWA,EACXE,YAAaA,EACbpB,UAAWA,IAOb1B,KAAKI,OAAOiD,SAAS,CAAC,iBAAiBT,KAAc,CACnDU,YAAa,CACXR,YAAa,GAAGA,IAChBS,gBAAiBT,EAAYU,WAAa,QAAU,SAG1D,iDAnFW1D,EAAkB,oCAAlBA,EAAkB2D,UAAA,0BAAAC,YAAA,EAAAC,SAAA,CAAApE,OAAAqE,MAAA,EAAAC,KAAA,EAAAC,YAAA,IAAAC,WDpBgClD,+BAAAA,oUAH/DtB,MAAA,uBAGEA,MADF,UACEA,CADqC,UACrCA,MAAA,KAEAA,QACAA,MAAA,WAaIA,MAPF,EAAAyE,EAAA,IAOEzE,CAYD,EAAA0E,EAAA,MAnBD1E,MAAA,IAAA2E,EAAA,gBAqBJ3E,iBAjCiBA,MAAA,YAAA4E,EAAAvD,WASbrB,MAAA,GAAAA,MAAA,UAAA4E,EAAAxD,+BCSAyD,KAEAC,KAAuBC,MAAAC,OAAA,q2BAGdzE,CAAkB","sources":["./apps/sanare-app/src/app/pages/dashboard/dashboard.component.html","./apps/sanare-app/src/app/pages/dashboard/dashboard.component.ts"],"sourcesContent":["<ui-page-toolbar [pageTitle]=\"pageTitle\"></ui-page-toolbar>\n\n<div class=\"client-progress-container\">\n  <h3 class=\"mat-title-large\" i18n=\"@@Dashboard.progressTitle\">\n    Recent clients progress\n  </h3>\n  <div\n    class=\"scrollable-container\"\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n  >\n    @defer {\n      <clients-progress\n        [programs$]=\"clientsPrograms$\"\n        [isProgramCompleted]=\"isProgramCompleted\"\n        [isDashboard]=\"true\"\n        (openEditClientProgramEvent)=\"openEditClientProgram($event)\"\n      ></clients-progress>\n    } @placeholder {\n      <div class=\"programs-list-wrapper-placeholder\">\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n        <div class=\"program-list-skeleton\"></div>\n      </div>\n    }\n  </div>\n</div>\n<!-- @for (program of clientsPrograms$ | async; track program) {\n  <div>{{ program.program.name }}</div>\n} -->\n","import { Component, inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  ClientsService,\n  Program,\n  ShareClientsDataService,\n} from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '@slowautomobile/ui';\nimport { Observable, map } from 'rxjs';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { PageToolbarComponent } from '@slowautomobile/ui';\nimport { ClientsProgressComponent } from '@slowautomobile/clients';\n@Component({\n  selector: 'sanareapp-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss',\n  standalone: true,\n  imports: [\n    PageToolbarComponent,\n    ClientsProgressComponent,\n    OverlayscrollbarsModule,\n  ],\n})\nexport class DashboardComponent implements OnInit {\n  private clientsService = inject(ClientsService);\n  private router = inject(Router);\n  private shareClientsDataService = inject(ShareClientsDataService);\n\n  clientsPrograms$!: Observable<any[]>;\n  isProgramCompleted: boolean[] = [];\n  clientInfo = this.shareClientsDataService.clientInfo;\n  // isClientProgram = this.shareClientsDataService.isClientProgram;\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  pageTitle = $localize`:@@Dashboard.pageTitle:Dashboard`;\n\n  ngOnInit(): void {\n    this.clientsPrograms$ = this.clientsService\n      .getAllClientsProgramsBasic()\n      .pipe(\n        map(programs => {\n          // const adaptedPrograms = [...programs];\n          const currentDate = new Date();\n          // const programsClone = [...programs];\n          const adaptedPrograms: any[] = [];\n          programs.forEach(program => {\n            // console.log(program.program);\n            const adaptedProgram = program.program;\n            const programStartDate = new Date(adaptedProgram.dateRange.start);\n            const programEndDate = new Date(adaptedProgram.dateRange.end);\n\n            const totalDuration =\n              programEndDate.getTime() - programStartDate.getTime();\n            const elapsedTime =\n              currentDate.getTime() - programStartDate.getTime();\n            const progress = Math.min((elapsedTime / totalDuration) * 100, 100); // Ensure progress doesn't exceed 100%\n            adaptedProgram.progress = Math.round(progress);\n\n            if (programEndDate > currentDate) {\n              this.isProgramCompleted.push(false);\n              adaptedPrograms.push(adaptedProgram);\n              console.log('This program is in progress');\n            }\n          });\n          adaptedPrograms.sort(\n            (a, b) =>\n              new Date(b.dateRange.end).getTime() -\n              new Date(a.dateRange.end).getTime(),\n          );\n          console.log(adaptedPrograms);\n          return adaptedPrograms;\n        }),\n      );\n  }\n\n  openEditClientProgram(programData: any) {\n    console.log(programData);\n    // console.log(this.programs[programPosition - 1]);\n    // this.isClientProgram.set(true);\n    const programId = programData.id;\n    const programName = programData.name;\n\n    const dateRange = programData.dateRange;\n    console.log(dateRange);\n\n    this.clientInfo.set({\n      clientId: programData.clientId,\n      clientName: programData.clientName,\n      programPosition: programData.position,\n      programId: programId,\n      programName: programName,\n      dateRange: dateRange,\n    });\n\n    // this.router.navigateByUrl(`programs/form/${programId}`);\n    // this.router.navigateByUrl(\n    //   `clients/form/${this.clientId}/programs/${programId}`,\n    // );\n    this.router.navigate([`programs/form/${programId}`], {\n      queryParams: {\n        programName: `${programName}`,\n        isClientProgram: programName.isTemplate ? 'false' : 'true',\n      },\n    });\n  }\n}\n"],"names":["i0","$event","_r1","ctx_r1","openEditClientProgram","clientsPrograms$","isProgramCompleted","DashboardComponent","constructor","this","clientsService","inject","ClientsService","router","Router","shareClientsDataService","ShareClientsDataService","clientInfo","themeManager","ThemeManagerService","themeSignal","pageTitle","$localize","ngOnInit","getAllClientsProgramsBasic","pipe","map","programs","currentDate","Date","adaptedPrograms","forEach","program","adaptedProgram","programStartDate","dateRange","start","programEndDate","end","totalDuration","getTime","elapsedTime","progress","Math","min","round","push","console","log","sort","a","b","programData","programId","id","programName","name","set","clientId","clientName","programPosition","position","navigate","queryParams","isClientProgram","isTemplate","selectors","standalone","features","decls","vars","consts","i18n_0","DashboardComponent_Defer_5_Template","DashboardComponent_DeferPlaceholder_6_Template","DashboardComponent_Defer_7_DepsFn","ctx","PageToolbarComponent","OverlayscrollbarsModule","i1","styles"],"sourceRoot":"webpack:///"}