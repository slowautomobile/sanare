{"version":3,"file":"396.32441db92c75b9e8.js","mappings":"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","sources":["./apps/sanare-app/src/app/pages/users/user-edit-form/user-edit-form.component.ts","./apps/sanare-app/src/app/pages/users/user-edit-form/user-edit-form.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { UsersService } from '@slowautomobile/users';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { lastValueFrom, timer, Subscription, share } from 'rxjs';\nimport {\n  PageToolbarComponent,\n  ClientFullEditFormComponent,\n} from '@slowautomobile/ui';\nimport { ShareStateService } from '@slowautomobile/exercises';\n\n@Component({\n  selector: 'sanareapp-edit-form',\n  templateUrl: './user-edit-form.component.html',\n  styleUrl: './user-edit-form.component.scss',\n  standalone: true,\n  imports: [\n    PageToolbarComponent,\n    ClientFullEditFormComponent,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class UserEditFormComponent implements OnInit, OnDestroy {\n  private formBuilder = inject(FormBuilder);\n  private route = inject(ActivatedRoute);\n  private usersService = inject(UsersService);\n  private router = inject(Router);\n  private _snackBar = inject(MatSnackBar);\n  private shareStateService = inject(ShareStateService);\n\n  subscriptions = new Subscription();\n\n  form!: FormGroup;\n  editMode = false;\n  userId = this.usersService.userId;\n  pageTitle = $localize`:@@UserForm.pageTitle:User profile`;\n  isLoading = this.shareStateService.isLoading;\n\n  ngOnInit(): void {\n    this._initForm();\n    this._checkEditMode();\n\n    // this.form.valueChanges.subscribe(value => console.log(value));\n  }\n\n  // For the sake of form reusability, 'clientInfo' will remain as field name\n  // FINISH THIS SO VALUE CAN BE SET AND SAVED !!! FINISH PROFILE EDIT PAGE ! ! ! !\n  private _initForm() {\n    this.form = this.formBuilder.group({\n      id: [''],\n      // name: [''],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', Validators.required],\n      profilePicture: [''],\n      address: this.formBuilder.group({\n        street: [''],\n        streetNumber: [''],\n        city: [''],\n        zipCode: [''],\n        country: [''],\n      }),\n      credentials: this.formBuilder.group({\n        title: [''],\n        qualifications: [''],\n        // qualifications: new FormControl(),\n        licences: [''],\n\n        // licences: this.formBuilder.array([]),\n        company: [''],\n      }),\n      favorites: this.formBuilder.group({\n        favExercises: [''],\n        favPrograms: [''],\n      }),\n    });\n  }\n\n  private _checkEditMode() {\n    if (this.userId()) {\n      this.editMode = true;\n\n      const subscription = this.usersService\n        .getUser(this.userId())\n        .subscribe(user => {\n          const profileImg = user.profilePicture;\n          // console.log(profileImg);\n          console.log(user);\n\n          this.form.get('id')?.setValue(this.userId());\n          // this.form.get('name')?.setValue(user.name);\n          this.form.get('firstName')?.setValue(user.firstName);\n          this.form.get('lastName')?.setValue(user.lastName);\n          this.form.get('email')?.setValue(user.email);\n          this.form.get('phone')?.setValue(user.phone);\n          this.form.get('profilePicture')?.setValue(user.profilePicture);\n          this.form.get('address.street')?.setValue(user.address?.street);\n          this.form\n            .get('address.streetNumber')\n            ?.setValue(user.address?.streetNumber);\n          this.form.get('address.city')?.setValue(user.address?.city);\n          this.form.get('address.zipCode')?.setValue(user.address?.zipCode);\n          this.form.get('address.country')?.setValue(user.address?.country);\n\n          this.form.get('credentials.title')?.setValue(user.credentials?.title);\n          this.form\n            .get('credentials.qualifications')\n            ?.setValue(user.credentials?.qualifications);\n          this.form\n            .get('credentials.licences')\n            ?.setValue(user.credentials?.licences);\n          this.form\n            .get('credentials.company')\n            ?.setValue(user.credentials?.company);\n\n          this.form\n            .get('favorites.favExercises')\n            ?.setValue(user.favorites?.favExercises);\n          this.form\n            .get('favorites.favPrograms')\n            ?.setValue(user.favorites?.favPrograms);\n        });\n      this.subscriptions.add(subscription);\n    }\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this._snackBar.open(\n        $localize`:@@Snackbar.enterRequiredFields:Please enter required fields`,\n        '',\n        {\n          duration: 2000,\n          panelClass: ['custom-snackbar-style'],\n        },\n      );\n      return;\n    }\n    this.isLoading.set(true);\n    console.log(this.form);\n\n    /*  const userForm: User = {\n      id: this.userId(),\n      // name: this.form.get('name')?.value,\n      firstName: this.form.get('firstName')?.value,\n      lastName: this.form.get('lastName')?.value,\n      email: this.form.get('email')?.value,\n      phone: this.form.get('phone')?.value,\n      profilePicture: this.form.get('profilePicture')?.value,\n      address: {\n        street: this.form.get('address.street')?.value,\n        streetNumber: this.form.get('address.streetNumber')?.value,\n        city: this.form.get('address.city')?.value,\n        zipCode: this.form.get('address.zipCode')?.value,\n        country: this.form.get('address.country')?.value,\n      },\n    }; */\n\n    const userFormData = new FormData();\n\n    Object.keys(this.userForm).map(key => {\n      if (key === 'address') {\n        Object.keys(this.userForm[key].value).map(subKey => {\n          // Combined key is for example: form.get('address.street)?.value\n          const combinedKey = `${key}.${subKey}`;\n          userFormData.append(subKey, this.form.get(combinedKey)?.value);\n        });\n      } else if (key === 'credentials') {\n        Object.keys(this.userForm[key].value).map(subKey => {\n          // Combined key is for example: form.get('credentials.title)?.value\n          const combinedKey = `${key}.${subKey}`;\n          userFormData.append(subKey, this.form.get(combinedKey)?.value);\n        });\n      } else if (key === 'favorites') {\n        Object.keys(this.userForm[key].value).map(subKey => {\n          // Combined key is for example: form.get('credentials.title)?.value\n          const combinedKey = `${key}.${subKey}`;\n          userFormData.append(subKey, this.form.get(combinedKey)?.value);\n        });\n      } else {\n        userFormData.append(key, this.userForm[key].value);\n      }\n    });\n\n    if (this.editMode) {\n      this._updateUser(userFormData);\n    }\n  }\n\n  private _updateUser(userFormData: FormData) {\n    const subscription = this.usersService\n      .updateUser(userFormData, this.userId())\n      .subscribe(createdUser => {\n        console.log(createdUser);\n        this._snackBar.open(\n          $localize`:@@Snackbar.userUpdated:User updated`,\n          '',\n          {\n            duration: 2000,\n            panelClass: ['custom-snackbar-style'],\n          },\n        );\n        lastValueFrom(timer(1000)).then(() => {\n          this.isLoading.set(false);\n          this.router.navigateByUrl(`dashboard`);\n        });\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  onBack() {\n    this.router.navigateByUrl('');\n  }\n\n  get userForm() {\n    return this.form.controls;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<!-- This could be component!!!? -->\n<!-- <div class=\"page-title clients-title new-btn\">\n\n  <h2 class=\"primary-field main-title user-title mat-headline-small\">\n    User profile\n  </h2>\n\n</div>\n\n<div class=\"stepper-btns\">\n\n  <button\n    class=\"custom-btn\"\n    mat-stroked-button\n    color=\"primary\"\n    (click)=\"onBack()\"\n  >\n    Cancel\n  </button>\n\n  <button\n    class=\"custom-btn\"\n    [class.spinner]=\"isLoading\"\n    [disabled]=\"isLoading\"\n    mat-flat-button\n    color=\"primary\"\n    (click)=\"onSubmit()\"\n  >\n    Save\n  </button>\n</div> -->\n<ui-page-toolbar\n  [pageTitle]=\"pageTitle\"\n  [cancelButton]=\"true\"\n  [submitButton]=\"true\"\n  (cancelEvent)=\"onBack()\"\n  (submitEvent)=\"onSubmit()\"\n></ui-page-toolbar>\n\n<form [formGroup]=\"form\">\n  <div class=\"form-wrapper\">\n    <ui-client-full-edit-form></ui-client-full-edit-form>\n    <!-- CONTINUE HERE!!!!!!!!!!!!! -->\n    <!-- <div class=\"profile-info\">\n      <h3>Profile picture</h3>\n      @defer {\n        <ui-upload-image></ui-upload-image>\n      }\n      <div class=\"info-summary\">\n        <div class=\"summary-row\">\n          <span>Name: </span>\n          <span\n            >{{ form.get('firstName')?.value }}\n            {{ form.get('lastName')?.value }}</span\n          >\n        </div>\n      </div>\n    </div> -->\n  </div>\n</form>\n"],"names":["UserEditFormComponent","constructor","this","formBuilder","inject","FormBuilder","route","ActivatedRoute","usersService","UsersService","router","Router","_snackBar","MatSnackBar","shareStateService","ShareStateService","subscriptions","Subscription","editMode","userId","pageTitle","$localize","isLoading","ngOnInit","_initForm","_checkEditMode","form","group","id","firstName","Validators","required","lastName","email","phone","profilePicture","address","street","streetNumber","city","zipCode","country","credentials","title","qualifications","licences","company","favorites","favExercises","favPrograms","subscription","getUser","subscribe","user","console","log","get","setValue","add","onSubmit","invalid","open","duration","panelClass","set","userFormData","FormData","Object","keys","userForm","map","key","value","subKey","combinedKey","append","_updateUser","updateUser","createdUser","lastValueFrom","timer","then","navigateByUrl","onBack","controls","ngOnDestroy","unsubscribe","selectors","standalone","features","i0","decls","vars","consts","template","rf","ctx","PageToolbarComponent","ClientFullEditFormComponent","FormsModule","i1","ReactiveFormsModule","styles"],"sourceRoot":"webpack:///"}