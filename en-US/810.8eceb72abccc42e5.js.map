{"version":3,"file":"810.8eceb72abccc42e5.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/progress-bar.mjs","./libs/clients/src/lib/components/clients-progress/clients-progress.component.html","./libs/clients/src/lib/components/clients-progress/clients-progress.component.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-bar`. */\nconst MAT_PROGRESS_BAR_DEFAULT_OPTIONS = new InjectionToken('MAT_PROGRESS_BAR_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/** @docs-private */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\nclass MatProgressBar {\n    constructor(_elementRef, _ngZone, _changeDetectorRef, _animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Flag that indicates whether NoopAnimations mode is set to true. */\n        this._isNoopAnimation = false;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        this._mode = 'determinate';\n        /** Event handler for `transitionend` events. */\n        this._transitionendHandler = (event) => {\n            if (this.animationEnd.observers.length === 0 ||\n                !event.target ||\n                !event.target.classList.contains('mdc-linear-progress__primary-bar')) {\n                return;\n            }\n            if (this.mode === 'determinate' || this.mode === 'buffer') {\n                this._ngZone.run(() => this.animationEnd.next({ value: this.value }));\n            }\n        };\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            this.mode = defaults.mode || this.mode;\n        }\n    }\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress bar. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        this._value = clamp(v || 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Buffer value of the progress bar. Defaults to zero. */\n    get bufferValue() {\n        return this._bufferValue || 0;\n    }\n    set bufferValue(v) {\n        this._bufferValue = clamp(v || 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        // Note that we don't technically need a getter and a setter here,\n        // but we use it to match the behavior of the existing mat-progress-bar.\n        this._mode = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(() => {\n            this._elementRef.nativeElement.addEventListener('transitionend', this._transitionendHandler);\n        });\n    }\n    ngOnDestroy() {\n        this._elementRef.nativeElement.removeEventListener('transitionend', this._transitionendHandler);\n    }\n    /** Gets the transform style that should be applied to the primary bar. */\n    _getPrimaryBarTransform() {\n        return `scaleX(${this._isIndeterminate() ? 1 : this.value / 100})`;\n    }\n    /** Gets the `flex-basis` value that should be applied to the buffer bar. */\n    _getBufferBarFlexBasis() {\n        return `${this.mode === 'buffer' ? this.bufferValue : 100}%`;\n    }\n    /** Returns whether the progress bar is indeterminate. */\n    _isIndeterminate() {\n        return this.mode === 'indeterminate' || this.mode === 'query';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_BAR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatProgressBar, isStandalone: true, selector: \"mat-progress-bar\", inputs: { color: \"color\", value: [\"value\", \"value\", numberAttribute], bufferValue: [\"bufferValue\", \"bufferValue\", numberAttribute], mode: \"mode\" }, outputs: { animationEnd: \"animationEnd\" }, host: { attributes: { \"role\": \"progressbar\", \"aria-valuemin\": \"0\", \"aria-valuemax\": \"100\", \"tabindex\": \"-1\" }, properties: { \"attr.aria-valuenow\": \"_isIndeterminate() ? null : value\", \"attr.mode\": \"mode\", \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_isNoopAnimation\", \"class.mdc-linear-progress--animation-ready\": \"!_isNoopAnimation\", \"class.mdc-linear-progress--indeterminate\": \"_isIndeterminate()\" }, classAttribute: \"mat-mdc-progress-bar mdc-linear-progress\" }, exportAs: [\"matProgressBar\"], ngImport: i0, template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-linear-progress__buffer\\\" aria-hidden=\\\"true\\\">\\n  <div\\n    class=\\\"mdc-linear-progress__buffer-bar\\\"\\n    [style.flex-basis]=\\\"_getBufferBarFlexBasis()\\\"></div>\\n  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->\\n  @if (mode === 'buffer') {\\n    <div class=\\\"mdc-linear-progress__buffer-dots\\\"></div>\\n  }\\n</div>\\n<div\\n  class=\\\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\\\"\\n  aria-hidden=\\\"true\\\"\\n  [style.transform]=\\\"_getPrimaryBarTransform()\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n<div class=\\\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\\\" aria-hidden=\\\"true\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n\", styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height),var(--mdc-linear-progress-active-indicator-height))}.cdk-high-contrast-active .mdc-linear-progress{outline-color:CanvasText}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-app-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.cdk-high-contrast-active .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-bar', exportAs: 'matProgressBar', host: {\n                        'role': 'progressbar',\n                        'aria-valuemin': '0',\n                        'aria-valuemax': '100',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[attr.aria-valuenow]': '_isIndeterminate() ? null : value',\n                        '[attr.mode]': 'mode',\n                        'class': 'mat-mdc-progress-bar mdc-linear-progress',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': '_isNoopAnimation',\n                        '[class.mdc-linear-progress--animation-ready]': '!_isNoopAnimation',\n                        '[class.mdc-linear-progress--indeterminate]': '_isIndeterminate()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, template: \"<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-linear-progress__buffer\\\" aria-hidden=\\\"true\\\">\\n  <div\\n    class=\\\"mdc-linear-progress__buffer-bar\\\"\\n    [style.flex-basis]=\\\"_getBufferBarFlexBasis()\\\"></div>\\n  <!-- Remove the dots outside of buffer mode since they can cause CSP issues (see #28938) -->\\n  @if (mode === 'buffer') {\\n    <div class=\\\"mdc-linear-progress__buffer-dots\\\"></div>\\n  }\\n</div>\\n<div\\n  class=\\\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\\\"\\n  aria-hidden=\\\"true\\\"\\n  [style.transform]=\\\"_getPrimaryBarTransform()\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n<div class=\\\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\\\" aria-hidden=\\\"true\\\">\\n  <span class=\\\"mdc-linear-progress__bar-inner\\\"></span>\\n</div>\\n\", styles: [\".mat-mdc-progress-bar{display:block;text-align:start}.mat-mdc-progress-bar[mode=query]{transform:scaleX(-1)}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-dots,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__secondary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__bar-inner.mdc-linear-progress__bar-inner{animation:none}.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__primary-bar,.mat-mdc-progress-bar._mat-animation-noopable .mdc-linear-progress__buffer-bar{transition:transform 1ms}.mdc-linear-progress{position:relative;width:100%;transform:translateZ(0);outline:1px solid rgba(0,0,0,0);overflow-x:hidden;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:max(var(--mdc-linear-progress-track-height),var(--mdc-linear-progress-active-indicator-height))}.cdk-high-contrast-active .mdc-linear-progress{outline-color:CanvasText}.mdc-linear-progress__bar{position:absolute;top:0;bottom:0;margin:auto 0;width:100%;animation:none;transform-origin:top left;transition:transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);height:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress--indeterminate .mdc-linear-progress__bar{transition:none}[dir=rtl] .mdc-linear-progress__bar{right:0;transform-origin:center right}.mdc-linear-progress__bar-inner{display:inline-block;position:absolute;width:100%;animation:none;border-top-style:solid;border-color:var(--mdc-linear-progress-active-indicator-color, var(--mat-app-primary));border-top-width:var(--mdc-linear-progress-active-indicator-height)}.mdc-linear-progress__buffer{display:flex;position:absolute;top:0;bottom:0;margin:auto 0;width:100%;overflow:hidden;height:var(--mdc-linear-progress-track-height);border-radius:var(--mdc-linear-progress-track-shape, var(--mat-app-corner-none))}.mdc-linear-progress__buffer-dots{-webkit-mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");mask-image:url(\\\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='xMinYMin slice'%3E%3Ccircle cx='1' cy='1' r='1'/%3E%3C/svg%3E\\\");background-repeat:repeat-x;flex:auto;transform:rotate(180deg);animation:mdc-linear-progress-buffering 250ms infinite linear;background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.cdk-high-contrast-active .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}[dir=rtl] .mdc-linear-progress__buffer-dots{animation:mdc-linear-progress-buffering-reverse 250ms infinite linear;transform:rotate(0)}.mdc-linear-progress__buffer-bar{flex:0 1 100%;transition:flex-basis 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1);background-color:var(--mdc-linear-progress-track-color, var(--mat-app-surface-variant))}.mdc-linear-progress__primary-bar{transform:scaleX(0)}.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{left:-145.166611%}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation:mdc-linear-progress-primary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-primary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__primary-bar{animation-name:mdc-linear-progress-primary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar{right:-145.166611%;left:auto}.mdc-linear-progress__secondary-bar{display:none}.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{left:-54.888891%;display:block}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation:mdc-linear-progress-secondary-indeterminate-translate 2s infinite linear}.mdc-linear-progress--indeterminate.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar>.mdc-linear-progress__bar-inner{animation:mdc-linear-progress-secondary-indeterminate-scale 2s infinite linear}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--animation-ready .mdc-linear-progress__secondary-bar{animation-name:mdc-linear-progress-secondary-indeterminate-translate-reverse}[dir=rtl] .mdc-linear-progress.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar{right:-54.888891%;left:auto}@keyframes mdc-linear-progress-buffering{from{transform:rotate(180deg) translateX(calc(var(--mdc-linear-progress-track-height) * -2.5))}}@keyframes mdc-linear-progress-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mdc-linear-progress-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mdc-linear-progress-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mdc-linear-progress-primary-indeterminate-translate-reverse{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(-83.67142%)}100%{transform:translateX(-200.611057%)}}@keyframes mdc-linear-progress-secondary-indeterminate-translate-reverse{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(-37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(-84.386165%)}100%{transform:translateX(-160.277782%)}}@keyframes mdc-linear-progress-buffering-reverse{from{transform:translateX(-10px)}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PROGRESS_BAR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], bufferValue: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], animationEnd: [{\n                type: Output\n            }], mode: [{\n                type: Input\n            }] } });\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\nclass MatProgressBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressBarModule, imports: [MatProgressBar], exports: [MatProgressBar, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressBarModule, imports: [MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatProgressBar],\n                    exports: [MatProgressBar, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_DEFAULT_OPTIONS, MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n","<div class=\"status-toggle\">\n  <mat-list\n    class=\"program-list\"\n    [ngClass]=\"isDashboard ? 'custom-height-background' : ''\"\n  >\n    @if (programs$ | async; as programs) {\n      @if (!isDashboard) {\n        <span\n          mat-subheader\n          class=\"subheader-text mat-body-large\"\n          i18n=\"@@ClientsProgress.title\"\n          >Programs</span\n        >\n      }\n      @for (programData of programs; track programData; let i = $index) {\n        <div class=\"list-item-wrapper\">\n          <mat-list-item\n            class=\"program-list-item\"\n            [ngStyle]=\"isDashboard ? { height: '78px' } : { height: '64px' }\"\n          >\n            <mat-icon matListItemIcon>{{\n              isDashboard ? 'account_circle' : 'description'\n            }}</mat-icon>\n            <span matListItemTitle>{{\n              programData.program\n                ? programData.program.name\n                : programData.clientName\n            }}</span>\n            <!-- Should this info be in clients progress bar on dashboard? -->\n            @if (isDashboard) {\n              <span matListItemLine class=\"status-tooltip\">{{\n                programData.name\n              }}</span>\n            }\n            @if (isProgramCompleted[i]) {\n              <!-- <span matListItemLine [matTooltip]=\"'Ended: ' + (program.dateRange.end | date: 'd MMM yyyy')\" class=\"status-tooltip\" style=\"background-color: #3f51b5;\">\n                    Completed\n                  </span> -->\n              <span\n                matListItemLine\n                class=\"status-tooltip progress-list-line\"\n                [ngClass]=\"!isDashboard ? 'progress-margin' : ''\"\n              >\n                <mat-progress-bar\n                  class=\"progress-bar\"\n                  [ngClass]=\"isDashboard ? 'dash-progress-width' : ''\"\n                  color=\"primary\"\n                  mode=\"determinate\"\n                  [value]=\"programData.progress\"\n                >\n                </mat-progress-bar>\n                <!-- <span\n                  class=\"status-icon-wrapper\"\n                  style=\"background-color: #3f51b5\"\n                  matTooltip=\"Completed\"\n                >\n                  <mat-icon\n                    aria-hidden=\"false\"\n                    aria-label=\"Done icon\"\n                    fontIcon=\"done\"\n                  ></mat-icon>\n                </span> -->\n                <!-- @if (!isDashboard) { -->\n                <span>\n                  <span i18n=\"@@ClientsProgress.programEnded\">Ended: </span>\n                  <span\n                    >{{ programData.dateRange.end | date: 'd MMM yyyy' }}\n                  </span>\n                </span>\n                <!-- } -->\n              </span>\n            } @else {\n              <!-- <span matListItemLine [matTooltip]=\"'Ends: ' + (program.dateRange.end | date: 'd MMM yyyy')\" class=\"status-tooltip\" style=\"background-color: #ff4081;\">In progress</span> -->\n              <span\n                matListItemLine\n                class=\"status-tooltip progress-list-line\"\n                [ngClass]=\"!isDashboard ? 'progress-margin' : ''\"\n              >\n                <!-- <span\n                  class=\"status-icon-wrapper\"\n                  style=\"background-color: #ff4081\"\n                  matTooltip=\"In progress\"\n                >\n                  <mat-icon\n                    aria-hidden=\"false\"\n                    aria-label=\"In progress icon\"\n                    fontIcon=\"autorenew\"\n                  ></mat-icon>\n                </span> -->\n                <mat-progress-bar\n                  class=\"progress-bar\"\n                  [ngClass]=\"isDashboard ? 'dash-progress-width' : ''\"\n                  color=\"accent\"\n                  mode=\"determinate\"\n                  [value]=\"programData.progress\"\n                >\n                </mat-progress-bar>\n                <!-- @if (!isDashboard) { -->\n                <span>\n                  <span i18n=\"@@ClientsProgress.programEnds\">Ends: </span>\n                  <span>\n                    {{ programData.dateRange.end | date: 'd MMM yyyy' }}\n                  </span>\n                </span>\n                <!-- } -->\n              </span>\n            }\n            <!-- It is a question if options should be available for every program, since there is one \"Switch to full edit\" button. For now, only view button is enabled -->\n            <span matListItemMeta class=\"list-action-button\">\n              <!-- <button\n                    mat-icon-button\n                    matTooltip=\"Details\"\n                    aria-label=\"Details icon button\"\n                    (click)=\"viewClientProgram()\"\n                  >\n                    <mat-icon>info_outline</mat-icon>\n                    <mat-icon>visibility</mat-icon>\n                  </button> -->\n              <!-- <button\n                    mat-icon-button\n                    matTooltip=\"Delete\"\n                    aria-label=\"Delete icon button\"\n                    (click)=\"deleteClientProgram()\"\n                  >\n                    <mat-icon>delete_outline</mat-icon>\n                  </button> -->\n            </span>\n          </mat-list-item>\n          @if (isDashboard) {\n            @if (isProgramCompleted[i]) {\n              <button\n                mat-icon-button\n                matTooltip=\"View\"\n                aria-label=\"View icon button\"\n                (click)=\"\n                  $event.stopPropagation(); viewClientProgram(programData)\n                \"\n              >\n                <mat-icon>visibility</mat-icon>\n              </button>\n            } @else {\n              <button\n                mat-icon-button\n                matTooltip=\"Edit\"\n                i18n-matTooltip=\"@@ClientsProgress.editProgramBtn\"\n                aria-label=\"Edit icon button\"\n                i18n-aria-label=\"@@ClientsProgress.editProgramBtnAriaLabel\"\n                (click)=\"\n                  $event.stopPropagation(); openEditClientProgram(programData)\n                \"\n              >\n                <mat-icon>edit</mat-icon>\n              </button>\n            }\n          }\n        </div>\n        <mat-divider></mat-divider>\n      }\n    }\n  </mat-list>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { ProgressBarMode, MatProgressBar } from '@angular/material/progress-bar';\nimport { Observable } from 'rxjs';\nimport { MatDivider } from '@angular/material/divider';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { NgClass, NgStyle, AsyncPipe, DatePipe } from '@angular/common';\nimport { MatList, MatListSubheaderCssMatStyler, MatListItem, MatListItemIcon, MatListItemTitle, MatListItemLine, MatListItemMeta } from '@angular/material/list';\n\n// interface ClientProgramData {\n//   [key: number]: any[];\n// }\n\n@Component({\n    selector: 'clients-progress',\n    templateUrl: './clients-progress.component.html',\n    styleUrl: './clients-progress.component.scss',\n    standalone: true,\n    imports: [\n        MatList,\n        NgClass,\n        MatListSubheaderCssMatStyler,\n        MatListItem,\n        NgStyle,\n        MatIcon,\n        MatListItemIcon,\n        MatListItemTitle,\n        MatListItemLine,\n        MatProgressBar,\n        MatListItemMeta,\n        MatIconButton,\n        MatTooltip,\n        MatDivider,\n        AsyncPipe,\n        DatePipe,\n    ],\n})\nexport class ClientsProgressComponent {\n  @Input() programs$!: Observable<any[] | undefined>;\n  @Input() isProgramCompleted!: boolean[];\n  @Input() isDashboard!: boolean;\n  // @Input() backgroundColor: string = '';\n  // @Input() color!: ThemePalette;\n  // @Input() mode!: ProgressBarMode;\n  // @Input() value!: number;\n  // @Input() color!: ThemePalette;\n  @Output() openEditClientProgramEvent: EventEmitter<any> = new EventEmitter();\n\n  // color!: ThemePalette;\n  // mode!: ProgressBarMode;\n  value!: number;\n  //  color!: ThemePalette;\n\n  /*  color: ThemePalette = 'primary';\n  // mode: ProgressBarMode = 'determinate';\n  value = 100;\n  bufferValue = 0; */\n\n  openEditClientProgram(programData: any) {\n    this.openEditClientProgramEvent.emit(programData);\n  }\n\n  viewClientProgram(programData: any) {\n    console.log(programData);\n  }\n}\n"],"names":["MatProgressBar_Conditional_2_Template","rf","ctx","i0","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","InjectionToken","MatProgressBar","constructor","_elementRef","_ngZone","_changeDetectorRef","_animationMode","defaults","this","_isNoopAnimation","_defaultColor","_value","_bufferValue","animationEnd","EventEmitter","_mode","_transitionendHandler","event","observers","length","target","classList","contains","mode","run","next","value","color","_color","v","clamp","markForCheck","bufferValue","ngAfterViewInit","runOutsideAngular","nativeElement","addEventListener","ngOnDestroy","removeEventListener","_getPrimaryBarTransform","_isIndeterminate","_getBufferBarFlexBasis","ɵfac","__ngFactoryType__","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","inputs","numberAttribute","outputs","exportAs","standalone","features","decls","vars","consts","template","styles","encapsulation","changeDetection","min","max","Math","programData_r1","name","ctx_r1","isDashboard","progress","dateRange","end","$event","_r3","$implicit","stopPropagation","viewClientProgram","_r4","openEditClientProgram","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Conditional_0_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Conditional_1_Template","isProgramCompleted","ɵ$index_12_r5","ClientsProgressComponent_Conditional_2_For_2_Conditional_6_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_7_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_8_Template","ClientsProgressComponent_Conditional_2_For_2_Conditional_10_Template","_c0","_c1","program","clientName","ClientsProgressComponent_Conditional_2_Conditional_0_Template","ClientsProgressComponent_Conditional_2_For_2_Template","ClientsProgressComponent","openEditClientProgramEvent","programData","emit","console","log","programs$","i18n_0","$localize","ClientsProgressComponent_Conditional_2_Template","tmp_1_0","MatList","NgClass","MatListSubheaderCssMatStyler","MatListItem","NgStyle","MatIcon","MatListItemIcon","MatListItemTitle","MatListItemLine","MatListItemMeta","MatIconButton","MatTooltip","MatDivider","AsyncPipe","DatePipe"],"sourceRoot":"webpack:///"}