{"version":3,"file":"579.71c4a5a926fcc45a.js","mappings":"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NC,MAAO,oDACN,CACDD,KAAM,IACNC,MAAO,kGACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,oPACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,0DACN,CACDD,KAAM,IACNC,MAAO,kCACN,CACDD,KAAM,IACNC,MAAO,oGACN,CACDD,KAAM,IACNC,MAAO,oGACN,CACDD,KAAM,IACNC,MAAO,wFACN,CACDD,KAAM,KACNC,MAAO,QACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,kMACN,CACDD,KAAM,IACNC,MAAO,8CACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,0DACN,CACDD,KAAM,IACNC,MAAO,4BACN,CACDD,KAAM,IACNC,MAAO,sFACN,CACDD,KAAM,IACNC,MAAO,kFACN,CACDD,KAAM,IACNC,MAAO,0MACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,oBACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,gBACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,0DACN,CACDD,KAAM,IACNC,MAAO,0EACN,CACDD,KAAM,IACNC,MAAO,oGACN,CACDD,KAAM,KACNC,MAAO,QACN,CACDD,KAAM,KACNC,MAAO,gBACN,CACDD,KAAM,IACNC,MAAO,0KACN,CACDD,KAAM,IACNC,MAAO,4BACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,KACNC,MAAO,UACN,CACDD,KAAM,MACNC,MAAO,UACN,CACDD,KAAM,MACNC,MAAO,UACN,CACDD,KAAM,IACNC,MAAO,wFACN,CACDD,KAAM,IACNC,MAAO,wFACN,C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","sources":["./libs/exercises/src/lib/services/exercises.service.ts","./libs/exercises/src/lib/services/categories/bodyareas.service.ts","./libs/exercises/src/lib/services/categories/movements.service.ts","./libs/exercises/src/lib/services/categories/starting-positions.service.ts","./libs/exercises/src/lib/services/categories/equipment.service.ts","./libs/exercises/src/lib/services/search.service.ts","./libs/exercises/src/lib/services/share-data.service.ts","./libs/exercises/src/lib/services/add-remove-data.service.ts","./libs/exercises/src/lib/services/share-state.service.ts","./libs/exercises/src/lib/services/selected-exercises.service.ts","./libs/exercises/src/lib/services/programs/program-data.service.ts","./libs/exercises/src/lib/services/programs/program-clients-data.service.ts","./libs/exercises/src/lib/services/programs/programs.service.ts","./libs/exercises/src/lib/services/programs/isClientValid.service.ts","./libs/exercises/src/lib/services/clients/clients.service.ts","./libs/exercises/src/lib/services/clients/share-clients-data.service.ts","./libs/exercises/src/lib/services/drop-list-transfer-item.service.ts","./libs/exercises/src/lib/pages/exercise-modal/exercise-modal.component.html","./libs/exercises/src/lib/pages/exercise-modal/exercise-modal.component.ts","./libs/exercises/src/lib/pages/selected-expansion-panel/selected-expansion-panel.component.html","./libs/exercises/src/lib/pages/selected-expansion-panel/selected-expansion-panel.component.ts","./libs/ui/src/lib/components/page-toolbar/page-toolbar.component.html","./libs/ui/src/lib/components/page-toolbar/page-toolbar.component.ts","./node_modules/@angular/material/fesm2022/checkbox.mjs","./node_modules/ngx-mat-select-search/fesm2020/ngx-mat-select-search.mjs","./libs/ui/src/lib/components/client-full-edit-form/client-full-edit-form.component.html","./libs/ui/src/lib/components/client-full-edit-form/client-full-edit-form.component.ts","./libs/ui/src/lib/components/program-modal/program-modal.component.html","./libs/ui/src/lib/components/program-modal/program-modal.component.ts","./libs/ui/src/lib/components/client-full-edit-programs/client-full-edit-programs.component.html","./libs/ui/src/lib/components/client-full-edit-programs/client-full-edit-programs.component.ts","./node_modules/@angular/material/fesm2022/button-toggle.mjs","./libs/ui/src/lib/components/programs-table/programs-table.component.html","./libs/ui/src/lib/components/programs-table/programs-table.component.ts","./libs/ui/src/lib/pages/filter-select-clients/filter-select-clients.component.html","./libs/ui/src/lib/pages/filter-select-clients/filter-select-clients.component.ts","./libs/ui/src/lib/pages/search/search.component.html","./libs/ui/src/lib/pages/search/search.component.ts","./node_modules/rxjs/dist/esm/internal/operators/reduce.js","./node_modules/@angular/cdk/fesm2022/tree.mjs","./node_modules/@angular/material/fesm2022/tree.mjs","./libs/ui/src/lib/pages/search-filter/search-filter.component.html","./libs/ui/src/lib/pages/search-filter/search-filter.component.ts","./libs/ui/src/lib/components/exercise-search-btns-wrapper/exercise-search-btns-wrapper.component.ts","./libs/ui/src/lib/components/exercise-search-btns-wrapper/exercise-search-btns-wrapper.component.html","./libs/ui/src/lib/components/basic-programs-table/basic-programs-table.component.html","./libs/ui/src/lib/components/basic-programs-table/basic-programs-table.component.ts","./libs/ui/src/lib/components/deleteConfirmationDialog/deleteConfirmationDialog.component.ts","./libs/ui/src/lib/components/deleteConfirmationDialog/deleteConfirmationDialog.component.html","./libs/ui/src/lib/services/paginator-i18n.service.ts","./libs/ui/src/lib/services/browser-storage.service.ts","./libs/ui/src/lib/services/theme-manager.service.ts","./node_modules/diacritics/index.js","./node_modules/i18n-iso-countries/index.js","./node_modules/i18n-iso-countries/langs/ sync ^\\.\\/.*\\.json$","./node_modules/@angular/cdk/fesm2022/collections.mjs","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs","./node_modules/rxjs/dist/esm/internal/observable/interval.js","./node_modules/@angular/material/fesm2022/chips.mjs","./node_modules/@angular/cdk/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/dialog.mjs","./node_modules/@angular/material/fesm2022/divider.mjs","./node_modules/@angular/cdk/fesm2022/accordion.mjs","./node_modules/@angular/material/fesm2022/expansion.mjs","./node_modules/@angular/material/fesm2022/paginator.mjs","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./node_modules/@angular/material/fesm2022/select.mjs","./node_modules/@angular/material/fesm2022/snack-bar.mjs","./node_modules/@angular/material/fesm2022/sort.mjs","./node_modules/@angular/cdk/fesm2022/table.mjs","./node_modules/@angular/material/fesm2022/table.mjs","./node_modules/overlayscrollbars/overlayscrollbars.mjs","./node_modules/overlayscrollbars-ngx/fesm2020/overlayscrollbars-ngx.mjs"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Exercise } from '../models/exercise';\nimport { Muscle } from '../models/muscle';\nimport { BodyArea } from '../models/bodyArea';\nimport { Movement } from '../models/movement';\nimport { StartingPosition } from '../models/startingPosition';\nimport { Equipment } from '../models/equipment';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExercisesService {\n  private http = inject(HttpClient);\n\n  apiURLExercises = environment.apiURL + 'exercises';\n  apiURLMuscles = environment.apiURL + 'muscles';\n  apiURLBodyAreas = environment.apiURL + 'bodyareas';\n  apiURLMovements = environment.apiURL + 'movements';\n  apiURLStartingPositions = environment.apiURL + 'startingpositions';\n  apiURLEquipments = environment.apiURL + 'equipments';\n\n  getExercises(): Observable<Exercise[]> {\n    return this.http.get<Exercise[]>(this.apiURLExercises);\n  }\n\n  getExercise(exerciseId: string): Observable<Exercise> {\n    // const options = { headers: headers };\n\n    return this.http.get<Exercise>(\n      `${this.apiURLExercises}/${exerciseId}`\n    );\n  }\n\n  createExercise(exerciseData: FormData): Observable<Exercise> {\n    return this.http.post<Exercise>(this.apiURLExercises, exerciseData);\n  }\n\n  updateExercise(\n    exerciseData: FormData,\n    exerciseId: string\n  ): Observable<Exercise> {\n    return this.http.put<Exercise>(\n      `${this.apiURLExercises}/${exerciseId}`,\n      exerciseData\n    );\n  }\n\n  deleteExercise(exerciseId: string): Observable<Exercise> {\n    return this.http.delete<Exercise>(`${this.apiURLExercises}/${exerciseId}`);\n  }\n\n  getMuscles(): Observable<Muscle[]> {\n    return this.http.get<Muscle[]>(this.apiURLMuscles);\n  }\n\n  createMuscle(muscle: Muscle) {\n    return this.http.post(this.apiURLMuscles, muscle);\n  }\n\n  getBodyAreas(): Observable<BodyArea[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<BodyArea[]>(this.apiURLBodyAreas);\n  }\n\n  createBodyArea(bodyArea: BodyArea) {\n    return this.http.post(this.apiURLBodyAreas, bodyArea);\n  }\n\n  getMovements(): Observable<Movement[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<Movement[]>(this.apiURLMovements);\n  }\n\n  createMovement(movement: Movement) {\n    return this.http.post(this.apiURLMovements, movement);\n  }\n\n  getStartingPositions(): Observable<StartingPosition[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<StartingPosition[]>(\n      this.apiURLStartingPositions\n    );\n  }\n\n  createStartingPosition(startingPosition: StartingPosition) {\n    return this.http.post(this.apiURLStartingPositions, startingPosition);\n  }\n\n  getEquipments(): Observable<Equipment[]> {\n    // const options = { headers: headers };\n\n    return this.http.get<Equipment[]>(this.apiURLEquipments);\n  }\n\n  createEquipment(equipment: Equipment) {\n    return this.http.post(this.apiURLEquipments, equipment);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { BodyArea } from '../../models/bodyArea';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BodyAreasService {\n  private http = inject(HttpClient);\n\n  apiURLBodyAreas = environment.apiURL + 'bodyareas';\n\n  getBodyAreas(): Observable<BodyArea[]> {\n    return this.http.get<BodyArea[]>(this.apiURLBodyAreas);\n  }\n\n  getBodyArea(bodyAreaId: string): Observable<BodyArea> {\n    return this.http.get<BodyArea>(`${this.apiURLBodyAreas}/${bodyAreaId}`);\n  }\n\n  createBodyArea(bodyArea: BodyArea) {\n    return this.http.post(this.apiURLBodyAreas, bodyArea);\n  }\n\n  updateBodyArea(bodyArea: BodyArea): Observable<BodyArea> {\n    return this.http.put<BodyArea>(`${this.apiURLBodyAreas}/${bodyArea.id}`, bodyArea);\n  }\n\n  deleteBodyArea(bodyAreaId: string): Observable<BodyArea> {\n    return this.http.delete<BodyArea>(`${this.apiURLBodyAreas}/${bodyAreaId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { Movement } from '../../models/movement';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovementsService {\n  private http = inject(HttpClient);\n\n  apiURLMovements = environment.apiURL + 'movements';\n\n  getMovements(): Observable<Movement[]> {\n    return this.http.get<Movement[]>(this.apiURLMovements);\n  }\n\n  getMovement(movementId: string): Observable<Movement> {\n    return this.http.get<Movement>(`${this.apiURLMovements}/${movementId}`);\n  }\n\n  createMovement(movement: Movement) {\n    return this.http.post(this.apiURLMovements, movement);\n  }\n\n  updateMovement(movement: Movement): Observable<Movement> {\n    return this.http.put<Movement>(\n      `${this.apiURLMovements}/${movement.id}`,\n      movement\n    );\n  }\n\n  deleteMovement(movementId: string): Observable<Movement> {\n    return this.http.delete<Movement>(`${this.apiURLMovements}/${movementId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { StartingPosition } from '../../models/startingPosition';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StartingPositionsService {\n  private http = inject(HttpClient);\n\n  apiURLStartingPositions = environment.apiURL + 'startingpositions';\n\n  getStartingPositions(): Observable<StartingPosition[]> {\n    return this.http.get<StartingPosition[]>(this.apiURLStartingPositions);\n  }\n\n  getStartingPosition(startingPositionId: string): Observable<StartingPosition> {\n    return this.http.get<StartingPosition>(`${this.apiURLStartingPositions}/${startingPositionId}`);\n  }\n\n  createStartingPosition(startingPosition: StartingPosition) {\n    return this.http.post(this.apiURLStartingPositions, startingPosition);\n  }\n\n  updateStartingPosition(startingPosition: StartingPosition): Observable<StartingPosition> {\n    return this.http.put<StartingPosition>(\n      `${this.apiURLStartingPositions}/${startingPosition.id}`,\n      startingPosition\n    );\n  }\n\n  deleteStartingPosition(startingPositionId: string): Observable<StartingPosition> {\n    return this.http.delete<StartingPosition>(`${this.apiURLStartingPositions}/${startingPositionId}`);\n  }\n}\n","import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { Equipment } from '../../models/equipment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EquipmentService {\n  private http = inject(HttpClient);\n\n  apiURLEquipments = environment.apiURL + 'equipments';\n\n  getEquipments(): Observable<Equipment[]> {\n    return this.http.get<Equipment[]>(this.apiURLEquipments);\n  }\n\n  getEquipment(equipmentId: string): Observable<Equipment> {\n    return this.http.get<Equipment>(`${this.apiURLEquipments}/${equipmentId}`);\n  }\n\n  createEquipment(equipment: Equipment) {\n    return this.http.post(this.apiURLEquipments, equipment);\n  }\n\n  updateEquipment(equipment: Equipment): Observable<Equipment> {\n    return this.http.put<Equipment>(\n      `${this.apiURLEquipments}/${equipment.id}`,\n      equipment\n    );\n  }\n\n  deleteEquipment(equipmentId: string): Observable<Equipment> {\n    return this.http.delete<Equipment>(`${this.apiURLEquipments}/${equipmentId}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Exercise } from '../models/exercise';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  private http = inject(HttpClient);\n\n  apiURLSearch = environment.apiURL + 'search';\n\n  searchExercises(\n    searchTerm: string,\n    filters: any,\n    langCode: string,\n  ): Observable<Exercise[]> {\n    const requstBody = {\n      searchTerm: searchTerm,\n      filters: filters,\n    };\n\n    const params = {\n      langCode: langCode,\n    };\n\n    return this.http.post<Exercise[]>(this.apiURLSearch, requstBody, {\n      params,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Exercise } from '../models/exercise';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShareDataService {\n  private data$ = new BehaviorSubject<Exercise[]>([]);\n  searchedData$ = this.data$.asObservable();\n\n  private data2$ = new BehaviorSubject<Exercise[]>([]);\n  filterData$: Observable<Exercise[]> | [] = this.data2$.asObservable();\n\n  // private data3$ = new BehaviorSubject<boolean>(false);\n  // toggleDrawerSignal$: Observable<boolean> = this.data3$.asObservable();\n\n  constructor() {}\n\n  updateSearchResults(data: Exercise[]) {\n    this.data$.next(data);\n  }\n\n  updateFilterResults(data2: any) {\n    this.data2$.next(data2);\n  }\n\n  // updateToggleDrawerResults(data3: any) {\n  //   this.data3$.next(data3);\n  // }\n}\n","import { Injectable, inject, signal } from '@angular/core';\nimport { ShareDataService } from './share-data.service';\n\ninterface DataItem {\n  name: string | undefined;\n  localeNames: string[];\n  values: string[];\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddRemoveDataService {\n  private sharedDataService = inject(ShareDataService);\n\n  // private data: DataItem[] = [];\n  public dataSignal = signal<DataItem[]>([]);\n\n  addDataItem(\n    name: string | undefined,\n    value: string,\n    localeName: string,\n  ): void {\n    const itemIndex = this.dataSignal().findIndex(item => item.name === name);\n    console.log(name, value);\n    if (itemIndex !== -1) {\n      // If the item already exists, add the value to its array\n      this.dataSignal.update(data => {\n        const updatedData = [...data];\n        updatedData[itemIndex].values.push(value);\n        updatedData[itemIndex].localeNames.push(localeName);\n\n        console.log('when updateng: ', data === updatedData);\n        return updatedData;\n      });\n      console.log(this.dataSignal());\n      // this.data[itemIndex].values.push(value);\n      // this.data[itemIndex].localeNames.push(localeName);\n    } else {\n      // If the item does not exist, create a new one\n      this.dataSignal.update(data => {\n        const updatedData = [...data];\n        console.log('when adding new: ', data === updatedData);\n\n        updatedData.push({ name, values: [value], localeNames: [localeName] });\n        return updatedData;\n      });\n      console.log(this.dataSignal());\n    }\n    this.sharedDataService.updateFilterResults(this.dataSignal());\n  }\n\n  removeDataItem(\n    name: string | undefined,\n    value: string,\n    localeName: string,\n  ): void {\n    const itemIndex = this.dataSignal().findIndex(item => item.name === name);\n\n    if (itemIndex !== -1) {\n      // If the item exists, remove the value from its array\n      this.dataSignal.update(data => {\n        const updatedData = [...data];\n        console.log('this is updated before removal: ', updatedData);\n\n        // Update latin name(value)\n        updatedData[itemIndex].values = updatedData[itemIndex].values.filter(\n          (v: any) => v !== value,\n        );\n\n        console.log('this is updated after removal: ', updatedData);\n\n        // Update locale name(localeName)\n        updatedData[itemIndex].localeNames = updatedData[\n          itemIndex\n        ].localeNames.filter((v: any) => v !== localeName);\n\n        return updatedData;\n      });\n\n      // Remove the entire item if the values array is empty\n      if (this.dataSignal()[itemIndex].values.length === 0) {\n        this.dataSignal.update(data => {\n          const updatedData = [...data];\n\n          updatedData.splice(itemIndex, 1);\n\n          return updatedData;\n        });\n      }\n    }\n    this.sharedDataService.updateFilterResults(this.dataSignal());\n  }\n\n  // getData(): DataItem[] {\n  //   return this.data;\n  // }\n\n  resetAll(): void {\n    this.dataSignal.set([]);\n    this.sharedDataService.updateFilterResults(this.dataSignal());\n  }\n}\n","import { Injectable, signal } from '@angular/core';\n\ntype ListOption = 'all' | 'selected' | 'favorite';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShareStateService {\n  // Manage drawer state with signal\n  drawerSignal = signal<boolean>(false);\n\n  listOption = signal<ListOption>('all');\n\n  isFetchingData = signal<boolean>(false);\n\n  isLoading = signal<boolean>(false);\n\n  constructor() {}\n}\n","import { Injectable, signal } from '@angular/core';\nimport { Exercise } from '../models/exercise';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectedExercisesService {\n  selectedExercises = signal<Exercise[]>([]);\n\n  // Add exercise to selected list\n  addToSelected(exercise: Exercise): void {\n    console.log(exercise);\n    // Check if exercise is already in the list\n    const index = this.selectedExercises().findIndex(\n      selectedExercise => selectedExercise.id === exercise.id,\n    );\n\n    // Not already in the list, so add it\n    if (index === -1) {\n      exercise.isSelected = true;\n      exercise.reps = 10;\n      exercise.sets = 3;\n      exercise.pause = '1min';\n      exercise.weight = '';\n      this.selectedExercises.update(selectedExercises => [\n        ...selectedExercises,\n        exercise,\n      ]);\n    }\n  }\n\n  removeFromSelected(exercise: Exercise): void {\n    exercise.isSelected = false;\n    this.selectedExercises.update(selectedExercises =>\n      selectedExercises.filter(\n        selectedExercise => selectedExercise.id !== exercise.id,\n      ),\n    );\n  }\n\n  // updateInSelected(exercise: Exercise): void {\n  //   exercise.isSelected = true;\n  //   this.selectedExercises.update(selectedExercises =>\n  //     selectedExercises.map(selectedExercise =>\n  //       selectedExercise.id === exercise.id\n  //         ? (selectedExercise = exercise)\n  //         : selectedExercise,\n  //     ),\n  //   );\n  // }\n}\n","import { Injectable, signal } from '@angular/core';\nimport { Program } from '../../models/program';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramDataService {\n  programData = signal<Program>({ name: '', notes: '' });\n\n  programId = signal<string>('');\n\n  programName = signal<string>('');\n\n  constructor() {}\n}\n","import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramClientsDataService {\n  programClientsData = signal<any>({ selectedClients: [], dateRange: '' });\n\n  constructor() {}\n}\n","import { Injectable, inject, signal } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Program } from '../../models/program';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgramsService {\n  private http = inject(HttpClient);\n\n  apiURLPrograms = environment.apiURL + 'programs';\n\n  getPrograms(): Observable<Program[]> {\n    return this.http.get<Program[]>(this.apiURLPrograms);\n  }\n\n  getProgram(programId: string): Observable<Program> {\n    return this.http.get<Program>(`${this.apiURLPrograms}/${programId}`);\n  }\n\n  createProgram(programData: Program): Observable<Program> {\n    return this.http.post<Program>(this.apiURLPrograms, programData);\n  }\n\n  updateProgram(programData: Program, programId: string): Observable<Program> {\n    return this.http.put<Program>(\n      `${this.apiURLPrograms}/${programId}`,\n      programData,\n    );\n  }\n\n  deleteProgram(programId: string): Observable<Program> {\n    return this.http.delete<Program>(`${this.apiURLPrograms}/${programId}`);\n  }\n\n  isAdminProgram = signal<boolean>(false);\n}\n","import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsClientValidService {\n  isClientValid = signal<boolean>(false);\n\n  constructor() {}\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { Client } from '../../models/client';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { Program } from '../../models/program';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientsService {\n  private http = inject(HttpClient);\n\n  apiURLClients = environment.apiURL + 'clients';\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(this.apiURLClients);\n  }\n\n  getClientsBasic(): Observable<Client[]> {\n    return this.http.get<Client[]>(`${this.apiURLClients}/basic`);\n  }\n\n  getClient(clientId: string): Observable<Client> {\n    return this.http.get<Client>(`${this.apiURLClients}/${clientId}`);\n  }\n\n  createClient(clientData: Client): Observable<Client> {\n    return this.http.post<Client>(this.apiURLClients, clientData);\n  }\n\n  updateClient(clientData: Client, clientId: string): Observable<Client> {\n    return this.http.put<Client>(\n      `${this.apiURLClients}/${clientId}`,\n      clientData,\n    );\n  }\n\n  deleteClient(clientId: string): Observable<Client> {\n    return this.http.delete<Client>(`${this.apiURLClients}/${clientId}`);\n  }\n\n  getClientProgram(programId: string): Observable<Program> {\n    return this.http.get<Program>(`${this.apiURLClients}/program/${programId}`);\n  }\n\n  getAllClientsPrograms(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiURLClients}/programs/all`);\n  }\n\n  getAllClientsProgramsBasic(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiURLClients}/programs/all/basic`);\n  }\n\n  updateClientProgram(\n    clientId: string,\n    updatedProgram: any,\n    programPosition: number,\n  ): Observable<any> {\n    // Pass program position using URL params\n    const positionParam = programPosition;\n    return this.http.put<any>(\n      `${this.apiURLClients}/program/${clientId}?pos=${positionParam}`,\n      updatedProgram,\n    );\n  }\n\n  deleteClientProgram(\n    clientId: string,\n    programPosition: number,\n  ): Observable<any> {\n    // Pass program position using URL params\n    const positionParam = programPosition;\n    return this.http.delete<any>(\n      `${this.apiURLClients}/program/${clientId}?pos=${positionParam}`,\n    );\n  }\n}\n","import { Injectable, signal } from '@angular/core';\n\nexport interface ClientInfo {\n  clientId: string;\n  clientName: string;\n  programPosition: number;\n  programId: string;\n  programName: string;\n  dateRange: {\n    start: string;\n    end: string;\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShareClientsDataService {\n  clients = signal<any[]>([]);\n\n  isClientProgram = signal<boolean>(false);\n\n  clientInfo = signal<ClientInfo>({\n    clientId: '',\n    clientName: '',\n    programPosition: 0,\n    programId: '',\n    programName: '',\n    dateRange: { start: '', end: '' },\n  });\n\n  reuseProgram = signal<boolean>(false);\n\n  // Use this signal to control new program component, so that it automatically set client, but leave all other fields empty\n  // IMPLEMENT THIS !!!!!\n  isBrandNewClientsProgram = signal<boolean>(false);\n}\n","import { Injectable, signal } from '@angular/core';\nimport { Exercise } from '../models/exercise';\n\n@Injectable({ providedIn: 'root' })\nexport class DropListTransferItemService {\n  transferringItem = signal<Exercise | undefined>(undefined);\n}\n","<!-- <div class=\"custom-modal\"> -->\n<div class=\"confirmation-dialog-wrapper\">\n  <div\n    class=\"title-wrapper\"\n    [ngClass]=\"{ 'program-exercise': data.isProgramExercise }\"\n  >\n    @if (data.isProgramExercise) {\n      <button\n        mat-icon-button\n        matTooltip=\"Back to programs\"\n        i18n-matTooltip=\"@@ExerciseModal.backToProgramsTooltip\"\n        aria-label=\"Arrow back icon-button\"\n        i18n-aria-label=\"@@ExerciseModal.backToProgramsAriaLabel\"\n        mat-dialog-close\n      >\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n    }\n    @if (!data.isProgramExercise) {\n      <h1\n        mat-dialog-title\n        class=\"mat-title-large\"\n        i18n=\"@@ExerciseModal.exerciseDetails\"\n      >\n        Exercise details\n      </h1>\n      <button\n        mat-icon-button\n        mat-dialog-close\n        aria-label=\"Icon button with a close icon\"\n        i18n-aria-label=\"@@ExerciseModal.closeModalIconAriaLabel\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    }\n  </div>\n  <div\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n    class=\"dialog-content-wrapper\"\n    [ngClass]=\"{ 'program-exercise': data.isProgramExercise }\"\n  >\n    <div class=\"modal-img-wrapper\">\n      <img class=\"modal-img\" [src]=\"data.fullExercise.images?.mainImg\" />\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.exerciseName\" class=\"label\"\n        >Exercise name:\n      </span>\n      <span class=\"category-value\">{{\n        data.fullExercise.name[selectedLang]\n      }}</span>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.exerciseDescription\" class=\"label\"\n        >Description:\n      </span>\n      <span class=\"category-value\">{{\n        data.fullExercise.description[selectedLang]\n      }}</span>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.muscles\" class=\"label\">Muscles: </span>\n      <mat-chip-set>\n        @for (muscle of data.fullExercise.muscles; track muscle) {\n          <mat-chip class=\"chips-category\">{{ muscle }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.bodyAreas\" class=\"label\">Body areas: </span>\n      <mat-chip-set>\n        @for (bodyArea of data.fullExercise.bodyAreas; track bodyArea) {\n          <mat-chip class=\"chips-category\">{{\n            bodyArea.translations?.[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.movements\" class=\"label\">Movements: </span>\n      <mat-chip-set>\n        @for (movement of data.fullExercise.movements; track movement) {\n          <mat-chip class=\"chips-category\">{{\n            movement.translations?.[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.startingPositions\" class=\"label\"\n        >Starting positions:\n      </span>\n      <mat-chip-set>\n        @for (\n          startingPosition of data.fullExercise.startingPositions;\n          track startingPosition\n        ) {\n          <mat-chip class=\"chips-category\">{{\n            startingPosition.translations?.[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n    <div class=\"category-labels\">\n      <span i18n=\"@@ExerciseModal.equipment\" class=\"label\">Equipment: </span>\n      <mat-chip-set>\n        @for (equipment of data.fullExercise.equipments; track equipment) {\n          <mat-chip class=\"chips-category\">{{\n            equipment.translations[selectedLang]\n          }}</mat-chip>\n        }\n      </mat-chip-set>\n    </div>\n  </div>\n  @if (!data.isProgramExercise) {\n    <mat-dialog-actions class=\"exercise-modal-actions\">\n      @if (data.exerciseCard.isSelected) {\n        <button\n          (click)=\"removeFromSelected(data.exerciseCard)\"\n          (mouseenter)=\"showHoverIcon(true)\"\n          (mouseleave)=\"showHoverIcon(false)\"\n          mat-fab\n          [color]=\"isHovered ? 'warn' : 'primary'\"\n          matTooltip=\"Remove exercise\"\n          i18n-matTooltip=\"@@ExerciseModal.removeExerciseTooltip\"\n          aria-label=\"Remove icon-button with a close icon\"\n          i18n-aria-label=\"@@ExerciseModal.removeExerciseAriaLabel\"\n        >\n          <mat-icon>{{ isHovered ? 'close' : 'done' }}</mat-icon>\n        </button>\n      } @else {\n        <button\n          (click)=\"addToSelected(data.exerciseCard)\"\n          mat-fab\n          matTooltip=\"Add exercise\"\n          i18n-matTooltip=\"@@ExerciseModal.addExerciseTooltip\"\n          color=\"primary\"\n          aria-label=\"Add icon button with a add icon\"\n          i18n-aria-label=\"@@ExerciseModal.addExerciseAriaLabel\"\n        >\n          <mat-icon>add</mat-icon>\n        </button>\n        <!-- <mat-chip-option color=\"primary\"\n                  ><mat-icon>add</mat-icon></mat-chip-option\n                > -->\n      }\n    </mat-dialog-actions>\n  } @else {\n    <mat-dialog-actions></mat-dialog-actions>\n  }\n</div>\n<!-- </div> -->\n","import { Component, inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogClose,\n  MatDialogTitle,\n  MatDialogActions,\n} from '@angular/material/dialog';\nimport { Exercise } from '../../models/exercise';\nimport { SelectedExercisesService } from '../../services/selected-exercises.service';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ThemeManagerService } from '@slowautomobile/ui';\nimport { MatChipSet, MatChip } from '@angular/material/chips';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton, MatFabButton } from '@angular/material/button';\nimport { NgClass } from '@angular/common';\n\nexport interface DialogData {\n  fullExercise: Exercise;\n  exerciseCard: Exercise;\n  isProgramExercise: boolean;\n  selectedLang: 'en' | 'de' | 'sr';\n}\n\n@Component({\n  selector: 'exercises-single-modal',\n  templateUrl: './exercise-modal.component.html',\n  standalone: true,\n  imports: [\n    NgClass,\n    MatIconButton,\n    MatTooltip,\n    MatDialogClose,\n    MatIcon,\n    MatDialogTitle,\n    OverlayscrollbarsModule,\n    MatChipSet,\n    MatChip,\n    MatDialogActions,\n    MatFabButton,\n  ],\n})\nexport class ExerciseModalComponent {\n  data = inject<DialogData>(MAT_DIALOG_DATA);\n  private selectedExercisesService = inject(SelectedExercisesService);\n  themeManager = inject(ThemeManagerService);\n\n  selectedLang: 'en' | 'de' | 'sr' = this.data.selectedLang;\n  themeSignal = this.themeManager.themeSignal;\n  isHovered = false;\n\n  addToSelected(exercise: Exercise) {\n    this.selectedExercisesService.addToSelected(exercise);\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  removeFromSelected(exercise: Exercise) {\n    this.selectedExercisesService.removeFromSelected(exercise);\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  showHoverIcon(isHovered: boolean): void {\n    this.isHovered = isHovered;\n    // console.log(isHovered)\n  }\n}\n","<div\n  overlay-scrollbars\n  [options]=\"themeSignal()\"\n  [defer]\n  class=\"selected-expansion-panel-wrapper\"\n>\n  <div\n    cdkDropList\n    class=\"edit-program-list\"\n    (cdkDropListDropped)=\"drop($event)\"\n  >\n    <mat-accordion multi>\n      @for (\n        selectedExercise of selectedExercises();\n        track selectedExercise;\n        let i = $index\n      ) {\n        <!-- @for (selectedExercise of exercises; track selectedExercise; let i = $index) { -->\n        <mat-expansion-panel\n          class=\"exer-expansion-panel\"\n          cdkDrag\n          cdkDragPreviewContainer=\"parent\"\n          [hideToggle]=\"false\"\n          [expanded]=\"isExpanded\"\n        >\n          <div\n            class=\"exercise-card-placeholder expansion-panel-placeholder\"\n            *cdkDragPlaceholder\n          ></div>\n          <mat-expansion-panel-header\n            collapsedHeight=\"80px\"\n            class=\"exer-expansion-panel-header\"\n          >\n            <div class=\"expansion-panel-handle\" cdkDragHandle>\n              <span class=\"handle-number\">{{ i + 1 }}</span>\n\n              <span>\n                <!-- <mat-icon>drag_handle</mat-icon> -->\n                <mat-icon>drag_indicator</mat-icon>\n              </span>\n            </div>\n            <mat-panel-title>\n              <div class=\"img-wrapper expanded-panels\">\n                <img\n                  class=\"selected-exercise-img\"\n                  [src]=\"selectedExercise.images?.mainImg\"\n                  [alt]=\"selectedExercise.name[selectedLanguage]\"\n                />\n              </div>\n              <span class=\"title-name mat-body-medium\">{{\n                selectedExercise.name[selectedLanguage]\n              }}</span>\n              <!-- <button\n              (click)=\" $event.stopPropagation(); showExerciseModal(selectedExercise.id, selectedExercise)\"\n              mat-icon-button\n              matTooltip=\"Details\"\n              aria-label=\"Info icon-button with a info icon\"\n            >\n              <mat-icon>info</mat-icon>\n            </button> -->\n            </mat-panel-title>\n            <mat-panel-description class=\"panel-description\">\n              <div class=\"session-overview mat-body-medium\">\n                <!-- @if (selectedExercise.sets) { -->\n                <div>\n                  <span i18n=\"@@EditProgram.exerciseSets\">Sets: </span>\n                  <span>{{ selectedExercise.sets }}</span>\n                </div>\n                <!-- } -->\n                <!-- @if (selectedExercise.reps) { -->\n                <div>\n                  <span i18n=\"@@EditProgram.exerciseReps\">Reps: </span>\n                  <span>{{ selectedExercise.reps }}</span>\n                </div>\n                <!-- } -->\n                @if (selectedExercise.pause) {\n                  <div>\n                    <span i18n=\"@@EditProgram.exercisePause\">Pause: </span>\n                    <span>{{ selectedExercise.pause }}</span>\n                  </div>\n                }\n                @if (selectedExercise.weight) {\n                  <div>\n                    <span i18n=\"@@EditProgram.exerciseWeight\">Weight: </span>\n                    <span>{{ selectedExercise.weight }}</span>\n                  </div>\n                }\n                @if (selectedExercise.equipments.length !== 0) {\n                  <div>\n                    <span i18n=\"@@EditProgram.exerciseEquipment\">Eq: </span>\n                    @for (\n                      equipment of selectedExercise.equipments;\n                      track equipment;\n                      let last = $last\n                    ) {\n                      <span>{{\n                        equipment.translations[selectedLanguage]\n                      }}</span>\n                      @if (!last) {\n                        <span>, </span>\n                      }\n                    }\n                  </div>\n                }\n              </div>\n              <div class=\"options-wrapper\">\n                <!-- <button\n                (click)=\"\n                  $event.stopPropagation(); removeFromSelected(selectedExercise);\n                \"\n                mat-icon-button\n                matTooltip=\"Delete\"\n                aria-label=\"Delete icon-button with a delete icon\"\n              >\n                <mat-icon>delete_outline</mat-icon>\n              </button> -->\n                <button\n                  (click)=\"\n                    $event.stopPropagation();\n                    removeFromSelected(selectedExercise)\n                  \"\n                  mat-icon-button\n                  matTooltip=\"Delete\"\n                  i18n-matTooltip=\"@@EditProgram.removeExerciseTooltip\"\n                  aria-label=\"Delete icon-button with a delete icon\"\n                  i18n-aria-label=\"@@EditProgram.removeExerciseAriaLabel\"\n                >\n                  <mat-icon>delete_outline</mat-icon>\n                </button>\n                <button\n                  (click)=\"\n                    $event.stopPropagation();\n                    showExerciseModal(\n                      selectedExercise.id,\n                      selectedExercise,\n                      false\n                    )\n                  \"\n                  mat-icon-button\n                  matTooltip=\"Details\"\n                  i18n-matTooltip=\"@@EditProgram.detailsTooltip\"\n                  aria-label=\"Info icon-button with a info icon\"\n                  i18n-aria-label=\"@@EditProgram.detailsAriaLabel\"\n                >\n                  <mat-icon>info_outline</mat-icon>\n                </button>\n              </div>\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"panel-content\">\n            <div class=\"name-description-label\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exerciseName\">Name</mat-label>\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.name[selectedLanguage]\"\n                  type=\"text\"\n                  maxlength=\"100\"\n                  placeholder=\"Enter exercise name\"\n                  i18n-placeholder=\"@@EditProgram.exerciseNamePlaceholder\"\n                />\n              </mat-form-field>\n              <mat-form-field\n                appearance=\"outline\"\n                class=\"description-text-area\"\n              >\n                <mat-label i18n=\"@@EditProgram.exerciseDescription\"\n                  >Description</mat-label\n                >\n                <textarea\n                  matInput\n                  cdkTextareaAutosize\n                  placeholder=\"Enter exercise description\"\n                  i18n-placeholder=\"\n                    @@EditProgram.exerciseDescriptionPlaceholder\"\n                  [(ngModel)]=\"selectedExercise.description[selectedLanguage]\"\n                ></textarea>\n              </mat-form-field>\n            </div>\n            <div class=\"exercise-session\">\n              <mat-form-field appearance=\"outline\" class=\"panel-input\">\n                <mat-label i18n=\"@@EditProgram.exerciseSetsNoDots\"\n                  >Sets</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.sets\"\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"10\"\n                  value=\"10\"\n                />\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exerciseRepsNoDots\"\n                  >Repetitions</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.reps\"\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"10\"\n                  value=\"10\"\n                />\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exercisePauseNoDots\"\n                  >Pause</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.pause\"\n                  type=\"text\"\n                  placeholder=\"30s\"\n                />\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label i18n=\"@@EditProgram.exerciseWeightNoDots\"\n                  >Weight</mat-label\n                >\n                <input\n                  matInput\n                  [(ngModel)]=\"selectedExercise.weight\"\n                  type=\"text\"\n                  placeholder=\"2kg\"\n                />\n              </mat-form-field>\n            </div>\n          </div>\n        </mat-expansion-panel>\n      }\n    </mat-accordion>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Exercise } from '../../models/exercise';\nimport {\n  MatExpansionPanel,\n  MatAccordion,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n  MatExpansionPanelDescription,\n} from '@angular/material/expansion';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  CdkDropList,\n  CdkDrag,\n  CdkDragPlaceholder,\n  CdkDragHandle,\n} from '@angular/cdk/drag-drop';\nimport { SelectedExercisesService } from '../../services/selected-exercises.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, Subscription } from 'rxjs';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ThemeManagerService } from '@slowautomobile/ui';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { FormsModule } from '@angular/forms';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExercisesService } from '../../services/exercises.service';\nimport { ExerciseModalComponent } from '../exercise-modal/exercise-modal.component';\nimport { LocalstorageService } from '@slowautomobile/users';\n\n@Component({\n  selector: 'exercises-selected-expansion-panel',\n  templateUrl: './selected-expansion-panel.component.html',\n  styleUrl: './selected-expansion-panel.component.scss',\n  standalone: true,\n  imports: [\n    OverlayscrollbarsModule,\n    CdkDropList,\n    MatAccordion,\n    MatExpansionPanel,\n    CdkDrag,\n    CdkDragPlaceholder,\n    MatExpansionPanelHeader,\n    CdkDragHandle,\n    MatIcon,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatIconButton,\n    MatTooltip,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    FormsModule,\n    CdkTextareaAutosize,\n  ],\n})\nexport class SelectedExpansionPanelComponent implements OnInit, OnDestroy {\n  private selectedExercisesService = inject(SelectedExercisesService);\n  private _snackBar = inject(MatSnackBar);\n  dialog = inject(MatDialog);\n  private exercisesService = inject(ExercisesService);\n  private localstorageService = inject(LocalstorageService);\n\n  @Input() exercise!: Exercise;\n  // @Input() programName!: string;\n\n  @ViewChildren(MatExpansionPanel) panels!: QueryList<MatExpansionPanel>;\n  selectedExercises = this.selectedExercisesService.selectedExercises;\n  removedExercise?: Exercise | null;\n  isExpanded = false;\n  subscriptions = new Subscription();\n  selectedLanguage!: 'en' | 'de' | 'sr';\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n  }\n\n  togglePanel(index: number) {\n    // Use the index to get the specific panel reference from the array and toggle its state\n    const panelToToggle = this.panels.toArray()[index];\n\n    if (panelToToggle) {\n      panelToToggle.toggle();\n    }\n  }\n\n  private _getExercise(exerciseId: string): Observable<Exercise> {\n    return this.exercisesService.getExercise(exerciseId);\n  }\n\n  showExerciseModal(\n    exerciseId: string,\n    exerciseCard: Exercise,\n    isProgramExercise: boolean,\n  ): void {\n    const subscription = this._getExercise(exerciseId).subscribe(exercise => {\n      this.dialog.open(ExerciseModalComponent, {\n        data: {\n          fullExercise: exercise,\n          exerciseCard: exerciseCard,\n          isProgramExercise: isProgramExercise,\n          selectedLang: this.selectedLanguage,\n        },\n        width: '500px',\n        // height: '736px',\n        panelClass: ['custom-dialog', isProgramExercise ? 'custom-shadow' : ''],\n        // disableClose: isProgramExercise,\n        // hasBackdrop: isProgramExercise ? false : true,\n        backdropClass: isProgramExercise ? 'custom-backdrop' : '',\n        // enterAnimationDuration: 0,\n      });\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(\n      this.selectedExercises(),\n      event.previousIndex,\n      event.currentIndex,\n    );\n  }\n\n  // Remove and undo with message snackbar\n  removeFromSelected(exercise: Exercise) {\n    this.selectedExercisesService.removeFromSelected(exercise);\n    this.removedExercise = exercise;\n\n    // const snackBarRef = this._snackBar.openFromComponent(\n    //   MessageSnackbarComponent,\n    //   {\n    //     duration: 2000,\n    //   },\n    // );\n\n    // Can't set custom style correctly; wait for m3 ng material, until then snackBar component or CHANGE COMPLETE MATERIAL THEME!!!\n    const snackBarRef = this._snackBar.open(\n      $localize`:@@Snackbar.exerciseDeleted:Exercise deleted`,\n      $localize`:@@Snackbar.undoButton:Undo`,\n      {\n        duration: 4000,\n        panelClass: ['custom-snackbar-style'],\n      },\n    );\n\n    // Listen for the Undo action\n    const subscription = snackBarRef\n      .onAction()\n      .subscribe(() => this.undoRemove());\n    this.subscriptions.add(subscription);\n\n    console.log(this.selectedExercisesService.selectedExercises());\n  }\n\n  undoRemove(): void {\n    if (this.removedExercise) {\n      // Add the removed item back to its original position\n      // this.items.splice(this.removedItem.index, 0, this.removedItem.value);\n      this.selectedExercisesService.addToSelected(this.removedExercise);\n\n      // Reset the removedItem reference\n      this.removedExercise = null;\n    }\n  }\n\n  // openSnackBar() {\n  //   this._snackBar.openFromComponent(MessageSnackbarComponent, {\n  //     duration: 2000,\n  //   });\n  // }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"page-toolbar-container\">\n  <div>\n    @if (editMode) {\n      <div class=\"title-edit-mode\">\n        <button\n          mat-icon-button\n          matTooltip=\"Back\"\n          i18n-matTooltip=\"@@PageToolbar.backBtnTooltip\"\n          aria-label=\"Arrow back icon button\"\n          i18n-aria-label=\"@@PageToolbar.backButtonAriaLabel\"\n          (click)=\"cancelEvent.emit()\"\n        >\n          <mat-icon>arrow_back</mat-icon>\n        </button>\n        @if (itemName) {\n          <span class=\"mat-title-large\">{{\n            getDynamicPageTypeString('edit')\n          }}</span>\n          @if (clientName) {\n            <span class=\"edit-client-name mat-title-large\">\n              {{ clientName }} /\n            </span>\n          }\n          <span\n            class=\"edit-program-name mat-title-large\"\n            [ngStyle]=\"{ 'flex-grow': editMode ? '0' : '1' }\"\n            >{{ itemName }}</span\n          >\n          <div class=\"program-options-wrapper\">\n            <mat-divider\n              vertical\n              style=\"display: inline-block; height: 24px\"\n            ></mat-divider>\n            <!-- Disabled in DEMO ! ! ! -->\n            <!-- <button\n              mat-icon-button\n              matTooltip=\"Send mail\"\n              i18n-matTooltip=\"@@PageToolbar.emailBtnTooltip\"\n              aria-label=\"Email icon button\"\n              i18n-aria-label=\"@@PageToolbar.emailBtnAriaLabel\"\n            >\n              <mat-icon>mail_outline</mat-icon>\n            </button>\n            <button\n              mat-icon-button\n              matTooltip=\"Share\"\n              i18n-matTooltip=\"@@PageToolbar.shareBtnTooltip\"\n              aria-label=\"Share icon button\"\n              i18n-aria-label=\"@@PageToolbar.shareBtnAriaLabel\"\n            >\n              <mat-icon>share</mat-icon>\n            </button> -->\n            @if (pageType !== 'client') {\n              <button\n                mat-icon-button\n                matTooltip=\"Print\"\n                i18n-matTooltip=\"@@PageToolbar.printBtnTooltip\"\n                aria-label=\"Print icon button\"\n                i18n-aria-label=\"@@PageToolbar.printBtnAriaLabel\"\n                (click)=\"printEvent.emit()\"\n              >\n                <mat-icon>print_outline</mat-icon>\n              </button>\n            }\n            <button\n              mat-icon-button\n              [matTooltip]=\"getDynamicPageTypeString('delete')\"\n              i18n-matTooltip=\"@@PageToolbar.deleteBtnTooltip\"\n              aria-label=\"Delete icon button\"\n              i18n-aria-label=\"@@PageToolbar.deleteBtnAriaLabel\"\n              (click)=\"deleteEvent.emit()\"\n              [disabled]=\"reuseProgram\"\n            >\n              <mat-icon>delete_outline</mat-icon>\n            </button>\n          </div>\n        } @else {\n          <span class=\"mat-title-large\">{{\n            getDynamicPageTypeString('new')\n          }}</span>\n        }\n      </div>\n    } @else {\n      <h2 class=\"mat-headline-small\">{{ pageTitle }}</h2>\n    }\n  </div>\n\n  <div class=\"toolbar-btns\">\n    @if (cancelButton) {\n      <button\n        class=\"custom-btn\"\n        mat-stroked-button\n        color=\"primary\"\n        (click)=\"cancelEvent.emit()\"\n        i18n=\"@@PageToolbar.cancelBtn\"\n      >\n        Cancel\n      </button>\n    }\n\n    @if (submitButton) {\n      <button\n        class=\"custom-btn\"\n        [class.spinner]=\"isLoading()\"\n        [disabled]=\"isLoading()\"\n        mat-flat-button\n        color=\"primary\"\n        (click)=\"onSubmit()\"\n        i18n=\"@@PageToolbar.saveBtn\"\n      >\n        Save\n      </button>\n    }\n    @if (newButton) {\n      <button\n        class=\"custom-btn\"\n        mat-flat-button\n        color=\"primary\"\n        [matTooltip]=\"getDynamicPageTypeString('new')\"\n        (click)=\"newEvent.emit()\"\n      >\n        <mat-icon>add</mat-icon>\n        {{ newButtonString }}\n      </button>\n    }\n\n    <!-- Insert custom content from parent component -->\n    <ng-content></ng-content>\n  </div>\n</div>\n","/// <reference types=\"@angular/localize\" />\n\nimport { Component, EventEmitter, inject, Input, Output } from '@angular/core';\nimport { NgStyle } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { Router } from '@angular/router';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ShareStateService } from '@slowautomobile/exercises';\n\n@Component({\n  selector: 'ui-page-toolbar',\n  standalone: true,\n  imports: [\n    NgStyle,\n    MatButtonModule,\n    MatTooltipModule,\n    MatDividerModule,\n    MatIconModule,\n  ],\n  templateUrl: './page-toolbar.component.html',\n  styleUrl: './page-toolbar.component.scss',\n})\nexport class PageToolbarComponent {\n  router = inject(Router);\n  private shareStateService = inject(ShareStateService);\n\n  newButtonString = $localize`:@@PageToolbar.newBtn:New`;\n  isLoading = this.shareStateService.isLoading;\n\n  @Input() pageTitle?: string;\n  @Input() pageType?: string;\n  @Input() cancelButton = false;\n  @Input() submitButton = false;\n  @Input() newButton = false;\n  @Input() editMode = false;\n  @Input() itemName = '';\n  @Input() clientName = '';\n  @Input() isClientProgram = false;\n  @Input() reuseProgram = false;\n\n  @Output() submitEvent = new EventEmitter<void>();\n  @Output() newEvent = new EventEmitter<void>();\n  @Output() cancelEvent = new EventEmitter<void>();\n  @Output() deleteEvent = new EventEmitter<void>();\n  @Output() printEvent = new EventEmitter<void>();\n\n  onSubmit() {\n    this.submitEvent.emit();\n  }\n\n  getDynamicPageTypeString(action: string) {\n    // Result will be 'Edit/new/delete program' or 'Edit/new/delete client' (localized)\n    if (this.pageType === 'client') {\n      switch (action) {\n        case 'new':\n          return $localize`:@@PageToolbar.addNewTypeClient:New client`;\n        case 'edit':\n          return $localize`:@@PageToolbar.editPageTypeClient:Edit client / `;\n        case 'delete':\n          return $localize`:@@PageToolbar.deleteNewTypeClient:Delete client`;\n        default:\n          return '';\n      }\n    } else {\n      switch (action) {\n        case 'new':\n          return $localize`:@@PageToolbar.addNewTypeProgram:New program`;\n        case 'edit':\n          return $localize`:@@PageToolbar.editPageTypeProgram:Edit program / `;\n        case 'delete':\n          return $localize`:@@PageToolbar.deleteNewTypeProgram:Delete program`;\n        default:\n          return '';\n      }\n    }\n  }\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n        disabledInteractive: false,\n    };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n    /** The initial state of the component before any user interaction. */\n    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n    /** The state representing the component when it's becoming checked. */\n    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n    /** The state representing the component when it's becoming unchecked. */\n    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n    /** The state representing the component when it's becoming indeterminate. */\n    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /** CSS classes to add when transitioning between the different checkbox states. */\n        this._animationClasses = {\n            uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n            checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n            indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n        };\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = TransitionCheckState.Init;\n        this._controlValueAccessorChangeFn = () => { };\n        this._validatorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n        this.disabledInteractive = _options?.disabledInteractive ?? false;\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorChangeFn();\n        }\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            }\n            else {\n                this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    // Implemented as a part of Validator.\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    // Implemented as a part of Validator.\n    registerOnValidatorChange(fn) {\n        this._validatorChangeFn = fn;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if ((this.disabled && this.disabledInteractive) ||\n            (!this.disabled && clickAction === 'noop')) {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case TransitionCheckState.Checked:\n                return newState === TransitionCheckState.Unchecked\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case TransitionCheckState.Indeterminate:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatCheckbox, isStandalone: true, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class.mat-mdc-checkbox-disabled-interactive\": \"disabledInteractive\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [\n            MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatCheckbox,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [\n                        MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR,\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatCheckbox,\n                            multi: true,\n                        },\n                    ], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity));background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity));background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mdc-checkbox__ripple{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mdc-checkbox--disabled{opacity:.5}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mdc-checkbox__mixedmark{margin:0 1px}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *,.mat-mdc-checkbox._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatCheckboxRequiredValidator, isStandalone: true, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, imports: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckboxRequiredValidator],\n                    exports: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule], exports: [MatCheckbox, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckbox, MatCommonModule],\n                    exports: [MatCheckbox, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","import { A, Z, ZERO, NINE, SPACE, HOME, END, ENTER, ESCAPE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, ElementRef, Component, ChangeDetectionStrategy, Inject, Optional, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport * as i11 from '@angular/material/core';\nimport { MatOption } from '@angular/material/core';\nimport * as i12 from '@angular/material/form-field';\nimport { MatFormField } from '@angular/material/form-field';\nimport * as i10 from '@angular/material/select';\nimport { MatSelect } from '@angular/material/select';\nimport { BehaviorSubject, of, combineLatest, Subject } from 'rxjs';\nimport { switchMap, map, startWith, delay, takeUntil, take, tap, filter } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/scrolling';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i5 from '@angular/material/checkbox';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport * as i6 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i7 from '@angular/material/progress-spinner';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport * as i8 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i9 from '@angular/material/divider';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * Directive for providing a custom clear-icon.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>\n * </ngx-mat-select-search>\n */\nclass MatSelectSearchClearDirective {\n}\nMatSelectSearchClearDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatSelectSearchClearDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectSearchClearDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MatSelectSearchClearDirective, selector: \"[ngxMatSelectSearchClear]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatSelectSearchClearDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxMatSelectSearchClear]'\n                }]\n        }] });\n\n/** List of inputs of NgxMatSelectSearchComponent that can be configured with a global default. */\nconst configurableDefaultOptions = [\n    'ariaLabel',\n    'clearSearchInput',\n    'closeIcon',\n    'closeSvgIcon',\n    'disableInitialFocus',\n    'disableScrollToActiveOnOptionsChanged',\n    'enableClearOnEscapePressed',\n    'hideClearSearchButton',\n    'noEntriesFoundLabel',\n    'placeholderLabel',\n    'preventHomeEndKeyPropagation',\n    'searching',\n];\n/**\n * InjectionToken that can be used to specify global options. e.g.\n *\n * ```typescript\n * providers: [\n *   {\n *     provide: MAT_SELECTSEARCH_DEFAULT_OPTIONS,\n *     useValue: <MatSelectSearchOptions>{\n *       closeIcon: 'delete',\n *       noEntriesFoundLabel: 'No options found'\n *     }\n *   }\n * ]\n * ```\n *\n * See the corresponding inputs of `MatSelectSearchComponent` for documentation.\n */\nconst MAT_SELECTSEARCH_DEFAULT_OPTIONS = new InjectionToken('mat-selectsearch-default-options');\n\n/**\n * Directive for providing a custom no entries found element.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <span ngxMatSelectNoEntriesFound>\n *     No entries found <button>Add</button>\n *   </span>\n * </ngx-mat-select-search>\n */\nclass MatSelectNoEntriesFoundDirective {\n}\nMatSelectNoEntriesFoundDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatSelectNoEntriesFoundDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectNoEntriesFoundDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MatSelectNoEntriesFoundDirective, selector: \"[ngxMatSelectNoEntriesFound]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatSelectNoEntriesFoundDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxMatSelectNoEntriesFound]'\n                }]\n        }] });\n\n/**\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/* tslint:disable:member-ordering component-selector */\n/**\n * Component providing an input field for searching MatSelect options.\n *\n * Example usage:\n *\n * interface Bank {\n *  id: string;\n *  name: string;\n * }\n *\n * @Component({\n *   selector: 'my-app-data-selection',\n *   template: `\n *     <mat-form-field>\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\n *         <mat-option>\n *           <ngx-mat-select-search [formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\n *         </mat-option>\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\n *           {{bank.name}}\n *         </mat-option>\n *       </mat-select>\n *     </mat-form-field>\n *   `\n * })\n * export class DataSelectionComponent implements OnInit, OnDestroy {\n *\n *   // control for the selected bank\n *   public bankCtrl: FormControl = new FormControl();\n *   // control for the MatSelect filter keyword\n *   public bankFilterCtrl: FormControl = new FormControl();\n *\n *   // list of banks\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\n *   // list of banks filtered by search keyword\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\n *\n *   // Subject that emits when the component has been destroyed.\n *   private _onDestroy = new Subject<void>();\n *\n *\n *   ngOnInit() {\n *     // load the initial bank list\n *     this.filteredBanks.next(this.banks.slice());\n *     // listen for search field value changes\n *     this.bankFilterCtrl.valueChanges\n *       .pipe(takeUntil(this._onDestroy))\n *       .subscribe(() => {\n *         this.filterBanks();\n *       });\n *   }\n *\n *   ngOnDestroy() {\n *     this._onDestroy.next();\n *     this._onDestroy.complete();\n *   }\n *\n *   private filterBanks() {\n *     if (!this.banks) {\n *       return;\n *     }\n *\n *     // get the search keyword\n *     let search = this.bankFilterCtrl.value;\n *     if (!search) {\n *       this.filteredBanks.next(this.banks.slice());\n *       return;\n *     } else {\n *       search = search.toLowerCase();\n *     }\n *\n *     // filter the banks\n *     this.filteredBanks.next(\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\n *     );\n *   }\n * }\n */\nclass MatSelectSearchComponent {\n    constructor(matSelect, changeDetectorRef, _viewportRuler, matOption, matFormField, defaultOptions) {\n        this.matSelect = matSelect;\n        this.changeDetectorRef = changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this.matOption = matOption;\n        this.matFormField = matFormField;\n        /** Label of the search placeholder */\n        this.placeholderLabel = 'Suche';\n        /** Type of the search input field */\n        this.type = 'text';\n        /** Font-based icon used for displaying Close-Icon */\n        this.closeIcon = 'close';\n        /** Label to be shown when no entries are found. Set to null if no message should be shown. */\n        this.noEntriesFoundLabel = 'Keine Optionen gefunden';\n        /**\n          * Whether or not the search field should be cleared after the dropdown menu is closed.\n          * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)\n          */\n        this.clearSearchInput = true;\n        /** Whether to show the search-in-progress indicator */\n        this.searching = false;\n        /** Disables initial focusing of the input field */\n        this.disableInitialFocus = false;\n        /** Enable clear input on escape pressed */\n        this.enableClearOnEscapePressed = false;\n        /**\n         * Prevents home / end key being propagated to mat-select,\n         * allowing to move the cursor within the search input instead of navigating the options\n         */\n        this.preventHomeEndKeyPropagation = false;\n        /** Disables scrolling to active options when option list changes. Useful for server-side search */\n        this.disableScrollToActiveOnOptionsChanged = false;\n        /** Adds 508 screen reader support for search box */\n        this.ariaLabel = 'dropdown search';\n        /** Whether to show Select All Checkbox (for mat-select[multi=true]) */\n        this.showToggleAllCheckbox = false;\n        /** select all checkbox checked state */\n        this.toggleAllCheckboxChecked = false;\n        /** select all checkbox indeterminate state */\n        this.toggleAllCheckboxIndeterminate = false;\n        /** Display a message in a tooltip on the toggle-all checkbox */\n        this.toggleAllCheckboxTooltipMessage = '';\n        /** Define the position of the tooltip on the toggle-all checkbox. */\n        this.toggleAllCheckboxTooltipPosition = 'below';\n        /** Show/Hide the search clear button of the search input */\n        this.hideClearSearchButton = false;\n        /**\n         * Always restore selected options on selectionChange for mode multi (e.g. for lazy loading/infinity scrolling).\n         * Defaults to false, so selected options are only restored while filtering is active.\n         */\n        this.alwaysRestoreSelectedOptionsMulti = false;\n        /** Output emitter to send to parent component with the toggle all boolean */\n        this.toggleAll = new EventEmitter();\n        this.onTouched = (_) => { };\n        this._options$ = new BehaviorSubject(null);\n        this.optionsList$ = this._options$.pipe(switchMap(_options => _options ?\n            _options.changes.pipe(map(options => options.toArray()), startWith(_options.toArray())) : of(null)));\n        this.optionsLength$ = this.optionsList$.pipe(map(options => options ? options.length : 0));\n        this._formControl = new FormControl('', { nonNullable: true });\n        /** whether to show the no entries found message */\n        this._showNoEntriesFound$ = combineLatest([\n            this._formControl.valueChanges,\n            this.optionsLength$\n        ]).pipe(map(([value, optionsLength]) => !!(this.noEntriesFoundLabel && value\n            && optionsLength === this.getOptionsLengthOffset())));\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        this.applyDefaultOptions(defaultOptions);\n    }\n    /** Current search value */\n    get value() {\n        return this._formControl.value;\n    }\n    /** Reference to the MatSelect options */\n    set _options(_options) {\n        this._options$.next(_options);\n    }\n    get _options() {\n        return this._options$.getValue();\n    }\n    applyDefaultOptions(defaultOptions) {\n        if (!defaultOptions) {\n            return;\n        }\n        for (const key of configurableDefaultOptions) {\n            if (defaultOptions.hasOwnProperty(key)) {\n                this[key] = defaultOptions[key];\n            }\n        }\n    }\n    ngOnInit() {\n        // set custom mat-option class if the component was placed inside a mat-option\n        if (this.matOption) {\n            this.matOption.disabled = true;\n            this.matOption._getHostElement().classList.add('contains-mat-select-search');\n            this.matOption._getHostElement().setAttribute('role', 'presentation');\n        }\n        else {\n            console.error('<ngx-mat-select-search> must be placed inside a <mat-option> element');\n        }\n        // when the select dropdown panel is opened or closed\n        this.matSelect.openedChange\n            .pipe(delay(1), takeUntil(this._onDestroy))\n            .subscribe((opened) => {\n            if (opened) {\n                this.updateInputWidth();\n                // focus the search field when opening\n                if (!this.disableInitialFocus) {\n                    this._focus();\n                }\n            }\n            else {\n                // clear it when closing\n                if (this.clearSearchInput) {\n                    this._reset();\n                }\n            }\n        });\n        // set the first item active after the options changed\n        this.matSelect.openedChange\n            .pipe(take(1), switchMap((_) => {\n            this._options = this.matSelect.options;\n            // Closure variable for tracking the most recent first option.\n            // In order to avoid avoid causing the list to\n            // scroll to the top when options are added to the bottom of\n            // the list (eg: infinite scroll), we compare only\n            // the changes to the first options to determine if we\n            // should set the first item as active.\n            // This prevents unnecessary scrolling to the top of the list\n            // when options are appended, but allows the first item\n            // in the list to be set as active by default when there\n            // is no active selection\n            let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];\n            return this._options.changes\n                .pipe(tap(() => {\n                // avoid \"expression has been changed\" error\n                setTimeout(() => {\n                    // Convert the QueryList to an array\n                    const options = this._options.toArray();\n                    // The true first item is offset by 1\n                    const currentFirstOption = options[this.getOptionsLengthOffset()];\n                    const keyManager = this.matSelect._keyManager;\n                    if (keyManager && this.matSelect.panelOpen && currentFirstOption) {\n                        // set first item active and input width\n                        // Check to see if the first option in these changes is different from the previous.\n                        const firstOptionIsChanged = !previousFirstOption\n                            || !this.matSelect.compareWith(previousFirstOption.value, currentFirstOption.value);\n                        // CASE: The first option is different now.\n                        // Indiciates we should set it as active and scroll to the top.\n                        if (firstOptionIsChanged\n                            || !keyManager.activeItem\n                            || !options.find(option => this.matSelect.compareWith(option.value, keyManager.activeItem?.value))) {\n                            keyManager.setActiveItem(this.getOptionsLengthOffset());\n                        }\n                        // wait for panel width changes\n                        setTimeout(() => {\n                            this.updateInputWidth();\n                        });\n                    }\n                    // Update our reference\n                    previousFirstOption = currentFirstOption;\n                });\n            }));\n        }))\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe();\n        // add or remove css class depending on whether to show the no entries found message\n        // note: this is hacky\n        this._showNoEntriesFound$.pipe(takeUntil(this._onDestroy)).subscribe(showNoEntriesFound => {\n            // set no entries found class on mat option\n            if (this.matOption) {\n                if (showNoEntriesFound) {\n                    this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');\n                }\n                else {\n                    this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');\n                }\n            }\n        });\n        // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            if (this.matSelect.panelOpen) {\n                this.updateInputWidth();\n            }\n        });\n        this.initMultipleHandling();\n        this.optionsList$.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n            // update view when available options change\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n    _emitSelectAllBooleanToParent(state) {\n        this.toggleAll.emit(state);\n    }\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n    _isToggleAllCheckboxVisible() {\n        return this.matSelect.multiple && this.showToggleAllCheckbox;\n    }\n    /**\n     * Handles the key down event with MatSelect.\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n     * @param event\n     */\n    _handleKeydown(event) {\n        // Prevent propagation for all alphanumeric characters in order to avoid selection issues\n        if ((event.key && event.key.length === 1) ||\n            (event.keyCode >= A && event.keyCode <= Z) ||\n            (event.keyCode >= ZERO && event.keyCode <= NINE) ||\n            (event.keyCode === SPACE)\n            || (this.preventHomeEndKeyPropagation && (event.keyCode === HOME || event.keyCode === END))) {\n            event.stopPropagation();\n        }\n        if (this.matSelect.multiple && event.key && event.keyCode === ENTER) {\n            // Regain focus after multiselect, so we can further type\n            setTimeout(() => this._focus());\n        }\n        // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field\n        if (this.enableClearOnEscapePressed === true && event.keyCode === ESCAPE && this.value) {\n            this._reset(true);\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handles the key up event with MatSelect.\n     * Allows e.g. the announcing of the currently activeDescendant by screen readers.\n     */\n    _handleKeyup(event) {\n        if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n            const ariaActiveDescendantId = this.matSelect._getAriaActiveDescendant();\n            const index = this._options.toArray().findIndex(item => item.id === ariaActiveDescendantId);\n            if (index !== -1) {\n                this.unselectActiveDescendant();\n                this.activeDescendant = this._options.toArray()[index]._getHostElement();\n                this.activeDescendant.setAttribute('aria-selected', 'true');\n                this.searchSelectInput.nativeElement.setAttribute('aria-activedescendant', ariaActiveDescendantId);\n            }\n        }\n    }\n    writeValue(value) {\n        this._lastExternalInputValue = value;\n        this._formControl.setValue(value);\n        this.changeDetectorRef.markForCheck();\n    }\n    onBlur() {\n        this.unselectActiveDescendant();\n        this.onTouched();\n    }\n    registerOnChange(fn) {\n        this._formControl.valueChanges.pipe(filter(value => value !== this._lastExternalInputValue), tap(() => this._lastExternalInputValue = undefined), takeUntil(this._onDestroy)).subscribe(fn);\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Focuses the search input field\n     */\n    _focus() {\n        if (!this.searchSelectInput || !this.matSelect.panel) {\n            return;\n        }\n        // save and restore scrollTop of panel, since it will be reset by focus()\n        // note: this is hacky\n        const panel = this.matSelect.panel.nativeElement;\n        const scrollTop = panel.scrollTop;\n        // focus\n        this.searchSelectInput.nativeElement.focus();\n        panel.scrollTop = scrollTop;\n    }\n    /**\n     * Resets the current search value\n     * @param focus whether to focus after resetting\n     */\n    _reset(focus) {\n        this._formControl.setValue('');\n        if (focus) {\n            this._focus();\n        }\n    }\n    /**\n     * Initializes handling <mat-select [multiple]=\"true\">\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n     */\n    initMultipleHandling() {\n        if (!this.matSelect.ngControl) {\n            if (this.matSelect.multiple) {\n                // note: the access to matSelect.ngControl (instead of matSelect.value / matSelect.valueChanges)\n                // is necessary to properly work in multi-selection mode.\n                console.error('the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true');\n            }\n            return;\n        }\n        // if <mat-select [multiple]=\"true\">\n        // store previously selected values and restore them when they are deselected\n        // because the option is not available while we are currently filtering\n        this.previousSelectedValues = this.matSelect.ngControl.value;\n        if (!this.matSelect.ngControl.valueChanges) {\n            return;\n        }\n        this.matSelect.ngControl.valueChanges\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((values) => {\n            let restoreSelectedValues = false;\n            if (this.matSelect.multiple) {\n                if ((this.alwaysRestoreSelectedOptionsMulti || (this._formControl.value && this._formControl.value.length))\n                    && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\n                    if (!values || !Array.isArray(values)) {\n                        values = [];\n                    }\n                    const optionValues = this.matSelect.options.map(option => option.value);\n                    this.previousSelectedValues.forEach(previousValue => {\n                        if (!values.some(v => this.matSelect.compareWith(v, previousValue))\n                            && !optionValues.some(v => this.matSelect.compareWith(v, previousValue))) {\n                            // if a value that was selected before is deselected and not found in the options, it was deselected\n                            // due to the filtering, so we restore it.\n                            values.push(previousValue);\n                            restoreSelectedValues = true;\n                        }\n                    });\n                }\n            }\n            this.previousSelectedValues = values;\n            if (restoreSelectedValues) {\n                this.matSelect._onChange(values);\n            }\n        });\n    }\n    /**\n     *  Set the width of the innerSelectSearch to fit even custom scrollbars\n     *  And support all Operation Systems\n     */\n    updateInputWidth() {\n        if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\n            return;\n        }\n        let element = this.innerSelectSearch.nativeElement;\n        let panelElement = null;\n        while (element && element.parentElement) {\n            element = element.parentElement;\n            if (element.classList.contains('mat-select-panel')) {\n                panelElement = element;\n                break;\n            }\n        }\n        if (panelElement) {\n            this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\n        }\n    }\n    /**\n     * Determine the offset to length that can be caused by the optional matOption used as a search input.\n     */\n    getOptionsLengthOffset() {\n        if (this.matOption) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    unselectActiveDescendant() {\n        this.activeDescendant?.removeAttribute('aria-selected');\n        this.searchSelectInput.nativeElement.removeAttribute('aria-activedescendant');\n    }\n}\nMatSelectSearchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatSelectSearchComponent, deps: [{ token: MatSelect }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MatOption, optional: true }, { token: MatFormField, optional: true }, { token: MAT_SELECTSEARCH_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectSearchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MatSelectSearchComponent, selector: \"ngx-mat-select-search\", inputs: { placeholderLabel: \"placeholderLabel\", type: \"type\", closeIcon: \"closeIcon\", closeSvgIcon: \"closeSvgIcon\", noEntriesFoundLabel: \"noEntriesFoundLabel\", clearSearchInput: \"clearSearchInput\", searching: \"searching\", disableInitialFocus: \"disableInitialFocus\", enableClearOnEscapePressed: \"enableClearOnEscapePressed\", preventHomeEndKeyPropagation: \"preventHomeEndKeyPropagation\", disableScrollToActiveOnOptionsChanged: \"disableScrollToActiveOnOptionsChanged\", ariaLabel: \"ariaLabel\", showToggleAllCheckbox: \"showToggleAllCheckbox\", toggleAllCheckboxChecked: \"toggleAllCheckboxChecked\", toggleAllCheckboxIndeterminate: \"toggleAllCheckboxIndeterminate\", toggleAllCheckboxTooltipMessage: \"toggleAllCheckboxTooltipMessage\", toggleAllCheckboxTooltipPosition: \"toggleAllCheckboxTooltipPosition\", hideClearSearchButton: \"hideClearSearchButton\", alwaysRestoreSelectedOptionsMulti: \"alwaysRestoreSelectedOptionsMulti\" }, outputs: { toggleAll: \"toggleAll\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MatSelectSearchComponent),\n            multi: true\n        }\n    ], queries: [{ propertyName: \"clearIcon\", first: true, predicate: MatSelectSearchClearDirective, descendants: true }, { propertyName: \"noEntriesFound\", first: true, predicate: MatSelectNoEntriesFoundDirective, descendants: true }], viewQueries: [{ propertyName: \"searchSelectInput\", first: true, predicate: [\"searchSelectInput\"], descendants: true, read: ElementRef, static: true }, { propertyName: \"innerSelectSearch\", first: true, predicate: [\"innerSelectSearch\"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: \"<!--\\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\\n\\nUse of this source code is governed by an MIT-style license that can be\\nfound in the LICENSE file at https://angular.io/license\\n-->\\n<!-- Placeholder to adjust vertical offset of the mat-option elements -->\\n<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\"/>\\n\\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\\n<div\\n      #innerSelectSearch\\n      class=\\\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\\\"\\n      [ngClass]=\\\"{'mat-select-search-inner-multiple': matSelect.multiple, 'mat-select-search-inner-toggle-all': _isToggleAllCheckboxVisible() }\\\">\\n\\n  <div class=\\\"mat-select-search-inner-row\\\">\\n    <mat-checkbox *ngIf=\\\"_isToggleAllCheckboxVisible()\\\"\\n                  [color]=\\\"matFormField?.color\\\"\\n                  class=\\\"mat-select-search-toggle-all-checkbox\\\"\\n                  [checked]=\\\"toggleAllCheckboxChecked\\\"\\n                  [indeterminate]=\\\"toggleAllCheckboxIndeterminate\\\"\\n                  [matTooltip]=\\\"toggleAllCheckboxTooltipMessage\\\"\\n                  matTooltipClass=\\\"ngx-mat-select-search-toggle-all-tooltip\\\"\\n                  [matTooltipPosition]=\\\"toggleAllCheckboxTooltipPosition\\\"\\n                  (change)=\\\"_emitSelectAllBooleanToParent($event.checked)\\\"\\n    ></mat-checkbox>\\n\\n    <input class=\\\"mat-select-search-input\\\"\\n           autocomplete=\\\"off\\\"\\n           [type]=\\\"type\\\"\\n           [formControl]=\\\"_formControl\\\"\\n           #searchSelectInput\\n           (keydown)=\\\"_handleKeydown($event)\\\"\\n           (keyup)=\\\"_handleKeyup($event)\\\"\\n           (blur)=\\\"onBlur()\\\"\\n           [placeholder]=\\\"placeholderLabel\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n    />\\n    <mat-spinner *ngIf=\\\"searching\\\"\\n            class=\\\"mat-select-search-spinner\\\"\\n            diameter=\\\"16\\\"></mat-spinner>\\n\\n    <button *ngIf=\\\"!hideClearSearchButton && value && !searching\\\"\\n            mat-icon-button\\n            aria-label=\\\"Clear\\\"\\n            (click)=\\\"_reset(true)\\\"\\n            class=\\\"mat-select-search-clear\\\">\\n      <ng-content *ngIf=\\\"clearIcon; else defaultIcon\\\" select=\\\"[ngxMatSelectSearchClear]\\\"></ng-content>\\n      <ng-template #defaultIcon>\\n        <mat-icon [svgIcon]=\\\"closeSvgIcon\\\">\\n          {{!closeSvgIcon ? closeIcon : null}}\\n        </mat-icon>\\n      </ng-template>\\n    </button>\\n\\n    <ng-content select=\\\".mat-select-search-custom-header-content\\\"></ng-content>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n</div>\\n\\n<div *ngIf=\\\"_showNoEntriesFound$ | async\\\"\\n     class=\\\"mat-select-search-no-entries-found\\\">\\n  <ng-content *ngIf=\\\"noEntriesFound; else defaultNoEntriesFound\\\"\\n              select=\\\"[ngxMatSelectNoEntriesFound]\\\"></ng-content>\\n  <ng-template #defaultNoEntriesFound>{{noEntriesFoundLabel}}</ng-template>\\n</div>\\n\\n\", styles: [\".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-select-panel-background-color)}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all .mat-select-search-inner-row{display:flex;align-items:center}.mat-select-search-input{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-select-panel-background-color);padding:0 44px 0 16px;height:calc(3em - 1px);line-height:calc(3em - 1px)}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-inner-toggle-all .mat-select-search-input{padding-left:5px}.mat-select-search-no-entries-found{padding-top:8px}.mat-select-search-clear{position:absolute;right:4px;top:0}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox{padding-left:5px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:5px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i4.MatIconButton, selector: \"button[mat-icon-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i5.MatCheckbox, selector: \"mat-checkbox\", inputs: [\"disableRipple\", \"color\", \"tabIndex\"], exportAs: [\"matCheckbox\"] }, { kind: \"component\", type: i6.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"component\", type: i7.MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: [\"color\", \"mode\", \"value\", \"diameter\", \"strokeWidth\"], exportAs: [\"matProgressSpinner\"] }, { kind: \"directive\", type: i8.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }, { kind: \"component\", type: i9.MatDivider, selector: \"mat-divider\", inputs: [\"vertical\", \"inset\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MatSelectSearchComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-mat-select-search', providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MatSelectSearchComponent),\n                            multi: true\n                        }\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!--\\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\\n\\nUse of this source code is governed by an MIT-style license that can be\\nfound in the LICENSE file at https://angular.io/license\\n-->\\n<!-- Placeholder to adjust vertical offset of the mat-option elements -->\\n<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\"/>\\n\\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\\n<div\\n      #innerSelectSearch\\n      class=\\\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\\\"\\n      [ngClass]=\\\"{'mat-select-search-inner-multiple': matSelect.multiple, 'mat-select-search-inner-toggle-all': _isToggleAllCheckboxVisible() }\\\">\\n\\n  <div class=\\\"mat-select-search-inner-row\\\">\\n    <mat-checkbox *ngIf=\\\"_isToggleAllCheckboxVisible()\\\"\\n                  [color]=\\\"matFormField?.color\\\"\\n                  class=\\\"mat-select-search-toggle-all-checkbox\\\"\\n                  [checked]=\\\"toggleAllCheckboxChecked\\\"\\n                  [indeterminate]=\\\"toggleAllCheckboxIndeterminate\\\"\\n                  [matTooltip]=\\\"toggleAllCheckboxTooltipMessage\\\"\\n                  matTooltipClass=\\\"ngx-mat-select-search-toggle-all-tooltip\\\"\\n                  [matTooltipPosition]=\\\"toggleAllCheckboxTooltipPosition\\\"\\n                  (change)=\\\"_emitSelectAllBooleanToParent($event.checked)\\\"\\n    ></mat-checkbox>\\n\\n    <input class=\\\"mat-select-search-input\\\"\\n           autocomplete=\\\"off\\\"\\n           [type]=\\\"type\\\"\\n           [formControl]=\\\"_formControl\\\"\\n           #searchSelectInput\\n           (keydown)=\\\"_handleKeydown($event)\\\"\\n           (keyup)=\\\"_handleKeyup($event)\\\"\\n           (blur)=\\\"onBlur()\\\"\\n           [placeholder]=\\\"placeholderLabel\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n    />\\n    <mat-spinner *ngIf=\\\"searching\\\"\\n            class=\\\"mat-select-search-spinner\\\"\\n            diameter=\\\"16\\\"></mat-spinner>\\n\\n    <button *ngIf=\\\"!hideClearSearchButton && value && !searching\\\"\\n            mat-icon-button\\n            aria-label=\\\"Clear\\\"\\n            (click)=\\\"_reset(true)\\\"\\n            class=\\\"mat-select-search-clear\\\">\\n      <ng-content *ngIf=\\\"clearIcon; else defaultIcon\\\" select=\\\"[ngxMatSelectSearchClear]\\\"></ng-content>\\n      <ng-template #defaultIcon>\\n        <mat-icon [svgIcon]=\\\"closeSvgIcon\\\">\\n          {{!closeSvgIcon ? closeIcon : null}}\\n        </mat-icon>\\n      </ng-template>\\n    </button>\\n\\n    <ng-content select=\\\".mat-select-search-custom-header-content\\\"></ng-content>\\n  </div>\\n\\n  <mat-divider></mat-divider>\\n</div>\\n\\n<div *ngIf=\\\"_showNoEntriesFound$ | async\\\"\\n     class=\\\"mat-select-search-no-entries-found\\\">\\n  <ng-content *ngIf=\\\"noEntriesFound; else defaultNoEntriesFound\\\"\\n              select=\\\"[ngxMatSelectNoEntriesFound]\\\"></ng-content>\\n  <ng-template #defaultNoEntriesFound>{{noEntriesFoundLabel}}</ng-template>\\n</div>\\n\\n\", styles: [\".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-select-panel-background-color)}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all .mat-select-search-inner-row{display:flex;align-items:center}.mat-select-search-input{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-select-panel-background-color);padding:0 44px 0 16px;height:calc(3em - 1px);line-height:calc(3em - 1px)}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-inner-toggle-all .mat-select-search-input{padding-left:5px}.mat-select-search-no-entries-found{padding-top:8px}.mat-select-search-clear{position:absolute;right:4px;top:0}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox{padding-left:5px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i10.MatSelect, decorators: [{\n                    type: Inject,\n                    args: [MatSelect]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: i11.MatOption, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MatOption]\n                }] }, { type: i12.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MatFormField]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECTSEARCH_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { placeholderLabel: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], closeIcon: [{\n                type: Input\n            }], closeSvgIcon: [{\n                type: Input\n            }], noEntriesFoundLabel: [{\n                type: Input\n            }], clearSearchInput: [{\n                type: Input\n            }], searching: [{\n                type: Input\n            }], disableInitialFocus: [{\n                type: Input\n            }], enableClearOnEscapePressed: [{\n                type: Input\n            }], preventHomeEndKeyPropagation: [{\n                type: Input\n            }], disableScrollToActiveOnOptionsChanged: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], showToggleAllCheckbox: [{\n                type: Input\n            }], toggleAllCheckboxChecked: [{\n                type: Input\n            }], toggleAllCheckboxIndeterminate: [{\n                type: Input\n            }], toggleAllCheckboxTooltipMessage: [{\n                type: Input\n            }], toggleAllCheckboxTooltipPosition: [{\n                type: Input\n            }], hideClearSearchButton: [{\n                type: Input\n            }], alwaysRestoreSelectedOptionsMulti: [{\n                type: Input\n            }], toggleAll: [{\n                type: Output\n            }], searchSelectInput: [{\n                type: ViewChild,\n                args: ['searchSelectInput', { read: ElementRef, static: true }]\n            }], innerSelectSearch: [{\n                type: ViewChild,\n                args: ['innerSelectSearch', { read: ElementRef, static: true }]\n            }], clearIcon: [{\n                type: ContentChild,\n                args: [MatSelectSearchClearDirective]\n            }], noEntriesFound: [{\n                type: ContentChild,\n                args: [MatSelectNoEntriesFoundDirective]\n            }] } });\n\n/**\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MatSelectSearchVersion = '7.0.7';\nclass NgxMatSelectSearchModule {\n}\nNgxMatSelectSearchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: NgxMatSelectSearchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxMatSelectSearchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: NgxMatSelectSearchModule, declarations: [MatSelectSearchComponent,\n        MatSelectSearchClearDirective,\n        MatSelectNoEntriesFoundDirective], imports: [CommonModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatTooltipModule,\n        MatDividerModule], exports: [MatSelectSearchComponent,\n        MatSelectSearchClearDirective,\n        MatSelectNoEntriesFoundDirective] });\nNgxMatSelectSearchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: NgxMatSelectSearchModule, imports: [CommonModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatTooltipModule,\n        MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: NgxMatSelectSearchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        MatButtonModule,\n                        MatCheckboxModule,\n                        MatIconModule,\n                        MatProgressSpinnerModule,\n                        MatTooltipModule,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        MatSelectSearchComponent,\n                        MatSelectSearchClearDirective,\n                        MatSelectNoEntriesFoundDirective\n                    ],\n                    exports: [\n                        MatSelectSearchComponent,\n                        MatSelectSearchClearDirective,\n                        MatSelectNoEntriesFoundDirective\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTSEARCH_DEFAULT_OPTIONS, MatSelectNoEntriesFoundDirective, MatSelectSearchClearDirective, MatSelectSearchComponent, MatSelectSearchVersion, NgxMatSelectSearchModule, configurableDefaultOptions };\n","<form [formGroup]=\"form\">\n  <div class=\"flex-container\">\n    <div class=\"inputs-wrapper\" [class.small-width]=\"isClient\">\n      <div class=\"left-input-column\">\n        <h3\n          class=\"subtitle-margin mat-title-large\"\n          i18n=\"@@ClientForm.personalInfoSubtitle\"\n        >\n          Personal info\n        </h3>\n        <div class=\"inputs-flex-group\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.firstnameLabel\">Firstname</mat-label>\n            <input\n              matInput\n              formControlName=\"firstName\"\n              type=\"text\"\n              placeholder=\"Enter clients first name\"\n              i18n-placeholder=\"@@ClientForm.firstnamePlaceholder\"\n            />\n            @if (form.get('firstName')?.invalid) {\n              <mat-error i18n=\"@@ClientForm.firstnameError\"\n                >Please enter first name</mat-error\n              >\n            }\n          </mat-form-field>\n          <!-- @if (!programForm['name'].value.length) {\n                <mat-hint>*required</mat-hint>\n              } -->\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.lastnameLabel\">Lastname</mat-label>\n            <input\n              matInput\n              formControlName=\"lastName\"\n              type=\"text\"\n              placeholder=\"Enter clients last name\"\n              i18n-placeholder=\"@@ClientForm.lastnamePlaceholder\"\n            />\n            @if (form.get('lastName')?.invalid) {\n              <mat-error i18n=\"@@ClientForm.lastnameError\"\n                >Please enter last name</mat-error\n              >\n            }\n          </mat-form-field>\n        </div>\n        <div class=\"inputs-flex-group\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.emailLabel\">Email</mat-label>\n            <input\n              matInput\n              formControlName=\"email\"\n              type=\"text\"\n              placeholder=\"Enter clients email\"\n              i18n-placeholder=\"@@ClientForm.emailPlaceholder\"\n            />\n            @if (form.get('email')?.invalid) {\n              <mat-error i18n=\"@@ClientForm.emailError\"\n                >Please enter email</mat-error\n              >\n            }\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label i18n=\"@@ClientForm.phoneLabel\">Phone</mat-label>\n            <input\n              matInput\n              formControlName=\"phone\"\n              type=\"text\"\n              placeholder=\"Enter clients phone number\"\n              i18n-placeholder=\"@@ClientForm.phonePlaceholder\"\n            />\n            @if (form.get('phone')?.invalid) {\n              <mat-error i18n=\"@@ClientForm.phoneError\"\n                >Please enter phone number</mat-error\n              >\n            }\n          </mat-form-field>\n        </div>\n        <h3\n          class=\"subtitle-margin mat-title-large\"\n          i18n=\"@@ClientForm.addressSubtitle\"\n        >\n          Address\n        </h3>\n        <div formGroupName=\"address\">\n          <div class=\"inputs-flex-group\">\n            <mat-form-field appearance=\"outline\" class=\"street\">\n              <mat-label i18n=\"@@ClientForm.streetNameLabel\"\n                >Street name</mat-label\n              >\n              <input\n                matInput\n                formControlName=\"street\"\n                type=\"text\"\n                placeholder=\"Enter street name\"\n                i18n-placeholder=\"@@ClientForm.streetNamePlaceholder\"\n              />\n              <!-- @if (form.get('email')?.invalid) {\n                <mat-error>Please enter email</mat-error>\n              } -->\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" class=\"street-number\">\n              <mat-label i18n=\"@@ClientForm.streetNumberLabel\"\n                >Street no.</mat-label\n              >\n              <input\n                matInput\n                formControlName=\"streetNumber\"\n                type=\"text\"\n                placeholder=\"Street no.\"\n                i18n-placeholder=\"@@ClientForm.streetNumberPlaceholder\"\n              />\n              <!-- @if (form.get('phone')?.invalid) {\n                <mat-error>Please enter phone number</mat-error>\n              } -->\n            </mat-form-field>\n          </div>\n          <div class=\"inputs-flex-group\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.cityLabel\">City</mat-label>\n              <input\n                matInput\n                formControlName=\"city\"\n                type=\"text\"\n                placeholder=\"City\"\n                i18n-placeholder=\"@@ClientForm.cityPlaceholder\"\n              />\n              <!-- @if (form.get('email')?.invalid) {\n                <mat-error>Please enter email</mat-error>\n              } -->\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.zipCodeLabel\">Zip code</mat-label>\n              <input\n                matInput\n                formControlName=\"zipCode\"\n                type=\"text\"\n                placeholder=\"Zip code\"\n                i18n-placeholder=\"@@ClientForm.zipCodePlaceholder\"\n              />\n              <!-- @if (form.get('phone')?.invalid) {\n                <mat-error>Please enter phone number</mat-error>\n              } -->\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.countryLabel\">Country</mat-label>\n              <mat-select\n                [formControl]=\"countryCtrl\"\n                placeholder=\"Country\"\n                i18n-placeholder=\"@@ClientForm.countryPlaceholder\"\n                #singleSelect\n              >\n                <mat-option>\n                  <ngx-mat-select-search\n                    [formControl]=\"countryFilterCtrl\"\n                    placeholderLabel=\"Find country...\"\n                    i18n-placeholderLabel=\"@@ClientForm.findCountryPlaceholder\"\n                    noEntriesFoundLabel=\"No matching country found.\"\n                    i18n-noEntriesFoundLabel=\"@@ClientForm.noEntriesFoundLabel\"\n                  ></ngx-mat-select-search\n                ></mat-option>\n                @for (country of filteredCountries | async; track country) {\n                  <mat-option [value]=\"country.id\">\n                    {{ country.name }}\n                  </mat-option>\n                }\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      @if (isUserForm) {\n        <div\n          overlay-scrollbars\n          [options]=\"themeSignal()\"\n          [defer]\n          class=\"right-input-column\"\n        >\n          @if (isUserForm) {\n            <h3\n              class=\"mat-title-large\"\n              i18n=\"@@ClientForm.profilePictureSubtitle\"\n            >\n              Profile picture\n            </h3>\n            @defer {\n              <ui-upload-image></ui-upload-image>\n            } @placeholder (minimum 1000ms) {\n              <div class=\"upload-image-placeholder\">\n                <div class=\"upload-image-skeleton\"></div>\n              </div>\n            }\n          }\n          <h3\n            class=\"subtitle-margin mat-title-large\"\n            i18n=\"@@ClientForm.credentialsSubtitle\"\n          >\n            Credentials\n          </h3>\n          <div formGroupName=\"credentials\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.credentialsTitleLabel\"\n                >Title</mat-label\n              >\n              <input\n                matInput\n                formControlName=\"title\"\n                type=\"text\"\n                placeholder=\"E.g. 'Physiotherapist'\"\n                i18n-placeholder=\"@@ClientForm.credentialsTitlePlaceholder\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.credentialsQualificationsLabel\"\n                >Qualifications</mat-label\n              >\n              <mat-chip-grid\n                #qualificationsChipGrid\n                aria-label=\"Enter keywords\"\n                i18n-aria-label=\"\n                  @@ClientForm.credentialsQualificationsChipsLabel\"\n                [formControl]=\"qualificationsFormCtrl\"\n              >\n                @for (qualification of qualifications; track qualification) {\n                  <mat-chip-row\n                    (removed)=\"removeQualification(qualification)\"\n                    [editable]=\"true\"\n                    (edited)=\"editQualification(qualification, $event)\"\n                    aria-description=\"Press enter to edit qualification\"\n                    i18n-aria-label=\"\n                      @@ClientForm.credentialsQualificationsEditChipLabel\"\n                  >\n                    {{ qualification }}\n                    <button\n                      matChipRemove\n                      aria-label=\"Remove qualification\"\n                      i18n-aria-label=\"\n                        @@ClientForm.credentialsQualificationsRemoveChipLabel\"\n                    >\n                      <mat-icon>cancel</mat-icon>\n                    </button>\n                  </mat-chip-row>\n                }\n              </mat-chip-grid>\n              <input\n                placeholder=\"E.g. 'Doctor of Physical Therapy'\"\n                i18n-placeholder=\"\n                  @@ClientForm.credentialsQualificationsPlaceholder\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                [matChipInputAddOnBlur]=\"addOnBlur\"\n                [matChipInputFor]=\"qualificationsChipGrid\"\n                (matChipInputTokenEnd)=\"addQualification($event)\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.credentialsLicencesLabel\"\n                >Licences</mat-label\n              >\n              <mat-chip-grid\n                #licencesChipGrid\n                aria-label=\"Enter keywords\"\n                i18n-aria-label=\"@@ClientForm.credentialsLicencesChipLabel\"\n                [formControl]=\"licencesFormCtrl\"\n              >\n                @for (licence of licences; track licence) {\n                  <mat-chip-row\n                    (removed)=\"removeLicence(licence)\"\n                    [editable]=\"true\"\n                    (edited)=\"editLicence(licence, $event)\"\n                    aria-description=\"Press enter to edit licence\"\n                    i18n-aria-label=\"\n                      @@ClientForm.credentialsLicencesEditChipLabel\"\n                  >\n                    {{ licence }}\n                    <button\n                      matChipRemove\n                      aria-label=\"Remove licence\"\n                      i18n-aria-label=\"\n                        @@ClientForm.credentialsLicencesRemoveChipLabel\"\n                    >\n                      <mat-icon>cancel</mat-icon>\n                    </button>\n                  </mat-chip-row>\n                }\n              </mat-chip-grid>\n              <input\n                placeholder=\"E.g. 'Orthopedic Manual Therapy Certification'\"\n                i18n-placeholder=\"@@ClientForm.credentialsLicencesPlaceholder\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                [matChipInputAddOnBlur]=\"addOnBlur\"\n                [matChipInputFor]=\"licencesChipGrid\"\n                (matChipInputTokenEnd)=\"addLicence($event)\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n              <mat-label i18n=\"@@ClientForm.credentialsCompanyLabel\"\n                >Company</mat-label\n              >\n              <input\n                matInput\n                formControlName=\"company\"\n                type=\"text\"\n                placeholder=\"Enter company name\"\n                i18n-placeholder=\"@@ClientForm.credentialsCompanyPlaceholder\"\n              />\n            </mat-form-field>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n</form>\n","import {\n  AfterViewInit,\n  Component,\n  inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatSelect } from '@angular/material/select';\nimport * as countriesLib from 'i18n-iso-countries';\nimport { ReplaySubject, Subject, take, takeUntil } from 'rxjs';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport {\n  MatChipEditedEvent,\n  MatChipInputEvent,\n  MatChipGrid,\n  MatChipRow,\n  MatChipRemove,\n  MatChipInput,\n} from '@angular/material/chips';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { UploadImageComponent } from '../upload-image/upload-image.component';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { AsyncPipe } from '@angular/common';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { MatOption } from '@angular/material/core';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel, MatError } from '@angular/material/form-field';\nimport { LocalstorageService } from '@slowautomobile/users';\n\ndeclare const require: (arg0: string) => countriesLib.LocaleData;\n\ninterface Country {\n  id: string;\n  name: string;\n}\n\n// export interface Qualification {\n//   name: string;\n// }\n\n@Component({\n  selector: 'ui-client-full-edit-form',\n  templateUrl: './client-full-edit-form.component.html',\n  styleUrl: './client-full-edit-form.component.scss',\n  standalone: true,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    MatError,\n    MatSelect,\n    MatOption,\n    NgxMatSelectSearchModule,\n    OverlayscrollbarsModule,\n    UploadImageComponent,\n    MatChipGrid,\n    MatChipRow,\n    MatChipRemove,\n    MatIcon,\n    MatChipInput,\n    AsyncPipe,\n  ],\n})\nexport class ClientFullEditFormComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  private controlContainer = inject(ControlContainer);\n  private announcer = inject(LiveAnnouncer);\n  private localStorageService = inject(LocalstorageService);\n\n  @Input() isClient = false;\n  form!: FormGroup;\n  countries: Country[] = [];\n  countryCtrl!: FormControl;\n  countryFilterCtrl: FormControl = new FormControl();\n  public filteredCountries: ReplaySubject<Country[]> = new ReplaySubject<\n    Country[]\n  >(1);\n  isUserForm = false;\n  qualifications: string[] = [];\n  licences: string[] = [];\n  qualificationsFormCtrl!: FormControl;\n  licencesFormCtrl!: FormControl;\n  addOnBlur = true;\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n  @ViewChild('singleSelect', { static: true }) singleSelect!: MatSelect;\n\n  /** Subject that emits when the component has been destroyed. */\n  protected _onDestroy = new Subject<void>();\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  ngOnInit(): void {\n    this._getCountries();\n    this._initForm();\n\n    // this.form.valueChanges.subscribe(value => console.log(value));\n\n    // setTimeout(() => {\n    // set initial selection\n    // This is not needed because form is initialized in _initForm()\n    // const currentCountry = this.form.get('address.country')?.value;\n    // this.countryCtrl.setValue({ name: currentCountry });\n\n    // load the initial country list\n    this.filteredCountries.next(this.countries.slice());\n\n    // listen for search field value changes\n    this.countryFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterCountries();\n      });\n    // }, 500);\n  }\n\n  private _getCountries() {\n    // Dinamically check localeService for language in use and coresponding countriesLib.regsterLocale call\n    const lang = <string>(\n      this.localStorageService.getToken('userLanguage')?.split('-')[0]\n    );\n\n    countriesLib.registerLocale(\n      require(`i18n-iso-countries/langs/${lang}.json`),\n    );\n    this.countries = Object.entries(\n      countriesLib.getNames(lang, { select: 'official' }),\n    ).map(entry => {\n      return {\n        id: entry[0],\n        name: entry[1],\n      };\n    });\n    this.countries.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  _initForm() {\n    const clientInfoForm = this.controlContainer.control?.get(\n      'clientInfo',\n    ) as FormGroup;\n\n    // Check if form is coming from client-form or user-edit-form component\n    if (clientInfoForm) {\n      this.form = clientInfoForm as FormGroup;\n      this.countryCtrl = this.form.get('address.country') as FormControl;\n    } else {\n      this.isUserForm = true;\n      this.form = this.controlContainer.control as FormGroup;\n      this.countryCtrl = this.form.get('address.country') as FormControl;\n      this.qualificationsFormCtrl = this.form.get(\n        'credentials.qualifications',\n      ) as FormControl;\n      this.licencesFormCtrl = this.form.get(\n        'credentials.licences',\n      ) as FormControl;\n\n      setTimeout(() => {\n        this.qualifications = this.qualificationsFormCtrl.value as string[];\n        this.licences = this.licencesFormCtrl.value as string[];\n      }, 500);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setInitialValue();\n  }\n\n  /**\n   * Sets the initial value after the filteredBanks are loaded initially\n   */\n  protected setInitialValue() {\n    this.filteredCountries\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(() => {\n        // setting the compareWith property to a comparison function\n        // triggers initializing the selection according to the initial value of\n        // the form control (i.e. _initializeSelection())\n        // this needs to be done after the filteredCountries are loaded initially\n        // and after the mat-option elements are available\n        this.singleSelect.compareWith = (a: Country, b: Country) =>\n          a && b && a === b;\n      });\n  }\n\n  protected filterCountries() {\n    if (!this.countries) {\n      return;\n    }\n    // get the search keyword\n    let search = this.countryFilterCtrl.value;\n    if (!search) {\n      this.filteredCountries.next(this.countries.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the countries\n    this.filteredCountries.next(\n      this.countries.filter(\n        country => country.name.toLowerCase().indexOf(search) > -1,\n      ),\n    );\n  }\n\n  removeQualification(qualification: string) {\n    const index = this.qualifications.indexOf(qualification);\n    if (index >= 0) {\n      this.qualifications.splice(index, 1);\n\n      this.announcer.announce(`removed ${qualification}`);\n    }\n  }\n\n  addQualification(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our qualification\n    if (value) {\n      this.qualifications.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n  }\n\n  editQualification(qualification: string, event: MatChipEditedEvent) {\n    const value = event.value.trim();\n\n    // Remove qualification if it no longer has a name\n    if (!value) {\n      this.removeQualification(qualification);\n      return;\n    }\n\n    // Edit existing qualification\n    const index = this.qualifications.indexOf(qualification);\n    if (index >= 0) {\n      this.qualifications[index] = value;\n    }\n  }\n\n  removeLicence(licence: string) {\n    const index = this.licences.indexOf(licence);\n    if (index >= 0) {\n      this.licences.splice(index, 1);\n\n      this.announcer.announce(`removed ${licence}`);\n    }\n  }\n\n  addLicence(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n    console.log(event);\n\n    // Add our licence\n    if (value) {\n      this.licences.push(value);\n    }\n\n    // Clear the input value\n    event.chipInput!.clear();\n  }\n\n  editLicence(licence: string, event: MatChipEditedEvent) {\n    const value = event.value.trim();\n\n    // Remove licence if it no longer has a name\n    if (!value) {\n      this.removeQualification(licence);\n      return;\n    }\n\n    // Edit existing licence\n    const index = this.licences.indexOf(licence);\n    if (index >= 0) {\n      this.licences[index] = value;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n}\n","<div class=\"confirmation-dialog-wrapper\">\n  <div class=\"header-container program-header\">\n    <div>\n      <h2 mat-dialog-title class=\"dialog-title mat-headline-small\">\n        {{ data.title }}\n      </h2>\n    </div>\n    <!-- <button\n      mat-icon-button\n      (click)=\"onClose()\"\n      aria-label=\"Icon button with a close icon\"\n    >\n      <mat-icon>close</mat-icon>\n    </button> -->\n  </div>\n  <div\n    overlay-scrollbars\n    [options]=\"themeSignal()\"\n    [defer]\n    class=\"dialog-content dialog-content-wrapper\"\n  >\n    <span class=\"label\" i18n=\"@@ProgramModal.programName\">Program name</span>\n    <h2 class=\"program-name mat-title-medium\">\n      {{ data.program.name }}\n    </h2>\n    <span class=\"label\" i18n=\"@@ProgramModal.programDiagnosis\">Diagnosis</span>\n    <h2 class=\"program-name mat-title-medium\">{{ data.program.diagnosis }}</h2>\n\n    <span class=\"label\" i18n=\"@@ProgramModal.programExercises\"\n      >Program exercises</span\n    >\n\n    <!-- This should be refactored to use selected-expansion-panel component!!! -->\n    <mat-accordion>\n      @for (\n        selectedExercise of data.program.selectedExercises;\n        track selectedExercise;\n        let i = $index\n      ) {\n        <mat-expansion-panel\n          class=\"exer-expansion-panel program-panel\"\n          style=\"border-bottom: none\"\n          [expanded]=\"isExpanded\"\n        >\n          <mat-expansion-panel-header\n            collapsedHeight=\"80px\"\n            class=\"exer-expansion-panel-header\"\n          >\n            <div class=\"expansion-panel-handle no-handle\">\n              <span>{{ i + 1 }}</span>\n            </div>\n            <mat-panel-title class=\"no-margin\">\n              <div class=\"program-img-wrapper expanded-panels\">\n                <img\n                  class=\"selected-exercise-img\"\n                  [src]=\"selectedExercise.images?.mainImg\"\n                  [alt]=\"selectedExercise.name[data.selectedLang]\"\n                />\n              </div>\n              <span class=\"title-name mat-body-medium\">{{\n                selectedExercise.name[data.selectedLang]\n              }}</span>\n              <!-- <button\n              (click)=\" $event.stopPropagation(); showExerciseModal(selectedExercise.id, selectedExercise)\"\n              mat-icon-button\n              matTooltip=\"Details\"\n              aria-label=\"Info icon-button with a info icon\"\n            >\n              <mat-icon>info</mat-icon>\n            </button> -->\n            </mat-panel-title>\n            <mat-panel-description\n              class=\"panel-description program-panel-description\"\n            >\n              <button\n                (click)=\"\n                  $event.stopPropagation();\n                  showExerciseModal(selectedExercise.id, selectedExercise, true)\n                \"\n                mat-icon-button\n                matTooltip=\"Details\"\n                i18n-matTooltip=\"@@ProgramModal.exerciseDetailsTooltip\"\n                aria-label=\"Info button with a info icon\"\n                i18n-aria-label=\"@@ProgramModal.exerciseDetailsAriaLabel\"\n              >\n                <mat-icon>info_outline</mat-icon>\n              </button>\n              <!-- <div class=\"session-overview\">\n                <div>\n                  <span>Sets: </span>\n                  <span>{{ selectedExercise.sets }}</span>\n                </div>\n                <div>\n                  <span>Reps: </span>\n                  <span>{{ selectedExercise.reps }}</span>\n                </div>\n              </div>\n              <div class=\"options-wrapper\"></div> -->\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"panel-content program-panel-content\">\n            <div class=\"name-description-label program-description\">\n              <span class=\"label\" i18n=\"@@ProgramModal.exerciseDescription\"\n                >Description</span\n              >\n              <span>{{ selectedExercise.description[data.selectedLang] }}</span>\n            </div>\n            <div class=\"exercise-session program-exercise-session\">\n              <div>\n                <span class=\"label\" i18n=\"@@ProgramModal.exerciseSets\"\n                  >Sets:&nbsp;</span\n                >\n                <span>{{ selectedExercise.sets }}</span>\n              </div>\n              <div>\n                <span class=\"label\" i18n=\"@@ProgramModal.exerciseReps\"\n                  >Reps:&nbsp;</span\n                >\n                <span>{{ selectedExercise.reps }}</span>\n              </div>\n              @if (selectedExercise.pause) {\n                <div>\n                  <span class=\"label\" i18n=\"@@ProgramModal.exercisePause\"\n                    >Pause:&nbsp;</span\n                  >\n                  <span>{{ selectedExercise.pause }}</span>\n                </div>\n              }\n              @if (selectedExercise.weight) {\n                <div>\n                  <span class=\"label\" i18n=\"@@ProgramModal.exerciseWeight\"\n                    >Weight:&nbsp;</span\n                  >\n                  <span>{{ selectedExercise.weight }}</span>\n                </div>\n              }\n              @if (selectedExercise.equipments.length !== 0) {\n                <div>\n                  <span class=\"label\" i18n=\"@@EditProgram.exerciseEquipment\"\n                    >Eq:\n                  </span>\n                  @for (\n                    equipment of selectedExercise.equipments;\n                    track equipment;\n                    let last = $last\n                  ) {\n                    <span>{{ equipment.translations[data.selectedLang] }}</span>\n                    @if (!last) {\n                      <span>, </span>\n                    }\n                  }\n                </div>\n              }\n            </div>\n          </div>\n        </mat-expansion-panel>\n      }\n    </mat-accordion>\n  </div>\n  <mat-dialog-actions class=\"dialog-actions program-dialog-actions\">\n    <button\n      [mat-dialog-close]=\"data.program.id\"\n      mat-fab\n      matTooltip=\"Add to client\"\n      i18n-matTooltip=\"@@ProgramModal.addProgramToClientTooltip\"\n      color=\"primary\"\n      aria-label=\"Add icon button\"\n      i18n-matTooltip=\"@@ProgramModal.addProgramToClientAriaLabel\"\n    >\n      <mat-icon>add</mat-icon>\n    </button>\n  </mat-dialog-actions>\n</div>\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogTitle,\n  MatDialogActions,\n  MatDialogClose,\n} from '@angular/material/dialog';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  Exercise,\n  ExerciseModalComponent,\n  ExercisesService,\n  Program,\n} from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton, MatFabButton } from '@angular/material/button';\nimport {\n  MatAccordion,\n  MatExpansionPanel,\n  MatExpansionPanelHeader,\n  MatExpansionPanelTitle,\n  MatExpansionPanelDescription,\n} from '@angular/material/expansion';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { Observable, Subscription } from 'rxjs';\n\ninterface DialogData {\n  title: string;\n  program: Program;\n  programId: string;\n  selectedLang: 'en' | 'de' | 'sr';\n}\n\n@Component({\n  selector: 'ui-program-modal',\n  templateUrl: './program-modal.component.html',\n  styleUrl: './program-modal.component.scss',\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    OverlayscrollbarsModule,\n    MatAccordion,\n    MatExpansionPanel,\n    MatExpansionPanelHeader,\n    MatExpansionPanelTitle,\n    MatExpansionPanelDescription,\n    MatIconButton,\n    MatTooltip,\n    MatIcon,\n    MatDialogActions,\n    MatFabButton,\n    MatDialogClose,\n  ],\n})\nexport class ProgramModalComponent implements OnInit, OnDestroy {\n  dialogRef = inject<MatDialogRef<ProgramModalComponent>>(MatDialogRef);\n  data = inject<DialogData>(MAT_DIALOG_DATA);\n  dialog = inject(MatDialog);\n  private exercisesService = inject(ExercisesService);\n\n  subscriptions = new Subscription();\n\n  // program!: Program;\n  isExpanded = false;\n  exerciseId!: string;\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  ngOnInit(): void {\n    //   this.program = this.data.program;\n    console.log(this.data);\n  }\n\n  addProgramToClient(programId: string | undefined) {\n    console.log(programId);\n  }\n\n  private _getExercise(exerciseId: string): Observable<Exercise> {\n    return this.exercisesService.getExercise(exerciseId);\n  }\n\n  showExerciseModal(\n    exerciseId: string,\n    exerciseCard: Exercise,\n    isProgramExercise: boolean,\n  ): void {\n    const subscription = this._getExercise(exerciseId).subscribe(exercise => {\n      this.dialog.open(ExerciseModalComponent, {\n        data: {\n          fullExercise: exercise,\n          exerciseCard: exerciseCard,\n          isProgramExercise: isProgramExercise,\n          selectedLang: this.data.selectedLang,\n        },\n        width: '500px',\n        // height: '736px',\n        panelClass: [\n          'custom-dialog',\n          ...(isProgramExercise\n            ? ['custom-shadow', 'custom-exercise-dialog-content-wrapper']\n            : []),\n        ],\n        // disableClose: isProgramExercise,\n        // hasBackdrop: isProgramExercise ? false : true,\n        backdropClass: isProgramExercise ? 'custom-backdrop' : '',\n        // enterAnimationDuration: 0,\n      });\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"table-wrapper clients-program-list-table\">\n  <div class=\"tables-wrapper\">\n    <div>\n      <div class=\"clients-program-list-title\">\n        <h3\n          class=\"mat-title-large\"\n          i18n=\"@@ClientForm.listOfClientProgramsTitle\"\n        >\n          List of client's programs\n        </h3>\n        <mat-divider\n          vertical\n          style=\"display: inline-block; height: 24px\"\n        ></mat-divider>\n        <button\n          class=\"custom-btn\"\n          mat-flat-button\n          color=\"primary\"\n          matTooltip=\"Create program\"\n          i18n-matTooltip=\"@@ClientForm.createProgramBtnTooltip\"\n          (click)=\"createProgram()\"\n        >\n          <mat-icon>add</mat-icon>\n          {{ newButtonString }}\n        </button>\n      </div>\n      <form formArray=\"form\">\n        <div\n          overlay-scrollbars\n          [options]=\"themeSignal()\"\n          [defer]\n          class=\"clients-table\"\n        >\n          <!-- @if (dataSource.data.length) { -->\n          <table\n            mat-table\n            class=\"mat-table-background\"\n            [dataSource]=\"dataSourceClientsPrograms\"\n            multiTemplateDataRows\n          >\n            <!-- Checkbox Column -->\n            <!-- <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox\n                  (change)=\"$event ? toggleAllRows() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                >\n                </mat-checkbox>\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox\n                  (click)=\"$event.stopPropagation()\"\n                  (change)=\"$event ? selection.toggle(row) : null\"\n                  [checked]=\"selection.isSelected(row)\"\n                >\n                </mat-checkbox>\n              </td>\n            </ng-container> -->\n            <!-- Position Column -->\n            @for (column of columnsToDisplay; track column) {\n              <ng-container matColumnDef=\"{{ column }}\">\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  i18n=\"@@ClientFormProgramsTable.column\"\n                >\n                  @if (column === 'position') {\n                    No.\n                  } @else if (column === 'name') {\n                    Name\n                  } @else if (column === 'dateRange') {\n                    Date\n                  } @else if (column === 'noExercises') {\n                    No. of exercises\n                  } @else {\n                    Status\n                  }\n                </th>\n                <td mat-cell *matCellDef=\"let element\">\n                  @if (column === 'status') {\n                    <div class=\"status-chip-wrapper\">\n                      @if (element.isProgramCompleted) {\n                        <div class=\"status-chip status-completed\">\n                          <span i18n=\"@@ClientFormProgramsTable.rowCompleted\"\n                            >Completed</span\n                          >\n                        </div>\n                      } @else {\n                        <div class=\"status-chip status-inprogress\">\n                          <span i18n=\"@@ClientFormProgramsTable.rowInProgress\"\n                            >In progress</span\n                          >\n                        </div>\n                      }\n                    </div>\n                  } @else if (column === 'noExercises') {\n                    {{ element.selectedExercises.length }}\n                  } @else if (column === 'dateRange') {\n                    {{ element.dateRange.start | date: 'dd/MM/yyyy' }} -\n                    {{ element.dateRange.end | date: 'dd/MM/yyyy' }}\n                  } @else {\n                    {{ element[column] }}\n                  }\n                </td>\n              </ng-container>\n            }\n            <ng-container matColumnDef=\"expand\">\n              <th mat-header-cell *matHeaderCellDef aria-label=\"row actions\">\n                &nbsp;\n              </th>\n              <td mat-cell *matCellDef=\"let element\">\n                <div class=\"client-options\">\n                  @if (!element.isProgramCompleted) {\n                    <button\n                      mat-icon-button\n                      matTooltip=\"Edit\"\n                      i18n-matTooltip=\"\n                        @@ClientFormProgramsTable.editProgramButton\"\n                      aria-label=\"Edit icon button\"\n                      i18m-aria-label=\"@@ClientFormProgramsTable.editProgramBtnAriaLabel\"\n                      (click)=\"\n                        $event.stopPropagation();\n                        openEditClientProgramDialog(element.position)\n                      \"\n                    >\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                  }\n                  <button\n                    mat-icon-button\n                    matTooltip=\"Add to client\"\n                    i18n-matTooltip=\"\n                      @@ClientFormProgramsTable.addToClientButton\"\n                    aria-label=\"Add to client icon button\"\n                    i18m-aria-label=\"@@ClientFormProgramsTable.addToClientAriaLabel\"\n                    (click)=\"\n                      $event.stopPropagation();\n                      reuseEditProgram(element.position)\n                    \"\n                  >\n                    <mat-icon>person_add</mat-icon>\n                    <!-- <mat-icon>content_copy</mat-icon> -->\n                  </button>\n                  <button\n                    mat-icon-button\n                    matTooltip=\"Delete\"\n                    i18n-matTooltip=\"\n                      @@ClientFormProgramsTable.deleteClientProgramButton\"\n                    aria-label=\"Delete icon button\"\n                    i18m-aria-label=\"@@ClientFormProgramsTable.deleteClientProgramAriaLabel\"\n                    (click)=\"\n                      $event.stopPropagation();\n                      openDeleteConfirmationDialog(element.position)\n                    \"\n                  >\n                    <mat-icon>delete_outline</mat-icon>\n                  </button>\n                  <button\n                    mat-icon-button\n                    aria-label=\"expand row\"\n                    (click)=\"\n                      expandedElement =\n                        expandedElement === element ? null : element;\n                      $event.stopPropagation()\n                    \"\n                  >\n                    @if (expandedElement === element) {\n                      <mat-icon>keyboard_arrow_up</mat-icon>\n                    } @else {\n                      <mat-icon>keyboard_arrow_down</mat-icon>\n                    }\n                  </button>\n                </div>\n              </td>\n            </ng-container>\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td\n                mat-cell\n                *matCellDef=\"let element\"\n                [attr.colspan]=\"columnsToDisplayWithExpand.length\"\n              >\n                <div\n                  class=\"client-program-element-detail\"\n                  [@detailExpand]=\"\n                    element === expandedElement ? 'expanded' : 'collapsed'\n                  \"\n                >\n                  <div class=\"table-client-program-wrapper\">\n                    <!-- @for (\n                      selectedExercise of element.selectedExercises;\n                      track selectedExercise\n                    ) {\n                      <div>{{ selectedExercise.name }}</div>\n                    } -->\n                    <!-- <mat-list> -->\n                    @for (\n                      selectedExercise of element.selectedExercises;\n                      track selectedExercise;\n                      let i = $index\n                    ) {\n                      <div class=\"list-item\">\n                        <div class=\"list-item-flex\">\n                          <img\n                            [src]=\"selectedExercise.images?.mainImg\"\n                            [alt]=\"selectedExercise.name[selectedLanguage]\"\n                            style=\"width: 50px\"\n                          />\n                          <div class=\"list-info\">\n                            <span class=\"list-info-title\">{{\n                              selectedExercise.name[selectedLanguage]\n                            }}</span>\n                            <span class=\"list-info-details\">\n                              <span i18n=\"@@ClientFormProgramsTable.sets\"\n                                >Sets: {{ selectedExercise.sets }} |\n                              </span>\n                              <span i18n=\"@@ClientFormProgramsTable.reps\"\n                                >Reps: {{ selectedExercise.reps }} |\n                              </span>\n                              @if (selectedExercise.pause) {\n                                <span i18n=\"@@ClientFormProgramsTable.pause\"\n                                  >Pause: {{ selectedExercise.pause }} |\n                                </span>\n                              }\n                              @if (selectedExercise.weight) {\n                                <span i18n=\"@@ClientFormProgramsTable.weight\"\n                                  >Weight: {{ selectedExercise.weight }} |\n                                </span>\n                              }\n                              @if (selectedExercise.equipments.length !== 0) {\n                                <span i18n=\"@@EditProgram.exerciseEquipment\"\n                                  >Eq:\n                                  @for (\n                                    equipment of selectedExercise.equipments;\n                                    track equipment;\n                                    let last = $last\n                                  ) {\n                                    <span>{{\n                                      equipment.translations[selectedLanguage]\n                                    }}</span>\n                                    @if (!last) {\n                                      <span>, </span>\n                                    }\n                                  }\n                                </span>\n                              }\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <!-- <mat-list-item>\n                          <div matListItemAvatar class=\"mat-list-custom-avatar\">\n                            <img\n                              [src]=\"selectedExercise.images?.mainImg\"\n                              [alt]=\"selectedExercise.name\"\n                              style=\"width: 50px\"\n                            />\n                          </div>\n                          <div matListItemTitle>{{ selectedExercise.name }}</div>\n                          <div matListItemLine>\n                            {{\n                              'Sets: ' +\n                                selectedExercise.sets +\n                                '   |   ' +\n                                'Reps: ' +\n                                selectedExercise.reps\n                            }}\n                          </div>\n                        </mat-list-item> -->\n                    }\n                    <!-- <mat-divider></mat-divider> -->\n                    <!-- </mat-list> -->\n                  </div>\n                  <!-- <div class=\"client-program-element-diagram\">\n                    <div class=\"client-program-element-position\">\n                      {{ element.position }}\n                    </div>\n                    <div class=\"client-program-element-name\">{{ element.name }}</div>\n                    <div class=\"client-program-element-date\">{{ element.date }}</div>\n                    <div class=\"client-program-element-isCompleted\">\n                      {{ element.isProgramCompleted }}\n                    </div>\n                  </div> -->\n                  <!-- <div class=\"client-program-element-description\">\n                    {{ element.description }}\n                    <span class=\"client-program-element-description-attribution\">\n                      -- Wikipedia\n                    </span>\n                  </div> -->\n                </div>\n              </td>\n            </ng-container>\n            <tr\n              mat-header-row\n              *matHeaderRowDef=\"columnsToDisplayWithExpand\"\n            ></tr>\n            <tr\n              mat-row\n              *matRowDef=\"let element; columns: columnsToDisplayWithExpand\"\n              class=\"client-program-element-row table-rows\"\n              [class.client-program-expanded-row]=\"expandedElement === element\"\n              (click)=\"\n                expandedElement = expandedElement === element ? null : element\n              \"\n            ></tr>\n            <tr\n              mat-row\n              *matRowDef=\"let row; columns: ['expandedDetail']\"\n              class=\"client-program-detail-row\"\n            ></tr>\n            <tr class=\"mat-row\" *matNoDataRow>\n              <td\n                class=\"mat-cell no-data-cell\"\n                colspan=\"4\"\n                i18n=\"@@ClientFormProgramsTable.noProgramsAssigned\"\n              >\n                No programs assigned to clients\n              </td>\n            </tr>\n          </table>\n          <!-- } -->\n        </div>\n      </form>\n    </div>\n    <div>\n      <!-- <div class=\"clients-program-list-title\">\n        <h3>List of client's programs</h3>\n        <mat-divider\n          vertical\n          style=\"display: inline-block; height: 24px\"\n        ></mat-divider>\n      </div> -->\n      @defer {\n        <ui-basic-programs-table\n          class=\"ui-programs-table\"\n          [dataSource]=\"dataSourceAllPrograms\"\n          (getProgramsEvent)=\"getPrograms($event)\"\n          (viewProgramEvent)=\"viewProgramModal($event)\"\n          (addProgramToClientEvent)=\"addProgramToClient($event)\"\n        ></ui-basic-programs-table>\n      } @placeholder {\n        <div class=\"basic-programs-table-placeholder\">\n          <div class=\"basic-programs-title-placeholder\">\n            <h3\n              class=\"basic-programs-title-skeleton mat-title-large\"\n              i18n=\"@@ClientFormBasicProgramsTable.titlePlaceholder\"\n            >\n              List of program templates\n            </h3>\n            <div class=\"input-placeholder animate-skeleton\"></div>\n          </div>\n          <div class=\"basic-program-skeleton-container\">\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n            <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n          </div>\n          <div class=\"basic-programs-table-skeleton animate-skeleton\"></div>\n        </div>\n      }\n      <!-- <ui-programs-table\n        class=\"ui-programs-table\"\n        [mainProgramsList]=\"false\"\n        [dataSource]=\"dataSourceAllPrograms\"\n        (getProgramsEvent)=\"getPrograms($event)\"\n      ></ui-programs-table> -->\n    </div>\n  </div>\n</div>\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { DatePipe } from '@angular/common';\nimport { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  ControlContainer,\n  FormArray,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  FormsModule,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  MatTableDataSource,\n  MatTable,\n  MatColumnDef,\n  MatHeaderCellDef,\n  MatHeaderCell,\n  MatCellDef,\n  MatCell,\n  MatHeaderRowDef,\n  MatHeaderRow,\n  MatRowDef,\n  MatRow,\n  MatNoDataRow,\n} from '@angular/material/table';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  Client,\n  ClientsService,\n  Program,\n  ProgramsService,\n  ShareClientsDataService,\n} from '@slowautomobile/exercises';\nimport { Subscription, forkJoin, lastValueFrom, timer } from 'rxjs';\nimport { DeleteConfirmationDialogComponent } from '../deleteConfirmationDialog/deleteConfirmationDialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ProgramModalComponent } from '../program-modal/program-modal.component';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { CapitalizeFirstPipePipe } from '../../pipes/CapitalizeFirstPipe.pipe';\nimport { BasicProgramsTableComponent } from '../basic-programs-table/basic-programs-table.component';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatDivider } from '@angular/material/divider';\nimport { LocalstorageService } from '@slowautomobile/users';\n\nexport interface AdaptedProgram {\n  name: string;\n  id: string;\n  selectedExercises: object[];\n  // program: object;\n  isProgramCompleted: boolean;\n  // date: string;\n  dateRange: {\n    start: string;\n    end: string;\n  };\n  position: number;\n}\n\n@Component({\n  selector: 'ui-client-full-edit-programs',\n  templateUrl: './client-full-edit-programs.component.html',\n  styleUrl: './client-full-edit-programs.component.scss',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed,void', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n      ),\n    ]),\n  ],\n  standalone: true,\n  imports: [\n    MatDivider,\n    MatButton,\n    MatTooltip,\n    MatIcon,\n    FormsModule,\n    OverlayscrollbarsModule,\n    MatTable,\n    MatColumnDef,\n    MatHeaderCellDef,\n    MatHeaderCell,\n    MatCellDef,\n    MatCell,\n    MatIconButton,\n    MatHeaderRowDef,\n    MatHeaderRow,\n    MatRowDef,\n    MatRow,\n    MatNoDataRow,\n    BasicProgramsTableComponent,\n    DatePipe,\n    CapitalizeFirstPipePipe,\n  ],\n  providers: [DatePipe],\n})\nexport class ClientFullEditProgramsComponent implements OnInit, OnDestroy {\n  private programsService = inject(ProgramsService);\n  private controlContainer = inject(ControlContainer);\n  private datePipe = inject(DatePipe);\n  dialog = inject(MatDialog);\n  private _snackBar = inject(MatSnackBar);\n  private router = inject(Router);\n  private formGroupDirective = inject(FormGroupDirective);\n  private shareClientsDataService = inject(ShareClientsDataService);\n  private clientsService = inject(ClientsService);\n  private localstorageService = inject(LocalstorageService);\n\n  newButtonString = $localize`:@@PageToolbar.newBtn:New`;\n\n  columnsToDisplay: string[] = [\n    // 'select',\n    'position',\n    'name',\n    'noExercises',\n    'dateRange',\n    'status',\n  ];\n  dataSourceClientsPrograms = new MatTableDataSource<Program>();\n  dataSourceAllPrograms = new MatTableDataSource<Program>();\n\n  columnsToDisplayWithExpand = [...this.columnsToDisplay, 'expand'];\n  expandedElement!: AdaptedProgram | null;\n\n  selectedLanguage!: 'en' | 'de' | 'sr';\n  selection = new SelectionModel<Program>(true, []);\n  clientsPrograms: any[] = [];\n  allPrograms: any[] = [];\n  subscriptions = new Subscription();\n  position!: number;\n  form!: FormArray;\n  isProgramCompleted: boolean[] = [];\n  clientId!: string;\n  clientName!: string;\n  client!: Client;\n  // isClientProgram = this.shareClientsDataService.isClientProgram;\n  clientInfo = this.shareClientsDataService.clientInfo;\n  reuseProgram = this.shareClientsDataService.reuseProgram;\n  isBrandNewClientsProgram =\n    this.shareClientsDataService.isBrandNewClientsProgram;\n\n  parentForm!: FormGroup;\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  constructor() {\n    // Get data and assign the data to the data source for the table to render\n    this.getPrograms('template');\n  }\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log(this.selectedLanguage);\n\n    this.form = this.controlContainer.control?.get('programs') as FormArray;\n    console.log(this.form);\n\n    this.clientId = this.formGroupDirective.form.get('clientInfo.id')?.value;\n    console.log(this.formGroupDirective.form);\n    this.clientName =\n      this.formGroupDirective.form.get('clientInfo.name')?.value;\n    this.client = this.formGroupDirective.form.get('clientInfo')?.value;\n    this.parentForm = this.formGroupDirective.form;\n    console.log(this.parentForm.value);\n    this.getClientsPrograms();\n    console.log(this.clientInfo());\n\n    // this.form.valueChanges.subscribe(() => );\n\n    // this.dataSourceClientsPrograms.data = this.form.get('programs')?.value;\n  }\n\n  private getClientsPrograms() {\n    this.clientsPrograms = [];\n    let adaptedProgram: AdaptedProgram;\n    this.form.value.forEach((programData: any, i: number) => {\n      console.log(programData);\n      // const startDate = this.datePipe.transform(\n      //   programData.dateRange.start,\n      //   'dd/MM/yyyy',\n      // );\n      // const endDate = this.datePipe.transform(\n      //   programData.dateRange.end,\n      //   'dd/MM/yyyy',\n      // );\n\n      const currentDate = new Date();\n      const programEndDate = new Date(programData.dateRange.end);\n      let isProgramCompleted;\n      if (programEndDate < currentDate) {\n        isProgramCompleted = true;\n        console.log('This program is completed');\n      } else {\n        isProgramCompleted = false;\n        console.log('This program is in progress');\n      }\n\n      adaptedProgram = {\n        id: programData.program.id,\n        name: programData.program.name,\n        selectedExercises: programData.program.selectedExercises,\n        // program: programData.program,\n        // date: `${startDate} - ${endDate}`,\n        dateRange: programData.dateRange,\n        position: i + 1,\n        isProgramCompleted: isProgramCompleted,\n      };\n      this.clientsPrograms.push(adaptedProgram);\n      console.log(adaptedProgram);\n    });\n    // const subscription = this.programsService\n    //   .getPrograms()\n    //   .subscribe(programsList => {\n    //     this.programs = [];\n    //     programsList.forEach((program, i) => {\n    //       program.position = i + 1;\n    //       this.programs.push(program);\n    //       // this.programs = programsList;\n    //     });\n    console.log(this.clientsPrograms);\n    this.dataSourceClientsPrograms.data = this.clientsPrograms;\n    //   });\n    // this.subscriptions.add(subscription);\n  }\n\n  openEditClientProgramDialog(programPosition: number) {\n    // console.log(programPosition);\n    // console.log(this.programs[programPosition - 1]);\n    // this.isClientProgram.set(true);\n    this.reuseProgram.set(false);\n    const programId = this.clientsPrograms[programPosition - 1].id;\n    const programName = this.clientsPrograms[programPosition - 1].name;\n\n    const dateRange = this.clientsPrograms[programPosition - 1].dateRange;\n    console.log(dateRange);\n\n    console.log(this.clientName);\n\n    this.clientInfo.set({\n      clientId: this.clientId,\n      clientName: this.clientName,\n      programPosition: programPosition - 1,\n      programId: programId,\n      programName: programName,\n      dateRange: dateRange,\n    });\n    console.log(this.clientInfo());\n\n    // this.router.navigateByUrl(`programs/form/${programId}`);\n    // this.router.navigateByUrl(\n    //   `clients/form/${this.clientId}/programs/${programId}`,\n    // );\n    this.router.navigate([`programs/form/${programId}`], {\n      queryParams: {\n        programName: `${programName}`,\n        isClientProgram: 'true',\n      },\n    });\n  }\n\n  reuseEditProgram(programPosition: number) {\n    this.reuseProgram.set(true);\n    // this.isClientProgram.set(true);\n\n    const programId = this.clientsPrograms[programPosition - 1].id;\n    const programName = this.clientsPrograms[programPosition - 1].name;\n\n    this.clientInfo.set({\n      clientId: this.clientId,\n      clientName: this.clientName,\n      programPosition: programPosition - 1,\n      programId: programId,\n      programName: programName,\n      dateRange: { start: '', end: '' },\n    });\n\n    // this.router.navigateByUrl(`programs/form/${programId}`);\n    this.router.navigate([`programs/form/${programId}`], {\n      queryParams: {\n        programName: `${programName}`,\n        isClientProgram: 'true',\n      },\n    });\n  }\n\n  openDeleteConfirmationDialog(programPosition: number) {\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '312px',\n      data: {\n        title: $localize`:@@DeleteConfirmationDialog.deleteTitleProgram:Delete selected program?`,\n        message: $localize`:@@DeleteConfirmationDialog.deleteTitleClientProgram:Deleting the selected program will remove it from clients profile.`,\n      },\n      panelClass: 'custom-dialog',\n    });\n\n    // SHOULD THERE BE A DIALOG, SINCE ANOTHER ACTION IS NEEDED FOR SAVING CHANGES(CLICKING SAVE BTN)???\n\n    const subscription = dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // User confirmed deletion, handle deletion logic here\n        console.log('User confirmed deletion');\n        // this.deleteProgram(programPosition);\n        const subscription = this.clientsService\n          .deleteClientProgram(this.clientId, programPosition - 1)\n          .subscribe(res => {\n            this.form.removeAt(programPosition - 1);\n            this.getClientsPrograms();\n\n            // this.programs.splice(programPosition - 1, 1);\n            // this.dataSourceClientsPrograms.data = this.programs;\n\n            console.log(res);\n          });\n        this.subscriptions.add(subscription);\n\n        dialogRef.close();\n      } else {\n        // User canceled deletion\n        console.log('User canceled deletion');\n        dialogRef.close();\n      }\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  /* private deleteProgram(programPosition: number) {\n    // console.log(programPosition - 1);\n    // console.log(this.form.value[programPosition - 1]);\n    this.form.removeAt(programPosition - 1);\n    this.getPrograms();\n\n    this._snackBar.open('Program deleted', '', {\n      duration: 2000,\n      panelClass: ['custom-snackbar-style'],\n    });\n    // this.programs.splice(programPosition - 1, 1);\n\n    // this.dataSourceClientsPrograms.data = this.programs;\n\n    // console.log(this.form.value);\n  } */\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSourceClientsPrograms.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSourceClientsPrograms.data);\n  }\n\n  // getProgram(programId: string) {\n  //   this.programsService.getProgram(programId).subscribe(program => {\n  //     console.log(program);\n  //   });\n  // }\n\n  /** The label for the checkbox on the passed row */\n  // checkboxLabel(row?: Program): string {\n  //   console.log('checkbox label dont work');\n  //   if (!row) {\n  //     return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n  //   }\n  //   return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\n  //     row.position + 1\n  //   }`;\n  // }\n\n  createProgram() {\n    // console.log('add program to client');\n    // console.log(this.form);\n    // this.isClientProgram.set(true);\n\n    this.isBrandNewClientsProgram.set(true);\n    // this.clientInfo.set({\n    //   clientId: this.clientId,\n    //   clientName: this.clientName,\n    //   programPosition: 0,\n    //   programId: '',\n    //   programName: '',\n    //   dateRange: { start: '', end: '' },\n    // });\n\n    this.router.navigateByUrl(`programs/form`);\n  }\n\n  getPrograms(listOption: string) {\n    if (listOption === 'template') {\n      const subscription = this.programsService\n        .getPrograms()\n        .subscribe(programsList => {\n          this.allPrograms = [];\n          this.allPrograms = programsList;\n          this.allPrograms.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n          });\n          console.log(this.allPrograms);\n\n          this.dataSourceAllPrograms.data = this.allPrograms;\n        });\n      this.subscriptions.add(subscription);\n    }\n  }\n\n  viewProgramModal(programId: string) {\n    const subscription = this.programsService\n      .getProgram(programId)\n      .subscribe(program => {\n        const dialogRef = this.dialog.open(ProgramModalComponent, {\n          width: '500px',\n          // height: '736px',\n          data: {\n            title: $localize`:@@ProgramModal.modalTitle:Program info`,\n            program: program,\n            selectedLang: this.selectedLanguage,\n          },\n          // disableClose: true, // Disable closing when clicked outside\n          panelClass: 'custom-dialog',\n          // enterAnimationDuration: 0,\n        });\n\n        const subscription = dialogRef.afterClosed().subscribe(result => {\n          if (result) {\n            this.addProgramToClient(result);\n          } else {\n            console.log('Program modal exited');\n          }\n        });\n        this.subscriptions.add(subscription);\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  addProgramToClient(programId: string) {\n    console.log(programId);\n    const subscription = this.programsService\n      .getProgram(programId)\n      .subscribe(program => {\n        program.isTemplate = false;\n        console.log(program);\n        // Create independent program that belongs to client with its unique id and configuration\n        let startDate = this.form.get('clientInfo.dateRange.start')?.value;\n        console.log(startDate === null);\n        let endDate = this.form.get('clientInfo.dateRange.end')?.value;\n        startDate === undefined ? (startDate = new Date()) : startDate;\n        endDate === undefined\n          ? (endDate = startDate.getTime() + 7 * 24 * 60 * 60 * 1000)\n          : endDate;\n        const newProgram = {\n          // programId: createdProgram.id,\n          // programName: createdProgram.name,\n          program: {\n            name: program.name,\n            diagnosis: program.diagnosis,\n            notes: program.notes,\n            selectedExercises: program.selectedExercises,\n            templateProgramId: program.id,\n            isTemplate: false,\n          },\n          dateRange: {\n            // start: dateRange.start,\n            // end: dateRange.end,\n            start: startDate,\n            end: endDate,\n          },\n        };\n        console.log(newProgram);\n        const programs = this.form.value;\n        const updatedPrograms = [...programs, newProgram];\n        console.log(updatedPrograms);\n        const updatedClient = {\n          firstName: this.client.firstName,\n          lastName: this.client.lastName,\n          name: this.client.name,\n          email: this.client.email,\n          phone: this.client.phone,\n          address: {\n            street: this.client.address?.street,\n            streetNumber: this.client.address?.streetNumber,\n            city: this.client.address?.city,\n            zipCode: this.client.address?.zipCode,\n            country: this.client.address?.country,\n          },\n          programs: updatedPrograms,\n        };\n\n        const subscription = this.clientsService\n          .updateClient(updatedClient, this.clientId)\n          .subscribe(updatedClient => {\n            // Add full newly added client's program to form\n            const newAddedProgram = updatedClient.programs?.pop();\n            const programsArray = this.form as FormArray;\n            programsArray.push(new FormControl(newAddedProgram));\n\n            // this.parentForm.updateValueAndValidity();\n            this.getClientsPrograms();\n\n            const message = $localize`:@@Snackbar.programAddedToClient:Program added to client`;\n            this._snackBar.open(message, '', {\n              duration: 2000,\n              panelClass: ['custom-snackbar-style'],\n            });\n          });\n        this.subscriptions.add(subscription);\n\n        // lastValueFrom(timer(2100)).then(() => {\n        //   this.router.navigateByUrl(`clients/form/${this.clientId}`);\n        // });\n      });\n    this.subscriptions.add(subscription);\n  }\n\n  private _getUserLanguageToken(): 'en' | 'de' | 'sr' {\n    return <'en' | 'de' | 'sr'>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import * as i2 from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW, UP_ARROW, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, booleanAttribute, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRipple, MatPseudoCheckbox, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY,\n});\nfunction MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        hideSingleSelectionIndicator: false,\n        hideMultipleSelectionIndicator: false,\n        disabledInteractive: false,\n    };\n}\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true,\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The button toggle that emits the event. */\n    source, \n    /** The value assigned to the button toggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._markButtonsForCheck();\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether buttons in the group should be interactive while they're disabled. */\n    get disabledInteractive() {\n        return this._disabledInteractive;\n    }\n    set disabledInteractive(value) {\n        this._disabledInteractive = value;\n        this._markButtonsForCheck();\n    }\n    /** The layout direction of the toggle button group. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether checkmark indicator for single-selection button toggle groups is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether checkmark indicator for multiple-selection button toggle groups is hidden. */\n    get hideMultipleSelectionIndicator() {\n        return this._hideMultipleSelectionIndicator;\n    }\n    set hideMultipleSelectionIndicator(value) {\n        this._hideMultipleSelectionIndicator = value;\n        this._markButtonsForCheck();\n    }\n    constructor(_changeDetector, defaultOptions, _dir) {\n        this._changeDetector = _changeDetector;\n        this._dir = _dir;\n        this._multiple = false;\n        this._disabled = false;\n        this._disabledInteractive = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n        this.hideSingleSelectionIndicator = defaultOptions?.hideSingleSelectionIndicator ?? false;\n        this.hideMultipleSelectionIndicator = defaultOptions?.hideMultipleSelectionIndicator ?? false;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n        if (!this.multiple) {\n            this._initializeTabIndex();\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Handle keydown event calling to single-select button toggle. */\n    _keydown(event) {\n        if (this.multiple || this.disabled) {\n            return;\n        }\n        const target = event.target;\n        const buttonId = target.id;\n        const index = this._buttonToggles.toArray().findIndex(toggle => {\n            return toggle.buttonId === buttonId;\n        });\n        let nextButton = null;\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                nextButton = this._buttonToggles.get(index) || null;\n                break;\n            case UP_ARROW:\n                nextButton = this._getNextButton(index, -1);\n                break;\n            case LEFT_ARROW:\n                nextButton = this._getNextButton(index, this.dir === 'ltr' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                nextButton = this._getNextButton(index, 1);\n                break;\n            case RIGHT_ARROW:\n                nextButton = this._getNextButton(index, this.dir === 'ltr' ? 1 : -1);\n                break;\n            default:\n                return;\n        }\n        if (nextButton) {\n            event.preventDefault();\n            nextButton._onButtonClick();\n            nextButton.focus();\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n        const event = new MatButtonToggleChange(toggle, this.value);\n        this._rawValue = event.value;\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n        }\n        else {\n            this._updateModelValue(toggle, isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Initializes the tabindex attribute using the radio pattern. */\n    _initializeTabIndex() {\n        this._buttonToggles.forEach(toggle => {\n            toggle.tabIndex = -1;\n        });\n        if (this.selected) {\n            this.selected.tabIndex = 0;\n        }\n        else {\n            for (let i = 0; i < this._buttonToggles.length; i++) {\n                const toggle = this._buttonToggles.get(i);\n                if (!toggle.disabled) {\n                    toggle.tabIndex = 0;\n                    break;\n                }\n            }\n        }\n        this._markButtonsForCheck();\n    }\n    /** Obtain the subsequent toggle to which the focus shifts. */\n    _getNextButton(startIndex, offset) {\n        const items = this._buttonToggles;\n        for (let i = 1; i <= items.length; i++) {\n            const index = (startIndex + offset * i + items.length) % items.length;\n            const item = items.get(index);\n            if (item && !item.disabled) {\n                return item;\n            }\n        }\n        return null;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => {\n            toggle.checked = false;\n            // If the button toggle is in single select mode, initialize the tabIndex.\n            if (!this.multiple) {\n                toggle.tabIndex = -1;\n            }\n        });\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n            if (!this.multiple) {\n                // If the button toggle is in single select mode, reset the tabIndex.\n                correspondingOption.tabIndex = 0;\n            }\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent(toggle);\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n        this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggleGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatButtonToggleGroup, isStandalone: true, selector: \"mat-button-toggle-group\", inputs: { appearance: \"appearance\", name: \"name\", vertical: [\"vertical\", \"vertical\", booleanAttribute], value: \"value\", multiple: [\"multiple\", \"multiple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], hideMultipleSelectionIndicator: [\"hideMultipleSelectionIndicator\", \"hideMultipleSelectionIndicator\", booleanAttribute] }, outputs: { valueChange: \"valueChange\", change: \"change\" }, host: { listeners: { \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"multiple ? 'group' : 'radiogroup'\", \"attr.aria-disabled\": \"disabled\", \"class.mat-button-toggle-vertical\": \"vertical\", \"class.mat-button-toggle-group-appearance-standard\": \"appearance === \\\"standard\\\"\" }, classAttribute: \"mat-button-toggle-group\" }, providers: [\n            MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n            { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n        ], queries: [{ propertyName: \"_buttonToggles\", predicate: i0.forwardRef(() => MatButtonToggle), descendants: true }], exportAs: [\"matButtonToggleGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggleGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-button-toggle-group',\n                    providers: [\n                        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                    ],\n                    host: {\n                        'class': 'mat-button-toggle-group',\n                        '(keydown)': '_keydown($event)',\n                        '[attr.role]': \"multiple ? 'group' : 'radiogroup'\",\n                        '[attr.aria-disabled]': 'disabled',\n                        '[class.mat-button-toggle-vertical]': 'vertical',\n                        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                    },\n                    exportAs: 'matButtonToggleGroup',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { _buttonToggles: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatButtonToggle), {\n                        // Note that this would technically pick up toggles\n                        // from nested groups, but that's not a case that we support.\n                        descendants: true,\n                    }]\n            }], appearance: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], vertical: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideMultipleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/** Single button inside of a toggle group. */\nclass MatButtonToggle {\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n        return `${this.id}-button`;\n    }\n    /** Tabindex of the toggle. */\n    get tabIndex() {\n        return this._tabIndex;\n    }\n    set tabIndex(value) {\n        this._tabIndex = value;\n        this._markForCheck();\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        if (value !== this._checked) {\n            this._checked = value;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /** Whether the button should remain interactive when it is disabled. */\n    get disabledInteractive() {\n        return (this._disabledInteractive ||\n            (this.buttonToggleGroup !== null && this.buttonToggleGroup.disabledInteractive));\n    }\n    set disabledInteractive(value) {\n        this._disabledInteractive = value;\n    }\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n        this.disabledInteractive = defaultOptions?.disabledInteractive ?? false;\n    }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        if (this.disabled) {\n            return;\n        }\n        const newChecked = this.isSingleSelector() ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        if (this.isSingleSelector()) {\n            const focusable = this.buttonToggleGroup._buttonToggles.find(toggle => {\n                return toggle.tabIndex === 0;\n            });\n            // Modify the tabindex attribute of the last focusable button toggle to -1.\n            if (focusable) {\n                focusable.tabIndex = -1;\n            }\n            // Modify the tabindex attribute of the presently selected button toggle to 0.\n            this.tabIndex = 0;\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n        if (this.isSingleSelector()) {\n            return this.buttonToggleGroup.name;\n        }\n        return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    isSingleSelector() {\n        return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggle, deps: [{ token: MAT_BUTTON_TOGGLE_GROUP, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: 'tabindex', attribute: true }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatButtonToggle, isStandalone: true, selector: \"mat-button-toggle\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", name: \"name\", value: \"value\", tabIndex: \"tabIndex\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], appearance: \"appearance\", checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"presentation\" }, listeners: { \"focus\": \"focus()\" }, properties: { \"class.mat-button-toggle-standalone\": \"!buttonToggleGroup\", \"class.mat-button-toggle-checked\": \"checked\", \"class.mat-button-toggle-disabled\": \"disabled\", \"class.mat-button-toggle-disabled-interactive\": \"disabledInteractive\", \"class.mat-button-toggle-appearance-standard\": \"appearance === \\\"standard\\\"\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.id\": \"id\", \"attr.name\": \"null\" }, classAttribute: \"mat-button-toggle\" }, viewQueries: [{ propertyName: \"_buttonElement\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matButtonToggle\"], ngImport: i0, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.role]=\\\"isSingleSelector() ? 'radio' : 'button'\\\"\\n        [attr.tabindex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"!isSingleSelector() ? checked : null\\\"\\n        [attr.aria-checked]=\\\"isSingleSelector() ? checked : null\\\"\\n        [disabled]=\\\"(disabled && !disabledInteractive) || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <!-- Render checkmark at the beginning for single-selection. -->\\n    @if (buttonToggleGroup && checked && !buttonToggleGroup.multiple && !buttonToggleGroup.hideSingleSelectionIndicator) {\\n      <mat-pseudo-checkbox\\n          class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n          [disabled]=\\\"disabled\\\"\\n          state=\\\"checked\\\"\\n          aria-hidden=\\\"true\\\"\\n          appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n    }\\n    <!-- Render checkmark at the beginning for multiple-selection. -->\\n    @if (buttonToggleGroup && checked && buttonToggleGroup.multiple && !buttonToggleGroup.hideMultipleSelectionIndicator) {\\n      <mat-pseudo-checkbox\\n          class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n          [disabled]=\\\"disabled\\\"\\n          state=\\\"checked\\\"\\n          aria-hidden=\\\"true\\\"\\n          appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n    }\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-app-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-legacy-button-toggle-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle .mat-pseudo-checkbox{margin-right:12px}[dir=rtl] .mat-button-toggle .mat-pseudo-checkbox{margin-right:0;margin-left:12px}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-legacy-button-toggle-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color, var(--mat-app-on-surface));background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-label-text-font, var(--mat-app-label-large-font));font-size:var(--mat-standard-button-toggle-label-text-size, var(--mat-app-label-large-size));line-height:var(--mat-standard-button-toggle-label-text-line-height, var(--mat-app-label-large-line-height));font-weight:var(--mat-standard-button-toggle-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mat-standard-button-toggle-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-app-on-secondary-container));background-color:var(--mat-standard-button-toggle-selected-state-background-color, var(--mat-app-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-standard-button-toggle-disabled-selected-state-text-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color, var(--mat-app-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}.mat-button-toggle-group-appearance-standard .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}.mat-button-toggle-group-appearance-standard .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-button-toggle', encapsulation: ViewEncapsulation.None, exportAs: 'matButtonToggle', changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                        '[class.mat-button-toggle-checked]': 'checked',\n                        '[class.mat-button-toggle-disabled]': 'disabled',\n                        '[class.mat-button-toggle-disabled-interactive]': 'disabledInteractive',\n                        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                        'class': 'mat-button-toggle',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.name]': 'null',\n                        '(focus)': 'focus()',\n                        'role': 'presentation',\n                    }, standalone: true, imports: [MatRipple, MatPseudoCheckbox], template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.role]=\\\"isSingleSelector() ? 'radio' : 'button'\\\"\\n        [attr.tabindex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"!isSingleSelector() ? checked : null\\\"\\n        [attr.aria-checked]=\\\"isSingleSelector() ? checked : null\\\"\\n        [disabled]=\\\"(disabled && !disabledInteractive) || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <!-- Render checkmark at the beginning for single-selection. -->\\n    @if (buttonToggleGroup && checked && !buttonToggleGroup.multiple && !buttonToggleGroup.hideSingleSelectionIndicator) {\\n      <mat-pseudo-checkbox\\n          class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n          [disabled]=\\\"disabled\\\"\\n          state=\\\"checked\\\"\\n          aria-hidden=\\\"true\\\"\\n          appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n    }\\n    <!-- Render checkmark at the beginning for multiple-selection. -->\\n    @if (buttonToggleGroup && checked && buttonToggleGroup.multiple && !buttonToggleGroup.hideMultipleSelectionIndicator) {\\n      <mat-pseudo-checkbox\\n          class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n          [disabled]=\\\"disabled\\\"\\n          state=\\\"checked\\\"\\n          aria-hidden=\\\"true\\\"\\n          appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n    }\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-app-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-legacy-button-toggle-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle .mat-pseudo-checkbox{margin-right:12px}[dir=rtl] .mat-button-toggle .mat-pseudo-checkbox{margin-right:0;margin-left:12px}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-legacy-button-toggle-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color, var(--mat-app-on-surface));background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-label-text-font, var(--mat-app-label-large-font));font-size:var(--mat-standard-button-toggle-label-text-size, var(--mat-app-label-large-size));line-height:var(--mat-standard-button-toggle-label-text-line-height, var(--mat-app-label-large-line-height));font-weight:var(--mat-standard-button-toggle-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mat-standard-button-toggle-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-app-on-secondary-container));background-color:var(--mat-standard-button-toggle-selected-state-background-color, var(--mat-app-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-standard-button-toggle-disabled-selected-state-text-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color, var(--mat-app-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}.mat-button-toggle-group-appearance-standard .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}.mat-button-toggle-group-appearance-standard .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}\"] }]\n        }], ctorParameters: () => [{ type: MatButtonToggleGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_GROUP]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                }] }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], _buttonElement: [{\n                type: ViewChild,\n                args: ['button']\n            }], id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], appearance: [{\n                type: Input\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }] } });\n\nclass MatButtonToggleModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatButtonToggleGroup, MatButtonToggle], exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatButtonToggle, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatButtonToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatButtonToggleGroup, MatButtonToggle],\n                    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","<div class=\"table-wrapper\">\n  <mat-form-field>\n    <mat-label i18n=\"@@ProgramsList.inputFilterLabel\">Filter</mat-label>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"E.g. Seated back stretch\"\n      i18n-placeholder=\"@@ProgramsList.inputPlaceholder\"\n      #input\n    />\n  </mat-form-field>\n\n  <div class=\"search-segmented-btns\">\n    <mat-button-toggle-group\n      class=\"segmented-btns\"\n      [(ngModel)]=\"listOption\"\n      name=\"listOption\"\n      aria-label=\"List Option\"\n      i18n-aria-label=\"@@ProgramsList.listOptionAriaLabel\"\n      (change)=\"getPrograms(listOption)\"\n      hideSingleSelectionIndicator=\"true\"\n    >\n      <mat-button-toggle value=\"all\" i18n=\"@@ProgramsList.listOptionAll\"\n        >All</mat-button-toggle\n      >\n      <mat-button-toggle\n        value=\"template\"\n        i18n=\"@@ProgramsList.listOptionTemplate\"\n        >Template</mat-button-toggle\n      >\n\n      <mat-button-toggle value=\"client\" i18n=\"@@ProgramsList.listOptionClient\"\n        >Client</mat-button-toggle\n      >\n      <mat-button-toggle\n        value=\"favorite\"\n        i18n=\"@@ProgramsList.listOptionFavorite\"\n        >Favorite</mat-button-toggle\n      >\n    </mat-button-toggle-group>\n  </div>\n\n  <!-- <div class=\"mat-elevation-z8 programs-table\"> -->\n  <div class=\"programs-table-container\">\n    <div\n      class=\"programs-table table-scroll-container\"\n      overlay-scrollbars\n      [options]=\"themeSignal()\"\n      [defer]\n    >\n      <table\n        mat-table\n        class=\"mat-table-background\"\n        [dataSource]=\"dataSource\"\n        matSort\n      >\n        <!-- ID Column -->\n        <!-- <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container> -->\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            mat-sort-header\n            i18n=\"@@ProgramsList.tableColumnName\"\n          >\n            Name\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n        </ng-container>\n        <!-- Program Type Column -->\n        <ng-container matColumnDef=\"type\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            i18n=\"@@ProgramsList.tableColumnType\"\n          >\n            Type\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            @if (row.isTemplate) {\n              <span i18n=\"@@ProgramsList.tableColumnTemplate\">Template</span>\n              @if (row.isAdminProgram) {\n                <span\n                  class=\"template-icon\"\n                  matTooltip=\"Default program\"\n                  i18n-matTooltip=\"@@ProgramsList.defaultProgramTooltip\"\n                  ><img width=\"16\" src=\"assets/images/leaf-img.svg\" alt=\"\"\n                /></span>\n              } @else {\n                <span\n                  class=\"template-icon\"\n                  matTooltip=\"User's program\"\n                  i18n-matTooltip=\"@@ProgramsList.UsersProgramTooltip\"\n                  ><img\n                    width=\"14\"\n                    src=\"assets/images/blue-user-icon.svg\"\n                    alt=\"\"\n                /></span>\n              }\n            } @else {\n              <span>{{ row.clientName }}</span>\n            }\n            <!-- {{ row.isTemplate ? 'Template' : row.clientName }} -->\n          </td>\n        </ng-container>\n        <!-- Number of Exercises Column -->\n        <ng-container matColumnDef=\"numberOfExercises\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            i18n=\"@@ProgramsList.tableColumnNumberOfExercises\"\n          >\n            No. exercises\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.selectedExercises.length }}\n          </td>\n        </ng-container>\n        <!-- Options Column -->\n        <ng-container matColumnDef=\"options\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div class=\"program-options\">\n              @if (row.clientName) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Add to client\"\n                  i18n-matTooltip=\"@@ProgramsList.addToClientTooltip\"\n                  aria-label=\"Add to client icon button\"\n                  i18n-aria-label=\"@@ProgramsList.addToClientAriaLabel\"\n                  (click)=\"\n                    $event.stopPropagation();\n                    reuseEditProgram(row.position, row.id)\n                  \"\n                >\n                  <!-- <mat-icon>content_copy</mat-icon> -->\n                  <mat-icon>person_add</mat-icon>\n                </button>\n              } @else {\n                @if (!(row.isAdminProgram && !isAdmin)) {\n                  <button\n                    mat-icon-button\n                    matTooltip=\"Edit\"\n                    i18n-matTooltip=\"@@ProgramsList.editProgramTooltip\"\n                    aria-label=\"Edit icon button\"\n                    i18n-aria-label=\"@@ProgramsList.editProgramAriaLabel\"\n                    (click)=\"openEditProgram(row.id)\"\n                    [disabled]=\"row.isAdminProgram && !isAdmin\"\n                  >\n                    <mat-icon>edit</mat-icon>\n                  </button>\n                }\n              }\n              @if (!row.clientName) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Add to client\"\n                  i18n-matTooltip=\"@@ProgramsList.addToClientTooltip\"\n                  aria-label=\"Add to client icon button\"\n                  i18n-aria-label=\"@@ProgramsList.addToClientAriaLabel\"\n                  (click)=\"\n                    $event.stopPropagation();\n                    reuseEditProgram(row.position, row.id)\n                  \"\n                >\n                  <!-- <mat-icon>content_copy</mat-icon> -->\n                  <mat-icon>person_add</mat-icon>\n                </button>\n              }\n              @if (!(row.isAdminProgram && !isAdmin)) {\n                <button\n                  mat-icon-button\n                  matTooltip=\"Delete\"\n                  i18n-matTooltip=\"@@ProgramsList.deleteProgramTooltip\"\n                  aria-label=\"Delete icon button\"\n                  i18n-aria-label=\"@@ProgramsList.deleteProgramAriaLabel\"\n                  (click)=\"openDeleteConfirmationDialog(row.id, listOption)\"\n                  [disabled]=\"row.isAdminProgram && !isAdmin\"\n                >\n                  <mat-icon>delete_outline</mat-icon>\n                </button>\n              }\n              @if (row.isFavorite) {\n                <button\n                  (click)=\"removeFromFavorites(row)\"\n                  mat-icon-button\n                  class=\"favorite-program-star\"\n                  matTooltip=\"Remove from favorites\"\n                  i18n-matTooltip=\"\n                    @@ProgramsList.removeProgramFromFavoritesTooltip\"\n                  aria-label=\"Favorite icon-button with a star icon\"\n                  i18n-aria-label=\"\n                    @@ProgramsList.removeProgramFromFavoritesAriaLabel\"\n                >\n                  <mat-icon>star</mat-icon>\n                </button>\n              } @else {\n                <button\n                  (click)=\"addToFavorites(row)\"\n                  mat-icon-button\n                  matTooltip=\"Add to favorites\"\n                  i18n-matTooltip=\"@@ProgramsList.addProgramToFavoritesTooltip\"\n                  aria-label=\"Favorite icon-button with a star icon\"\n                  i18n-aria-label=\"\n                    @@ProgramsList.addProgramToFavoritesAriaLabel\"\n                >\n                  <mat-icon>star_border</mat-icon>\n                </button>\n              }\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          class=\"table-rows\"\n        ></tr>\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td\n            class=\"mat-cell\"\n            colspan=\"4\"\n            i18n=\"@@ProgramsList.noMatchingFilter\"\n          >\n            No data matching the filter \"{{ input.value }}\"\n          </td>\n        </tr>\n      </table>\n    </div>\n    <mat-paginator\n      class=\"mat-paginator-background\"\n      pageSize=\"10\"\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      aria-label=\"Select page of programs\"\n      i18n-aria-label=\"@@ProgramsList.selectPageOfPrograms\"\n    ></mat-paginator>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, MatSortHeader } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable, MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell, MatHeaderRowDef, MatHeaderRow, MatRowDef, MatRow, MatNoDataRow } from '@angular/material/table';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { Program } from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonToggleGroup, MatButtonToggle } from '@angular/material/button-toggle';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\n\n@Component({\n    selector: 'ui-programs-table',\n    templateUrl: './programs-table.component.html',\n    styleUrl: './programs-table.component.scss',\n    standalone: true,\n    imports: [\n        MatFormField,\n        MatLabel,\n        MatInput,\n        MatButtonToggleGroup,\n        FormsModule,\n        MatButtonToggle,\n        OverlayscrollbarsModule,\n        MatTable,\n        MatSort,\n        MatColumnDef,\n        MatHeaderCellDef,\n        MatHeaderCell,\n        MatSortHeader,\n        MatCellDef,\n        MatCell,\n        MatIconButton,\n        MatTooltip,\n        MatIcon,\n        MatHeaderRowDef,\n        MatHeaderRow,\n        MatRowDef,\n        MatRow,\n        MatNoDataRow,\n        MatPaginator,\n    ],\n})\nexport class ProgramsTableComponent implements AfterViewInit {\n  displayedColumns: string[] = ['name', 'numberOfExercises', 'type', 'options'];\n  @Input() isAdmin  = false;\n  @Input() isAdminProgram = false;\n  @Input() dataSource = new MatTableDataSource<Program>();\n  @Input() listOption = 'all';\n  @Input() mainProgramsList = false;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  @Output() getProgramsEvent: EventEmitter<string> = new EventEmitter();\n  @Output() reuseEditProgramEvent: EventEmitter<any> = new EventEmitter();\n  @Output() openEditProgramEvent: EventEmitter<any> = new EventEmitter();\n  @Output() openDeleteConfirmationDialogEvent: EventEmitter<any> =\n    new EventEmitter();\n\n  @Output() favoriteProgram = new EventEmitter<Program>();\n  @Output() removeFavoriteProgram = new EventEmitter<Program>();\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  // @Output() viewProgramEvent: EventEmitter<any> = new EventEmitter();\n  // @Output() addProgramToClientEvent: EventEmitter<any> = new EventEmitter();\n\n  getPrograms(listOption: string) {\n    console.log(this.dataSource.data);\n    this.getProgramsEvent.emit(listOption);\n    console.log(this.dataSource.data);\n  }\n\n  reuseEditProgram(programPosition: number, programId: string) {\n    this.reuseEditProgramEvent.emit({ programPosition, programId });\n  }\n\n  openEditProgram(programId: string) {\n    this.openEditProgramEvent.emit(programId);\n  }\n\n  openDeleteConfirmationDialog(itemId: string, listOption: string) {\n    this.openDeleteConfirmationDialogEvent.emit({ itemId, listOption });\n  }\n\n  // viewProgram(programId: string) {\n  //   this.viewProgramEvent.emit(programId);\n  //   console.log('this is open view program', programId);\n  // }\n\n  // addProgramToClient(programId: string) {\n  //   this.addProgramToClientEvent.emit(programId);\n  // }\n\n  addToFavorites(program: Program) {\n    program.isFavorite = true;\n    this.favoriteProgram.emit(program);\n    console.log(program);\n  }\n\n  removeFromFavorites(program: Program) {\n    program.isFavorite = false;\n    this.removeFavoriteProgram.emit(program);\n    console.log(program);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","<mat-form-field appearance=\"outline\" class=\"add-clients\">\n  <mat-label i18n=\"@@FilterSelectClients.addClientsLabel\"\n    >Add client(s)</mat-label\n  >\n  <mat-icon matPrefix>people_outline</mat-icon>\n  <mat-select\n    [formControl]=\"clientCtrl\"\n    placeholder=\"Add client(s)\"\n    i18n-placeholder=\"@@FilterSelectClients.addClientsInputPlaceholder\"\n    [multiple]=\"true\"\n    #singleSelect\n  >\n    <mat-option>\n      <ngx-mat-select-search\n        [formControl]=\"clientFilterCtrl\"\n        placeholderLabel=\"Find clients...\"\n        i18n-placeholderLabel=\"@@FilterSelectClients.addClientsPlaceholderLabel\"\n        noEntriesFoundLabel=\"No entries found\"\n        i18n-noEntriesFoundLabel=\"@@FilterSelectClients.noEntriesFoundLabel\"\n        [showToggleAllCheckbox]=\"true\"\n        toggleAllCheckboxTooltipMessage=\"Select / Unselect All\"\n        i18n-toggleAllCheckboxTooltipMessage=\"\n          @@FilterSelectClients.toggleAllCheckboxTooltipMessage\"\n        [toggleAllCheckboxIndeterminate]=\"isIndeterminate\"\n        [toggleAllCheckboxChecked]=\"isChecked\"\n        (toggleAll)=\"toggleSelectAll($event)\"\n      >\n        <mat-icon ngxMatSelectSearchClear>close</mat-icon>\n      </ngx-mat-select-search>\n    </mat-option>\n\n    @for (client of filteredClients | async; track client) {\n      <mat-option [value]=\"client\">\n        {{ client.name }}\n      </mat-option>\n    }\n  </mat-select>\n\n  <!-- Add this if attribute is set to \"required\" -->\n  <!-- @if (clientCtrl.invalid) {\n    <mat-hint>*required</mat-hint>\n  } -->\n</mat-form-field>\n<!-- <div class=\"inner-wrap\">\n    <h3>Selected Values</h3>\n    <ul *ngFor=\"let client of clientCtrl?.value\">\n      <li>{{ client.id }}</li>\n    </ul>\n  </div> -->\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormControl,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  Client,\n  ClientsService,\n  ShareClientsDataService,\n} from '@slowautomobile/exercises';\nimport { ReplaySubject, Subject, Subscription, take, takeUntil } from 'rxjs';\nimport { AsyncPipe } from '@angular/common';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { MatOption } from '@angular/material/core';\nimport { MatIcon } from '@angular/material/icon';\nimport {\n  MatFormField,\n  MatLabel,\n  MatPrefix,\n} from '@angular/material/form-field';\n\n// export interface Client {\n//   id: string | undefined;\n//   name: string;\n// }\n\n/** list of clients */\n// export const CLIENTS: Client[] = [\n//   { name: 'John Doe', id: 'A' },\n//   { name: 'Lucy Jay', id: 'B' },\n//   { name: 'Jimmy Jeep', id: 'C' },\n//   { name: 'Vince Bretton', id: 'D' },\n// ];\n\n@Component({\n  selector: 'ui-filter-select-clients',\n  templateUrl: './filter-select-clients.component.html',\n  styleUrl: './filter-select-clients.component.scss',\n  standalone: true,\n  imports: [\n    MatFormField,\n    MatLabel,\n    MatIcon,\n    MatPrefix,\n    MatSelect,\n    FormsModule,\n    ReactiveFormsModule,\n    MatOption,\n    NgxMatSelectSearchModule,\n    AsyncPipe,\n  ],\n})\nexport class FilterSelectClientsComponent\n  implements OnInit, OnDestroy, AfterViewInit\n{\n  private shareClientsDataService = inject(ShareClientsDataService);\n  private clientsService = inject(ClientsService);\n  private controlContainer = inject(ControlContainer);\n\n  /** list of clients */\n  clients: Client[] = [];\n  // clients = this.shareClientsDataService.clients;\n  /** control for the selected client */\n  public clientCtrl!: FormControl;\n  subscriptions = new Subscription();\n\n  /** control for the MatSelect filter keyword */\n  public clientFilterCtrl: FormControl = new FormControl();\n\n  /** list of clients filtered by search keyword */\n  public filteredClients: ReplaySubject<Client[]> = new ReplaySubject<Client[]>(\n    1,\n  );\n\n  reuseProgram = this.shareClientsDataService.reuseProgram;\n\n  // Emit new value to parent on change\n  // @Output() valueChange = new EventEmitter<string>();\n\n  @ViewChild('singleSelect', { static: true })\n  singleSelect!: MatSelect;\n\n  /** Subject that emits when the component has been destroyed. */\n  protected _onDestroy = new Subject<void>();\n\n  /** flags to set the toggle all checkbox state */\n  isIndeterminate = false;\n  isChecked = false;\n\n  isClientProgramSignal = this.shareClientsDataService.isClientProgram;\n  clientInfo = this.shareClientsDataService.clientInfo;\n\n  ngOnInit() {\n    this.clientCtrl = this.controlContainer.control?.get(\n      'selectedClients',\n    ) as FormControl;\n    console.log(this.clientCtrl);\n    console.log(this.clientInfo());\n\n    // this.clientCtrl.setValidators([Validators.required]);\n    // this.clientCtrl.updateValueAndValidity();\n    // set initial selection\n    // this.clientCtrl.setValue([this.clients[1], this.clients[2]]);\n    if (this.isClientProgramSignal() && !this.reuseProgram()) {\n      const subscription = this.clientsService\n        .getClient(this.clientInfo().clientId)\n        .subscribe(client => {\n          // Return a whole client document, so that createProgram/updateProgram can have programs property\n          console.log('this is client', client);\n\n          this.clientCtrl.setValue([\n            client,\n            // { name: this.clientInfo().clientName, id: this.clientInfo().clientId },\n          ]);\n        });\n      this.subscriptions.add(subscription);\n    }\n\n    const subscription = this.clientsService\n      .getClients()\n      .subscribe(clientsList => {\n        // clientsList.forEach(client => {\n        //   this.clients.push({\n        //     id: client.id,\n        //     name: `${client.lastName} ${client.firstName}`,\n        //   });\n        // });\n        this.clients = clientsList;\n        console.log(this.clients);\n        // load the initial client list\n        this.filteredClients.next(this.clients.slice());\n      });\n    this.subscriptions.add(subscription);\n\n    // this.clientCtrl.valueChanges.subscribe(clients => {\n    //   this.valueChange.emit(clients)\n    // });\n\n    // listen for search field value changes\n    this.clientFilterCtrl.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterClients();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.setInitialValue();\n    // this.filteredClients.next(this.clients().slice());\n    // console.log(this.clients());\n    /// TRY TO LAZY LOAD COMPONENT, MODULE OR TO MAKE STEPS IN STEPPER DIFFERENT COMPONENTS??? IT WORKS, REFACTOR MORE ELEGANTLY!\n  }\n\n  /**\n   * Sets the initial value after the filteredClients are loaded initially\n   */\n  protected setInitialValue() {\n    this.filteredClients\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.singleSelect.compareWith = (a: Client, b: Client) =>\n          a && b && a.id === b.id;\n      });\n  }\n\n  protected filterClients() {\n    if (!this.clients) {\n      return;\n    }\n    // get the search keyword\n    let search = this.clientFilterCtrl.value;\n    if (!search) {\n      this.filteredClients.next(this.clients.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the clients\n    this.filteredClients.next(\n      this.clients.filter(\n        client => client.name.toLowerCase().indexOf(search) > -1,\n      ),\n    );\n  }\n\n  toggleSelectAll(selectAllValue: boolean) {\n    this.filteredClients\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(val => {\n        if (selectAllValue) {\n          this.clientCtrl.patchValue(val);\n        } else {\n          this.clientCtrl.patchValue([]);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    this.subscriptions.unsubscribe();\n  }\n}\n","<!-- <div class=\"search-container\">\n  <form [formGroup]=\"options\">\n    <div class=\"search-form-fields\">\n      <mat-form-field\n        [hideRequiredMarker]=\"hideRequiredControl.value\"\n      >\n        <input matInput placeholder=\"Search exercises\" required />\n         <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      </mat-form-field>\n    </div>\n  </form>\n</div> -->\n\n<div class=\"search-container\">\n  <div class=\"search-form-fields\">\n    <!-- <input type=\"text\" [formControl]=\"term\"/> -->\n    <mat-form-field class=\"search-input\">\n      <input\n        matInput\n        [formControl]=\"searchTerm\"\n        placeholder=\"Search exercises\"\n        i18n-placeholder=\"@@SearchSegmentedBtns.searchExercisesPlaceholder\"\n      />\n      @if (searchTerm.value) {\n        <button\n          matSuffix\n          mat-icon-button\n          matTooltip=\"Clear\"\n          i18n-matTooltip=\"@@SearchSegmentedBtns.clearSearch\"\n          aria-label=\"Clear\"\n          i18n-aria-label=\"@@SearchSegmentedBtns.clearSearchAriaLabel\"\n          (click)=\"clearSearch()\"\n        >\n          <mat-icon>close</mat-icon>\n        </button>\n      }\n      <button\n        matTooltip=\"Filter\"\n        i18n-matTooltip=\"@@SearchSegmentedBtns.filterSearch\"\n        aria-label=\"Filter button\"\n        i18n-aria-label=\"@@SearchSegmentedBtns.filterSearchAriaLabel\"\n        (click)=\"toggleDrawer()\"\n        mat-icon-button\n        matSuffix\n      >\n        <mat-icon>tune</mat-icon>\n      </button>\n      <!-- <button\n        mat-icon-button\n        matPrefix\n        aria-label=\"Filter button\"\n        style=\"color: black\"\n      >\n        <mat-icon>search</mat-icon>\n      </button> -->\n      <mat-icon matPrefix>search</mat-icon>\n    </mat-form-field>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, inject } from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { FloatLabelType } from '@angular/material/form-field';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  SearchService,\n  ShareDataService,\n  ShareStateService,\n} from '@slowautomobile/exercises';\nimport {\n  Subscription,\n  combineLatest,\n  concat,\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  of,\n  startWith,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { MatInput } from '@angular/material/input';\nimport {\n  MatFormField,\n  MatSuffix,\n  MatPrefix,\n} from '@angular/material/form-field';\nimport { LocalstorageService } from '@slowautomobile/users';\n\n@Component({\n  selector: 'ui-search',\n  templateUrl: './search.component.html',\n  styleUrl: './search.component.scss',\n  standalone: true,\n  imports: [\n    MatFormField,\n    MatInput,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconButton,\n    MatSuffix,\n    MatTooltip,\n    MatIcon,\n    MatPrefix,\n  ],\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n  private searchService = inject(SearchService);\n  private shareDataService = inject(ShareDataService);\n  private shareStateService = inject(ShareStateService);\n  private localstorageService = inject(LocalstorageService);\n\n  searchTerm = new FormControl();\n  // @Output() toggleDrawerSignal = new EventEmitter<void>();\n  filter?: any;\n  drawerOpen = false;\n  subscriptions = new Subscription();\n  selectedLanguage!: string;\n  isFetchingData = this.shareStateService.isFetchingData;\n\n  // constructor(\n  //   private searchService: SearchService,\n  //   private shareDataService: ShareDataService,\n  //   private shareStateService: ShareStateService,\n  // ) {\n  //   // this.searchTerm.valueChanges.pipe(\n  //   //   debounceTime(400),\n  //   //   distinctUntilChanged(),\n  //   //   switchMap(async (searchTerm) => this.searchService\n  //   //       .searchExercises(searchTerm)\n  //   //       .subscribe(exercises => console.log(exercises)),\n  //   //   ),\n  //   // );\n  //   // let filterData = this.shareDataService.filterData$.subscribe(filterData => console.log(filterData))\n  //   // this.searchTerm.valueChanges\n  //   //   .pipe(\n  //   //     debounceTime(400),\n  //   //     distinctUntilChanged(),\n  //   //     switchMap(() => searchService.searchExercises(this.searchTerm.value)),\n  //   //   )\n  //   //   .subscribe(searchResult =>\n  //   //     shareDataService.updateSearchResults(searchResult),\n  //   //   );\n  //   // combineLatest([\n  //   //   this.searchTerm.valueChanges,\n  //   //   this.shareDataService.filterData$,\n  //   // ])\n  //   //   .pipe(\n  //   //     debounceTime(400),\n  //   //     distinctUntilChanged(),\n  //   //     switchMap(([searchTerm, filterData]) =>\n  //   //       searchService.searchExercises(searchTerm, filterData),\n  //   //     ),\n  //   //   )\n  //   //   .subscribe(searchResult =>\n  //   //     shareDataService.updateSearchResults(searchResult),\n  //   //   );\n  // }\n\n  ngOnInit(): void {\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log('running from search');\n    const subscription = combineLatest([\n      // concat(of(''), this.searchTerm.valueChanges),\n      this.searchTerm.valueChanges.pipe(\n        startWith(''),\n        tap(() => this.isFetchingData.set(true)),\n      ),\n      this.shareDataService.filterData$,\n    ])\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(([searchTerm, filterData]) =>\n          this.searchService.searchExercises(\n            searchTerm,\n            filterData,\n            this.selectedLanguage,\n          ),\n        ),\n      )\n      .subscribe(searchResult =>\n        this.shareDataService.updateSearchResults(searchResult),\n      );\n    this.subscriptions.add(subscription);\n  }\n\n  clearSearch() {\n    this.searchTerm.setValue('');\n  }\n\n  // hideRequiredControl = new FormControl(false);\n  // floatLabelControl = new FormControl('auto' as FloatLabelType);\n  // options = this._formBuilder.group({\n  //   hideRequired: this.hideRequiredControl,\n  //   floatLabel: this.floatLabelControl,\n  // });\n  // hide = true;\n  // constructor(private _formBuilder: FormBuilder) {}\n\n  // getFloatLabelValue(): FloatLabelType {\n  //   return this.floatLabelControl.value || 'auto';\n  // }\n\n  // get formValue(): FormControl {\n  //   return this.searchTerm.get('images') as FormArray;\n  // }\n  toggleDrawer() {\n    // BehaviorSubject toggle drawer state\n    // this.shareDataService.toggleDrawerSignal$.subscribe(\n    //   drawerSignal => {\n    //     this.drawerOpen = drawerSignal;\n    //   },\n    // );\n    // this.shareDataService.updateToggleDrawerResults(!this.drawerOpen);\n\n    // Toggle signal drawer state\n    this.shareStateService.drawerSignal.update(value => !value);\n  }\n\n  private _getUserLanguageToken(): string {\n    return <string>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of, combineLatest, EMPTY, concat } from 'rxjs';\nimport { take, filter, takeUntil, startWith, tap, switchMap, map, reduce, concatMap, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, EventEmitter, ChangeDetectorRef, booleanAttribute, Output, numberAttribute, NgModule } from '@angular/core';\nimport { TREE_KEY_MANAGER } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceObservable } from '@angular/cdk/coercion/private';\n\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass BaseTreeControl {\n    constructor() {\n        /** A selection model with multi-selection to track expansion status. */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode))\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n        if (this.options?.isExpandable) {\n            this.isExpandable = this.options.isExpandable;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTreeNodeOutlet, isStandalone: true, selector: \"[cdkTreeNodeOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    constructor(template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTreeNodeDef, isStandalone: true, selector: \"[cdkTreeNodeDef]\", inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeDef]',\n                    inputs: [{ name: 'when', alias: 'cdkTreeNodeDefWhen' }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there is no tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control, levelAccessor, or childrenAccessor for the tree.`);\n}\n/**\n * Returns an error to be thrown when there are multiple ways of specifying children or level\n * provided to the tree.\n * @docs-private\n */\nfunction getMultipleTreeControlsError() {\n    return Error(`More than one of tree control, levelAccessor, or childrenAccessor were provided.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = inject(Directionality);\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /** Level of nodes */\n        this._levels = new Map();\n        /** The immediate parents for a node. This is `null` if there is no parent. */\n        this._parents = new Map();\n        /**\n         * Nodes grouped into each set, which is a list of nodes displayed together in the DOM.\n         *\n         * Lookup key is the parent of a set. Root nodes have key of null.\n         *\n         * Values is a 'set' of tree nodes. Each tree node maps to a treeitem element. Sets are in the\n         * order that it is rendered. Each set maps directly to aria-posinset and aria-setsize attributes.\n         */\n        this._ariaSets = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        /**\n         * Maintain a synchronous cache of flattened data nodes. This will only be\n         * populated after initial render, and in certain cases, will be delayed due to\n         * relying on Observable `getChildren` calls.\n         */\n        this._flattenedNodes = new BehaviorSubject([]);\n        /** The automatically determined node type for the tree. */\n        this._nodeType = new BehaviorSubject(null);\n        /** The mapping between data and the node that is rendered. */\n        this._nodes = new BehaviorSubject(new Map());\n        /**\n         * Synchronous cache of nodes for the `TreeKeyManager`. This is separate\n         * from `_flattenedNodes` so they can be independently updated at different\n         * times.\n         */\n        this._keyManagerNodes = new BehaviorSubject([]);\n        this._keyManagerFactory = inject(TREE_KEY_MANAGER);\n        this._viewInit = false;\n    }\n    ngAfterContentInit() {\n        this._initializeKeyManager();\n    }\n    ngAfterContentChecked() {\n        this._updateDefaultNodeDefinition();\n        this._subscribeToDataChanges();\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // In certain tests, the tree might be destroyed before this is initialized\n        // in `ngAfterContentInit`.\n        this._keyManager?.destroy();\n    }\n    ngOnInit() {\n        this._checkTreeControlUsage();\n        this._initializeDataDiffer();\n    }\n    ngAfterViewInit() {\n        this._viewInit = true;\n    }\n    _updateDefaultNodeDefinition() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n    }\n    /**\n     * Sets the node type for the tree, if it hasn't been set yet.\n     *\n     * This will be called by the first node that's rendered in order for the tree\n     * to determine what data transformations are required.\n     */\n    _setNodeTypeIfUnset(nodeType) {\n        if (this._nodeType.value === null) {\n            this._nodeType.next(nodeType);\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._subscribeToDataChanges();\n        }\n    }\n    _getExpansionModel() {\n        if (!this.treeControl) {\n            this._expansionModel ??= new SelectionModel(true);\n            return this._expansionModel;\n        }\n        return this.treeControl.expansionModel;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _subscribeToDataChanges() {\n        if (this._dataSubscription) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (!dataStream) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw getTreeNoValidDataSourceError();\n            }\n            return;\n        }\n        this._dataSubscription = this._getRenderData(dataStream)\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(renderingData => {\n            this._renderDataChanges(renderingData);\n        });\n    }\n    /** Given an Observable containing a stream of the raw data, returns an Observable containing the RenderingData */\n    _getRenderData(dataStream) {\n        const expansionModel = this._getExpansionModel();\n        return combineLatest([\n            dataStream,\n            this._nodeType,\n            // We don't use the expansion data directly, however we add it here to essentially\n            // trigger data rendering when expansion changes occur.\n            expansionModel.changed.pipe(startWith(null), tap(expansionChanges => {\n                this._emitExpansionChanges(expansionChanges);\n            })),\n        ]).pipe(switchMap(([data, nodeType]) => {\n            if (nodeType === null) {\n                return of({ renderNodes: data, flattenedNodes: null, nodeType });\n            }\n            // If we're here, then we know what our node type is, and therefore can\n            // perform our usual rendering pipeline, which necessitates converting the data\n            return this._computeRenderingData(data, nodeType).pipe(map(convertedData => ({ ...convertedData, nodeType })));\n        }));\n    }\n    _renderDataChanges(data) {\n        if (data.nodeType === null) {\n            this.renderNodeChanges(data.renderNodes);\n            return;\n        }\n        // If we're here, then we know what our node type is, and therefore can\n        // perform our usual rendering pipeline.\n        this._updateCachedData(data.flattenedNodes);\n        this.renderNodeChanges(data.renderNodes);\n        this._updateKeyManagerItems(data.flattenedNodes);\n    }\n    _emitExpansionChanges(expansionChanges) {\n        if (!expansionChanges) {\n            return;\n        }\n        const nodes = this._nodes.value;\n        for (const added of expansionChanges.added) {\n            const node = nodes.get(added);\n            node?._emitExpansionState(true);\n        }\n        for (const removed of expansionChanges.removed) {\n            const node = nodes.get(removed);\n            node?._emitExpansionState(false);\n        }\n    }\n    _initializeKeyManager() {\n        const items = combineLatest([this._keyManagerNodes, this._nodes]).pipe(map(([keyManagerNodes, renderNodes]) => keyManagerNodes.reduce((items, data) => {\n            const node = renderNodes.get(this._getExpansionKey(data));\n            if (node) {\n                items.push(node);\n            }\n            return items;\n        }, [])));\n        const keyManagerOptions = {\n            trackBy: node => this._getExpansionKey(node.data),\n            skipPredicate: node => !!node.isDisabled,\n            typeAheadDebounceInterval: true,\n            horizontalOrientation: this._dir.value,\n        };\n        this._keyManager = this._keyManagerFactory(items, keyManagerOptions);\n    }\n    _initializeDataDiffer() {\n        // Provide a default trackBy based on `_getExpansionKey` if one isn't provided.\n        const trackBy = this.trackBy ?? ((_index, item) => this._getExpansionKey(item));\n        this._dataDiffer = this._differs.find([]).create(trackBy);\n    }\n    _checkTreeControlUsage() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Verify that Tree follows API contract of using one of TreeControl, levelAccessor or\n            // childrenAccessor. Throw an appropriate error if contract is not met.\n            let numTreeControls = 0;\n            if (this.treeControl) {\n                numTreeControls++;\n            }\n            if (this.levelAccessor) {\n                numTreeControls++;\n            }\n            if (this.childrenAccessor) {\n                numTreeControls++;\n            }\n            if (!numTreeControls) {\n                throw getTreeControlMissingError();\n            }\n            else if (numTreeControls > 1) {\n                throw getMultipleTreeControlsError();\n            }\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        // Some tree consumers expect change detection to propagate to nodes\n        // even when the array itself hasn't changed; we explicitly detect changes\n        // anyways in order for nodes to update their data.\n        //\n        // However, if change detection is called while the component's view is\n        // still initing, then the order of child views initing will be incorrect;\n        // to prevent this, we only exit early if the view hasn't initialized yet.\n        if (!changes && !this._viewInit) {\n            return;\n        }\n        changes?.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        // If the data itself changes, but keeps the same trackBy, we need to update the templates'\n        // context to reflect the new object.\n        changes?.forEachIdentityChange((record) => {\n            const newData = record.item;\n            if (record.currentIndex != undefined) {\n                const view = viewContainer.get(record.currentIndex);\n                view.context.$implicit = newData;\n            }\n        });\n        // Note: we only `detectChanges` from a top-level call, otherwise we risk overflowing\n        // the call stack since this method is called recursively (see #29733.)\n        // TODO: change to `this._changeDetectorRef.markForCheck()`,\n        // or just switch this component to use signals.\n        if (parentData) {\n            this._changeDetectorRef.markForCheck();\n        }\n        else {\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const levelAccessor = this._getLevelAccessor();\n        const node = this._getNodeDef(nodeData, index);\n        const key = this._getExpansionKey(nodeData);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        parentData ??= this._parents.get(key) ?? undefined;\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (levelAccessor) {\n            context.level = levelAccessor(nodeData);\n        }\n        else if (parentData !== undefined && this._levels.has(this._getExpansionKey(parentData))) {\n            context.level = this._levels.get(this._getExpansionKey(parentData)) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(key, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n    /** Whether the data node is expanded or collapsed. Returns true if it's expanded. */\n    isExpanded(dataNode) {\n        return !!(this.treeControl?.isExpanded(dataNode) ||\n            this._expansionModel?.isSelected(this._getExpansionKey(dataNode)));\n    }\n    /** If the data node is currently expanded, collapse it. Otherwise, expand it. */\n    toggle(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.toggle(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.toggle(this._getExpansionKey(dataNode));\n        }\n    }\n    /** Expand the data node. If it is already expanded, does nothing. */\n    expand(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.expand(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.select(this._getExpansionKey(dataNode));\n        }\n    }\n    /** Collapse the data node. If it is already collapsed, does nothing. */\n    collapse(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.collapse(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.deselect(this._getExpansionKey(dataNode));\n        }\n    }\n    /**\n     * If the data node is currently expanded, collapse it and all its descendants.\n     * Otherwise, expand it and all its descendants.\n     */\n    toggleDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.toggleDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            if (this.isExpanded(dataNode)) {\n                this.collapseDescendants(dataNode);\n            }\n            else {\n                this.expandDescendants(dataNode);\n            }\n        }\n    }\n    /**\n     * Expand the data node and all its descendants. If they are already expanded, does nothing.\n     */\n    expandDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.expandDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.select(this._getExpansionKey(dataNode));\n            this._getDescendants(dataNode)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(children => {\n                expansionModel.select(...children.map(child => this._getExpansionKey(child)));\n            });\n        }\n    }\n    /** Collapse the data node and all its descendants. If it is already collapsed, does nothing. */\n    collapseDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.collapseDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.deselect(this._getExpansionKey(dataNode));\n            this._getDescendants(dataNode)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(children => {\n                expansionModel.deselect(...children.map(child => this._getExpansionKey(child)));\n            });\n        }\n    }\n    /** Expands all data nodes in the tree. */\n    expandAll() {\n        if (this.treeControl) {\n            this.treeControl.expandAll();\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.select(...this._flattenedNodes.value.map(child => this._getExpansionKey(child)));\n        }\n    }\n    /** Collapse all data nodes in the tree. */\n    collapseAll() {\n        if (this.treeControl) {\n            this.treeControl.collapseAll();\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.deselect(...this._flattenedNodes.value.map(child => this._getExpansionKey(child)));\n        }\n    }\n    /** Level accessor, used for compatibility between the old Tree and new Tree */\n    _getLevelAccessor() {\n        return this.treeControl?.getLevel?.bind(this.treeControl) ?? this.levelAccessor;\n    }\n    /** Children accessor, used for compatibility between the old Tree and new Tree */\n    _getChildrenAccessor() {\n        return this.treeControl?.getChildren?.bind(this.treeControl) ?? this.childrenAccessor;\n    }\n    /**\n     * Gets the direct children of a node; used for compatibility between the old tree and the\n     * new tree.\n     */\n    _getDirectChildren(dataNode) {\n        const levelAccessor = this._getLevelAccessor();\n        const expansionModel = this._expansionModel ?? this.treeControl?.expansionModel;\n        if (!expansionModel) {\n            return of([]);\n        }\n        const key = this._getExpansionKey(dataNode);\n        const isExpanded = expansionModel.changed.pipe(switchMap(changes => {\n            if (changes.added.includes(key)) {\n                return of(true);\n            }\n            else if (changes.removed.includes(key)) {\n                return of(false);\n            }\n            return EMPTY;\n        }), startWith(this.isExpanded(dataNode)));\n        if (levelAccessor) {\n            return combineLatest([isExpanded, this._flattenedNodes]).pipe(map(([expanded, flattenedNodes]) => {\n                if (!expanded) {\n                    return [];\n                }\n                return this._findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, 1);\n            }));\n        }\n        const childrenAccessor = this._getChildrenAccessor();\n        if (childrenAccessor) {\n            return coerceObservable(childrenAccessor(dataNode) ?? []);\n        }\n        throw getTreeControlMissingError();\n    }\n    /**\n     * Given the list of flattened nodes, the level accessor, and the level range within\n     * which to consider children, finds the children for a given node.\n     *\n     * For example, for direct children, `levelDelta` would be 1. For all descendants,\n     * `levelDelta` would be Infinity.\n     */\n    _findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, levelDelta) {\n        const key = this._getExpansionKey(dataNode);\n        const startIndex = flattenedNodes.findIndex(node => this._getExpansionKey(node) === key);\n        const dataNodeLevel = levelAccessor(dataNode);\n        const expectedLevel = dataNodeLevel + levelDelta;\n        const results = [];\n        // Goes through flattened tree nodes in the `flattenedNodes` array, and get all\n        // descendants within a certain level range.\n        //\n        // If we reach a node whose level is equal to or less than the level of the tree node,\n        // we hit a sibling or parent's sibling, and should stop.\n        for (let i = startIndex + 1; i < flattenedNodes.length; i++) {\n            const currentLevel = levelAccessor(flattenedNodes[i]);\n            if (currentLevel <= dataNodeLevel) {\n                break;\n            }\n            if (currentLevel <= expectedLevel) {\n                results.push(flattenedNodes[i]);\n            }\n        }\n        return results;\n    }\n    /**\n     * Adds the specified node component to the tree's internal registry.\n     *\n     * This primarily facilitates keyboard navigation.\n     */\n    _registerNode(node) {\n        this._nodes.value.set(this._getExpansionKey(node.data), node);\n        this._nodes.next(this._nodes.value);\n    }\n    /** Removes the specified node component from the tree's internal registry. */\n    _unregisterNode(node) {\n        this._nodes.value.delete(this._getExpansionKey(node.data));\n        this._nodes.next(this._nodes.value);\n    }\n    /**\n     * For the given node, determine the level where this node appears in the tree.\n     *\n     * This is intended to be used for `aria-level` but is 0-indexed.\n     */\n    _getLevel(node) {\n        return this._levels.get(this._getExpansionKey(node));\n    }\n    /**\n     * For the given node, determine the size of the parent's child set.\n     *\n     * This is intended to be used for `aria-setsize`.\n     */\n    _getSetSize(dataNode) {\n        const set = this._getAriaSet(dataNode);\n        return set.length;\n    }\n    /**\n     * For the given node, determine the index (starting from 1) of the node in its parent's child set.\n     *\n     * This is intended to be used for `aria-posinset`.\n     */\n    _getPositionInSet(dataNode) {\n        const set = this._getAriaSet(dataNode);\n        const key = this._getExpansionKey(dataNode);\n        return set.findIndex(node => this._getExpansionKey(node) === key) + 1;\n    }\n    /** Given a CdkTreeNode, gets the node that renders that node's parent's data. */\n    _getNodeParent(node) {\n        const parent = this._parents.get(this._getExpansionKey(node.data));\n        return parent && this._nodes.value.get(this._getExpansionKey(parent));\n    }\n    /** Given a CdkTreeNode, gets the nodes that renders that node's child data. */\n    _getNodeChildren(node) {\n        return this._getDirectChildren(node.data).pipe(map(children => children.reduce((nodes, child) => {\n            const value = this._nodes.value.get(this._getExpansionKey(child));\n            if (value) {\n                nodes.push(value);\n            }\n            return nodes;\n        }, [])));\n    }\n    /** `keydown` event handler; this just passes the event to the `TreeKeyManager`. */\n    _sendKeydownToKeyManager(event) {\n        this._keyManager.onKeydown(event);\n    }\n    /** Gets all nested descendants of a given node. */\n    _getDescendants(dataNode) {\n        if (this.treeControl) {\n            return of(this.treeControl.getDescendants(dataNode));\n        }\n        if (this.levelAccessor) {\n            const results = this._findChildrenByLevel(this.levelAccessor, this._flattenedNodes.value, dataNode, Infinity);\n            return of(results);\n        }\n        if (this.childrenAccessor) {\n            return this._getAllChildrenRecursively(dataNode).pipe(reduce((allChildren, nextChildren) => {\n                allChildren.push(...nextChildren);\n                return allChildren;\n            }, []));\n        }\n        throw getTreeControlMissingError();\n    }\n    /**\n     * Gets all children and sub-children of the provided node.\n     *\n     * This will emit multiple times, in the order that the children will appear\n     * in the tree, and can be combined with a `reduce` operator.\n     */\n    _getAllChildrenRecursively(dataNode) {\n        if (!this.childrenAccessor) {\n            return of([]);\n        }\n        return coerceObservable(this.childrenAccessor(dataNode)).pipe(take(1), switchMap(children => {\n            // Here, we cache the parents of a particular child so that we can compute the levels.\n            for (const child of children) {\n                this._parents.set(this._getExpansionKey(child), dataNode);\n            }\n            return of(...children).pipe(concatMap(child => concat(of([child]), this._getAllChildrenRecursively(child))));\n        }));\n    }\n    _getExpansionKey(dataNode) {\n        // In the case that a key accessor function was not provided by the\n        // tree user, we'll default to using the node object itself as the key.\n        //\n        // This cast is safe since:\n        // - if an expansionKey is provided, TS will infer the type of K to be\n        //   the return type.\n        // - if it's not, then K will be defaulted to T.\n        return this.expansionKey?.(dataNode) ?? dataNode;\n    }\n    _getAriaSet(node) {\n        const key = this._getExpansionKey(node);\n        const parent = this._parents.get(key);\n        const parentKey = parent ? this._getExpansionKey(parent) : null;\n        const set = this._ariaSets.get(parentKey);\n        return set ?? [node];\n    }\n    /**\n     * Finds the parent for the given node. If this is a root node, this\n     * returns null. If we're unable to determine the parent, for example,\n     * if we don't have cached node data, this returns undefined.\n     */\n    _findParentForNode(node, index, cachedNodes) {\n        // In all cases, we have a mapping from node to level; all we need to do here is backtrack in\n        // our flattened list of nodes to determine the first node that's of a level lower than the\n        // provided node.\n        if (!cachedNodes.length) {\n            return null;\n        }\n        const currentLevel = this._levels.get(this._getExpansionKey(node)) ?? 0;\n        for (let parentIndex = index - 1; parentIndex >= 0; parentIndex--) {\n            const parentNode = cachedNodes[parentIndex];\n            const parentLevel = this._levels.get(this._getExpansionKey(parentNode)) ?? 0;\n            if (parentLevel < currentLevel) {\n                return parentNode;\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a set of root nodes and the current node level, flattens any nested\n     * nodes into a single array.\n     *\n     * If any nodes are not expanded, then their children will not be added into the array.\n     * This will still traverse all nested children in order to build up our internal data\n     * models, but will not include them in the returned array.\n     */\n    _flattenNestedNodesWithExpansion(nodes, level = 0) {\n        const childrenAccessor = this._getChildrenAccessor();\n        // If we're using a level accessor, we don't need to flatten anything.\n        if (!childrenAccessor) {\n            return of([...nodes]);\n        }\n        return of(...nodes).pipe(concatMap(node => {\n            const parentKey = this._getExpansionKey(node);\n            if (!this._parents.has(parentKey)) {\n                this._parents.set(parentKey, null);\n            }\n            this._levels.set(parentKey, level);\n            const children = coerceObservable(childrenAccessor(node));\n            return concat(of([node]), children.pipe(take(1), tap(childNodes => {\n                this._ariaSets.set(parentKey, [...(childNodes ?? [])]);\n                for (const child of childNodes ?? []) {\n                    const childKey = this._getExpansionKey(child);\n                    this._parents.set(childKey, node);\n                    this._levels.set(childKey, level + 1);\n                }\n            }), switchMap(childNodes => {\n                if (!childNodes) {\n                    return of([]);\n                }\n                return this._flattenNestedNodesWithExpansion(childNodes, level + 1).pipe(map(nestedNodes => (this.isExpanded(node) ? nestedNodes : [])));\n            })));\n        }), reduce((results, children) => {\n            results.push(...children);\n            return results;\n        }, []));\n    }\n    /**\n     * Converts children for certain tree configurations.\n     *\n     * This also computes parent, level, and group data.\n     */\n    _computeRenderingData(nodes, nodeType) {\n        // The only situations where we have to convert children types is when\n        // they're mismatched; i.e. if the tree is using a childrenAccessor and the\n        // nodes are flat, or if the tree is using a levelAccessor and the nodes are\n        // nested.\n        if (this.childrenAccessor && nodeType === 'flat') {\n            // This flattens children into a single array.\n            this._ariaSets.set(null, [...nodes]);\n            return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n                renderNodes: flattenedNodes,\n                flattenedNodes,\n            })));\n        }\n        else if (this.levelAccessor && nodeType === 'nested') {\n            // In the nested case, we only look for root nodes. The CdkNestedNode\n            // itself will handle rendering each individual node's children.\n            const levelAccessor = this.levelAccessor;\n            return of(nodes.filter(node => levelAccessor(node) === 0)).pipe(map(rootNodes => ({\n                renderNodes: rootNodes,\n                flattenedNodes: nodes,\n            })), tap(({ flattenedNodes }) => {\n                this._calculateParents(flattenedNodes);\n            }));\n        }\n        else if (nodeType === 'flat') {\n            // In the case of a TreeControl, we know that the node type matches up\n            // with the TreeControl, and so no conversions are necessary. Otherwise,\n            // we've already confirmed that the data model matches up with the\n            // desired node type here.\n            return of({ renderNodes: nodes, flattenedNodes: nodes }).pipe(tap(({ flattenedNodes }) => {\n                this._calculateParents(flattenedNodes);\n            }));\n        }\n        else {\n            // For nested nodes, we still need to perform the node flattening in order\n            // to maintain our caches for various tree operations.\n            this._ariaSets.set(null, [...nodes]);\n            return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n                renderNodes: nodes,\n                flattenedNodes,\n            })));\n        }\n    }\n    _updateCachedData(flattenedNodes) {\n        this._flattenedNodes.next(flattenedNodes);\n    }\n    _updateKeyManagerItems(flattenedNodes) {\n        this._keyManagerNodes.next(flattenedNodes);\n    }\n    /** Traverse the flattened node data and compute parents, levels, and group data. */\n    _calculateParents(flattenedNodes) {\n        const levelAccessor = this._getLevelAccessor();\n        if (!levelAccessor) {\n            return;\n        }\n        this._parents.clear();\n        this._ariaSets.clear();\n        for (let index = 0; index < flattenedNodes.length; index++) {\n            const dataNode = flattenedNodes[index];\n            const key = this._getExpansionKey(dataNode);\n            this._levels.set(key, levelAccessor(dataNode));\n            const parent = this._findParentForNode(dataNode, index, flattenedNodes);\n            this._parents.set(key, parent);\n            const parentKey = parent ? this._getExpansionKey(parent) : null;\n            const group = this._ariaSets.get(parentKey) ?? [];\n            group.splice(index, 0, dataNode);\n            this._ariaSets.set(parentKey, group);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTree, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTree, isStandalone: true, selector: \"cdk-tree\", inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", levelAccessor: \"levelAccessor\", childrenAccessor: \"childrenAccessor\", trackBy: \"trackBy\", expansionKey: \"expansionKey\" }, host: { attributes: { \"role\": \"tree\" }, listeners: { \"keydown\": \"_sendKeydownToKeyManager($event)\" }, classAttribute: \"cdk-tree\" }, queries: [{ propertyName: \"_nodeDefs\", predicate: CdkTreeNodeDef, descendants: true }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: CdkTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"cdkTree\"], ngImport: i0, template: `<ng-container cdkTreeNodeOutlet></ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTree, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-tree',\n                    exportAs: 'cdkTree',\n                    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                    host: {\n                        'class': 'cdk-tree',\n                        'role': 'tree',\n                        '(keydown)': '_sendKeydownToKeyManager($event)',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                    // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    standalone: true,\n                    imports: [CdkTreeNodeOutlet],\n                }]\n        }], ctorParameters: () => [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }], propDecorators: { dataSource: [{\n                type: Input\n            }], treeControl: [{\n                type: Input\n            }], levelAccessor: [{\n                type: Input\n            }], childrenAccessor: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], expansionKey: [{\n                type: Input\n            }], _nodeOutlet: [{\n                type: ViewChild,\n                args: [CdkTreeNodeOutlet, { static: true }]\n            }], _nodeDefs: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeDef, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    /**\n     * The role of the tree node.\n     *\n     * @deprecated This will be ignored; the tree will automatically determine the appropriate role\n     * for tree node. This input will be removed in a future version.\n     * @breaking-change 21.0.0\n     */\n    get role() {\n        return 'treeitem';\n    }\n    set role(_role) {\n        // ignore any role setting, we handle this internally.\n    }\n    /**\n     * Whether or not this node is expandable.\n     *\n     * If not using `FlatTreeControl`, or if `isExpandable` is not provided to\n     * `NestedTreeControl`, this should be provided for correct node a11y.\n     */\n    get isExpandable() {\n        return this._isExpandable();\n    }\n    set isExpandable(isExpandable) {\n        this._inputIsExpandable = isExpandable;\n        if ((this.data && !this._isExpandable) || !this._inputIsExpandable) {\n            return;\n        }\n        // If the node is being set to expandable, ensure that the status of the\n        // node is propagated\n        if (this._inputIsExpanded) {\n            this.expand();\n        }\n        else if (this._inputIsExpanded === false) {\n            this.collapse();\n        }\n    }\n    get isExpanded() {\n        return this._tree.isExpanded(this._data);\n    }\n    set isExpanded(isExpanded) {\n        this._inputIsExpanded = isExpanded;\n        if (isExpanded) {\n            this.expand();\n        }\n        else {\n            this.collapse();\n        }\n    }\n    getLabel() {\n        return this.typeaheadLabel || this._elementRef.nativeElement.textContent?.trim() || '';\n    }\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     */\n    static { this.mostRecentTreeNode = null; }\n    /** The tree node's data. */\n    get data() {\n        return this._data;\n    }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._dataChanges.next();\n        }\n    }\n    /* If leaf node, return true to not assign aria-expanded attribute */\n    get isLeafNode() {\n        // If flat tree node data returns false for expandable property, it's a leaf node\n        if (this._tree.treeControl?.isExpandable !== undefined &&\n            !this._tree.treeControl.isExpandable(this._data)) {\n            return true;\n            // If nested tree node data returns 0 descendants, it's a leaf node\n        }\n        else if (this._tree.treeControl?.isExpandable === undefined &&\n            this._tree.treeControl?.getDescendants(this._data).length === 0) {\n            return true;\n        }\n        return false;\n    }\n    get level() {\n        // If the tree has a levelAccessor, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree._getLevel(this._data) ?? this._parentNodeAriaLevel;\n    }\n    /** Determines if the tree node is expandable. */\n    _isExpandable() {\n        if (this._tree.treeControl) {\n            if (this.isLeafNode) {\n                return false;\n            }\n            // For compatibility with trees created using TreeControl before we added\n            // CdkTreeNode#isExpandable.\n            return true;\n        }\n        return this._inputIsExpandable;\n    }\n    /**\n     * Determines the value for `aria-expanded`.\n     *\n     * For non-expandable nodes, this is `null`.\n     */\n    _getAriaExpanded() {\n        if (!this._isExpandable()) {\n            return null;\n        }\n        return String(this.isExpanded);\n    }\n    /**\n     * Determines the size of this node's parent's child set.\n     *\n     * This is intended to be used for `aria-setsize`.\n     */\n    _getSetSize() {\n        return this._tree._getSetSize(this._data);\n    }\n    /**\n     * Determines the index (starting from 1) of this node in its parent's child set.\n     *\n     * This is intended to be used for `aria-posinset`.\n     */\n    _getPositionInSet() {\n        return this._tree._getPositionInSet(this._data);\n    }\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._tabindex = -1;\n        /** This emits when the node has been programatically activated or activated by keyboard. */\n        this.activation = new EventEmitter();\n        /** This emits when the node's expansion status has been changed. */\n        this.expandedChange = new EventEmitter();\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Emits when the node's data has changed. */\n        this._dataChanges = new Subject();\n        this._inputIsExpandable = false;\n        this._inputIsExpanded = undefined;\n        /**\n         * Flag used to determine whether or not we should be focusing the actual element based on\n         * some user interaction (click or focus). On click, we don't forcibly focus the element\n         * since the click could trigger some other component that wants to grab its own focus\n         * (e.g. menu, dialog).\n         */\n        this._shouldFocus = true;\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._tree\n            ._getExpansionModel()\n            .changed.pipe(map(() => this.isExpanded), distinctUntilChanged())\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n        this._tree._setNodeTypeIfUnset('flat');\n        this._tree._registerNode(this);\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    getParent() {\n        return this._tree._getNodeParent(this) ?? null;\n    }\n    getChildren() {\n        return this._tree._getNodeChildren(this);\n    }\n    /** Focuses this data node. Implemented for TreeKeyManagerItem. */\n    focus() {\n        this._tabindex = 0;\n        if (this._shouldFocus) {\n            this._elementRef.nativeElement.focus();\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Defocus this data node. */\n    unfocus() {\n        this._tabindex = -1;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an activation event. Implemented for TreeKeyManagerItem. */\n    activate() {\n        if (this.isDisabled) {\n            return;\n        }\n        this.activation.next(this._data);\n    }\n    /** Collapses this data node. Implemented for TreeKeyManagerItem. */\n    collapse() {\n        if (this.isExpandable) {\n            this._tree.collapse(this._data);\n        }\n    }\n    /** Expands this data node. Implemented for TreeKeyManagerItem. */\n    expand() {\n        if (this.isExpandable) {\n            this._tree.expand(this._data);\n        }\n    }\n    /** Makes the node focusable. Implemented for TreeKeyManagerItem. */\n    makeFocusable() {\n        this._tabindex = 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    _focusItem() {\n        if (this.isDisabled) {\n            return;\n        }\n        this._tree._keyManager.focusItem(this);\n    }\n    _setActiveItem() {\n        if (this.isDisabled) {\n            return;\n        }\n        this._shouldFocus = false;\n        this._tree._keyManager.focusItem(this);\n        this._shouldFocus = true;\n    }\n    _emitExpansionState(expanded) {\n        this.expandedChange.emit(expanded);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkTreeNode, isStandalone: true, selector: \"cdk-tree-node\", inputs: { role: \"role\", isExpandable: [\"isExpandable\", \"isExpandable\", booleanAttribute], isExpanded: \"isExpanded\", isDisabled: [\"isDisabled\", \"isDisabled\", booleanAttribute], typeaheadLabel: [\"cdkTreeNodeTypeaheadLabel\", \"typeaheadLabel\"] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { attributes: { \"role\": \"treeitem\" }, listeners: { \"click\": \"_setActiveItem()\", \"focus\": \"_focusItem()\" }, properties: { \"attr.aria-expanded\": \"_getAriaExpanded()\", \"attr.aria-level\": \"level + 1\", \"attr.aria-posinset\": \"_getPositionInSet()\", \"attr.aria-setsize\": \"_getSetSize()\", \"tabindex\": \"_tabindex\" }, classAttribute: \"cdk-tree-node\" }, exportAs: [\"cdkTreeNode\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-tree-node',\n                    exportAs: 'cdkTreeNode',\n                    host: {\n                        'class': 'cdk-tree-node',\n                        '[attr.aria-expanded]': '_getAriaExpanded()',\n                        '[attr.aria-level]': 'level + 1',\n                        '[attr.aria-posinset]': '_getPositionInSet()',\n                        '[attr.aria-setsize]': '_getSetSize()',\n                        '[tabindex]': '_tabindex',\n                        'role': 'treeitem',\n                        '(click)': '_setActiveItem()',\n                        '(focus)': '_focusItem()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: CdkTree }], propDecorators: { role: [{\n                type: Input\n            }], isExpandable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], isExpanded: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], typeaheadLabel: [{\n                type: Input,\n                args: ['cdkTreeNodeTypeaheadLabel']\n            }], activation: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }] } });\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return numberAttribute(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!(classList?.contains('cdk-nested-tree-node') || classList?.contains('cdk-tree'));\n}\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    constructor(elementRef, tree, _differs) {\n        super(elementRef, tree);\n        this._differs = _differs;\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        this._tree\n            ._getDirectChildren(this.data)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(result => this.updateChildrenNodes(result));\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        this._tree._setNodeTypeIfUnset('nested');\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: CdkTree }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkNestedTreeNode, isStandalone: true, selector: \"cdk-nested-tree-node\", host: { classAttribute: \"cdk-nested-tree-node\" }, providers: [\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n        ], queries: [{ propertyName: \"nodeOutlet\", predicate: CdkTreeNodeOutlet, descendants: true }], exportAs: [\"cdkNestedTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-nested-tree-node',\n                    exportAs: 'cdkNestedTreeNode',\n                    providers: [\n                        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'cdk-nested-tree-node',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: CdkTree }, { type: i0.IterableDiffers }], propDecorators: { nodeOutlet: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeOutlet, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    constructor(_treeNode, _tree, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._element = _element;\n        this._dir = _dir;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** CSS units used for the indentation value. */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree._getLevel(this._treeNode.data)) ?? null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = isNaN(value) ? null : value;\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = numberAttribute(value);\n        this._setPadding();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodePadding, deps: [{ token: CdkTreeNode }, { token: CdkTree }, { token: i0.ElementRef }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkTreeNodePadding, isStandalone: true, selector: \"[cdkTreeNodePadding]\", inputs: { level: [\"cdkTreeNodePadding\", \"level\", numberAttribute], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodePadding]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkTreeNode }, { type: CdkTree }, { type: i0.ElementRef }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { level: [{\n                type: Input,\n                args: [{ alias: 'cdkTreeNodePadding', transform: numberAttribute }]\n            }], indent: [{\n                type: Input,\n                args: ['cdkTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Node toggle to expand and collapse the node.\n */\nclass CdkTreeNodeToggle {\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        /** Whether expand/collapse the node recursively. */\n        this.recursive = false;\n    }\n    // Toggle the expanded or collapsed state of this node.\n    //\n    // Focus this node with expanding or collapsing it. This ensures that the active node will always\n    // be visible when expanding and collapsing.\n    _toggle() {\n        this.recursive\n            ? this._tree.toggleDescendants(this._treeNode.data)\n            : this._tree.toggle(this._treeNode.data);\n        this._tree._keyManager.focusItem(this._treeNode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeToggle, deps: [{ token: CdkTree }, { token: CdkTreeNode }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkTreeNodeToggle, isStandalone: true, selector: \"[cdkTreeNodeToggle]\", inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\", booleanAttribute] }, host: { attributes: { \"tabindex\": \"-1\" }, listeners: { \"click\": \"_toggle(); $event.stopPropagation();\", \"keydown.Enter\": \"_toggle(); $event.preventDefault();\", \"keydown.Space\": \"_toggle(); $event.preventDefault();\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeToggle]',\n                    host: {\n                        '(click)': '_toggle(); $event.stopPropagation();',\n                        '(keydown.Enter)': '_toggle(); $event.preventDefault();',\n                        '(keydown.Space)': '_toggle(); $event.preventDefault();',\n                        'tabindex': '-1',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkTree }, { type: CdkTreeNode }], propDecorators: { recursive: [{\n                type: Input,\n                args: [{ alias: 'cdkTreeNodeToggleRecursive', transform: booleanAttribute }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule, imports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: EXPORTED_DECLARATIONS,\n                    exports: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getMultipleTreeControlsError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n","import * as i1 from '@angular/cdk/tree';\nimport { CdkTreeNode, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTree, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport * as i0 from '@angular/core';\nimport { numberAttribute, booleanAttribute, Directive, Attribute, Input, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * Determinte if argument TreeKeyManager is the NoopTreeKeyManager. This function is safe to use with SSR.\n */\nfunction isNoopTreeKeyManager(keyManager) {\n    return !!keyManager._isNoopTreeKeyManager;\n}\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends CdkTreeNode {\n    /**\n     * The tabindex of the tree node.\n     *\n     * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n     *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n     *   an unexpected state. Tabindex to be removed in a future version.\n     * @breaking-change 21.0.0 Remove this attribute.\n     */\n    get tabIndexInputBinding() {\n        return this._tabIndexInputBinding;\n    }\n    set tabIndexInputBinding(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndexInputBinding = value;\n    }\n    _getTabindexAttribute() {\n        if (isNoopTreeKeyManager(this._tree._keyManager)) {\n            return this.tabIndexInputBinding;\n        }\n        return this._tabindex;\n    }\n    /**\n     * Whether the component is disabled.\n     *\n     * @deprecated This is an alias for `isDisabled`.\n     * @breaking-change 21.0.0 Remove this input\n     */\n    get disabled() {\n        return this.isDisabled;\n    }\n    set disabled(value) {\n        this.isDisabled = value;\n    }\n    constructor(elementRef, tree, \n    /**\n     * The tabindex of the tree node.\n     *\n     * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n     *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n     *   an unexpected state. Tabindex to be removed in a future version.\n     * @breaking-change 21.0.0 Remove this attribute.\n     */\n    tabIndex) {\n        super(elementRef, tree);\n        /**\n         * The default tabindex of the tree node.\n         *\n         * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n         *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n         *   an unexpected state. Tabindex to be removed in a future version.\n         * @breaking-change 21.0.0 Remove this attribute.\n         */\n        this.defaultTabIndex = 0;\n        this.tabIndexInputBinding = Number(tabIndex) || this.defaultTabIndex;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatTreeNode, isStandalone: true, selector: \"mat-tree-node\", inputs: { tabIndexInputBinding: [\"tabIndex\", \"tabIndexInputBinding\", (value) => (value == null ? 0 : numberAttribute(value))], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { listeners: { \"click\": \"_focusItem()\" }, properties: { \"attr.aria-expanded\": \"_getAriaExpanded()\", \"attr.aria-level\": \"level + 1\", \"attr.aria-posinset\": \"_getPositionInSet()\", \"attr.aria-setsize\": \"_getSetSize()\", \"tabindex\": \"_getTabindexAttribute()\" }, classAttribute: \"mat-tree-node\" }, providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }], exportAs: [\"matTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-tree-node',\n                    exportAs: 'matTreeNode',\n                    outputs: ['activation', 'expandedChange'],\n                    providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }],\n                    host: {\n                        'class': 'mat-tree-node',\n                        '[attr.aria-expanded]': '_getAriaExpanded()',\n                        '[attr.aria-level]': 'level + 1',\n                        '[attr.aria-posinset]': '_getPositionInSet()',\n                        '[attr.aria-setsize]': '_getSetSize()',\n                        '(click)': '_focusItem()',\n                        '[tabindex]': '_getTabindexAttribute()',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { tabIndexInputBinding: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                        alias: 'tabIndex',\n                    }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTreeNodeDef, isStandalone: true, selector: \"[matTreeNodeDef]\", inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeDef]',\n                    inputs: [{ name: 'when', alias: 'matTreeNodeDefWhen' }],\n                    providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }],\n                    standalone: true,\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['matTreeNode']\n            }] } });\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    /**\n     * Whether the node is disabled.\n     *\n     * @deprecated This is an alias for `isDisabled`.\n     * @breaking-change 21.0.0 Remove this input\n     */\n    get disabled() {\n        return this.isDisabled;\n    }\n    set disabled(value) {\n        this.isDisabled = value;\n    }\n    /** Tabindex of the node. */\n    get tabIndex() {\n        return this.isDisabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value;\n    }\n    constructor(elementRef, tree, differs, \n    // Ignore tabindex attribute. MatTree manages its own active state using TreeKeyManager.\n    // Keeping tabIndex in constructor for backwards compatibility with trees created before\n    // introducing TreeKeyManager.\n    tabIndex) {\n        super(elementRef, tree, differs);\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/19145\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #19145 is fixed\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNestedTreeNode, deps: [{ token: i0.ElementRef }, { token: i1.CdkTree }, { token: i0.IterableDiffers }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatNestedTreeNode, isStandalone: true, selector: \"mat-nested-tree-node\", inputs: { node: [\"matNestedTreeNode\", \"node\"], disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { classAttribute: \"mat-nested-tree-node\" }, providers: [\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n        ], exportAs: [\"matNestedTreeNode\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-nested-tree-node',\n                    exportAs: 'matNestedTreeNode',\n                    outputs: ['activation', 'expandedChange'],\n                    providers: [\n                        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'mat-nested-tree-node',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.CdkTree }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { node: [{\n                type: Input,\n                args: ['matNestedTreeNode']\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodePadding, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatTreeNodePadding, isStandalone: true, selector: \"[matTreeNodePadding]\", inputs: { level: [\"matTreeNodePadding\", \"level\", numberAttribute], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodePadding]',\n                    providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }],\n                    standalone: true,\n                }]\n        }], propDecorators: { level: [{\n                type: Input,\n                args: [{ alias: 'matTreeNodePadding', transform: numberAttribute }]\n            }], indent: [{\n                type: Input,\n                args: ['matTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeOutlet, deps: [{ token: i0.ViewContainerRef }, { token: CDK_TREE_NODE_OUTLET_NODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTreeNodeOutlet, isStandalone: true, selector: \"[matTreeNodeOutlet]\", providers: [\n            {\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet,\n            },\n        ], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeOutlet]',\n                    providers: [\n                        {\n                            provide: CdkTreeNodeOutlet,\n                            useExisting: MatTreeNodeOutlet,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TREE_NODE_OUTLET_NODE]\n                }, {\n                    type: Optional\n                }] }] });\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n    constructor() {\n        super(...arguments);\n        // Outlets within the tree's template where the dataNodes will be inserted.\n        // We need an initializer here to avoid a TS error. The value will be set in `ngAfterViewInit`.\n        this._nodeOutlet = undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTree, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTree, isStandalone: true, selector: \"mat-tree\", host: { classAttribute: \"mat-tree\" }, providers: [{ provide: CdkTree, useExisting: MatTree }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: MatTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"matTree\"], usesInheritance: true, ngImport: i0, template: `<ng-container matTreeNodeOutlet></ng-container>`, isInline: true, styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-app-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-app-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-app-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-app-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height)}.mat-nested-tree-node{border-bottom-width:0}\"], dependencies: [{ kind: \"directive\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTree, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tree', exportAs: 'matTree', template: `<ng-container matTreeNodeOutlet></ng-container>`, host: {\n                        'class': 'mat-tree',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [{ provide: CdkTree, useExisting: MatTree }], standalone: true, imports: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-app-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-app-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-app-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-app-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height)}.mat-nested-tree-node{border-bottom-width:0}\"] }]\n        }], propDecorators: { _nodeOutlet: [{\n                type: ViewChild,\n                args: [MatTreeNodeOutlet, { static: true }]\n            }] } });\n\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTreeNodeToggle, isStandalone: true, selector: \"[matTreeNodeToggle]\", inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeToggle]',\n                    providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }],\n                    inputs: [{ name: 'recursive', alias: 'matTreeNodeToggleRecursive' }],\n                    standalone: true,\n                }]\n        }] });\n\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet,\n];\nclass MatTreeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatNestedTreeNode,\n            MatTreeNodeDef,\n            MatTreeNodePadding,\n            MatTreeNodeToggle,\n            MatTree,\n            MatTreeNode,\n            MatTreeNodeOutlet], exports: [MatCommonModule, MatNestedTreeNode,\n            MatTreeNodeDef,\n            MatTreeNodePadding,\n            MatTreeNodeToggle,\n            MatTree,\n            MatTreeNode,\n            MatTreeNodeOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTreeModule, MatCommonModule, ...MAT_TREE_DIRECTIVES],\n                    exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                }]\n        }] });\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n *\n * @deprecated Use MatTree#childrenAccessor and MatTreeNode#isExpandable\n * instead. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlattener {\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlatDataSource extends DataSource {\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    constructor(_treeControl, _treeFlattener, initialData) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject([]);\n        if (initialData) {\n            // Assign the data through the constructor to ensure that all of the logic is executed.\n            this.data = initialData;\n        }\n    }\n    connect(collectionViewer) {\n        return merge(collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n    }\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data]).pipe(map(() => this.data));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n","<div class=\"filter-title-wrapper\">\n  <h3 class=\"title mat-title-large\" i18n=\"@@FilterExercises.title\">Filters</h3>\n  <button\n    (click)=\"toggleDrawer()\"\n    mat-icon-button\n    aria-label=\"Icon button with a close icon\"\n  >\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n<div class=\"chips-selection-wrapper\">\n  <mat-chip-set aria-label=\"Category selection\">\n    @for (\n      category of addRemoveDataService.dataSignal();\n      track category.name;\n      let i = $index\n    ) {\n      @for (localeName of category.localeNames; track localeName) {\n        <mat-chip\n          >{{ localeName }}\n          <button matChipRemove (click)=\"chipRemoveNode(localeName)\">\n            <mat-icon>cancel</mat-icon>\n          </button></mat-chip\n        >\n      }\n    }\n  </mat-chip-set>\n  <mat-chip\n    class=\"clear-filter\"\n    (click)=\"resetAll()\"\n    i18n=\"@@FilterExercises.clearAllChip\"\n    >Clear all</mat-chip\n  >\n</div>\n<div class=\"category-data\">\n  <mat-tree\n    class=\"custom-mat-tree\"\n    [dataSource]=\"dataSource\"\n    [treeControl]=\"treeControl\"\n  >\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n      <!-- use a disabled button to provide padding for tree leaf -->\n      <!-- <button mat-icon-button disabled></button> -->\n\n      <mat-checkbox\n        color=\"primary\"\n        [(ngModel)]=\"node.isChecked\"\n        (change)=\"onCheckboxChange(node)\"\n      >\n        {{ node.localeName }}\n      </mat-checkbox>\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node\n      *matTreeNodeDef=\"let node; when: hasChild\"\n      matTreeNodePadding\n    >\n      <button\n        mat-icon-button\n        matTreeNodeToggle\n        [attr.aria-label]=\"'Toggle ' + node.name\"\n      >\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n        </mat-icon>\n      </button>\n      {{ node.name }}\n    </mat-tree-node>\n  </mat-tree>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n  inject,\n  signal,\n} from '@angular/core';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport {\n  AddRemoveDataService,\n  BodyArea,\n  BodyAreasService,\n  Equipment,\n  EquipmentService,\n  Movement,\n  MovementsService,\n  ShareDataService,\n  ShareStateService,\n  StartingPosition,\n  StartingPositionsService,\n} from '@slowautomobile/exercises';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport {\n  MatTreeFlatDataSource,\n  MatTreeFlattener,\n  MatTree,\n  MatTreeNodeDef,\n  MatTreeNode,\n  MatTreeNodePadding,\n  MatTreeNodeToggle,\n} from '@angular/material/tree';\nimport { Observable, Subscription, filter, forkJoin, of, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, FormsModule } from '@angular/forms';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatChip, MatChipsModule } from '@angular/material/chips';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatIconButton } from '@angular/material/button';\nimport { LocalstorageService } from '@slowautomobile/users';\n\ninterface CategoryNode {\n  name: string;\n  localeName?: string;\n  children?: CategoryNode[];\n  isChecked?: boolean;\n  categoryName?: string;\n  categoryNameLocale?: string;\n  values?: string[];\n  localeNames?: string[];\n}\n\ninterface CategoryFlatNode {\n  expandable: boolean;\n  name: string;\n  // localeName: string;\n  level: number;\n  isChecked: boolean | undefined;\n  categoryName: CategoryNode['categoryName'];\n  // categoryNameLocale: CategoryNode['categoryNameLocale'];\n}\n\ninterface CategoryGroup {\n  name: string;\n  value: string[];\n}\n\n// const TREE_DATA: CategoryNode[] = [\n//   {\n//     name: 'Fruit',\n//     children: [{ name: 'Apple' }, { name: 'Banana' }, { name: 'Fruit loops' }],\n//   },\n//   {\n//     name: 'Vegetables',\n//     children: [\n//       {\n//         name: 'Green',\n//         children: [{ name: 'Broccoli' }, { name: 'Brussels sprouts' }],\n//       },\n//       {\n//         name: 'Orange',\n//         children: [{ name: 'Pumpkins' }, { name: 'Carrots' }],\n//       },\n//     ],\n//   },\n// ];\n\nexport const CATEGORIES = [\n  {\n    categoryName: 'bodyAreas',\n    categoryNameLocale: $localize`:@@SearchFilter.bodyAreas:Body areas`,\n  },\n  {\n    categoryName: 'movements',\n    categoryNameLocale: $localize`:@@SearchFilter.movements:Movements`,\n  },\n  {\n    categoryName: 'startingPositions',\n    categoryNameLocale: $localize`:@@SearchFilter.startingPositions:Starting positions`,\n  },\n  {\n    categoryName: 'equipment',\n    categoryNameLocale: $localize`:@@SearchFilter.equipment:Equipment`,\n  },\n];\n\n@Component({\n  selector: 'ui-search-filter',\n  templateUrl: './search-filter.component.html',\n  styleUrl: './search-filter.component.scss',\n  standalone: true,\n  imports: [\n    MatIconButton,\n    MatIcon,\n    MatChip,\n    MatTree,\n    MatTreeNodeDef,\n    MatTreeNode,\n    MatTreeNodePadding,\n    MatCheckbox,\n    FormsModule,\n    MatTreeNodeToggle,\n    MatChipsModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchFilterComponent implements OnInit, OnDestroy {\n  private bodyAreasService = inject(BodyAreasService);\n  private movementsService = inject(MovementsService);\n  private startingPositionsService = inject(StartingPositionsService);\n  private equipmentService = inject(EquipmentService);\n  public addRemoveDataService = inject(AddRemoveDataService);\n  private localstorageService = inject(LocalstorageService);\n  private shareDataService = inject(ShareDataService);\n  private shareStateService = inject(ShareStateService);\n\n  isFetchingData = this.shareStateService.isFetchingData;\n  bodyAreas!: BodyArea[];\n  movements!: Movement[];\n  startingPositions!: StartingPosition[];\n  equipment!: Equipment[];\n  subscriptions = new Subscription();\n  categoryData!: CategoryNode;\n  // TREE_DATA!: CategoryNode[];\n  @Output() toggleDrawerSignal = new EventEmitter<void>();\n  categoriesData: CategoryNode[] = [];\n  filterData: any[] = [];\n  selectedLanguage!: string;\n\n  ngOnInit(): void {\n    // this._getBodyAreas();\n    // this._getMovements();\n    // this._getStartingPositions();\n    this.selectedLanguage = this._getUserLanguageToken();\n    console.log(this.selectedLanguage);\n\n    // console.log(this.categoriesData, TREE_DATA)\n\n    const observables: Observable<any>[] = [\n      this._getBodyAreas(),\n      this._getMovements(),\n      this._getStartingPositions(),\n      this._getEquipment(),\n    ];\n\n    const subscription = forkJoin(observables).subscribe({\n      next: data => {\n        // console.log(data);\n        data.forEach((category, i) => {\n          const categoryNameLocale = CATEGORIES[i].categoryNameLocale;\n          // console.log(categoryNameLocale);\n          // console.log(category);\n\n          const categoryChildren: any[] = [];\n          category.forEach((nameValue: any) => {\n            // console.log(nameValue);\n            categoryChildren.push({\n              name: nameValue.name,\n              localeName: nameValue.translations[this.selectedLanguage],\n              isChecked: false,\n              categoryName: CATEGORIES[i].categoryName,\n            });\n          });\n          // console.log(categoryChildren);\n\n          this.categoriesData.push({\n            name: categoryNameLocale,\n            children: categoryChildren,\n          });\n        });\n        // console.log(this.categoriesData);\n        // console.log(TREE_DATA);\n        // for(let i = 0; i < 4; i++) {\n        //   this.categoriesData[i].children?.forEach(value => value.isChecked = true)\n        // }\n        // console.log(this.treeControl);\n        this.dataSource.data = this.categoriesData;\n        // console.log(this.dataSource);\n      },\n      error: error => {\n        console.error(error);\n      },\n    });\n    this.subscriptions.add(subscription);\n  }\n\n  // addDataItem(name: string | undefined, value: string): void {\n  //   const itemIndex = this.data.findIndex(item => item.name === name);\n\n  //   if (itemIndex !== -1) {\n  //     // If the item already exists, add the value to its array\n  //     this.data[itemIndex].values.push(value);\n  //   } else {\n  //     // If the item does not exist, create a new one\n  //     this.data.push({ name, values: [value] });\n  //   }\n  // }\n\n  // removeDataItem(name: string | undefined, value: string): void {\n  //   const itemIndex = this.data.findIndex(item => item.name === name);\n\n  //   if (itemIndex !== -1) {\n  //     // If the item exists, remove the value from its array\n  //     this.data[itemIndex].values = this.data[itemIndex].values.filter(\n  //       (v: any) => v !== value,\n  //     );\n\n  //     // Remove the entire item if the values array is empty\n  //     if (this.data[itemIndex].values.length === 0) {\n  //       this.data.splice(itemIndex, 1);\n  //     }\n  //   }\n  // }\n\n  chipRemoveNode(localeNameToRemove: string) {\n    // console.log(localeName);\n    let indexToRemove = 0;\n    let nodeToRemove;\n    this.addRemoveDataService.dataSignal().forEach(category => {\n      nodeToRemove = category.localeNames.find((localeName, i) => {\n        indexToRemove = i;\n        return localeName === localeNameToRemove;\n      });\n      if (nodeToRemove) {\n        this.onCheckboxChange(category as CategoryNode, indexToRemove, true);\n      }\n    });\n  }\n\n  onCheckboxChange(\n    node: CategoryNode,\n    indexToRemove = 0,\n    toggleChecked?: boolean,\n  ) {\n    const { name, localeName, categoryName } = node;\n    console.log(node);\n    console.log(indexToRemove);\n\n    this.isFetchingData.set(true);\n\n    // When node is removed when clicking on chip remove icon\n    if (toggleChecked) {\n      // node.isChecked = false;\n      const valueChipRemove = node.values?.[indexToRemove];\n      const localeNameChipRemove = node.localeNames?.[indexToRemove];\n\n      this.addRemoveDataService.removeDataItem(\n        node.name,\n        valueChipRemove as string,\n        localeNameChipRemove as string,\n      );\n\n      this.treeControl.dataNodes?.forEach(x => {\n        if (x.expandable === false && x.name === valueChipRemove) {\n          console.log(x);\n          x.isChecked = false;\n        }\n      });\n    }\n\n    if (node.isChecked) {\n      this.addRemoveDataService.addDataItem(\n        categoryName,\n        name,\n        localeName as string,\n      );\n    } else {\n      this.addRemoveDataService.removeDataItem(\n        categoryName,\n        name,\n        localeName as string,\n      );\n    }\n    // console.log(this.addRemoveDataService.getData());\n\n    // this.filterData = this.addRemoveDataService.getData();\n    // console.log(this.dataSource._flattenedData._value);\n  }\n\n  resetAll() {\n    // this.categoriesData.forEach(category => {\n    //   category.forEach(value => value.isChecked = false)\n    // })\n    // this.dataSource._flattenedData._value\n    // for (const rootNode of this.categoriesData) {\n    //   this.updateCheckedProperty(rootNode, false);\n    //   console.log(rootNode)\n    // }\n    this.isFetchingData.set(true);\n\n    this.treeControl.dataNodes?.forEach(x => {\n      // console.log(x)\n      if (x.expandable === false) {\n        x.isChecked = false;\n      }\n    });\n    // console.log(this.addRemoveDataService.getData());\n    this.addRemoveDataService.resetAll();\n    //  console.log(this.addRemoveDataService.getData());\n\n    //  console.log(this.treeControl.dataNodes);\n  }\n\n  // updateCheckedProperty(node: CategoryNode, isChecked: boolean): void {\n  //   node.isChecked = false;\n\n  //   if (node.children) {\n  //     for (const child of node.children) {\n  //       this.updateCheckedProperty(child, false);\n  //     }\n  //   }\n  // }\n\n  private _transformer = (node: CategoryNode, level: number) => {\n    /*  const combinedName = node.categoryName\n      ?.split(' ')\n      .map((word, i) =>\n        i === 0 ? word.toLowerCase() : word[0].toUpperCase() + word.slice(1),\n      )\n      .join(''); */\n    // console.log(combinedName);\n    // console.log(node);\n\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      localeName: node.localeName,\n      level: level,\n      categoryName: node.categoryName,\n      isChecked: node.isChecked,\n    } as CategoryFlatNode;\n  };\n\n  treeControl = new FlatTreeControl<CategoryFlatNode>(\n    node => node.level,\n    node => node.expandable,\n  );\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource<CategoryNode, CategoryFlatNode>(\n    this.treeControl,\n    this.treeFlattener,\n  );\n\n  hasChild = (_: number, node: CategoryFlatNode) => node.expandable;\n\n  private _getBodyAreas(): Observable<any> {\n    return this.bodyAreasService.getBodyAreas().pipe(\n      tap(bodyAreasList => {\n        this.bodyAreas = bodyAreasList;\n        this.bodyAreas = this.bodyAreas.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n        // this.bodyAreas.forEach((bodyArea: any) => {\n        //   if (this.lang) {\n        //     bodyArea.combinedName = `${bodyArea.translations[this.lang]} (${\n        //       bodyArea.name\n        //     })`;\n        //   }\n        // });\n      }),\n    );\n  }\n\n  private _getMovements(): Observable<any> {\n    return this.movementsService.getMovements().pipe(\n      tap(movementsList => {\n        this.movements = movementsList;\n        this.movements = this.movements.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n\n        // this.movements.forEach((movement: any) => {\n        //   if (this.lang) {\n        //     movement.combinedName = `${movement.translations[this.lang]} (${\n        //       movement.name\n        //     })`;\n        //   }\n        // });\n      }),\n    );\n  }\n\n  private _getStartingPositions(): Observable<any> {\n    return this.startingPositionsService.getStartingPositions().pipe(\n      tap(startingPositionsList => {\n        this.startingPositions = startingPositionsList;\n        this.startingPositions = this.startingPositions.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n\n        // this.startingPositions.forEach((startingPosition: any) => {\n        //   if (this.lang) {\n        //     startingPosition.translatedName =\n        //       startingPosition.translations[this.lang];\n        //   }\n        // });\n      }),\n    );\n  }\n\n  private _getEquipment(): Observable<any> {\n    return this.equipmentService.getEquipments().pipe(\n      tap(equipmentList => {\n        this.equipment = equipmentList;\n        this.equipment = this.equipment.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        );\n\n        // this.equipment.forEach((movement: any) => {\n        //   if (this.lang) {\n        //     movement.combinedName = `${movement.translations[this.lang]} (${\n        //       movement.name\n        //     })`;\n        //   }\n        // });\n      }),\n    );\n  }\n\n  // private _getMovements() {\n  //   this.movementsService.getMovements().subscribe(movementList => {\n  //     console.log(movementList);\n  //     this.movements = movementList;\n  //   });\n  // }\n\n  private _getUserLanguageToken(): string {\n    return <string>(\n      this.localstorageService.getToken('userLanguage')?.split('-')[0]\n    );\n  }\n\n  toggleDrawer() {\n    this.toggleDrawerSignal.emit();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    console.log(this.categoriesData);\n\n    this.resetAll();\n\n    console.log(this.categoriesData);\n  }\n}\n","import {\n  Component,\n  effect,\n  EventEmitter,\n  inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatButtonToggle,\n  MatButtonToggleGroup,\n} from '@angular/material/button-toggle';\nimport { SearchComponent } from '../../pages/search/search.component';\nimport { FormsModule } from '@angular/forms';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { ShareStateService } from '@slowautomobile/exercises';\n\ntype ListOption = 'all' | 'selected' | 'favorite';\n\n@Component({\n  selector: 'ui-exercise-search-btns-wrapper',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonToggleGroup,\n    MatButtonToggle,\n    SearchComponent,\n  ],\n  templateUrl: './exercise-search-btns-wrapper.component.html',\n  styleUrl: './exercise-search-btns-wrapper.component.scss',\n})\nexport class ExerciseSearchBtnsWrapperComponent {\n  private shareStateService = inject(ShareStateService);\n\n  listOptionSignal = this.shareStateService.listOption;\n  drawerOpen!: boolean;\n  listOption!: ListOption;\n\n  @Output() listOptionValue = new EventEmitter<ListOption>();\n\n  constructor() {\n    effect(() => {\n      this.listOption = this.listOptionSignal();\n    });\n  }\n\n  changeListOption(listOptionValue: ListOption) {\n    this.listOptionSignal.set(listOptionValue);\n    this.listOptionValue.emit(listOptionValue);\n  }\n\n  toggleDrawer() {\n    this.drawerOpen = !this.drawerOpen;\n  }\n}\n","<div class=\"search-segmented-btns\">\n  <ui-search (toggleDrawerSignal)=\"toggleDrawer()\"></ui-search>\n  <mat-button-toggle-group\n    class=\"segmented-btns\"\n    [(ngModel)]=\"listOption\"\n    name=\"listOption\"\n    aria-label=\"List Option\"\n    i18n-aria-label=\"@@SearchSegmentedBtns.listOptionAriaLabel\"\n    (change)=\"changeListOption($event.value)\"\n    hideSingleSelectionIndicator=\"true\"\n  >\n    <mat-button-toggle value=\"all\" i18n=\"@@SearchSegmentedBtns.listOptionAll\"\n      >All</mat-button-toggle\n    >\n    <mat-button-toggle\n      value=\"selected\"\n      i18n=\"@@SearchSegmentedBtns.listOptionSelected\"\n      >Selected</mat-button-toggle\n    >\n    <mat-button-toggle\n      value=\"favorite\"\n      i18n=\"@@SearchSegmentedBtns.listOptionFavorite\"\n      >Favorite</mat-button-toggle\n    >\n  </mat-button-toggle-group>\n</div>\n\n<!-- (change)=\"testOption($event.value)\" -->\n","<div class=\"table-wrapper basic-table-wrapper\">\n  <div class=\"programs-filter-container all-programs-input-wrapp\">\n    <div class=\"all-program-list-title\">\n      <h3\n        class=\"mat-title-large\"\n        i18n=\"@@ClientFormBasicProgramsTable.titlePlaceholder\"\n      >\n        List of program templates\n      </h3>\n    </div>\n    <mat-divider\n      vertical\n      style=\"display: inline-block; height: 24px\"\n    ></mat-divider>\n    <mat-form-field appearance=\"outline\" class=\"basic-program-filter\">\n      <mat-label i18n=\"@@ClientFormBasicProgramsTable.searchInputLabel\"\n        >Search</mat-label\n      >\n      <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Ex. Seated back stretch\"\n        i18n-placeholder=\"@@ClientFormBasicProgramsTable.searchInputPlaceholder\"\n        #input\n      />\n    </mat-form-field>\n  </div>\n\n  <!-- <div class=\"mat-elevation-z8 programs-table\"> -->\n  <div class=\"programs-table\">\n    <div\n      overlay-scrollbars\n      [options]=\"themeSignal()\"\n      [defer]\n      class=\"table-scroll-container\"\n    >\n      <table\n        mat-table\n        class=\"mat-basic-program-table\"\n        [dataSource]=\"dataSource\"\n        matSort\n      >\n        <!-- ID Column -->\n        <!-- <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n          </ng-container> -->\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            mat-sort-header\n            i18n=\"@@ClientFormBasicProgramsTable.tableColumnName\"\n          >\n            Name\n          </th>\n          <td mat-cell *matCellDef=\"let row\">\n            <span class=\"name-cell-width\">{{ row.name }}</span>\n          </td>\n        </ng-container>\n        <!-- Options Column -->\n        <ng-container matColumnDef=\"options\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div class=\"program-options\">\n              <button\n                mat-icon-button\n                matTooltip=\"View\"\n                i18n-matTooltip=\"\n                  @@ClientFormBasicProgramsTable.viewButtonTooltip\"\n                aria-label=\"View icon button\"\n                i18n-aria-label=\"\n                  @@ClientFormBasicProgramsTable.viewButtonAriaLabel\"\n                (click)=\"viewProgramModal(row.id)\"\n              >\n                <mat-icon>visibility</mat-icon>\n              </button>\n              <button\n                mat-icon-button\n                matTooltip=\"Add to client\"\n                i18n-matTooltip=\"\n                  @@ClientFormBasicProgramsTable.addToClientButtonTooltip\"\n                aria-label=\"Add icon button\"\n                i18n-aria-label=\"\n                  @@ClientFormBasicProgramsTable.addToClientButtonAriaLabel\"\n                (click)=\"addProgramToClient(row.id)\"\n              >\n                <mat-icon>add</mat-icon>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          class=\"table-rows truncate\"\n        ></tr>\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td\n            class=\"mat-cell\"\n            colspan=\"4\"\n            i18n=\"@@ClientFormBasicProgramsTable.noDataMatching\"\n          >\n            No data matching the filter \"{{ input.value }}\"\n          </td>\n        </tr>\n      </table>\n    </div>\n\n    <mat-paginator\n      class=\"mat-basic-program-paginator\"\n      pageSize=\"10\"\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      aria-label=\"Select page of programs\"\n      i18n-aria-label=\"\n        @@ClientFormBasicProgramsTable.selectPageOfProgramsAriaLabel\"\n    ></mat-paginator>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  inject,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatPaginator,\n  MatPaginatorIntl,\n  MatPaginatorModule,\n} from '@angular/material/paginator';\nimport { MatSort, MatSortHeader } from '@angular/material/sort';\nimport {\n  MatTableDataSource,\n  MatTable,\n  MatColumnDef,\n  MatHeaderCellDef,\n  MatHeaderCell,\n  MatCellDef,\n  MatCell,\n  MatHeaderRowDef,\n  MatHeaderRow,\n  MatRowDef,\n  MatRow,\n  MatNoDataRow,\n} from '@angular/material/table';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport { Program } from '@slowautomobile/exercises';\nimport { ThemeManagerService } from '../../services/theme-manager.service';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { MatIconButton } from '@angular/material/button';\nimport { OverlayscrollbarsModule } from 'overlayscrollbars-ngx';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatDivider } from '@angular/material/divider';\nimport { PaginatorI18nService } from '../../services/paginator-i18n.service';\n\n@Component({\n  selector: 'ui-basic-programs-table',\n  templateUrl: './basic-programs-table.component.html',\n  styleUrl: './basic-programs-table.component.scss',\n  standalone: true,\n  imports: [\n    MatDivider,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    OverlayscrollbarsModule,\n    MatTable,\n    MatSort,\n    MatColumnDef,\n    MatHeaderCellDef,\n    MatHeaderCell,\n    MatSortHeader,\n    MatCellDef,\n    MatCell,\n    MatIconButton,\n    MatTooltip,\n    MatIcon,\n    MatHeaderRowDef,\n    MatHeaderRow,\n    MatRowDef,\n    MatRow,\n    MatNoDataRow,\n    MatPaginatorModule,\n  ],\n  providers: [{ provide: MatPaginatorIntl, useClass: PaginatorI18nService }],\n})\nexport class BasicProgramsTableComponent implements AfterViewInit {\n  displayedColumns: string[] = ['name', 'options'];\n  @Input() dataSource = new MatTableDataSource<Program>();\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  @Output() getProgramsEvent: EventEmitter<string> = new EventEmitter();\n\n  @Output() viewProgramEvent: EventEmitter<any> = new EventEmitter();\n  @Output() addProgramToClientEvent: EventEmitter<any> = new EventEmitter();\n\n  themeManager = inject(ThemeManagerService);\n  themeSignal = this.themeManager.themeSignal;\n\n  getPrograms(listOption: string) {\n    console.log(this.dataSource.data);\n    this.getProgramsEvent.emit(listOption);\n    console.log(this.dataSource.data);\n  }\n\n  viewProgramModal(programId: string) {\n    this.viewProgramEvent.emit(programId);\n    // console.log('this is open view program', programId);\n  }\n\n  addProgramToClient(programId: string) {\n    this.addProgramToClientEvent.emit(programId);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","import { Component, inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogTitle,\n  MatDialogContent,\n  MatDialogActions,\n} from '@angular/material/dialog';\nimport { MatButton } from '@angular/material/button';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { MatIcon } from '@angular/material/icon';\n\ninterface DialogData {\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: 'ui-delete-confirmation-dialog',\n  templateUrl: './deleteConfirmationDialog.component.html',\n  styleUrl: './deleteConfirmationDialog.component.scss',\n  standalone: true,\n  imports: [\n    MatIcon,\n    MatDialogTitle,\n    CdkScrollable,\n    MatDialogContent,\n    MatDialogActions,\n    MatButton,\n  ],\n})\nexport class DeleteConfirmationDialogComponent {\n  dialogRef =\n    inject<MatDialogRef<DeleteConfirmationDialogComponent>>(MatDialogRef);\n  data = inject<DialogData>(MAT_DIALOG_DATA);\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"confirmation-dialog-wrapper\">\n  <div class=\"dialog-icon\">\n    <mat-icon>delete_outline</mat-icon>\n  </div>\n  <h1 mat-dialog-title class=\"dialog-title mat-title-large\">\n    {{ data.title }}\n  </h1>\n  <div mat-dialog-content class=\"dialog-content\">{{ data.message }}</div>\n  <div mat-dialog-actions class=\"dialog-actions\">\n    <button\n      mat-button\n      (click)=\"onClose()\"\n      class=\"dialog-buttons\"\n      i18n=\"@@DeleteConfirmationDialog.cancelButton\"\n    >\n      Cancel\n    </button>\n    <button\n      mat-button\n      class=\"dialog-buttons\"\n      (click)=\"onConfirm()\"\n      i18n=\"@@DeleteConfirmationDialog.deleteButton\"\n    >\n      Delete\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class PaginatorI18nService implements MatPaginatorIntl {\n  changes = new Subject<void>();\n\n  // For internationalization, the `$localize` function from\n  // the `@angular/localize` package can be used.\n  firstPageLabel = $localize`:@@Paginator.firstPage:First page`;\n  itemsPerPageLabel = $localize`:@@Paginator.itemsPerPage:Items per page:`;\n  lastPageLabel = $localize`:@@Paginator.lastPage:Last page`;\n\n  // You can set labels to an arbitrary string too, or dynamically compute\n  // it through other third-party internationalization libraries.\n  nextPageLabel = 'Next page';\n  previousPageLabel = 'Previous page';\n\n  getRangeLabel(page: number, pageSize: number, length: number): string {\n    if (length === 0) {\n      return $localize`:@@Paginator.singlePageRange:Page 1 of 1`;\n    }\n    const amountPages = Math.ceil(length / pageSize);\n    return $localize`:@@Paginator.pageRange:Page ${page + 1} of ${amountPages}`;\n  }\n}\n","import { Injectable, InjectionToken, inject } from '@angular/core';\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage,\n});\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrowserStorageService {\n  storage = inject<Storage>(BROWSER_STORAGE);\n\n\n  get(key: string) {\n    return this.storage.getItem(key);\n  }\n\n  set(key: string, value: string) {\n    this.storage.setItem(key, value);\n  }\n\n  remove(key: string) {\n    this.storage.removeItem(key);\n  }\n\n  clear() {\n    this.storage.clear();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injectable, inject, signal } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { take } from 'rxjs/operators';\nimport { BrowserStorageService } from './browser-storage.service';\n\nconst LOCAL_STORAGE_KEY = 'themeMode';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeManagerService {\n  private document = inject(DOCUMENT);\n  private browserStorage = inject(BrowserStorageService);\n  // private _isDarkSub = new BehaviorSubject(false);\n  // isDark$ = this._isDarkSub.asObservable();\n  isDark = signal<boolean>(false);\n  private _window = this.document.defaultView;\n\n  themeSignal = signal<any>({\n    // paddingAbsolute: false,\n    // showNativeOverlaidScrollbars: false,\n    // update: {\n    //   elementEvents: [['img', 'load']],\n    //   debounce: [0, 33],\n    //   attributes: null,\n    //   ignoreMutation: null\n    // },\n    overflow: {\n      x: 'hidden',\n      y: 'scroll',\n    },\n    scrollbars: {\n      theme: 'os-theme-light',\n      // visibility: 'auto',\n      autoHide: 'leave',\n      autoHideDelay: 100,\n      // autoHideSuspend: false,\n      // dragScroll: true,\n      // clickScroll: true,\n      // pointers: ['mouse', 'touch', 'pen']\n    },\n  });\n\n  constructor() {\n    this.setTheme(this.getPreferredTheme());\n    if (this._window !== null && this._window.matchMedia) {\n      this._window\n        .matchMedia('(prefers-color-scheme: dark)')\n        .addEventListener('change', () => {\n          const storedTheme = this.getStoredTheme();\n          if (storedTheme !== 'light' && storedTheme !== 'dark') {\n            this.setTheme(this.getPreferredTheme());\n          }\n        });\n    }\n  }\n\n  getStoredTheme = () =>\n    JSON.parse(this.browserStorage.get(LOCAL_STORAGE_KEY) ?? '{}').theme;\n\n  setStoredTheme = (theme: string) => {\n    const meta = JSON.parse(this.browserStorage.get(LOCAL_STORAGE_KEY) ?? '{}');\n    meta.theme = theme;\n    this.browserStorage.set(LOCAL_STORAGE_KEY, JSON.stringify(meta));\n  };\n\n  getPreferredTheme = (): 'dark' | 'light' => {\n    const storedTheme = this.getStoredTheme();\n    console.log(storedTheme);\n    if (storedTheme) {\n      return storedTheme;\n    }\n\n    if (this._window !== null && this._window.matchMedia) {\n    console.log(this._window.matchMedia('(prefers-color-scheme: dark)').matches);\n\n      return this._window.matchMedia('(prefers-color-scheme: dark)').matches\n        ? 'dark'\n        : 'light';\n    }\n    return 'light';\n  };\n\n  setTheme = (theme: string) => {\n    if (this._window !== null && this._window.matchMedia) {\n      if (\n        theme === 'auto' &&\n        this._window.matchMedia('(prefers-color-scheme: dark)').matches\n      ) {\n        this.document.documentElement.setAttribute('data-bs-theme', 'dark');\n        // this._isDarkSub.next(true);\n        this.isDark.set(true)\n      } else {\n        this.document.documentElement.setAttribute('data-bs-theme', theme);\n        // this._isDarkSub.next(theme === 'dark');\n        this.isDark.set(theme === 'dark')\n\n      }\n      this.setMaterialTheme();\n    }\n  };\n\n  setMaterialTheme() {\n    // this.isDark$.pipe(take(1)).subscribe(isDark => {\n      if (this.isDark()) {\n        const href = 'dark-theme.css';\n        getLinkElementForKey('dark-theme').setAttribute('href', href);\n        this.document.documentElement.classList.add('dark-theme');\n      } else {\n        this.removeStyle('dark-theme');\n        this.document.documentElement.classList.remove('dark-theme');\n      }\n    // });\n  }\n\n  removeStyle(key: string) {\n    const existingLinkElement = getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      this.document.head.removeChild(existingLinkElement);\n    }\n  }\n\n  changeTheme(theme: string) {\n    this.setStoredTheme(theme);\n    this.setTheme(theme);\n    this.themeSignal.update(options => {\n      let scrollbarTheme = '';\n      if (theme === 'auto') scrollbarTheme = 'light';\n      if (theme === 'dark') scrollbarTheme = 'light';\n      if (theme === 'light') scrollbarTheme = 'dark';\n      return {\n        ...options,\n        scrollbars: {\n          ...options.scrollbars,\n          theme: `os-theme-${scrollbarTheme}`,\n        },\n      };\n    });\n  }\n}\n\nfunction getLinkElementForKey(key: string) {\n  return getExistingLinkElementByKey(key) || createLinkElementWithKey(key);\n}\n\nfunction getExistingLinkElementByKey(key: string) {\n  return document.head.querySelector(\n    `link[rel=\"stylesheet\"].${getClassNameForKey(key)}`,\n  );\n}\n\nfunction createLinkElementWithKey(key: string) {\n  const linkEl = document.createElement('link');\n  linkEl.setAttribute('rel', 'stylesheet');\n  linkEl.classList.add(getClassNameForKey(key));\n  document.head.appendChild(linkEl);\n  return linkEl;\n}\n\nfunction getClassNameForKey(key: string) {\n  return `style-manager-${key}`;\n}\n","exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n","\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst supportedLocales = require(\"./supportedLocales.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n","var map = {\n\t\"./af.json\": 8514,\n\t\"./am.json\": 1627,\n\t\"./ar.json\": 2478,\n\t\"./az.json\": 6054,\n\t\"./be.json\": 7768,\n\t\"./bg.json\": 5818,\n\t\"./bn.json\": 205,\n\t\"./br.json\": 5313,\n\t\"./bs.json\": 5526,\n\t\"./ca.json\": 4029,\n\t\"./cs.json\": 467,\n\t\"./cy.json\": 3669,\n\t\"./da.json\": 1370,\n\t\"./de.json\": 2870,\n\t\"./dv.json\": 5767,\n\t\"./el.json\": 716,\n\t\"./en.json\": 1038,\n\t\"./es.json\": 8789,\n\t\"./et.json\": 6964,\n\t\"./eu.json\": 4999,\n\t\"./fa.json\": 4144,\n\t\"./fi.json\": 872,\n\t\"./fr.json\": 4477,\n\t\"./ga.json\": 4537,\n\t\"./gl.json\": 3898,\n\t\"./ha.json\": 7974,\n\t\"./he.json\": 1994,\n\t\"./hi.json\": 1070,\n\t\"./hr.json\": 311,\n\t\"./hu.json\": 8266,\n\t\"./hy.json\": 8942,\n\t\"./id.json\": 7048,\n\t\"./is.json\": 193,\n\t\"./it.json\": 6536,\n\t\"./ja.json\": 4668,\n\t\"./ka.json\": 7445,\n\t\"./kk.json\": 4243,\n\t\"./km.json\": 4441,\n\t\"./ko.json\": 8975,\n\t\"./ku.json\": 3425,\n\t\"./ky.json\": 7805,\n\t\"./lt.json\": 5305,\n\t\"./lv.json\": 4575,\n\t\"./mk.json\": 6709,\n\t\"./ml.json\": 8100,\n\t\"./mn.json\": 6806,\n\t\"./mr.json\": 8658,\n\t\"./ms.json\": 2637,\n\t\"./mt.json\": 8732,\n\t\"./nb.json\": 21,\n\t\"./nl.json\": 8255,\n\t\"./nn.json\": 729,\n\t\"./no.json\": 4366,\n\t\"./pl.json\": 2565,\n\t\"./ps.json\": 7116,\n\t\"./pt.json\": 653,\n\t\"./ro.json\": 1906,\n\t\"./ru.json\": 7512,\n\t\"./sd.json\": 2382,\n\t\"./sk.json\": 8395,\n\t\"./sl.json\": 9782,\n\t\"./so.json\": 1223,\n\t\"./sq.json\": 4797,\n\t\"./sr.json\": 1299,\n\t\"./sv.json\": 6940,\n\t\"./sw.json\": 4079,\n\t\"./ta.json\": 2682,\n\t\"./tg.json\": 2292,\n\t\"./th.json\": 5885,\n\t\"./tk.json\": 368,\n\t\"./tr.json\": 6955,\n\t\"./tt.json\": 1841,\n\t\"./ug.json\": 6289,\n\t\"./uk.json\": 6413,\n\t\"./ur.json\": 778,\n\t\"./uz.json\": 7570,\n\t\"./vi.json\": 6440,\n\t\"./zh.json\": 5463\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 442;","import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable } from '@angular/core';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/** Indicates how a view was changed by a {@link _ViewRepeater}. */\nvar _ViewRepeaterOperation;\n(function (_ViewRepeaterOperation) {\n    /** The content of an existing view was replaced with another item. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REPLACED\"] = 0] = \"REPLACED\";\n    /** A new view was created with `createEmbeddedView`. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"INSERTED\"] = 1] = \"INSERTED\";\n    /** The position of a view changed, but the content remains the same. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"MOVED\"] = 2] = \"MOVED\";\n    /** A view was detached from the view container. */\n    _ViewRepeaterOperation[_ViewRepeaterOperation[\"REMOVED\"] = 3] = \"REMOVED\";\n})(_ViewRepeaterOperation || (_ViewRepeaterOperation = {}));\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = _ViewRepeaterOperation.INSERTED;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? _ViewRepeaterOperation.INSERTED : _ViewRepeaterOperation.REPLACED;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values);\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet)))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(this._getConcreteValue(value));\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        value = this._getConcreteValue(value);\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        value = this._getConcreteValue(value);\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n    /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n    _getConcreteValue(inputValue, selection) {\n        if (!this.compareWith) {\n            return inputValue;\n        }\n        else {\n            selection = selection ?? this._selection;\n            for (let selectedValue of selection) {\n                if (this.compareWith(inputValue, selectedValue)) {\n                    return selectedValue;\n                }\n            }\n            return inputValue;\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, _ViewRepeaterOperation, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, EnvironmentInjector, createComponent, Injectable, Inject, InjectionToken, booleanAttribute, Directive, Optional, SkipSelf, Input, EventEmitter, Injector, afterNextRender, numberAttribute, Self, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge, BehaviorSubject } from 'rxjs';\nimport { takeUntil, map, take, tap, switchMap, startWith } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/** Gets a mutable version of an element's bounding `DOMRect`. */\nfunction getMutableClientRect(element) {\n    const rect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `DOMRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.width,\n        height: rect.height,\n        x: rect.x,\n        y: rect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `DOMRect`.\n * @param clientRect DOMRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `DOMRect`, as well as their bottom/right counterparts.\n * @param domRect `DOMRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustDomRect(domRect, top, left) {\n    domRect.top += top;\n    domRect.bottom = domRect.top + domRect.height;\n    domRect.left += left;\n    domRect.right = domRect.left + domRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a DOMRect.\n * @param rect DOMRect to check against.\n * @param threshold Threshold around the DOMRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearDomRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustDomRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Inline styles to be set as `!important` while dragging. */\nconst importantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\nclass PreviewRef {\n    get element() {\n        return this._preview;\n    }\n    constructor(_document, _rootElement, _direction, _initialDomRect, _previewTemplate, _previewClass, _pickupPositionOnPage, _initialTransform, _zIndex) {\n        this._document = _document;\n        this._rootElement = _rootElement;\n        this._direction = _direction;\n        this._initialDomRect = _initialDomRect;\n        this._previewTemplate = _previewTemplate;\n        this._previewClass = _previewClass;\n        this._pickupPositionOnPage = _pickupPositionOnPage;\n        this._initialTransform = _initialTransform;\n        this._zIndex = _zIndex;\n    }\n    attach(parent) {\n        this._preview = this._createPreview();\n        parent.appendChild(this._preview);\n        // The null check is necessary for browsers that don't support the popover API.\n        // Note that we use a string access for compatibility with Closure.\n        if (supportsPopover(this._preview)) {\n            this._preview['showPopover']();\n        }\n    }\n    destroy() {\n        this._preview.remove();\n        this._previewEmbeddedView?.destroy();\n        this._preview = this._previewEmbeddedView = null;\n    }\n    setTransform(value) {\n        this._preview.style.transform = value;\n    }\n    getBoundingClientRect() {\n        return this._preview.getBoundingClientRect();\n    }\n    addClass(className) {\n        this._preview.classList.add(className);\n    }\n    getTransitionDuration() {\n        return getTransformTransitionDurationInMs(this._preview);\n    }\n    addEventListener(name, handler) {\n        this._preview.addEventListener(name, handler);\n    }\n    removeEventListener(name, handler) {\n        this._preview.removeEventListener(name, handler);\n    }\n    _createPreview() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this._previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialDomRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewEmbeddedView = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialDomRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // If the preview has a margin, it can throw off our positioning so we reset it. The reset\n            // value for `margin-right` needs to be `auto` when opened as a popover, because our\n            // positioning is always top/left based, but native popover seems to position itself\n            // to the top/right if `<html>` or `<body>` have `dir=\"rtl\"` (see #29604). Setting it\n            // to `auto` pushed it to the top/left corner in RTL and is a noop in LTR.\n            'margin': supportsPopover(preview) ? '0 auto 0 0' : '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': this._zIndex + '',\n        }, importantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('popover', 'manual');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n}\n/** Checks whether a specific element supports the popover API. */\nfunction supportsPopover(element) {\n    return 'showPopover' in element;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = signal(false);\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        /**\n         * If the parent of the dragged element has a `scale` transform, it can throw off the\n         * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n         */\n        this.scale = 1;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging()) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        if (event.cancelable) {\n                            event.preventDefault();\n                        }\n                        this._hasStartedDragging.set(true);\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialDomRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging() && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeListeners() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n        this._getShadowRoot()?.removeEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.destroy();\n        this._preview = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeListeners();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging()) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        // Needs to happen before the root element is moved.\n        const shadowRoot = this._getShadowRoot();\n        const dropContainer = this._dropContainer;\n        if (shadowRoot) {\n            // In some browsers the global `selectstart` that we maintain in the `DragDropRegistry`\n            // doesn't cross the shadow boundary so we have to prevent it at the shadow root (see #28792).\n            this._ngZone.runOutsideAngular(() => {\n                shadowRoot.addEventListener('selectstart', shadowDomSelectStart, activeCapturingEventOptions$1);\n            });\n        }\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor =\n                this._anchor ||\n                    this._document.createComment(typeof ngDevMode === 'undefined' || ngDevMode ? 'cdk-drag-anchor' : ''));\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = new PreviewRef(this._document, this._rootElement, this._direction, this._initialDomRect, this._previewTemplate || null, this.previewClass || null, this._pickupPositionOnPage, this._initialTransform, this._config.zIndex || 1000);\n            this._preview.attach(this._getPreviewInsertionPoint(parent, shadowRoot));\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasMoved = false;\n        this._hasStartedDragging.set(this._hasMoved);\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeListeners();\n        this._initialDomRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialDomRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialDomRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.addClass('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = this._preview.getTransitionDuration();\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (this._preview &&\n                            _getEventTarget(event) === this._preview.element &&\n                            event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialDomRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y =\n                this._pickupPositionOnPage.y -\n                    (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x =\n                this._pickupPositionOnPage.x -\n                    (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n        }\n        if (this._boundaryRect) {\n            // If not using a custom constrain we need to account for the pickup position in the element\n            // otherwise we do not need to do this, as it has already been accounted for\n            const { x: pickupX, y: pickupY } = !this.constrainPosition\n                ? this._pickupPositionInElement\n                : { x: 0, y: 0 };\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const scale = 1 / this.scale;\n        const transform = getTransform(x * scale, y * scale);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.setTransform(combineTransforms(transform, initialTransform));\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // DOMRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary DOMRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustDomRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialDomRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Callback invoked for `selectstart` events inside the shadow DOM. */\nfunction shadowDomSelectStart(event) {\n    event.preventDefault();\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_dragDropRegistry) {\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            const transformAmount = Math.round(sibling.offset * (1 / sibling.drag.scale));\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${transformAmount}px, 0, 0)`, sibling.initialTransform);\n                adjustDomRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${transformAmount}px, 0)`, sibling.initialTransform);\n                adjustDomRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            this._element.appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables?.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustDomRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    withElementContainer(container) {\n        this._element = container;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Strategy that only supports sorting on a list that might wrap.\n * Items are reordered by moving their DOM nodes around.\n * @docs-private\n */\nclass MixedSortStrategy {\n    constructor(_document, _dragDropRegistry) {\n        this._document = _document;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            deltaX: 0,\n            deltaY: 0,\n            overlaps: false,\n        };\n        /**\n         * Keeps track of the relationship between a node and its next sibling. This information\n         * is used to restore the DOM to the order it was in before dragging started.\n         */\n        this._relatedNodes = [];\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        const childNodes = this._element.childNodes;\n        this._relatedNodes = [];\n        for (let i = 0; i < childNodes.length; i++) {\n            const node = childNodes[i];\n            this._relatedNodes.push([node, node.nextSibling]);\n        }\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        const previousSwap = this._previousSwap;\n        if (newIndex === -1 || this._activeItems[newIndex] === item) {\n            return null;\n        }\n        const toSwapWith = this._activeItems[newIndex];\n        // Prevent too many swaps over the same item.\n        if (previousSwap.drag === toSwapWith &&\n            previousSwap.overlaps &&\n            previousSwap.deltaX === pointerDelta.x &&\n            previousSwap.deltaY === pointerDelta.y) {\n            return null;\n        }\n        const previousIndex = this.getItemIndex(item);\n        const current = item.getPlaceholderElement();\n        const overlapElement = toSwapWith.getRootElement();\n        if (newIndex > previousIndex) {\n            overlapElement.after(current);\n        }\n        else {\n            overlapElement.before(current);\n        }\n        moveItemInArray(this._activeItems, previousIndex, newIndex);\n        const newOverlapElement = this._getRootNode().elementFromPoint(pointerX, pointerY);\n        // Note: it's tempting to save the entire `pointerDelta` object here, however that'll\n        // break this functionality, because the same object is passed for all `sort` calls.\n        previousSwap.deltaX = pointerDelta.x;\n        previousSwap.deltaY = pointerDelta.y;\n        previousSwap.drag = toSwapWith;\n        previousSwap.overlaps =\n            overlapElement === newOverlapElement || overlapElement.contains(newOverlapElement);\n        return {\n            previousIndex,\n            currentIndex: newIndex,\n        };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        let enterIndex = index == null || index < 0\n            ? this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        // In some cases (e.g. when the container has padding) we might not be able to figure\n        // out which item to insert the dragged item next to, because the pointer didn't overlap\n        // with anything. In that case we find the item that's closest to the pointer.\n        if (enterIndex === -1) {\n            enterIndex = this._getClosestItemIndexToPointer(item, pointerX, pointerY);\n        }\n        const targetItem = this._activeItems[enterIndex];\n        const currentIndex = this._activeItems.indexOf(item);\n        if (currentIndex > -1) {\n            this._activeItems.splice(currentIndex, 1);\n        }\n        if (targetItem && !this._dragDropRegistry.isDragging(targetItem)) {\n            this._activeItems.splice(enterIndex, 0, item);\n            targetItem.getRootElement().before(item.getPlaceholderElement());\n        }\n        else {\n            this._activeItems.push(item);\n            this._element.appendChild(item.getPlaceholderElement());\n        }\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeItems = items.slice();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        const root = this._element;\n        const previousSwap = this._previousSwap;\n        // Moving elements around in the DOM can break things like the `@for` loop, because it\n        // uses comment nodes to know where to insert elements. To avoid such issues, we restore\n        // the DOM nodes in the list to their original order when the list is reset.\n        // Note that this could be simpler if we just saved all the nodes, cleared the root\n        // and then appended them in the original order. We don't do it, because it can break\n        // down depending on when the snapshot was taken. E.g. we may end up snapshotting the\n        // placeholder element which is removed after dragging.\n        for (let i = this._relatedNodes.length - 1; i > -1; i--) {\n            const [node, nextSibling] = this._relatedNodes[i];\n            if (node.parentNode === root && node.nextSibling !== nextSibling) {\n                if (nextSibling === null) {\n                    root.appendChild(node);\n                }\n                else if (nextSibling.parentNode === root) {\n                    root.insertBefore(node, nextSibling);\n                }\n            }\n        }\n        this._relatedNodes = [];\n        this._activeItems = [];\n        previousSwap.drag = null;\n        previousSwap.deltaX = previousSwap.deltaY = 0;\n        previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeItems;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        return this._activeItems.indexOf(item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll() {\n        this._activeItems.forEach(item => {\n            if (this._dragDropRegistry.isDragging(item)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                item._sortFromLastPointerPosition();\n            }\n        });\n    }\n    withElementContainer(container) {\n        if (container !== this._element) {\n            this._element = container;\n            this._rootNode = undefined;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY) {\n        const elementAtPoint = this._getRootNode().elementFromPoint(Math.floor(pointerX), Math.floor(pointerY));\n        const index = elementAtPoint\n            ? this._activeItems.findIndex(item => {\n                const root = item.getRootElement();\n                return elementAtPoint === root || root.contains(elementAtPoint);\n            })\n            : -1;\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n    /** Lazily resolves the list's root node. */\n    _getRootNode() {\n        // Resolve the root node lazily to ensure that the drop list is in its final place in the DOM.\n        if (!this._rootNode) {\n            this._rootNode = _getShadowRoot(this._element) || this._document;\n        }\n        return this._rootNode;\n    }\n    /**\n     * Finds the index of the item that's closest to the item being dragged.\n     * @param item Item being dragged.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _getClosestItemIndexToPointer(item, pointerX, pointerY) {\n        if (this._activeItems.length === 0) {\n            return -1;\n        }\n        if (this._activeItems.length === 1) {\n            return 0;\n        }\n        let minDistance = Infinity;\n        let minIndex = -1;\n        // Find the Euclidean distance (https://en.wikipedia.org/wiki/Euclidean_distance) between each\n        // item and the pointer, and return the smallest one. Note that this is a bit flawed in that DOM\n        // nodes are rectangles, not points, so we use the top/left coordinates. It should be enough\n        // for our purposes.\n        for (let i = 0; i < this._activeItems.length; i++) {\n            const current = this._activeItems[i];\n            if (current !== item) {\n                const { x, y } = current.getRootElement().getBoundingClientRect();\n                const distance = Math.hypot(pointerX - x, pointerY - y);\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    minIndex = i;\n                }\n            }\n        }\n        return minIndex;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/** Vertical direction in which we can auto-scroll. */\nvar AutoScrollVerticalDirection;\n(function (AutoScrollVerticalDirection) {\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"NONE\"] = 0] = \"NONE\";\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"UP\"] = 1] = \"UP\";\n    AutoScrollVerticalDirection[AutoScrollVerticalDirection[\"DOWN\"] = 2] = \"DOWN\";\n})(AutoScrollVerticalDirection || (AutoScrollVerticalDirection = {}));\n/** Horizontal direction in which we can auto-scroll. */\nvar AutoScrollHorizontalDirection;\n(function (AutoScrollHorizontalDirection) {\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"NONE\"] = 0] = \"NONE\";\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"LEFT\"] = 1] = \"LEFT\";\n    AutoScrollHorizontalDirection[AutoScrollHorizontalDirection[\"RIGHT\"] = 2] = \"RIGHT\";\n})(AutoScrollHorizontalDirection || (AutoScrollHorizontalDirection = {}));\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Elements that can be scrolled while the user is dragging. */\n        this._scrollableElements = [];\n        /** Direction of the list's layout. */\n        this._direction = 'ltr';\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        const coercedElement = (this.element = coerceElement(element));\n        this._document = _document;\n        this.withOrientation('vertical').withElementContainer(coercedElement);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        if (this._sortStrategy instanceof SingleAxisSortStrategy) {\n            this._sortStrategy.direction = direction;\n        }\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        if (orientation === 'mixed') {\n            this._sortStrategy = new MixedSortStrategy(this._document, this._dragDropRegistry);\n        }\n        else {\n            const strategy = new SingleAxisSortStrategy(this._dragDropRegistry);\n            strategy.direction = this._direction;\n            strategy.orientation = orientation;\n            this._sortStrategy = strategy;\n        }\n        this._sortStrategy.withElementContainer(this._container);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = this._container;\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /**\n     * Configures the drop list so that a different element is used as the container for the\n     * dragged items. This is useful for the cases when one might not have control over the\n     * full DOM that sets up the dragging.\n     * Note that the alternate container needs to be a descendant of the drop list.\n     * @param container New element container to be assigned.\n     */\n    withElementContainer(container) {\n        if (container === this._container) {\n            return this;\n        }\n        const element = coerceElement(this.element);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            container !== element &&\n            !element.contains(container)) {\n            throw new Error('Invalid DOM structure for drop list. Alternate container element must be a descendant of the drop list.');\n        }\n        const oldContainerIndex = this._scrollableElements.indexOf(this._container);\n        const newContainerIndex = this._scrollableElements.indexOf(container);\n        if (oldContainerIndex > -1) {\n            this._scrollableElements.splice(oldContainerIndex, 1);\n        }\n        if (newContainerIndex > -1) {\n            this._scrollableElements.splice(newContainerIndex, 1);\n        }\n        if (this._sortStrategy) {\n            this._sortStrategy.withElementContainer(container);\n        }\n        this._cachedShadowRoot = null;\n        this._scrollableElements.unshift(container);\n        this._container = container;\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._domRect ||\n            !isPointerNearDomRect(this._domRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n        let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearDomRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, this._direction, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const domRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(domRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(domRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = this._container.style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            // Prevent the check from running on apps not using an alternate container. Ideally we\n            // would always run it, but introducing it at this stage would be a breaking change.\n            this._container !== coerceElement(this.element)) {\n            for (const drag of this._draggables) {\n                if (!drag.isDragging() && drag.getVisibleElement().parentNode !== this._container) {\n                    throw new Error('Invalid DOM structure for drop list. All items must be placed directly inside of the element container.');\n                }\n            }\n        }\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `DOMRect`.\n        this._domRect = this._parentPositions.positions.get(this._container).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = this._container.style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._domRect != null && isInsideClientRect(this._domRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._domRect ||\n            !isInsideClientRect(this._domRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        // The `DOMRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === this._container || this._container.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(this._container);\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return AutoScrollVerticalDirection.UP;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return AutoScrollVerticalDirection.DOWN;\n    }\n    return AutoScrollVerticalDirection.NONE;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return AutoScrollHorizontalDirection.LEFT;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return AutoScrollHorizontalDirection.RIGHT;\n    }\n    return AutoScrollHorizontalDirection.NONE;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param direction Layout direction of the drop list.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, direction, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === AutoScrollVerticalDirection.UP) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = AutoScrollVerticalDirection.UP;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (direction === 'rtl') {\n            if (computedHorizontal === AutoScrollHorizontalDirection.RIGHT) {\n                // In RTL `scrollLeft` will be negative when scrolled.\n                if (scrollLeft < 0) {\n                    horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n                }\n            }\n            else if (element.scrollWidth + scrollLeft > element.clientWidth) {\n                horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n            }\n        }\n        else {\n            if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n                if (scrollLeft > 0) {\n                    horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n                }\n            }\n            else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n                horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n            }\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/** Keeps track of the apps currently containing drag items. */\nconst activeApps = new Set();\n/**\n * Component used to load the drag&drop reset styles.\n * @docs-private\n */\nclass _ResetsLoader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _ResetsLoader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: _ResetsLoader, isStandalone: true, selector: \"ng-component\", host: { attributes: { \"cdk-drag-resets-container\": \"\" } }, ngImport: i0, template: '', isInline: true, styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _ResetsLoader, decorators: [{\n            type: Component,\n            args: [{ standalone: true, encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, host: { 'cdk-drag-resets-container': '' }, styles: [\"@layer cdk-resets{.cdk-drag-preview{background:none;border:none;padding:0;color:inherit;inset:auto}}.cdk-drag-placeholder *,.cdk-drag-preview *{pointer-events:none !important}\"] }]\n        }] });\n// TODO(crisbeto): remove generics when making breaking changes.\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        this._appRef = inject(ApplicationRef);\n        this._environmentInjector = inject(EnvironmentInjector);\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = signal([]);\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances().length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances().length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances().some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances().indexOf(drag) > -1) {\n            return;\n        }\n        this._loadResets();\n        this._activeDragInstances.update(instances => [...instances, drag]);\n        if (this._activeDragInstances().length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.update(instances => {\n            const index = instances.indexOf(drag);\n            if (index > -1) {\n                instances.splice(index, 1);\n                return [...instances];\n            }\n            return instances;\n        });\n        if (this._activeDragInstances().length === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances().indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances().length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    // TODO(crisbeto): abstract this away into something reusable.\n    /** Loads the CSS resets needed for the module to work correctly. */\n    _loadResets() {\n        if (!activeApps.has(this._appRef)) {\n            activeApps.add(this._appRef);\n            const componentRef = createComponent(_ResetsLoader, {\n                environmentInjector: this._environmentInjector,\n            });\n            this._appRef.onDestroy(() => {\n                activeApps.delete(this._appRef);\n                if (activeApps.size === 0) {\n                    componentRef.destroy();\n                }\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }] });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._stateChanges.next(this);\n    }\n    constructor(element, _parentDrag) {\n        this.element = element;\n        this._parentDrag = _parentDrag;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        _parentDrag?._addHandle(this);\n    }\n    ngOnDestroy() {\n        this._parentDrag?._removeHandle(this);\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\", booleanAttribute] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragHandleDisabled', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        this._handles = new BehaviorSubject([]);\n        /**\n         * If the parent of the dragged element has a `scale` transform, it can throw off the\n         * positioning when the user starts dragging. Use this input to notify the CDK of the scale.\n         */\n        this.scale = 1;\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._injector = inject(Injector);\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n            // The drop container reads this so we need to sync it here.\n            dropContainer._dropListRef.beforeStarted.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._dragRef.scale = this.scale;\n            });\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // We need to wait until after render, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position, and then they get transferred to the portal.\n        afterNextRender(() => {\n            this._updateRootElement();\n            this._setupHandlesListener();\n            this._dragRef.scale = this.scale;\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }, { injector: this._injector });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in the `afterNextRender` queued up in the constructor.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Scale affects the free drag position so we need to sync it up here.\n        this._dragRef.scale = this.scale;\n        // Skip the first change since it's being handled in the `afterNextRender` queued up in the\n        // constructor.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._handles.complete();\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    _addHandle(handle) {\n        const handles = this._handles.getValue();\n        handles.push(handle);\n        this._handles.next(handles);\n    }\n    _removeHandle(handle) {\n        const handles = this._handles.getValue();\n        const index = handles.indexOf(handle);\n        if (index > -1) {\n            handles.splice(index, 1);\n            this._handles.next(handles);\n        }\n    }\n    _setPreviewTemplate(preview) {\n        this._previewTemplate = preview;\n    }\n    _resetPreviewTemplate(preview) {\n        if (preview === this._previewTemplate) {\n            this._previewTemplate = null;\n        }\n    }\n    _setPlaceholderTemplate(placeholder) {\n        this._placeholderTemplate = placeholder;\n    }\n    _resetPlaceholderTemplate(placeholder) {\n        if (placeholder === this._placeholderTemplate) {\n            this._placeholderTemplate = null;\n        }\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.scale = this.scale;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles\n            .pipe(\n        // Sync the new handles with the DragRef.\n        tap(handles => {\n            const handleElements = handles.map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                handleElements.push(this.element);\n            }\n            this._dragRef.withHandles(handleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => item._stateChanges.pipe(startWith(item))));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i1$1.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\", booleanAttribute], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"], scale: [\"cdkDragScale\", \"scale\", numberAttribute] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }], propDecorators: { data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragDisabled', transform: booleanAttribute }]\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], scale: [{\n                type: Input,\n                args: [{ alias: 'cdkDragScale', transform: numberAttribute }]\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        /** Whether starting a dragging sequence from inside this group is disabled. */\n        this.disabled = false;\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListGroupDisabled', transform: booleanAttribute }]\n            }] } });\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = value;\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            if (this.elementContainerSelector) {\n                const container = this.element.nativeElement.querySelector(this.elementContainerSelector);\n                if (!container && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throw new Error(`CdkDropList could not find an element container matching the selector \"${this.elementContainerSelector}\"`);\n                }\n                ref.withElementContainer(container);\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i1$1.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\", booleanAttribute], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"], elementContainerSelector: [\"cdkDropListElementContainer\", \"elementContainerSelector\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }], propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListDisabled', transform: booleanAttribute }]\n            }], sortingDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListSortingDisabled', transform: booleanAttribute }]\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListAutoScrollDisabled', transform: booleanAttribute }]\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], elementContainerSelector: [{\n                type: Input,\n                args: ['cdkDropListElementContainer']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._drag = inject(CDK_DRAG_PARENT, { optional: true });\n        /** Whether the preview should preserve the same size as the item that is being dragged. */\n        this.matchSize = false;\n        this._drag?._setPreviewTemplate(this);\n    }\n    ngOnDestroy() {\n        this._drag?._resetPreviewTemplate(this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: [\"matchSize\", \"matchSize\", booleanAttribute] }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._drag = inject(CDK_DRAG_PARENT, { optional: true });\n        this._drag?._setPlaceholderTemplate(this);\n    }\n    ngOnDestroy() {\n        this._drag?._resetPlaceholderTemplate(this);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period = 0, scheduler = asyncScheduler) {\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, numberAttribute, Directive, Inject, Input, EventEmitter, inject, Injector, afterNextRender, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, ContentChildren, Output, ContentChild, ViewChild, Attribute, QueryList, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { MatRippleLoader, MAT_RIPPLE_GLOBAL_OPTIONS, _ErrorStateTracker, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n    providedIn: 'root',\n    factory: () => ({\n        separatorKeyCodes: [ENTER],\n    }),\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip.disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    constructor(_elementRef, _parentChip) {\n        this._elementRef = _elementRef;\n        this._parentChip = _parentChip;\n        /** Whether the action is interactive. */\n        this.isInteractive = true;\n        /** Whether this is the primary action in the chip. */\n        this._isPrimary = true;\n        this._disabled = false;\n        /** Tab index of the action. */\n        this.tabIndex = -1;\n        /**\n         * Private API to allow focusing this chip when it is disabled.\n         */\n        this._allowFocusWhenDisabled = false;\n        if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n            _elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary &&\n            !this._parentChip._isEditing) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipAction, deps: [{ token: i0.ElementRef }, { token: MAT_CHIP }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatChipAction, isStandalone: true, selector: \"[matChipAction]\", inputs: { isInteractive: \"isInteractive\", disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? -1 : numberAttribute(value))], _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_CHIP]\n                }] }], propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? -1 : numberAttribute(value)),\n                    }]\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatChipAvatar, isStandalone: true, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                    standalone: true,\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    constructor() {\n        super(...arguments);\n        /**\n         * MDC considers all trailing actions as a remove icon,\n         * but we support non-interactive trailing icons.\n         */\n        this.isInteractive = false;\n        this._isPrimary = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatChipTrailingIcon, isStandalone: true, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    constructor() {\n        super(...arguments);\n        this._isPrimary = false;\n    }\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatChipRemove, isStandalone: true, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                    standalone: true,\n                }]\n        }] });\n\nlet uid = 0;\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /** Whether the chip is disabled. */\n    get disabled() {\n        return this._disabled || this._chipListDisabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /**\n     * Reference to the MatRipple instance of the chip.\n     * @deprecated Considered an implementation detail. To be removed.\n     * @breaking-change 17.0.0\n     */\n    get ripple() {\n        return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n    }\n    set ripple(v) {\n        this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n    }\n    constructor(_changeDetectorRef, _elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        this._globalRippleOptions = _globalRippleOptions;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blurred. */\n        this._onBlur = new Subject();\n        /** Role for the root of the chip. */\n        this.role = null;\n        /** Whether the chip has focus. */\n        this._hasFocusInternal = false;\n        /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n        this.id = `mat-mdc-chip-${uid++}`;\n        // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n        // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n        // datepicker's use case.\n        /** ARIA label for the content of the chip. */\n        this.ariaLabel = null;\n        // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n        // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n        // datepicker's use case.\n        /** ARIA description for the content of the chip. */\n        this.ariaDescription = null;\n        /** Id of a span that contains this chip's aria description. */\n        this._ariaDescriptionId = `${this.id}-aria-description`;\n        /** Whether the chip list is disabled. */\n        this._chipListDisabled = false;\n        /**\n         * Determines whether or not the chip displays the remove styling and emits (removed) events.\n         */\n        this.removable = true;\n        /**\n         * Colors the chip for emphasis as if it were selected.\n         */\n        this.highlighted = false;\n        /** Whether the ripple effect is disabled or not. */\n        this.disableRipple = false;\n        this._disabled = false;\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** The unstyled chip selector for this component. */\n        this.basicChipAttrName = 'mat-basic-chip';\n        /**\n         * Handles the lazy creation of the MatChip ripple.\n         * Used to improve initial load time of large applications.\n         */\n        this._rippleLoader = inject(MatRippleLoader);\n        this._injector = inject(Injector);\n        this._document = _document;\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this._monitorFocus();\n        this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n            className: 'mat-mdc-chip-ripple',\n            disabled: this._isRippleDisabled(),\n        });\n    }\n    ngOnInit() {\n        // This check needs to happen in `ngOnInit` so the overridden value of\n        // `basicChipAttrName` coming from base classes can be picked up.\n        const element = this._elementRef.nativeElement;\n        this._isBasicChip =\n            element.hasAttribute(this.basicChipAttrName) ||\n                element.tagName.toLowerCase() === this.basicChipAttrName;\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngAfterContentInit() {\n        // Since the styling depends on the presence of some\n        // actions, we have to mark for check on changes.\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    ngDoCheck() {\n        this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n        this._actionChanges?.unsubscribe();\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !!this._globalRippleOptions?.disabled);\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        // Ignore backspace events where the user is holding down the key\n        // so that we don't accidentally remove too many chips.\n        if ((event.keyCode === BACKSPACE && !event.repeat) || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus not the next item. To work around the issue, we defer marking the chip\n                    // as not focused until after the next render.\n                    afterNextRender(() => this._ngZone.run(() => this._onBlur.next({ chip: this })), {\n                        injector: this._injector,\n                    });\n                }\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatChip, isStandalone: true, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", color: \"color\", removable: [\"removable\", \"removable\", booleanAttribute], highlighted: [\"highlighted\", \"highlighted\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], standalone: true, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }], propDecorators: { role: [{\n                type: Input\n            }], _allLeadingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\n            }], _allTrailingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\n            }], _allRemoveIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaDescription: [{\n                type: Input,\n                args: ['aria-description']\n            }], value: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], removable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], highlighted: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    constructor() {\n        super(...arguments);\n        /** Default chip options. */\n        this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n        /** Whether the chip list is selectable. */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list hides single-selection indicator. */\n        this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        this._selectable = true;\n        this._selected = false;\n        /** The unstyled chip selector for this component. */\n        this.basicChipAttrName = 'mat-basic-chip-option';\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n    }\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(value, false, true);\n    }\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (!this.disabled) {\n            // Interacting with the primary action implies that the chip already has focus, however\n            // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n            // We work around it by explicitly focusing the primary action of the current chip.\n            this.focus();\n            if (this.selectable) {\n                this.toggleSelected(true);\n            }\n        }\n    }\n    _hasLeadingGraphic() {\n        if (this.leadingIcon) {\n            return true;\n        }\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\n        // visually only using color (#25886).\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatChipOption, isStandalone: true, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { selectable: [\"selectable\", \"selectable\", booleanAttribute], selected: [\"selected\", \"selected\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\n            { provide: MatChip, useExisting: MatChipOption },\n            { provide: MAT_CHIP, useExisting: MatChipOption },\n        ], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selected: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    constructor(_elementRef, _document) {\n        this._elementRef = _elementRef;\n        this._document = _document;\n    }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipEditInput, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatChipEditInput, isStandalone: true, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n        super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions);\n        this.basicChipAttrName = 'mat-basic-chip-row';\n        /**\n         * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n         * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n         * while the editing action is being initialized.\n         */\n        this._editStartPending = false;\n        this.editable = false;\n        /** Emitted when the chip is edited. */\n        this.edited = new EventEmitter();\n        this._isEditing = false;\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n        });\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _handleFocus() {\n        if (!this._isEditing && !this.disabled) {\n            this.focus();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _handleDoubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon && this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = this._editStartPending = true;\n        // Defer initializing the input until after it has been added to the DOM.\n        afterNextRender(() => {\n            this._getEditInput().initialize(value);\n            this._editStartPending = false;\n        }, { injector: this._injector });\n    }\n    _onEditFinish() {\n        this._isEditing = this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    _isRippleDisabled() {\n        return super._isRippleDisabled() || this._isEditing;\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipRow, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatChipRow, isStandalone: true, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus($event)\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n            { provide: MatChip, useExisting: MatChipRow },\n            { provide: MAT_CHIP, useExisting: MatChipRow },\n        ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        // Has to have a negative tabindex in order to capture\n                        // focus and redirect it to the primary action.\n                        '[attr.tabindex]': 'disabled ? null : -1',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '(focus)': '_handleFocus($event)',\n                        '(dblclick)': '_handleDoubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [MatChipAction, MatChipEditInput], template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color, var(--mat-app-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font, var(--mat-app-label-large-font));line-height:var(--mdc-chip-label-text-line-height, var(--mat-app-label-large-line-height));font-size:var(--mdc-chip-label-text-size, var(--mat-app-label-large-size));font-weight:var(--mdc-chip-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mdc-chip-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color, var(--mat-app-on-secondary-container));--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color, var(--mat-app-secondary-container));--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color, var(--mat-app-on-secondary-container));--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color, var(--mat-app-on-surface-variant));opacity:var(--mdc-chip-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color, var(--mat-app-on-secondary-container));opacity:var(--mdc-chip-selected-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-app-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-app-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-app-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' destroy events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipRemovedChanges() {\n        return this._getChipStream(chip => chip.removed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n    }\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return !this._chips || this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    set role(value) {\n        this._explicitRole = value;\n    }\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    constructor(_elementRef, _changeDetectorRef, _dir) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        /** Index of the last destroyed chip that had focus. */\n        this._lastDestroyedFocusedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Role to use if it hasn't been overwritten by the user. */\n        this._defaultRole = 'presentation';\n        this._disabled = false;\n        /** Tabindex of the chip set. */\n        this.tabIndex = 0;\n        this._explicitRole = null;\n        /** Flat list of all the actions contained within the chips. */\n        this._chipActions = new QueryList();\n    }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        this._chips?.forEach(chip => {\n            chip._chipListDisabled = this._disabled;\n            chip._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previous = this._elementRef.nativeElement.tabIndex;\n        if (previous !== -1) {\n            // Set the tabindex directly on the element, instead of going through\n            // the data binding, because we aren't guaranteed that change detection\n            // will run quickly enough to allow focus to escape.\n            this._elementRef.nativeElement.tabIndex = -1;\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n            // doesn't allow enough time for the focus to escape.\n            setTimeout(() => (this._elementRef.nativeElement.tabIndex = previous));\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-mdc-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        this._dir?.change\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipSet, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatChipSet, isStandalone: true, selector: \"mat-chip-set\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], role: \"role\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], role: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    constructor() {\n        super(...arguments);\n        /**\n         * Function when touched. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        /**\n         * Function when changed. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onChange = () => { };\n        // TODO: MDC uses `grid` here\n        this._defaultRole = 'listbox';\n        /** Default chip options. */\n        this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n        this._multiple = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * A function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         */\n        this.compareWith = (o1, o2) => o1 === o2;\n        /** Whether this chip listbox is required. */\n        this.required = false;\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        /** Event emitted when the selected chip listbox value has been changed by the user. */\n        this.change = new EventEmitter();\n        this._chips = undefined;\n    }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = value;\n        this._syncListboxProperties();\n    }\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._syncListboxProperties();\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncListboxProperties();\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    ngAfterContentInit() {\n        if (this._pendingInitialValue !== undefined) {\n            Promise.resolve().then(() => {\n                this._setSelectionByValue(this._pendingInitialValue, false);\n                this._pendingInitialValue = undefined;\n            });\n        }\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (this._chips) {\n            this._setSelectionByValue(value, false);\n        }\n        else if (value != null) {\n            this._pendingInitialValue = value;\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatChipListbox, isStandalone: true, selector: \"mat-chip-listbox\", inputs: { multiple: [\"multiple\", \"multiple\", booleanAttribute], ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: [\"selectable\", \"selectable\", booleanAttribute], compareWith: \"compareWith\", required: [\"required\", \"required\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"(disabled || empty) ? -1 : tabIndex\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n                        // TODO: replace this binding with use of AriaDescriber\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** Whether the chip grid is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n        super(elementRef, changeDetectorRef, dir);\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-grid';\n        this._defaultRole = 'grid';\n        /**\n         * List of element ids to propagate to the chipInput's aria-describedby attribute.\n         */\n        this._ariaDescribedbyIds = [];\n        /**\n         * Function when touched. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        /**\n         * Function when changed. Set as part of ControlValueAccessor implementation.\n         * @docs-private\n         */\n        this._onChange = () => { };\n        this._value = [];\n        /** Emits when the chip grid value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Emits whenever the raw value of the chip-grid changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        this._chips = undefined;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else {\n            const activeItem = this._keyManager.activeItem;\n            if (activeItem) {\n                activeItem.focus();\n            }\n            else {\n                this._keyManager.setFirstItemActive();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** Refreshes the error state of the chip grid. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const activeItem = this._keyManager.activeItem;\n        if (keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (activeItem) {\n                    this._keyManager.setActiveItem(activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            // The up and down arrows are supposed to navigate between the individual rows in the grid.\n            // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n            // flag as the active action and moving focus between them ourseles instead of delegating\n            // to the key manager. For more information, see #29359 and:\n            // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n            if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n                const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n                const currentIndex = eligibleActions.indexOf(activeItem);\n                const delta = event.keyCode === UP_ARROW ? -1 : 1;\n                event.preventDefault();\n                if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n                    this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n                }\n            }\n            else {\n                super._handleKeydown(event);\n            }\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipGrid, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: i2.NgControl, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatChipGrid, isStandalone: true, selector: \"mat-chip-grid\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"attr.tabindex\": \"(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i3.ErrorStateMatcher }, { type: i2.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    /** Register input for chip list */\n    get chipGrid() {\n        return this._chipGrid;\n    }\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    constructor(_elementRef, defaultOptions, formField) {\n        this._elementRef = _elementRef;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /**\n         * Whether or not the chipEnd event will be emitted when the input is blurred.\n         */\n        this.addOnBlur = false;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n        this._disabled = false;\n        this.inputElement = this._elementRef.nativeElement;\n        this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (this.empty && event.keyCode === BACKSPACE) {\n            // Ignore events where the user is holding down backspace\n            // so that we don't accidentally remove too many chips.\n            if (!event.repeat) {\n                this._chipGrid._focusLastChip();\n            }\n            event.preventDefault();\n        }\n        else {\n            this._emitChipEnd(event);\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event?.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n    }\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        // Set the value directly in the DOM since this binding\n        // is prone to \"changed after checked\" errors.\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipInput, deps: [{ token: i0.ElementRef }, { token: MAT_CHIPS_DEFAULT_OPTIONS }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatChipInput, isStandalone: true, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled || null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_CHIPS_DEFAULT_OPTIONS]\n                }] }, { type: i1$2.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }], propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: [{ alias: 'matChipInputAddOnBlur', transform: booleanAttribute }]\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipsModule, imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip,\n            MatChipAvatar,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon], exports: [MatCommonModule, MatChip,\n            MatChipAvatar,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipsModule, providers: [\n            ErrorStateMatcher,\n            {\n                provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                useValue: {\n                    separatorKeyCodes: [ENTER],\n                },\n            },\n        ], imports: [MatCommonModule, MatRippleModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { Platform, _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ChangeDetectorRef, Injector, afterNextRender, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n        /**\n         * Whether the dialog should close when the underlying overlay is detached. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n         * external detachment can happen as a result of a scroll strategy triggering it or when the\n         * browser location changes.\n         */\n        this.closeOnOverlayDetachments = true;\n    }\n}\n\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        this._platform = inject(Platform);\n        /** The class that traps and manages focus within the dialog. */\n        this._focusTrap = null;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Queue of the IDs of the dialog's label element, based on their definition order. The first\n         * ID will be used as the `aria-labelledby` value. We use a queue here to handle the case\n         * where there are two or more titles in the DOM at a time and the first one is destroyed while\n         * the rest are present.\n         */\n        this._ariaLabelledByQueue = [];\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        this._injector = inject(Injector);\n        this._isDestroyed = false;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._document = _document;\n        if (this._config.ariaLabelledBy) {\n            this._ariaLabelledByQueue.push(this._config.ariaLabelledBy);\n        }\n    }\n    _addAriaLabelledBy(id) {\n        this._ariaLabelledByQueue.push(id);\n        this._changeDetectorRef.markForCheck();\n    }\n    _removeAriaLabelledBy(id) {\n        const index = this._ariaLabelledByQueue.indexOf(id);\n        if (index > -1) {\n            this._ariaLabelledByQueue.splice(index, 1);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._isDestroyed = true;\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        if (this._isDestroyed) {\n            return;\n        }\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait until after the next render.\n        afterNextRender(() => {\n            const element = this._elementRef.nativeElement;\n            switch (this._config.autoFocus) {\n                case false:\n                case 'dialog':\n                    // Ensure that focus is on the dialog container. It's possible that a different\n                    // component tried to move focus while the open animation was running. See:\n                    // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                    // if the focus isn't inside the dialog already, because it's possible that the consumer\n                    // turned off `autoFocus` in order to move focus themselves.\n                    if (!this._containsFocus()) {\n                        element.focus();\n                    }\n                    break;\n                case true:\n                case 'first-tabbable':\n                    const focusedSuccessfully = this._focusTrap?.focusInitialElement();\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                    break;\n                case 'first-heading':\n                    this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                    break;\n                default:\n                    this._focusByCssSelector(this._config.autoFocus);\n                    break;\n            }\n        }, { injector: this._injector });\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            // Save the previously focused element. This element will be re-focused\n            // when the dialog closes.\n            if (this._document) {\n                this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n            }\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkDialogContainer, isStandalone: true, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet />\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DialogConfig]\n                }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentRef = contentRef;\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: Dialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEFAULT_DIALOG_CONFIG]\n                }] }, { type: Dialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DIALOG_SCROLL_STRATEGY]\n                }] }] });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\nclass DialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DialogModule, imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer], exports: [\n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule,\n            CdkDialogContainer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DialogModule, providers: [Dialog], imports: [OverlayModule, PortalModule, A11yModule, \n            // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n            // don't have to remember to import it or be faced with an unhelpful error.\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule, CdkDialogContainer],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    providers: [Dialog],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, InjectionToken, inject, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\nclass MatDialogContainer extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, _animationMode, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        this._animationMode = _animationMode;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Whether animations are enabled. */\n        this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n        /** Number of actions projected in the dialog. */\n        this._actionSectionCount = 0;\n        /** Host element of the dialog container component. */\n        this._hostElement = this._elementRef.nativeElement;\n        /** Duration of the dialog open animation. */\n        this._enterAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION\n            : 0;\n        /** Duration of the dialog close animation. */\n        this._exitAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION\n            : 0;\n        /** Current timer for dialog animations. */\n        this._animationTimer = null;\n        /**\n         * Completes the dialog open by clearing potential animation classes, trapping\n         * focus and emitting an opened event.\n         */\n        this._finishDialogOpen = () => {\n            this._clearAnimationClasses();\n            this._openAnimationDone(this._enterAnimationDuration);\n        };\n        /**\n         * Completes the dialog close by clearing potential animation classes, restoring\n         * focus and emitting a closed event.\n         */\n        this._finishDialogClose = () => {\n            this._clearAnimationClasses();\n            this._animationStateChanged.emit({ state: 'closed', totalTime: this._exitAnimationDuration });\n        };\n    }\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        this._startOpenAnimation();\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._enterAnimationDuration });\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._enterAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(OPENING_CLASS, OPEN_CLASS));\n            this._waitForAnimationToComplete(this._enterAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._exitAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._exitAnimationDuration}ms`);\n            // We need to give the `setProperty` call from above some time to be applied.\n            this._requestAnimationFrame(() => this._hostElement.classList.add(CLOSING_CLASS));\n            this._waitForAnimationToComplete(this._exitAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /**\n     * Updates the number action sections.\n     * @param delta Increase/decrease in the number of sections.\n     */\n    _updateActionSectionCount(delta) {\n        this._actionSectionCount += delta;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS, CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n    /** Runs a callback in `requestAnimationFrame`, if available. */\n    _requestAnimationFrame(callback) {\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame === 'function') {\n                requestAnimationFrame(callback);\n            }\n            else {\n                callback();\n            }\n        });\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    attachComponentPortal(portal) {\n        // When a component is passed into the dialog, the host element interrupts\n        // the `display:flex` from affecting the dialog title, content, and\n        // actions. To fix this, we make the component host `display: contents` by\n        // marking its host with the `mat-mdc-dialog-component-host` class.\n        //\n        // Note that this problem does not exist when a template ref is used since\n        // the title, contents, and actions are then nested directly under the\n        // dialog surface.\n        const ref = super.attachComponentPortal(portal);\n        ref.location.nativeElement.classList.add('mat-mdc-dialog-component-host');\n        return ref;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDialogContainer, isStandalone: true, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledByQueue[0]\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\", \"class.mat-mdc-dialog-container-with-actions\": \"_actionSectionCount > 0\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12));border-radius:var(--mdc-dialog-container-shape, var(--mat-app-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-app-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-app-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-app-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-app-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-app-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-app-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-app-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-app-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-app-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-app-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-app-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-app-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.cdk-high-contrast-active .mat-mdc-dialog-actions{border-top-color:CanvasText}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledByQueue[0]',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                        '[class.mat-mdc-dialog-container-with-actions]': '_actionSectionCount > 0',\n                    }, template: \"<div class=\\\"mat-mdc-dialog-inner-container mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet />\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-dialog-container{width:100%;height:100%;display:block;box-sizing:border-box;max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;outline:0}.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-max-width, 80vw);min-width:var(--mat-dialog-container-min-width, 0)}@media(max-width: 599px){.cdk-overlay-pane.mat-mdc-dialog-panel{max-width:var(--mat-dialog-container-small-max-width, 80vw)}}.mat-mdc-dialog-inner-container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;opacity:0;transition:opacity linear var(--mat-dialog-transition-duration, 0ms);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mdc-dialog--closing .mat-mdc-dialog-inner-container{transition:opacity 75ms linear;transform:none}.mdc-dialog--open .mat-mdc-dialog-inner-container{opacity:1}._mat-animation-noopable .mat-mdc-dialog-inner-container{transition:none}.mat-mdc-dialog-surface{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;width:100%;height:100%;position:relative;overflow-y:auto;outline:0;transform:scale(0.8);transition:transform var(--mat-dialog-transition-duration, 0ms) cubic-bezier(0, 0, 0.2, 1);max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit;box-shadow:var(--mat-dialog-container-elevation-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12));border-radius:var(--mdc-dialog-container-shape, var(--mat-app-corner-extra-large, 4px));background-color:var(--mdc-dialog-container-color, var(--mat-app-surface, white))}[dir=rtl] .mat-mdc-dialog-surface{text-align:right}.mdc-dialog--open .mat-mdc-dialog-surface,.mdc-dialog--closing .mat-mdc-dialog-surface{transform:none}._mat-animation-noopable .mat-mdc-dialog-surface{transition:none}.mat-mdc-dialog-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mat-mdc-dialog-title{display:block;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:var(--mat-dialog-headline-padding, 0 24px 9px)}.mat-mdc-dialog-title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mat-mdc-dialog-title{text-align:right}.mat-mdc-dialog-container .mat-mdc-dialog-title{color:var(--mdc-dialog-subhead-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mdc-dialog-subhead-font, var(--mat-app-headline-small-font, inherit));line-height:var(--mdc-dialog-subhead-line-height, var(--mat-app-headline-small-line-height, 1.5rem));font-size:var(--mdc-dialog-subhead-size, var(--mat-app-headline-small-size, 1rem));font-weight:var(--mdc-dialog-subhead-weight, var(--mat-app-headline-small-weight, 400));letter-spacing:var(--mdc-dialog-subhead-tracking, var(--mat-app-headline-small-tracking, 0.03125em))}.mat-mdc-dialog-content{display:block;flex-grow:1;box-sizing:border-box;margin:0;overflow:auto;max-height:65vh}.mat-mdc-dialog-content>:first-child{margin-top:0}.mat-mdc-dialog-content>:last-child{margin-bottom:0}.mat-mdc-dialog-container .mat-mdc-dialog-content{color:var(--mdc-dialog-supporting-text-color, var(--mat-app-on-surface-variant, rgba(0, 0, 0, 0.6)));font-family:var(--mdc-dialog-supporting-text-font, var(--mat-app-body-medium-font, inherit));line-height:var(--mdc-dialog-supporting-text-line-height, var(--mat-app-body-medium-line-height, 1.5rem));font-size:var(--mdc-dialog-supporting-text-size, var(--mat-app-body-medium-size, 1rem));font-weight:var(--mdc-dialog-supporting-text-weight, var(--mat-app-body-medium-weight, 400));letter-spacing:var(--mdc-dialog-supporting-text-tracking, var(--mat-app-body-medium-tracking, 0.03125em))}.mat-mdc-dialog-container .mat-mdc-dialog-content{padding:var(--mat-dialog-content-padding, 20px 24px)}.mat-mdc-dialog-container-with-actions .mat-mdc-dialog-content{padding:var(--mat-dialog-with-actions-content-padding, 20px 24px)}.mat-mdc-dialog-container .mat-mdc-dialog-title+.mat-mdc-dialog-content{padding-top:0}.mat-mdc-dialog-actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0);padding:var(--mat-dialog-actions-padding, 8px);justify-content:var(--mat-dialog-actions-alignment, start)}.cdk-high-contrast-active .mat-mdc-dialog-actions{border-top-color:CanvasText}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-start,.mat-mdc-dialog-actions[align=start]{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}.mat-mdc-dialog-component-host{display:contents}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i1.FocusMonitor }] });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n\nvar MatDialogState;\n(function (MatDialogState) {\n    MatDialogState[MatDialogState[\"OPEN\"] = 0] = \"OPEN\";\n    MatDialogState[MatDialogState[\"CLOSING\"] = 1] = \"CLOSING\";\n    MatDialogState[MatDialogState[\"CLOSED\"] = 2] = \"CLOSED\";\n})(MatDialogState || (MatDialogState = {}));\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = MatDialogState.OPEN;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Used to target panels specifically tied to dialogs.\n        _ref.addPanelClass('mat-mdc-dialog-panel');\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = MatDialogState.CLOSING;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = MatDialogState.CLOSED;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.block();\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/**\n * @docs-private\n * @deprecated No longer used. To be removed.\n * @breaking-change 19.0.0\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, _defaultOptions, _scrollStrategy, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this.dialogConfigClass = MatDialogConfig;\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._dialog = injector.get(Dialog);\n        this._dialogRefConstructor = MatDialogRef;\n        this._dialogContainerType = MatDialogContainer;\n        this._dialogDataToken = MAT_DIALOG_DATA;\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || `mat-mdc-dialog-${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentRef = cdkRef.componentRef;\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialog, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }] });\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDialogClose, isStandalone: true, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    standalone: true,\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\nclass MatDialogLayoutSection {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                this._onAdd();\n            });\n        }\n    }\n    ngOnDestroy() {\n        // Note: we null check because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        const instance = this._dialogRef?._containerInstance;\n        if (instance) {\n            Promise.resolve().then(() => {\n                this._onRemove();\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogLayoutSection, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDialogLayoutSection, isStandalone: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogLayoutSection, decorators: [{\n            type: Directive,\n            args: [{ standalone: true }]\n        }], ctorParameters: () => [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }] });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle extends MatDialogLayoutSection {\n    constructor() {\n        super(...arguments);\n        this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    _onAdd() {\n        // Note: we null check the queue, because there are some internal\n        // tests that are mocking out `MatDialogRef` incorrectly.\n        this._dialogRef._containerInstance?._addAriaLabelledBy?.(this.id);\n    }\n    _onRemove() {\n        this._dialogRef?._containerInstance?._removeAriaLabelledBy?.(this.id);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogTitle, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDialogTitle, isStandalone: true, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDialogContent, isStandalone: true, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, hostDirectives: [{ directive: i3.CdkScrollable }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                    standalone: true,\n                    hostDirectives: [CdkScrollable],\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions extends MatDialogLayoutSection {\n    _onAdd() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(1);\n    }\n    _onRemove() {\n        this._dialogRef._containerInstance?._updateActionSectionCount?.(-1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogActions, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDialogActions, isStandalone: true, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-start\": \"align === \\\"start\\\"\", \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-start]': 'align === \"start\"',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\nconst DIRECTIVES = [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n];\nclass MatDialogModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogModule, imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent], exports: [MatCommonModule, MatDialogContainer,\n            MatDialogClose,\n            MatDialogTitle,\n            MatDialogActions,\n            MatDialogContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogModule, providers: [MatDialog], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, ...DIRECTIVES],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatDialog],\n                }]\n        }] });\n\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n    ]),\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogState, MatDialogTitle, _closeDialogVia, _defaultParams, matDialogAnimations };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatDivider, isStandalone: true, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-app-outline));border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-app-outline));border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, styles: [\".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color, var(--mat-app-outline));border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color, var(--mat-app-outline));border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatDivider], exports: [MatDivider, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatDivider],\n                    exports: [MatDivider, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n        this.multi = false;\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this.multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkAccordion, isStandalone: true, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: [\"multi\", \"multi\", booleanAttribute] }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                    standalone: true,\n                }]\n        }], propDecorators: { multi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * A basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        /** Whether the AccordionItem is disabled. */\n        this.disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkAccordionItem, isStandalone: true, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: [\"expanded\", \"expanded\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkAccordion, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_ACCORDION]\n                }, {\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }], propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass CdkAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordionModule, imports: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkAccordion, CdkAccordionItem],\n                    exports: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, SkipSelf, Input, Output, ContentChild, ViewChild, numberAttribute, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM. This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        // Clear the `visibility` while open, otherwise the content will be visible when placed in\n        // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n        // that have a `visibility` of their own (see #27436).\n        state('expanded', style({ height: '*', visibility: '' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template, _expansionPanel) {\n        this._template = _template;\n        this._expansionPanel = _expansionPanel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }, { token: MAT_EXPANSION_PANEL, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatExpansionPanelContent, isStandalone: true, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = value;\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        this.accordion = accordion;\n        this._document = _document;\n        this._animationsDisabled = _animationMode === 'NoopAnimations';\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n    /** Called when the expansion animation has started. */\n    _animationStarted(event) {\n        if (!isInitialAnimation(event) && !this._animationsDisabled && this._body) {\n            // Prevent the user from tabbing into the content while it's animating.\n            // TODO(crisbeto): maybe use `inert` to prevent focus from entering while closed as well\n            // instead of `visibility`? Will allow us to clean up some code but needs more testing.\n            this._body?.nativeElement.setAttribute('inert', '');\n        }\n    }\n    /** Called when the expansion animation has finished. */\n    _animationDone(event) {\n        if (!isInitialAnimation(event)) {\n            if (event.toState === 'expanded') {\n                this.afterExpand.emit();\n            }\n            else if (event.toState === 'collapsed') {\n                this.afterCollapse.emit();\n            }\n            // Re-enable tabbing once the animation is finished.\n            if (!this._animationsDisabled && this._body) {\n                this._body.nativeElement.removeAttribute('inert');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatExpansionPanel, isStandalone: true, selector: \"mat-expansion-panel\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], togglePosition: \"togglePosition\" }, outputs: { afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: undefined },\n            { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n        ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color, var(--mat-app-surface));color:var(--mat-expansion-container-text-color, var(--mat-app-on-surface));border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font, var(--mat-app-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-app-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-app-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-app-body-large-tracking))}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-app-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                        { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, standalone: true, imports: [CdkPortalOutlet], template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color, var(--mat-app-surface));color:var(--mat-expansion-container-text-color, var(--mat-app-on-surface));border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font, var(--mat-app-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-app-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-app-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-app-body-large-tracking))}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-app-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [MAT_ACCORDION]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/** Checks whether an animation is the initial setup animation. */\nfunction isInitialAnimation(event) {\n    return event.fromState === 'void';\n}\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatExpansionPanelActionRow, isStandalone: true, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** Tab index of the header. */\n        this.tabIndex = 0;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatExpansionPanelHeader, isStandalone: true, selector: \"mat-expansion-panel-header\", inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, ngImport: i0, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font, var(--mat-app-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-app-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-app-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-app-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-app-title-medium-tracking))}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-app-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-app-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-app-on-surface-variant))}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, standalone: true, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font, var(--mat-app-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-app-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-app-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-app-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-app-title-medium-tracking))}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-app-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-app-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-app-on-surface-variant))}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"] }]\n        }], ctorParameters: () => [{ type: MatExpansionPanel, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatExpansionPanelDescription, isStandalone: true, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatExpansionPanelTitle, isStandalone: true, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        /** Whether the expansion indicator should be hidden. */\n        this.hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._keyManager?.destroy();\n        this._ownHeaders.destroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatAccordion, isStandalone: true, selector: \"mat-accordion\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n            {\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion,\n            },\n        ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                    standalone: true,\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\nclass MatExpansionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule,\n            MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent], exports: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkAccordionModule,\n                        PortalModule,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, numberAttribute, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, NgModule } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { MatIconButton, MatButtonModule } from '@angular/material/button';\nimport { MatSelect, MatSelectModule } from '@angular/material/select';\nimport { MatTooltip, MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOption } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\nlet nextUniqueId = 0;\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator {\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(value || 0, 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = value || 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(value || 0, 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => numberAttribute(p, 0));\n        this._updateDisplayedPageSizeOptions();\n    }\n    constructor(_intl, _changeDetectorRef, defaults) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ID for the DOM node containing the paginator's items per page label. */\n        this._pageSizeLabelId = `mat-paginator-page-size-label-${nextUniqueId++}`;\n        this._isInitialized = false;\n        this._initializedStream = new ReplaySubject(1);\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        /** Whether to hide the page size selection UI from the user. */\n        this.hidePageSize = false;\n        /** Whether to show the first/last buttons UI to the user. */\n        this.showFirstLastButtons = false;\n        /** Used to configure the underlying `MatSelect` inside the paginator. */\n        this.selectConfig = {};\n        /** Whether the paginator is disabled. */\n        this.disabled = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this.hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this.showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n        this._formFieldAppearance = defaults?.formFieldAppearance || 'outline';\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._initializedStream.next();\n    }\n    ngOnDestroy() {\n        this._initializedStream.complete();\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._isInitialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatPaginator, isStandalone: true, selector: \"mat-paginator\", inputs: { color: \"color\", pageIndex: [\"pageIndex\", \"pageIndex\", numberAttribute], length: [\"length\", \"length\", numberAttribute], pageSize: [\"pageSize\", \"pageSize\", numberAttribute], pageSizeOptions: \"pageSizeOptions\", hidePageSize: [\"hidePageSize\", \"hidePageSize\", booleanAttribute], showFirstLastButtons: [\"showFirstLastButtons\", \"showFirstLastButtons\", booleanAttribute], selectConfig: \"selectConfig\", disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { page: \"page\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-mdc-paginator\" }, exportAs: [\"matPaginator\"], ngImport: i0, template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"], dependencies: [{ kind: \"component\", type: MatFormField, selector: \"mat-form-field\", inputs: [\"hideRequiredMarker\", \"color\", \"floatLabel\", \"appearance\", \"subscriptSizing\", \"hintLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: MatSelect, selector: \"mat-select\", inputs: [\"aria-describedby\", \"panelClass\", \"disabled\", \"disableRipple\", \"tabIndex\", \"hideSingleSelectionIndicator\", \"placeholder\", \"required\", \"multiple\", \"disableOptionCentering\", \"compareWith\", \"value\", \"aria-label\", \"aria-labelledby\", \"errorStateMatcher\", \"typeaheadDebounceInterval\", \"sortComparator\", \"id\", \"panelWidth\"], outputs: [\"openedChange\", \"opened\", \"closed\", \"selectionChange\", \"valueChange\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: MatOption, selector: \"mat-option\", inputs: [\"value\", \"id\", \"disabled\"], outputs: [\"onSelectionChange\"], exportAs: [\"matOption\"] }, { kind: \"component\", type: MatIconButton, selector: \"button[mat-icon-button]\", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatTooltip, selector: \"[matTooltip]\", inputs: [\"matTooltipPosition\", \"matTooltipPositionAtOrigin\", \"matTooltipDisabled\", \"matTooltipShowDelay\", \"matTooltipHideDelay\", \"matTooltipTouchGestures\", \"matTooltip\", \"matTooltipClass\"], exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', host: {\n                        'class': 'mat-mdc-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [MatFormField, MatSelect, MatOption, MatIconButton, MatTooltip], template: \"<div class=\\\"mat-mdc-paginator-outer-container\\\">\\n  <div class=\\\"mat-mdc-paginator-container\\\">\\n    @if (!hidePageSize) {\\n      <div class=\\\"mat-mdc-paginator-page-size\\\">\\n        <div class=\\\"mat-mdc-paginator-page-size-label\\\" [attr.id]=\\\"_pageSizeLabelId\\\">\\n          {{_intl.itemsPerPageLabel}}\\n        </div>\\n\\n        @if (_displayedPageSizeOptions.length > 1) {\\n          <mat-form-field\\n            [appearance]=\\\"_formFieldAppearance!\\\"\\n            [color]=\\\"color\\\"\\n            class=\\\"mat-mdc-paginator-page-size-select\\\">\\n            <mat-select\\n              #selectRef\\n              [value]=\\\"pageSize\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [aria-labelledby]=\\\"_pageSizeLabelId\\\"\\n              [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n              [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n              (selectionChange)=\\\"_changePageSize($event.value)\\\"\\n              hideSingleSelectionIndicator>\\n              @for (pageSizeOption of _displayedPageSizeOptions; track pageSizeOption) {\\n                <mat-option [value]=\\\"pageSizeOption\\\">\\n                  {{pageSizeOption}}\\n                </mat-option>\\n              }\\n            </mat-select>\\n          <div class=\\\"mat-mdc-paginator-touch-target\\\" (click)=\\\"selectRef.open()\\\"></div>\\n          </mat-form-field>\\n        }\\n\\n        @if (_displayedPageSizeOptions.length <= 1) {\\n          <div class=\\\"mat-mdc-paginator-page-size-value\\\">{{pageSize}}</div>\\n        }\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-paginator-range-actions\\\">\\n      <div class=\\\"mat-mdc-paginator-range-label\\\" aria-live=\\\"polite\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-first\\\"\\n                (click)=\\\"firstPage()\\\"\\n                [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_previousButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-mdc-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-mdc-paginator-icon\\\"\\n             viewBox=\\\"0 0 24 24\\\"\\n             focusable=\\\"false\\\"\\n             aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      @if (showFirstLastButtons) {\\n        <button mat-icon-button type=\\\"button\\\"\\n                class=\\\"mat-mdc-paginator-navigation-last\\\"\\n                (click)=\\\"lastPage()\\\"\\n                [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n                [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n                [matTooltipPosition]=\\\"'above'\\\"\\n                [disabled]=\\\"_nextButtonsDisabled()\\\">\\n          <svg class=\\\"mat-mdc-paginator-icon\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              focusable=\\\"false\\\"\\n              aria-hidden=\\\"true\\\">\\n            <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n          </svg>\\n        </button>\\n      }\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-paginator{display:block;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-paginator-container-text-color, var(--mat-app-on-surface));background-color:var(--mat-paginator-container-background-color, var(--mat-app-surface));font-family:var(--mat-paginator-container-text-font, var(--mat-app-body-small-font));line-height:var(--mat-paginator-container-text-line-height, var(--mat-app-body-small-line-height));font-size:var(--mat-paginator-container-text-size, var(--mat-app-body-small-size));font-weight:var(--mat-paginator-container-text-weight, var(--mat-app-body-small-weight));letter-spacing:var(--mat-paginator-container-text-tracking, var(--mat-app-body-small-tracking));--mat-form-field-container-height:var(--mat-paginator-form-field-container-height);--mat-form-field-container-vertical-padding:var(--mat-paginator-form-field-container-vertical-padding)}.mat-mdc-paginator .mat-mdc-select-value{font-size:var(--mat-paginator-select-trigger-text-size, var(--mat-app-body-small-size))}.mat-mdc-paginator .mat-mdc-form-field-subscript-wrapper{display:none}.mat-mdc-paginator .mat-mdc-select{line-height:1.5}.mat-mdc-paginator-outer-container{display:flex}.mat-mdc-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap;width:100%;min-height:var(--mat-paginator-container-size)}.mat-mdc-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-mdc-paginator-page-size{margin-right:0;margin-left:8px}.mat-mdc-paginator-page-size-label{margin:0 4px}.mat-mdc-paginator-page-size-select{margin:0 4px;width:84px}.mat-mdc-paginator-range-label{margin:0 32px 0 24px}.mat-mdc-paginator-range-actions{display:flex;align-items:center}.mat-mdc-paginator-icon{display:inline-block;width:28px;fill:var(--mat-paginator-enabled-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon{fill:var(--mat-paginator-disabled-icon-color)}[dir=rtl] .mat-mdc-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon,.cdk-high-contrast-active .mat-mdc-paginator-icon{fill:currentColor;fill:CanvasText}.cdk-high-contrast-active .mat-mdc-paginator-range-actions .mat-mdc-icon-button{outline:solid 1px}.mat-mdc-paginator-touch-target{display:var(--mat-paginator-touch-target-display);position:absolute;top:50%;left:50%;width:84px;height:48px;background-color:rgba(0,0,0,0);transform:translate(-50%, -50%);cursor:pointer}\"] }]\n        }], ctorParameters: () => [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], length: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastButtons: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectConfig: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], page: [{\n                type: Output\n            }] } });\n\nclass MatPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator], exports: [MatPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatButtonModule, MatSelectModule, MatTooltipModule, MatPaginator],\n                    exports: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the progress spinner. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0;position:relative;direction:ltr;transition:opacity 250ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none !important}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1;animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color, var(--mat-app-primary))}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import { Overlay, CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NgClass, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Self, Attribute, ContentChildren, ContentChild, Input, ViewChild, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { _countGroupLabelsBeforeOption, _getOptionScrollPosition, _ErrorStateTracker, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, filter, map, distinctUntilChanged, takeUntil, take } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /** This animation transforms the select's overlay panel on and off the page. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)',\n        })),\n        transition('void => showing', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)',\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const overlay = inject(Overlay);\n        return () => overlay.scrollStrategies.reposition();\n    },\n});\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nclass MatSelect {\n    /** Scrolls a particular option into the view. */\n    _scrollOptionIntoView(index) {\n        const option = this.options.toArray()[index];\n        if (option) {\n            const panel = this.panel.nativeElement;\n            const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n            const element = option._getHostElement();\n            if (index === 0 && labelCount === 1) {\n                // If we've got one group label before the option and we're at the top option,\n                // scroll the list to the top. This is better UX than scrolling the list to the\n                // top of the option, because it allows the user to read the top group's label.\n                panel.scrollTop = 0;\n            }\n            else {\n                panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n            }\n        }\n    }\n    /** Called when the panel has been opened and the overlay has settled on its final position. */\n    _positioningSettled() {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    /** Creates a change event object that should be emitted by the select. */\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncParentProperties();\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = value;\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /** Whether the select is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor(_viewportRuler, _changeDetectorRef, \n    /**\n     * @deprecated Unused param, will be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone, defaultErrorStateMatcher, _elementRef, _dir, parentForm, parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n        ];\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `aria-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Disable the automatic labeling to avoid issues like #27241.\n         * @docs-private\n         */\n        this.disableAutomaticLabeling = true;\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        /** Whether the select is disabled. */\n        this.disabled = false;\n        /** Whether ripples in the select are disabled. */\n        this.disableRipple = false;\n        /** Tab index of the select. */\n        this.tabIndex = 0;\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        this._multiple = false;\n        /** Whether to center the active option over the trigger. */\n        this.disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /**\n         * Width of the panel. If set to `auto`, the panel will match the trigger width.\n         * If set to null or an empty string, the panel will grow to match the longest option's text.\n         */\n        this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined'\n            ? this._defaultOptions.panelWidth\n            : 'auto';\n        this._initialized = new Subject();\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n         * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n         * panel. Track the modal we have changed so we can undo the changes on destroy.\n         */\n        this._trackedModal = null;\n        // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n        // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n        // recommendation.\n        //\n        // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n        // makes a few exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        //\n        // The user can focus disabled options using the keyboard, but the user cannot click disabled\n        // options.\n        this._skipPredicate = (option) => {\n            if (this.panelOpen) {\n                // Support keyboard focusing disabled options in an ARIA listbox.\n                return false;\n            }\n            // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n            // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n            // closed.\n            return option.disabled;\n        };\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (_defaultOptions?.typeaheadDebounceInterval != null) {\n            this.typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initialized.next();\n        this._initialized.complete();\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by the input, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this.typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n        this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (!this._canOpen()) {\n            return;\n        }\n        // It's important that we read this as late as possible, because doing so earlier will\n        // return a different element since it's based on queries in the form field which may\n        // not have run yet. Also this needs to be assigned before we measure the overlay width.\n        if (this._parentFormField) {\n            this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n        }\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        this._applyModalPanelOwnership();\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Required for the MDC form field to pick up when the overlay has been opened.\n        this.stateChanges.next();\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        if (!modal) {\n            // Most commonly, the autocomplete trigger is not inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        if (this._trackedModal) {\n            removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        }\n        addAriaReferencedId(modal, 'aria-owns', panelId);\n        this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n        if (!this._trackedModal) {\n            // Most commonly, the autocomplete trigger is not used inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n            // Required for the MDC form field to pick up when the overlay has been closed.\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Refreshes the error state of the select. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        this._keyManager?.cancelTypeahead();\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this.options.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n        if (this.panelWidth === 'auto') {\n            const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin\n                ? preferredOrigin.elementRef\n                : preferredOrigin || this._elementRef;\n            return refToMeasure.nativeElement.getBoundingClientRect().width;\n        }\n        return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n        if (this.options) {\n            for (const option of this.options) {\n                option._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this.typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withPageUpDown()\n            .withAllowedModifierKeys(['shiftKey'])\n            .skipPredicate(this._skipPredicate);\n        this._keyManager.tabOut.subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n            // be the result of an expression changing. We have to use `detectChanges` in order\n            // to avoid \"changed after checked\" errors (see #14793).\n            this._changeDetectorRef.detectChanges();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n                // because it activates the first option that passes the skip predicate, rather than the\n                // first *enabled* option.\n                let firstEnabledOptionIndex = -1;\n                for (let index = 0; index < this.options.length; index++) {\n                    const option = this.options.get(index);\n                    if (!option.disabled) {\n                        firstEnabledOptionIndex = index;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(firstEnabledOptionIndex);\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        // Since the panel doesn't overlap the trigger, we\n        // want the label to only float when there's a value.\n        return this.panelOpen || !this.empty || (this.focused && !!this.placeholder);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelect, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatSelect, isStandalone: true, selector: \"mat-select\", inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], multiple: [\"multiple\", \"multiple\", booleanAttribute], disableOptionCentering: [\"disableOptionCentering\", \"disableOptionCentering\", booleanAttribute], compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: [\"typeaheadDebounceInterval\", \"typeaheadDebounceInterval\", numberAttribute], sortComparator: \"sortComparator\", id: \"id\", panelWidth: \"panelWidth\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"combobox\", \"aria-haspopup\": \"listbox\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-mdc-select-disabled\": \"disabled\", \"class.mat-mdc-select-invalid\": \"errorState\", \"class.mat-mdc-select-required\": \"required\", \"class.mat-mdc-select-empty\": \"empty\", \"class.mat-mdc-select-multiple\": \"multiple\" }, classAttribute: \"mat-mdc-select\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], exportAs: [\"matSelect\"], usesOnChanges: true, ngImport: i0, template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-app-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-app-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-app-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-app-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-app-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-app-on-surface-variant))}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}\"], dependencies: [{ kind: \"directive\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { kind: \"directive\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\", \"cdkConnectedOverlayDisposeOnNavigation\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-haspopup': 'listbox',\n                        'class': 'mat-mdc-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-mdc-select-disabled]': 'disabled',\n                        '[class.mat-mdc-select-invalid]': 'errorState',\n                        '[class.mat-mdc-select-required]': 'required',\n                        '[class.mat-mdc-select-empty]': 'empty',\n                        '[class.mat-mdc-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], standalone: true, imports: [CdkOverlayOrigin, CdkConnectedOverlay, NgClass], template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"open()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n\\n  <div class=\\\"mat-mdc-select-value\\\" [attr.id]=\\\"_valueId\\\">\\n    @if (empty) {\\n      <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\">{{placeholder}}</span>\\n    } @else {\\n      <span class=\\\"mat-mdc-select-value-text\\\">\\n        @if (customTrigger) {\\n          <ng-content select=\\\"mat-select-trigger\\\"></ng-content>\\n        } @else {\\n          <span class=\\\"mat-mdc-select-min-line\\\">{{triggerValue}}</span>\\n        }\\n      </span>\\n    }\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color, var(--mat-app-on-surface));font-family:var(--mat-select-trigger-text-font, var(--mat-app-body-large-font));line-height:var(--mat-select-trigger-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mat-select-trigger-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-select-trigger-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mat-select-trigger-text-tracking, var(--mat-app-body-large-tracking))}div.mat-mdc-select-panel{box-shadow:var(--mat-select-container-elevation-shadow)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow,.mat-form-field-invalid:not(.mat-form-field-disabled) .mat-mdc-form-field-infix::after{color:var(--mat-select-invalid-arrow-color, var(--mat-app-error))}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color, var(--mat-app-on-surface-variant))}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color, var(--mat-app-primary))}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color, var(--mat-app-surface-container))}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}div.mat-mdc-select-panel .mat-mdc-option{--mdc-list-list-item-container-color: var(--mat-select-panel-background-color)}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color, var(--mat-app-on-surface-variant))}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100%/0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:var(--mat-select-arrow-transform)}\"] }]\n        }], ctorParameters: () => [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i4.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i6.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }, { type: i4.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SELECT_SCROLL_STRATEGY]\n                }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECT_CONFIG]\n                }] }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableOptionCentering: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatSelectTrigger, isStandalone: true, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                    standalone: true,\n                }]\n        }] });\n\nclass MatSelectModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectModule, imports: [CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            MatSelect,\n            MatSelectTrigger], exports: [CdkScrollableModule,\n            MatFormFieldModule,\n            MatSelect,\n            MatSelectTrigger,\n            MatOptionModule,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule, CdkScrollableModule,\n            MatFormFieldModule,\n            MatOptionModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        OverlayModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, matSelectAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, inject, ViewChild, Injector, TemplateRef, Injectable, Optional, SkipSelf, NgModule } from '@angular/core';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatSnackBarLabel, isStandalone: true, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatSnackBarActions, isStandalone: true, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatSnackBarAction, isStandalone: true, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    standalone: true,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: SimpleSnackBar, isStandalone: true, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"], dependencies: [{ kind: \"component\", type: MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatButton, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction], standalone: true, host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n@if (hasAction) {\\n  <div matSnackBarActions>\\n    <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n      {{data.action}}\\n    </button>\\n  </div>\\n}\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"] }]\n        }], ctorParameters: () => [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }] });\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\nlet uniqueId = 0;\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        this._document = inject(DOCUMENT);\n        this._trackedModals = new Set();\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /** Unique ID of the aria-live element. */\n        this._liveElementId = `mat-snack-bar-container-live-${uniqueId++}`;\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._afterPortalAttached();\n            return result;\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            // _animationState lives in host bindings and `detectChanges` does not refresh host bindings\n            // so we have to call `markForCheck` to ensure the host view is refreshed eventually.\n            this._changeDetectorRef.markForCheck();\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._clearFromModals();\n        this._completeExit();\n    }\n    /**\n     * Removes the element in a microtask. Helps prevent errors where we end up\n     * removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        queueMicrotask(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        this._exposeToModals();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live element if there is an\n     * `aria-modal` and the live element is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live element.\n     */\n    _exposeToModals() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with the\n        // `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const id = this._liveElementId;\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            this._trackedModals.add(modal);\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    /** Clears the references to the live element from any modals it was added to. */\n    _clearFromModals() {\n        this._trackedModals.forEach(modal => {\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (ariaOwns) {\n                const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n                if (newValue.length > 0) {\n                    modal.setAttribute('aria-owns', newValue);\n                }\n                else {\n                    modal.removeAttribute('aria-owns');\n                }\n            }\n        });\n        this._trackedModals.clear();\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement?.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarContainer, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatSnackBarContainer, isStandalone: true, selector: \"mat-snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface mat-mdc-snackbar-surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-snack-bar-container{display:flex;align-items:center;justify-content:center;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);margin:8px}.mat-mdc-snack-bar-handset .mat-mdc-snack-bar-container{width:100vw}.mat-mdc-snackbar-surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;padding-left:0;padding-right:8px}[dir=rtl] .mat-mdc-snackbar-surface{padding-right:0;padding-left:8px}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{min-width:344px;max-width:672px}.mat-mdc-snack-bar-handset .mat-mdc-snackbar-surface{width:100%;min-width:0}.cdk-high-contrast-active .mat-mdc-snackbar-surface{outline:solid 1px}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{color:var(--mdc-snackbar-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-snackbar-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mdc-snackbar-container-color, var(--mat-app-inverse-surface))}.mdc-snackbar__label{width:100%;flex-grow:1;box-sizing:border-box;margin:0;padding:14px 8px 14px 16px}[dir=rtl] .mdc-snackbar__label{padding-left:8px;padding-right:16px}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-family:var(--mdc-snackbar-supporting-text-font, var(--mat-app-body-medium-font));font-size:var(--mdc-snackbar-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-snackbar-supporting-text-weight, var(--mat-app-body-medium-weight));line-height:var(--mdc-snackbar-supporting-text-line-height, var(--mat-app-body-medium-line-height))}.mat-mdc-snack-bar-actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color, var(--mat-app-inverse-primary));--mat-text-button-state-layer-color:currentColor;--mat-text-button-ripple-color:currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], standalone: true, imports: [CdkPortalOutlet], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface mat-mdc-snackbar-surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet />\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mat-mdc-snack-bar-container{display:flex;align-items:center;justify-content:center;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);margin:8px}.mat-mdc-snack-bar-handset .mat-mdc-snack-bar-container{width:100vw}.mat-mdc-snackbar-surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;padding-left:0;padding-right:8px}[dir=rtl] .mat-mdc-snackbar-surface{padding-right:0;padding-left:8px}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{min-width:344px;max-width:672px}.mat-mdc-snack-bar-handset .mat-mdc-snackbar-surface{width:100%;min-width:0}.cdk-high-contrast-active .mat-mdc-snackbar-surface{outline:solid 1px}.mat-mdc-snack-bar-container .mat-mdc-snackbar-surface{color:var(--mdc-snackbar-supporting-text-color, var(--mat-app-inverse-on-surface));border-radius:var(--mdc-snackbar-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mdc-snackbar-container-color, var(--mat-app-inverse-surface))}.mdc-snackbar__label{width:100%;flex-grow:1;box-sizing:border-box;margin:0;padding:14px 8px 14px 16px}[dir=rtl] .mdc-snackbar__label{padding-left:8px;padding-right:16px}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-family:var(--mdc-snackbar-supporting-text-font, var(--mat-app-body-medium-font));font-size:var(--mdc-snackbar-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-snackbar-supporting-text-weight, var(--mat-app-body-medium-weight));line-height:var(--mdc-snackbar-supporting-text-line-height, var(--mat-app-body-medium-line-height))}.mat-mdc-snack-bar-actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color, var(--mat-app-inverse-primary));--mat-text-button-state-layer-color:currentColor;--mat-text-button-ripple-color:currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{opacity:.1}\"] }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }], propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }], _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n        /** The component that should be rendered as the snack bar's simple component. */\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        /** The container component that attaches the provided template or component. */\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        /** The CSS class to apply for handset mode. */\n        this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2.LiveAnnouncer }, { token: i0.Injector }, { token: i3.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBar, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1$1.Overlay }, { type: i2.LiveAnnouncer }, { type: i0.Injector }, { type: i3.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }] });\n\nconst DIRECTIVES = [MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction];\nclass MatSnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule,\n            PortalModule,\n            MatButtonModule,\n            MatCommonModule,\n            SimpleSnackBar, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction], exports: [MatCommonModule, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarActions, MatSnackBarAction] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarModule, providers: [MatSnackBar], imports: [OverlayModule,\n            PortalModule,\n            MatButtonModule,\n            MatCommonModule,\n            SimpleSnackBar, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        OverlayModule,\n                        PortalModule,\n                        MatButtonModule,\n                        MatCommonModule,\n                        SimpleSnackBar,\n                        ...DIRECTIVES,\n                    ],\n                    exports: [MatCommonModule, ...DIRECTIVES],\n                    providers: [MatSnackBar],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { ReplaySubject, Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    constructor(_defaultOptions) {\n        this._defaultOptions = _defaultOptions;\n        this._initializedStream = new ReplaySubject(1);\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Whether the sortable is disabled. */\n        this.disabled = false;\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n        /** Emits when the paginator is initialized. */\n        this.initialized = this._initializedStream;\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._initializedStream.next();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._initializedStream.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatSort, isStandalone: true, selector: \"[matSort]\", inputs: { active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\", booleanAttribute], disabled: [\"matSortDisabled\", \"disabled\", booleanAttribute] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: [{ alias: 'matSortDisableClear', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matSortDisabled', transform: booleanAttribute }]\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        /** whether the sort header is disabled. */\n        this.disabled = false;\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n        if (this._sortButton) {\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n        }\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatSortHeader, isStandalone: true, selector: \"[mat-sort-header]\", inputs: { id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", disabled: [\"disabled\", \"disabled\", booleanAttribute], sortActionDescription: \"sortActionDescription\", disableClear: [\"disableClear\", \"disableClear\", booleanAttribute] }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color, var(--mat-app-on-surface));opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], standalone: true, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  @if (_renderArrow()) {\\n    <div class=\\\"mat-sort-header-arrow\\\"\\n        [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n        [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n        [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n        (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n        (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n      <div class=\\\"mat-sort-header-stem\\\"></div>\\n      <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n        <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n        <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n      </div>\\n    </div>\\n  }\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;color:var(--mat-sort-arrow-color, var(--mat-app-on-surface));opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: () => [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }], propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortModule, imports: [MatCommonModule, MatSort, MatSortHeader], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatSort, MatSortHeader],\n                    exports: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i1 from '@angular/cdk/bidi';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _ViewRepeaterOperation, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, booleanAttribute, Inject, Optional, Input, ContentChild, inject, NgZone, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, Injector, afterNextRender, Attribute, SkipSelf, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkCellDef, isStandalone: true, selector: \"[cdkCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCellDef]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkHeaderCellDef, isStandalone: true, selector: \"[cdkHeaderCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderCellDef]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkFooterCellDef, isStandalone: true, selector: \"[cdkFooterCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterCellDef]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /** Whether the cell is sticky. */\n    get sticky() {\n        return this._sticky;\n    }\n    set sticky(value) {\n        if (value !== this._sticky) {\n            this._sticky = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(value) {\n        if (value !== this._stickyEnd) {\n            this._stickyEnd = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    constructor(_table) {\n        this._table = _table;\n        this._hasStickyChanged = false;\n        this._sticky = false;\n        this._stickyEnd = false;\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n        const hasStickyChanged = this._hasStickyChanged;\n        this.resetStickyChanged();\n        return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n        this._hasStickyChanged = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkColumnDef, isStandalone: true, selector: \"[cdkColumnDef]\", inputs: { name: [\"cdkColumnDef\", \"name\"], sticky: [\"sticky\", \"sticky\", booleanAttribute], stickyEnd: [\"stickyEnd\", \"stickyEnd\", booleanAttribute] }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], sticky: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], stickyEnd: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkHeaderCell, isStandalone: true, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkColumnDef }, { type: i0.ElementRef }] });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        const role = columnDef._table?._getCellRole();\n        if (role) {\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkFooterCell, isStandalone: true, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkColumnDef }, { type: i0.ElementRef }] });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        const role = columnDef._table?._getCellRole();\n        if (role) {\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkCell, isStandalone: true, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkColumnDef }, { type: i0.ElementRef }] });\n\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_unusedNgZone) {\n        this._currentSchedule = null;\n        this._ngZone = inject(NgZone);\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._ngZone.runOutsideAngular(() => \n        // TODO(mmalerba): Scheduling this using something that runs less frequently\n        //  (e.g. requestAnimationFrame, setTimeout, etc.) causes noticeable jank with the column\n        //  resizer. We should audit the usages of schedule / scheduleEnd in that component and see\n        //  if we can refactor it so that we don't need to flush the tasks quite so frequently.\n        queueMicrotask(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _CoalescedStyleScheduler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.NgZone }] });\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }] });\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends BaseRowDef {\n    /** Whether the row is sticky. */\n    get sticky() {\n        return this._sticky;\n    }\n    set sticky(value) {\n        if (value !== this._sticky) {\n            this._sticky = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n        this._hasStickyChanged = false;\n        this._sticky = false;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n        const hasStickyChanged = this._hasStickyChanged;\n        this.resetStickyChanged();\n        return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n        this._hasStickyChanged = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkHeaderRowDef, isStandalone: true, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\", booleanAttribute] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: [{ name: 'columns', alias: 'cdkHeaderRowDef' }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { sticky: [{\n                type: Input,\n                args: [{ alias: 'cdkHeaderRowDefSticky', transform: booleanAttribute }]\n            }] } });\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends BaseRowDef {\n    /** Whether the row is sticky. */\n    get sticky() {\n        return this._sticky;\n    }\n    set sticky(value) {\n        if (value !== this._sticky) {\n            this._sticky = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n        this._hasStickyChanged = false;\n        this._sticky = false;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n        const hasStickyChanged = this._hasStickyChanged;\n        this.resetStickyChanged();\n        return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n        this._hasStickyChanged = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: CdkFooterRowDef, isStandalone: true, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\", booleanAttribute] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: [{ name: 'columns', alias: 'cdkFooterRowDef' }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { sticky: [{\n                type: Input,\n                args: [{ alias: 'cdkFooterRowDefSticky', transform: booleanAttribute }]\n            }] } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkRowDef, isStandalone: true, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: [\n                        { name: 'columns', alias: 'cdkRowDefColumns' },\n                        { name: 'when', alias: 'cdkRowDefWhen' },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }] });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static { this.mostRecentCellOutlet = null; }\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkCellOutlet, isStandalone: true, selector: \"[cdkCellOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCellOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkHeaderRow, isStandalone: true, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkFooterRow, isStandalone: true, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkRow, isStandalone: true, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkNoDataRow, isStandalone: true, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const firstRow = rows[0];\n            const numCells = firstRow.children.length;\n            const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n            const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n            const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n            const lastStickyStart = stickyStartStates.lastIndexOf(true);\n            const firstStickyEnd = stickyEndStates.indexOf(true);\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n            // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n            // sticky states need to be reversed as well.\n            const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n            const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n            // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n            const stickyOffsets = [];\n            const stickyCellHeights = [];\n            const elementsToStick = [];\n            for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                stickyOffsets[rowIndex] = stickyOffset;\n                const row = rows[rowIndex];\n                elementsToStick[rowIndex] = this._isNativeHtmlTable\n                    ? Array.from(row.children)\n                    : [row];\n                const height = row.getBoundingClientRect().height;\n                stickyOffset += height;\n                stickyCellHeights[rowIndex] = height;\n            }\n            const borderedRowIndex = states.lastIndexOf(true);\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const tfoot = tableElement.querySelector('tfoot');\n            if (tfoot) {\n                if (stickyStates.some(state => !state)) {\n                    this._removeStickyStyle(tfoot, ['bottom']);\n                }\n                else {\n                    this._addStickyStyle(tfoot, 'bottom', 0, false);\n                }\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkRecycleRows, isStandalone: true, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n        const table = inject(CDK_TABLE);\n        table._rowOutlet = this;\n        table._outletAssigned();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: DataRowOutlet, isStandalone: true, selector: \"[rowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[rowOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n        const table = inject(CDK_TABLE);\n        table._headerRowOutlet = this;\n        table._outletAssigned();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: HeaderRowOutlet, isStandalone: true, selector: \"[headerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[headerRowOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n        const table = inject(CDK_TABLE);\n        table._footerRowOutlet = this;\n        table._outletAssigned();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: FooterRowOutlet, isStandalone: true, selector: \"[footerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[footerRowOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n        const table = inject(CDK_TABLE);\n        table._noDataRowOutlet = this;\n        table._outletAssigned();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: NoDataRowOutlet, isStandalone: true, selector: \"[noDataRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[noDataRowOutlet]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"/>\n  <ng-content select=\"colgroup, col\"/>\n\n  <!--\n    Unprojected content throws a hydration error so we need this to capture it.\n    It gets removed on the client so it doesn't affect the layout.\n  -->\n  @if (_isServer) {\n    <ng-content/>\n  }\n\n  @if (_isNativeHtmlTable) {\n    <thead role=\"rowgroup\">\n      <ng-container headerRowOutlet/>\n    </thead>\n    <tbody role=\"rowgroup\">\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n    </tbody>\n    <tfoot role=\"rowgroup\">\n      <ng-container footerRowOutlet/>\n    </tfoot>\n  } @else {\n    <ng-container headerRowOutlet/>\n    <ng-container rowOutlet/>\n    <ng-container noDataRowOutlet/>\n    <ng-container footerRowOutlet/>\n  }\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    /** Aria role to apply to the table's cells based on the table's own role. */\n    _getCellRole() {\n        if (this._cellRoleInternal === undefined) {\n            // Perform this lazily in case the table's role was updated by a directive after construction.\n            const role = this._elementRef.nativeElement.getAttribute('role');\n            const cellRole = role === 'grid' || role === 'treegrid' ? 'gridcell' : 'cell';\n            this._cellRoleInternal = this._isNativeHtmlTable && cellRole === 'cell' ? null : cellRole;\n        }\n        return this._cellRoleInternal;\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(value) {\n        this._multiTemplateDataRows = value;\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(value) {\n        this._fixedLayout = value;\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_unusedNgZone` parameter to be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        /** Whether the table has rendered out all the outlets for the first time. */\n        this._hasAllOutlets = false;\n        /** Whether the table is done initializing. */\n        this._hasInitialized = false;\n        this._cellRoleInternal = undefined;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        this._injector = inject(Injector);\n        if (!role) {\n            _elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isServer = !_platform.isBrowser;\n        this._isNativeHtmlTable = _elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentInit() {\n        this._hasInitialized = true;\n    }\n    ngAfterContentChecked() {\n        // Only start re-rendering in `ngAfterContentChecked` after the first render.\n        if (this._canRender()) {\n            this._render();\n        }\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet?.viewContainer,\n            this._headerRowOutlet?.viewContainer,\n            this._footerRowOutlet?.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach((def) => {\n            def?.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        afterNextRender(() => {\n            this.updateStickyColumnStyles();\n        }, { injector: this._injector });\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        if (this._isNativeHtmlTable) {\n            const thead = closestTableSection(this._headerRowOutlet, 'thead');\n            if (thead) {\n                thead.style.display = headerRows.length ? '' : 'none';\n            }\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        if (this._isNativeHtmlTable) {\n            const tfoot = closestTableSection(this._footerRowOutlet, 'tfoot');\n            if (tfoot) {\n                tfoot.style.display = footerRows.length ? '' : 'none';\n            }\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /** Invoked whenever an outlet is created and has been assigned to the table. */\n    _outletAssigned() {\n        // Trigger the first render once all outlets have been assigned. We do it this way, as\n        // opposed to waiting for the next `ngAfterContentChecked`, because we don't know when\n        // the next change detection will happen.\n        // Also we can't use queries to resolve the outlets, because they're wrapped in a\n        // conditional, so we have to rely on them being assigned via DI.\n        if (!this._hasAllOutlets &&\n            this._rowOutlet &&\n            this._headerRowOutlet &&\n            this._footerRowOutlet &&\n            this._noDataRowOutlet) {\n            this._hasAllOutlets = true;\n            // In some setups this may fire before `ngAfterContentInit`\n            // so we need a check here. See #28538.\n            if (this._canRender()) {\n                this._render();\n            }\n        }\n    }\n    /** Whether the table has all the information to start rendering. */\n    _canRender() {\n        return this._hasAllOutlets && this._hasInitialized;\n    }\n    /** Renders the table if its state has changed. */\n    _render() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            if (this._rowOutlet) {\n                this._rowOutlet.viewContainer.clear();\n            }\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n        this._changeDetectorRef.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: CdkTable, isStandalone: true, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: [\"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute], fixedLayout: [\"fixedLayout\", \"fixedLayout\", booleanAttribute] }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"/>\\n  <ng-content select=\\\"colgroup, col\\\"/>\\n\\n  <!--\\n    Unprojected content throws a hydration error so we need this to capture it.\\n    It gets removed on the client so it doesn't affect the layout.\\n  -->\\n  @if (_isServer) {\\n    <ng-content/>\\n  }\\n\\n  @if (_isNativeHtmlTable) {\\n    <thead role=\\\"rowgroup\\\">\\n      <ng-container headerRowOutlet/>\\n    </thead>\\n    <tbody role=\\\"rowgroup\\\">\\n      <ng-container rowOutlet/>\\n      <ng-container noDataRowOutlet/>\\n    </tbody>\\n    <tfoot role=\\\"rowgroup\\\">\\n      <ng-container footerRowOutlet/>\\n    </tfoot>\\n  } @else {\\n    <ng-container headerRowOutlet/>\\n    <ng-container rowOutlet/>\\n    <ng-container noDataRowOutlet/>\\n    <ng-container footerRowOutlet/>\\n  }\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], standalone: true, imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: () => [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], fixedLayout: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], contentChanged: [{\n                type: Output\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n/**\n * Finds the closest table section to an outlet. We can't use `HTMLElement.closest` for this,\n * because the node representing the outlet is a comment.\n */\nfunction closestTableSection(outlet, section) {\n    const uppercaseSection = section.toUpperCase();\n    let current = outlet.viewContainer.element.nativeElement;\n    while (current) {\n        // 1 is an element node.\n        const nodeName = current.nodeType === 1 ? current.nodeName : null;\n        if (nodeName === uppercaseSection) {\n            return current;\n        }\n        else if (nodeName === 'TABLE') {\n            // Stop traversing past the `table` node.\n            break;\n        }\n        current = current.parentNode;\n    }\n    return null;\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: CdkTextColumn, isStandalone: true, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"cdkColumnDef\", \"sticky\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    standalone: true,\n                    imports: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell],\n                }]\n        }], ctorParameters: () => [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }], propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule, CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet], exports: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule, ...EXPORTED_DECLARATIONS],\n                }]\n        }] });\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n * @deprecated Implement the `CanStick` interface instead.\n * @breaking-change 19.0.0\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, booleanAttribute, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkCellOutlet, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatRecycleRows, isStandalone: true, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                    standalone: true,\n                }]\n        }] });\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-mdc-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: MatTable, isStandalone: true, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mdc-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-mdc-table mdc-data-table__table\" }, providers: [\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: `\n    <ng-content select=\"caption\"/>\n    <ng-content select=\"colgroup, col\"/>\n\n    <!--\n      Unprojected content throws a hydration error so we need this to capture it.\n      It gets removed on the client so it doesn't affect the layout.\n    -->\n    @if (_isServer) {\n      <ng-content/>\n    }\n\n    @if (_isNativeHtmlTable) {\n      <thead role=\"rowgroup\">\n        <ng-container headerRowOutlet/>\n      </thead>\n      <tbody class=\"mdc-data-table__content\" role=\"rowgroup\">\n        <ng-container rowOutlet/>\n        <ng-container noDataRowOutlet/>\n      </tbody>\n      <tfoot role=\"rowgroup\">\n        <ng-container footerRowOutlet/>\n      </tfoot>\n    } @else {\n      <ng-container headerRowOutlet/>\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n      <ng-container footerRowOutlet/>\n    }\n  `, isInline: true, styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-app-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-app-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-app-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-app-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-app-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-app-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-app-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-app-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-app-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-app-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-app-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-app-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-app-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-app-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"], dependencies: [{ kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: `\n    <ng-content select=\"caption\"/>\n    <ng-content select=\"colgroup, col\"/>\n\n    <!--\n      Unprojected content throws a hydration error so we need this to capture it.\n      It gets removed on the client so it doesn't affect the layout.\n    -->\n    @if (_isServer) {\n      <ng-content/>\n    }\n\n    @if (_isNativeHtmlTable) {\n      <thead role=\"rowgroup\">\n        <ng-container headerRowOutlet/>\n      </thead>\n      <tbody class=\"mdc-data-table__content\" role=\"rowgroup\">\n        <ng-container rowOutlet/>\n        <ng-container noDataRowOutlet/>\n      </tbody>\n      <tfoot role=\"rowgroup\">\n        <ng-container footerRowOutlet/>\n      </tfoot>\n    } @else {\n      <ng-container headerRowOutlet/>\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n      <ng-container footerRowOutlet/>\n    }\n  `, host: {\n                        'class': 'mat-mdc-table mdc-data-table__table',\n                        '[class.mdc-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, standalone: true, imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-app-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-app-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-app-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-app-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-app-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-app-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-app-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-app-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-app-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-app-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-app-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-app-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-app-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-app-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-app-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"] }]\n        }] });\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatCellDef, isStandalone: true, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatHeaderCellDef, isStandalone: true, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatFooterCellDef, isStandalone: true, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatColumnDef, isStandalone: true, selector: \"[matColumnDef]\", inputs: { name: [\"matColumnDef\", \"name\"] }, providers: [\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                    standalone: true,\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatHeaderCell, isStandalone: true, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-mdc-header-cell mdc-data-table__header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n                        'role': 'columnheader',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatFooterCell, isStandalone: true, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { classAttribute: \"mat-mdc-footer-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-mdc-footer-cell mdc-data-table__cell',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatCell, isStandalone: true, selector: \"mat-cell, td[mat-cell]\", host: { classAttribute: \"mat-mdc-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-mdc-cell mdc-data-table__cell',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatHeaderRowDef, isStandalone: true, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\", booleanAttribute] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: [\n                        { name: 'columns', alias: 'matHeaderRowDef' },\n                        { name: 'sticky', alias: 'matHeaderRowDefSticky', transform: booleanAttribute },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"18.2.0-next.2\", type: MatFooterRowDef, isStandalone: true, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\", booleanAttribute] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: [\n                        { name: 'columns', alias: 'matFooterRowDef' },\n                        { name: 'sticky', alias: 'matFooterRowDefSticky', transform: booleanAttribute },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatRowDef, isStandalone: true, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: [\n                        { name: 'columns', alias: 'matRowDefColumns' },\n                        { name: 'when', alias: 'matRowDefWhen' },\n                    ],\n                    standalone: true,\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatHeaderRow, isStandalone: true, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-header-row mdc-data-table__header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-header-row mdc-data-table__header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                    standalone: true,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatFooterRow, isStandalone: true, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-footer-row mdc-data-table__row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-footer-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                    standalone: true,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatRow, isStandalone: true, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-row mdc-data-table__row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                    standalone: true,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-mdc-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatNoDataRow, isStandalone: true, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MatTextColumn, isStandalone: true, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"matColumnDef\"] }, { kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    standalone: true,\n                    imports: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell],\n                }]\n        }] });\n\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTableModule, imports: [MatCommonModule, CdkTableModule, \n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn], exports: [MatCommonModule, \n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTableModule, imports: [MatCommonModule, CdkTableModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CdkTableModule, ...EXPORTED_DECLARATIONS],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                }]\n        }] });\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the paginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the paginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we leave them as strings.\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterPredicate function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterPredicate.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided paginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n","/*!\n * OverlayScrollbars\n * Version: 2.10.0\n *\n * Copyright (c) Rene Haas | KingSora.\n * https://github.com/KingSora\n *\n * Released under the MIT license.\n */\nconst createCache = (t, n) => {\n  const {o: o, i: s, u: e} = t;\n  let c = o;\n  let r;\n  const cacheUpdateContextual = (t, n) => {\n    const o = c;\n    const l = t;\n    const i = n || (s ? !s(o, l) : o !== l);\n    if (i || e) {\n      c = l;\n      r = o;\n    }\n    return [ c, i, r ];\n  };\n  const cacheUpdateIsolated = t => cacheUpdateContextual(n(c, r), t);\n  const getCurrentCache = t => [ c, !!t, r ];\n  return [ n ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache ];\n};\n\nconst t = typeof window !== \"undefined\" && typeof HTMLElement !== \"undefined\" && !!window.document;\n\nconst n = t ? window : {};\n\nconst o = Math.max;\n\nconst s = Math.min;\n\nconst e = Math.round;\n\nconst c = Math.abs;\n\nconst r = Math.sign;\n\nconst l = n.cancelAnimationFrame;\n\nconst i = n.requestAnimationFrame;\n\nconst a = n.setTimeout;\n\nconst u = n.clearTimeout;\n\nconst getApi = t => typeof n[t] !== \"undefined\" ? n[t] : void 0;\n\nconst _ = getApi(\"MutationObserver\");\n\nconst d = getApi(\"IntersectionObserver\");\n\nconst f = getApi(\"ResizeObserver\");\n\nconst v = getApi(\"ScrollTimeline\");\n\nconst isUndefined = t => t === void 0;\n\nconst isNull = t => t === null;\n\nconst isNumber = t => typeof t === \"number\";\n\nconst isString = t => typeof t === \"string\";\n\nconst isBoolean = t => typeof t === \"boolean\";\n\nconst isFunction = t => typeof t === \"function\";\n\nconst isArray = t => Array.isArray(t);\n\nconst isObject = t => typeof t === \"object\" && !isArray(t) && !isNull(t);\n\nconst isArrayLike = t => {\n  const n = !!t && t.length;\n  const o = isNumber(n) && n > -1 && n % 1 == 0;\n  return isArray(t) || !isFunction(t) && o ? n > 0 && isObject(t) ? n - 1 in t : true : false;\n};\n\nconst isPlainObject = t => !!t && t.constructor === Object;\n\nconst isHTMLElement = t => t instanceof HTMLElement;\n\nconst isElement = t => t instanceof Element;\n\nconst animationCurrentTime = () => performance.now();\n\nconst animateNumber = (t, n, s, e, c) => {\n  let r = 0;\n  const a = animationCurrentTime();\n  const u = o(0, s);\n  const frame = s => {\n    const l = animationCurrentTime();\n    const _ = l - a;\n    const d = _ >= u;\n    const f = s ? 1 : 1 - (o(0, a + u - l) / u || 0);\n    const v = (n - t) * (isFunction(c) ? c(f, f * u, 0, 1, u) : f) + t;\n    const p = d || f === 1;\n    e && e(v, f, p);\n    r = p ? 0 : i((() => frame()));\n  };\n  frame();\n  return t => {\n    l(r);\n    t && frame(t);\n  };\n};\n\nfunction each(t, n) {\n  if (isArrayLike(t)) {\n    for (let o = 0; o < t.length; o++) {\n      if (n(t[o], o, t) === false) {\n        break;\n      }\n    }\n  } else if (t) {\n    each(Object.keys(t), (o => n(t[o], o, t)));\n  }\n  return t;\n}\n\nconst inArray = (t, n) => t.indexOf(n) >= 0;\n\nconst concat = (t, n) => t.concat(n);\n\nconst push = (t, n, o) => {\n  !o && !isString(n) && isArrayLike(n) ? Array.prototype.push.apply(t, n) : t.push(n);\n  return t;\n};\n\nconst from = t => Array.from(t || []);\n\nconst createOrKeepArray = t => {\n  if (isArray(t)) {\n    return t;\n  }\n  return !isString(t) && isArrayLike(t) ? from(t) : [ t ];\n};\n\nconst isEmptyArray = t => !!t && !t.length;\n\nconst deduplicateArray = t => from(new Set(t));\n\nconst runEachAndClear = (t, n, o) => {\n  const runFn = t => t ? t.apply(void 0, n || []) : true;\n  each(t, runFn);\n  !o && (t.length = 0);\n};\n\nconst p = \"paddingTop\";\n\nconst h = \"paddingRight\";\n\nconst g = \"paddingLeft\";\n\nconst b = \"paddingBottom\";\n\nconst w = \"marginLeft\";\n\nconst y = \"marginRight\";\n\nconst S = \"marginBottom\";\n\nconst m = \"overflowX\";\n\nconst O = \"overflowY\";\n\nconst $ = \"width\";\n\nconst C = \"height\";\n\nconst x = \"visible\";\n\nconst H = \"hidden\";\n\nconst E = \"scroll\";\n\nconst capitalizeFirstLetter = t => {\n  const n = String(t || \"\");\n  return n ? n[0].toUpperCase() + n.slice(1) : \"\";\n};\n\nconst equal = (t, n, o, s) => {\n  if (t && n) {\n    let e = true;\n    each(o, (o => {\n      const c = s ? s(t[o]) : t[o];\n      const r = s ? s(n[o]) : n[o];\n      if (c !== r) {\n        e = false;\n      }\n    }));\n    return e;\n  }\n  return false;\n};\n\nconst equalWH = (t, n) => equal(t, n, [ \"w\", \"h\" ]);\n\nconst equalXY = (t, n) => equal(t, n, [ \"x\", \"y\" ]);\n\nconst equalTRBL = (t, n) => equal(t, n, [ \"t\", \"r\", \"b\", \"l\" ]);\n\nconst noop = () => {};\n\nconst bind = (t, ...n) => t.bind(0, ...n);\n\nconst selfClearTimeout = t => {\n  let n;\n  const o = t ? a : i;\n  const s = t ? u : l;\n  return [ e => {\n    s(n);\n    n = o((() => e()), isFunction(t) ? t() : t);\n  }, () => s(n) ];\n};\n\nconst debounce = (t, n) => {\n  const {_: o, v: s, p: e, S: c} = n || {};\n  let r;\n  let _;\n  let d;\n  let f;\n  let v = noop;\n  const p = function invokeFunctionToDebounce(n) {\n    v();\n    u(r);\n    f = r = _ = void 0;\n    v = noop;\n    t.apply(this, n);\n  };\n  const mergeParms = t => c && _ ? c(_, t) : t;\n  const flush = () => {\n    if (v !== noop) {\n      p(mergeParms(d) || d);\n    }\n  };\n  const h = function debouncedFn() {\n    const t = from(arguments);\n    const n = isFunction(o) ? o() : o;\n    const c = isNumber(n) && n >= 0;\n    if (c) {\n      const o = isFunction(s) ? s() : s;\n      const c = isNumber(o) && o >= 0;\n      const h = n > 0 ? a : i;\n      const g = n > 0 ? u : l;\n      const b = mergeParms(t);\n      const w = b || t;\n      const y = p.bind(0, w);\n      let S;\n      v();\n      if (e && !f) {\n        y();\n        f = true;\n        S = h((() => f = void 0), n);\n      } else {\n        S = h(y, n);\n        if (c && !r) {\n          r = a(flush, o);\n        }\n      }\n      v = () => g(S);\n      _ = d = w;\n    } else {\n      p(t);\n    }\n  };\n  h.m = flush;\n  return h;\n};\n\nconst hasOwnProperty = (t, n) => Object.prototype.hasOwnProperty.call(t, n);\n\nconst keys = t => t ? Object.keys(t) : [];\n\nconst assignDeep = (t, n, o, s, e, c, r) => {\n  const l = [ n, o, s, e, c, r ];\n  if ((typeof t !== \"object\" || isNull(t)) && !isFunction(t)) {\n    t = {};\n  }\n  each(l, (n => {\n    each(n, ((o, s) => {\n      const e = n[s];\n      if (t === e) {\n        return true;\n      }\n      const c = isArray(e);\n      if (e && isPlainObject(e)) {\n        const n = t[s];\n        let o = n;\n        if (c && !isArray(n)) {\n          o = [];\n        } else if (!c && !isPlainObject(n)) {\n          o = {};\n        }\n        t[s] = assignDeep(o, e);\n      } else {\n        t[s] = c ? e.slice() : e;\n      }\n    }));\n  }));\n  return t;\n};\n\nconst removeUndefinedProperties = (t, n) => each(assignDeep({}, t), ((t, o, s) => {\n  if (t === void 0) {\n    delete s[o];\n  } else if (n && t && isPlainObject(t)) {\n    s[o] = removeUndefinedProperties(t, n);\n  }\n}));\n\nconst isEmptyObject = t => !keys(t).length;\n\nconst capNumber = (t, n, e) => o(t, s(n, e));\n\nconst getDomTokensArray = t => deduplicateArray((isArray(t) ? t : (t || \"\").split(\" \")).filter((t => t)));\n\nconst getAttr = (t, n) => t && t.getAttribute(n);\n\nconst hasAttr = (t, n) => t && t.hasAttribute(n);\n\nconst setAttrs = (t, n, o) => {\n  each(getDomTokensArray(n), (n => {\n    t && t.setAttribute(n, String(o || \"\"));\n  }));\n};\n\nconst removeAttrs = (t, n) => {\n  each(getDomTokensArray(n), (n => t && t.removeAttribute(n)));\n};\n\nconst domTokenListAttr = (t, n) => {\n  const o = getDomTokensArray(getAttr(t, n));\n  const s = bind(setAttrs, t, n);\n  const domTokenListOperation = (t, n) => {\n    const s = new Set(o);\n    each(getDomTokensArray(t), (t => {\n      s[n](t);\n    }));\n    return from(s).join(\" \");\n  };\n  return {\n    O: t => s(domTokenListOperation(t, \"delete\")),\n    $: t => s(domTokenListOperation(t, \"add\")),\n    C: t => {\n      const n = getDomTokensArray(t);\n      return n.reduce(((t, n) => t && o.includes(n)), n.length > 0);\n    }\n  };\n};\n\nconst removeAttrClass = (t, n, o) => {\n  domTokenListAttr(t, n).O(o);\n  return bind(addAttrClass, t, n, o);\n};\n\nconst addAttrClass = (t, n, o) => {\n  domTokenListAttr(t, n).$(o);\n  return bind(removeAttrClass, t, n, o);\n};\n\nconst addRemoveAttrClass = (t, n, o, s) => (s ? addAttrClass : removeAttrClass)(t, n, o);\n\nconst hasAttrClass = (t, n, o) => domTokenListAttr(t, n).C(o);\n\nconst createDomTokenListClass = t => domTokenListAttr(t, \"class\");\n\nconst removeClass = (t, n) => {\n  createDomTokenListClass(t).O(n);\n};\n\nconst addClass = (t, n) => {\n  createDomTokenListClass(t).$(n);\n  return bind(removeClass, t, n);\n};\n\nconst find = (t, n) => {\n  const o = n ? isElement(n) && n : document;\n  return o ? from(o.querySelectorAll(t)) : [];\n};\n\nconst findFirst = (t, n) => {\n  const o = n ? isElement(n) && n : document;\n  return o && o.querySelector(t);\n};\n\nconst is = (t, n) => isElement(t) && t.matches(n);\n\nconst isBodyElement = t => is(t, \"body\");\n\nconst contents = t => t ? from(t.childNodes) : [];\n\nconst parent = t => t && t.parentElement;\n\nconst closest = (t, n) => isElement(t) && t.closest(n);\n\nconst getFocusedElement = t => (t || document).activeElement;\n\nconst liesBetween = (t, n, o) => {\n  const s = closest(t, n);\n  const e = t && findFirst(o, s);\n  const c = closest(e, n) === s;\n  return s && e ? s === t || e === t || c && closest(closest(t, o), n) !== s : false;\n};\n\nconst removeElements = t => {\n  each(createOrKeepArray(t), (t => {\n    const n = parent(t);\n    t && n && n.removeChild(t);\n  }));\n};\n\nconst appendChildren = (t, n) => bind(removeElements, t && n && each(createOrKeepArray(n), (n => {\n  n && t.appendChild(n);\n})));\n\nconst createDiv = t => {\n  const n = document.createElement(\"div\");\n  setAttrs(n, \"class\", t);\n  return n;\n};\n\nconst createDOM = t => {\n  const n = createDiv();\n  n.innerHTML = t.trim();\n  return each(contents(n), (t => removeElements(t)));\n};\n\nconst getCSSVal = (t, n) => t.getPropertyValue(n) || t[n] || \"\";\n\nconst validFiniteNumber = t => {\n  const n = t || 0;\n  return isFinite(n) ? n : 0;\n};\n\nconst parseToZeroOrNumber = t => validFiniteNumber(parseFloat(t || \"\"));\n\nconst roundCssNumber = t => Math.round(t * 1e4) / 1e4;\n\nconst numberToCssPx = t => `${roundCssNumber(validFiniteNumber(t))}px`;\n\nfunction setStyles(t, n) {\n  t && n && each(n, ((n, o) => {\n    try {\n      const s = t.style;\n      const e = isNull(n) || isBoolean(n) ? \"\" : isNumber(n) ? numberToCssPx(n) : n;\n      if (o.indexOf(\"--\") === 0) {\n        s.setProperty(o, e);\n      } else {\n        s[o] = e;\n      }\n    } catch (s) {}\n  }));\n}\n\nfunction getStyles(t, o, s) {\n  const e = isString(o);\n  let c = e ? \"\" : {};\n  if (t) {\n    const r = n.getComputedStyle(t, s) || t.style;\n    c = e ? getCSSVal(r, o) : from(o).reduce(((t, n) => {\n      t[n] = getCSSVal(r, n);\n      return t;\n    }), c);\n  }\n  return c;\n}\n\nconst topRightBottomLeft = (t, n, o) => {\n  const s = n ? `${n}-` : \"\";\n  const e = o ? `-${o}` : \"\";\n  const c = `${s}top${e}`;\n  const r = `${s}right${e}`;\n  const l = `${s}bottom${e}`;\n  const i = `${s}left${e}`;\n  const a = getStyles(t, [ c, r, l, i ]);\n  return {\n    t: parseToZeroOrNumber(a[c]),\n    r: parseToZeroOrNumber(a[r]),\n    b: parseToZeroOrNumber(a[l]),\n    l: parseToZeroOrNumber(a[i])\n  };\n};\n\nconst getTrasformTranslateValue = (t, n) => `translate${isObject(t) ? `(${t.x},${t.y})` : `${n ? \"X\" : \"Y\"}(${t})`}`;\n\nconst elementHasDimensions = t => !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length);\n\nconst z = {\n  w: 0,\n  h: 0\n};\n\nconst getElmWidthHeightProperty = (t, n) => n ? {\n  w: n[`${t}Width`],\n  h: n[`${t}Height`]\n} : z;\n\nconst getWindowSize = t => getElmWidthHeightProperty(\"inner\", t || n);\n\nconst I = bind(getElmWidthHeightProperty, \"offset\");\n\nconst A = bind(getElmWidthHeightProperty, \"client\");\n\nconst D = bind(getElmWidthHeightProperty, \"scroll\");\n\nconst getFractionalSize = t => {\n  const n = parseFloat(getStyles(t, $)) || 0;\n  const o = parseFloat(getStyles(t, C)) || 0;\n  return {\n    w: n - e(n),\n    h: o - e(o)\n  };\n};\n\nconst getBoundingClientRect = t => t.getBoundingClientRect();\n\nconst hasDimensions = t => !!t && elementHasDimensions(t);\n\nconst domRectHasDimensions = t => !!(t && (t[C] || t[$]));\n\nconst domRectAppeared = (t, n) => {\n  const o = domRectHasDimensions(t);\n  const s = domRectHasDimensions(n);\n  return !s && o;\n};\n\nconst removeEventListener = (t, n, o, s) => {\n  each(getDomTokensArray(n), (n => {\n    t && t.removeEventListener(n, o, s);\n  }));\n};\n\nconst addEventListener = (t, n, o, s) => {\n  var e;\n  const c = (e = s && s.H) != null ? e : true;\n  const r = s && s.I || false;\n  const l = s && s.A || false;\n  const i = {\n    passive: c,\n    capture: r\n  };\n  return bind(runEachAndClear, getDomTokensArray(n).map((n => {\n    const s = l ? e => {\n      removeEventListener(t, n, s, r);\n      o && o(e);\n    } : o;\n    t && t.addEventListener(n, s, i);\n    return bind(removeEventListener, t, n, s, r);\n  })));\n};\n\nconst stopPropagation = t => t.stopPropagation();\n\nconst preventDefault = t => t.preventDefault();\n\nconst stopAndPrevent = t => stopPropagation(t) || preventDefault(t);\n\nconst scrollElementTo = (t, n) => {\n  const {x: o, y: s} = isNumber(n) ? {\n    x: n,\n    y: n\n  } : n || {};\n  isNumber(o) && (t.scrollLeft = o);\n  isNumber(s) && (t.scrollTop = s);\n};\n\nconst getElementScroll = t => ({\n  x: t.scrollLeft,\n  y: t.scrollTop\n});\n\nconst getZeroScrollCoordinates = () => ({\n  D: {\n    x: 0,\n    y: 0\n  },\n  M: {\n    x: 0,\n    y: 0\n  }\n});\n\nconst sanitizeScrollCoordinates = (t, n) => {\n  const {D: o, M: s} = t;\n  const {w: e, h: l} = n;\n  const sanitizeAxis = (t, n, o) => {\n    let s = r(t) * o;\n    let e = r(n) * o;\n    if (s === e) {\n      const o = c(t);\n      const r = c(n);\n      e = o > r ? 0 : e;\n      s = o < r ? 0 : s;\n    }\n    s = s === e ? 0 : s;\n    return [ s + 0, e + 0 ];\n  };\n  const [i, a] = sanitizeAxis(o.x, s.x, e);\n  const [u, _] = sanitizeAxis(o.y, s.y, l);\n  return {\n    D: {\n      x: i,\n      y: u\n    },\n    M: {\n      x: a,\n      y: _\n    }\n  };\n};\n\nconst isDefaultDirectionScrollCoordinates = ({D: t, M: n}) => {\n  const getAxis = (t, n) => t === 0 && t <= n;\n  return {\n    x: getAxis(t.x, n.x),\n    y: getAxis(t.y, n.y)\n  };\n};\n\nconst getScrollCoordinatesPercent = ({D: t, M: n}, o) => {\n  const getAxis = (t, n, o) => capNumber(0, 1, (t - o) / (t - n) || 0);\n  return {\n    x: getAxis(t.x, n.x, o.x),\n    y: getAxis(t.y, n.y, o.y)\n  };\n};\n\nconst focusElement = t => {\n  if (t && t.focus) {\n    t.focus({\n      preventScroll: true\n    });\n  }\n};\n\nconst manageListener = (t, n) => {\n  each(createOrKeepArray(n), t);\n};\n\nconst createEventListenerHub = t => {\n  const n = new Map;\n  const removeEvent = (t, o) => {\n    if (t) {\n      const s = n.get(t);\n      manageListener((t => {\n        if (s) {\n          s[t ? \"delete\" : \"clear\"](t);\n        }\n      }), o);\n    } else {\n      n.forEach((t => {\n        t.clear();\n      }));\n      n.clear();\n    }\n  };\n  const addEvent = (t, o) => {\n    if (isString(t)) {\n      const s = n.get(t) || new Set;\n      n.set(t, s);\n      manageListener((t => {\n        isFunction(t) && s.add(t);\n      }), o);\n      return bind(removeEvent, t, o);\n    }\n    if (isBoolean(o) && o) {\n      removeEvent();\n    }\n    const s = keys(t);\n    const e = [];\n    each(s, (n => {\n      const o = t[n];\n      o && push(e, addEvent(n, o));\n    }));\n    return bind(runEachAndClear, e);\n  };\n  const triggerEvent = (t, o) => {\n    each(from(n.get(t)), (t => {\n      if (o && !isEmptyArray(o)) {\n        t.apply(0, o);\n      } else {\n        t();\n      }\n    }));\n  };\n  addEvent(t || {});\n  return [ addEvent, removeEvent, triggerEvent ];\n};\n\nconst opsStringify = t => JSON.stringify(t, ((t, n) => {\n  if (isFunction(n)) {\n    throw 0;\n  }\n  return n;\n}));\n\nconst getPropByPath = (t, n) => t ? `${n}`.split(\".\").reduce(((t, n) => t && hasOwnProperty(t, n) ? t[n] : void 0), t) : void 0;\n\nconst M = {\n  paddingAbsolute: false,\n  showNativeOverlaidScrollbars: false,\n  update: {\n    elementEvents: [ [ \"img\", \"load\" ] ],\n    debounce: [ 0, 33 ],\n    attributes: null,\n    ignoreMutation: null\n  },\n  overflow: {\n    x: \"scroll\",\n    y: \"scroll\"\n  },\n  scrollbars: {\n    theme: \"os-theme-dark\",\n    visibility: \"auto\",\n    autoHide: \"never\",\n    autoHideDelay: 1300,\n    autoHideSuspend: false,\n    dragScroll: true,\n    clickScroll: false,\n    pointers: [ \"mouse\", \"touch\", \"pen\" ]\n  }\n};\n\nconst getOptionsDiff = (t, n) => {\n  const o = {};\n  const s = concat(keys(n), keys(t));\n  each(s, (s => {\n    const e = t[s];\n    const c = n[s];\n    if (isObject(e) && isObject(c)) {\n      assignDeep(o[s] = {}, getOptionsDiff(e, c));\n      if (isEmptyObject(o[s])) {\n        delete o[s];\n      }\n    } else if (hasOwnProperty(n, s) && c !== e) {\n      let t = true;\n      if (isArray(e) || isArray(c)) {\n        try {\n          if (opsStringify(e) === opsStringify(c)) {\n            t = false;\n          }\n        } catch (r) {}\n      }\n      if (t) {\n        o[s] = c;\n      }\n    }\n  }));\n  return o;\n};\n\nconst createOptionCheck = (t, n, o) => s => [ getPropByPath(t, s), o || getPropByPath(n, s) !== void 0 ];\n\nconst T = `data-overlayscrollbars`;\n\nconst k = \"os-environment\";\n\nconst R = `${k}-scrollbar-hidden`;\n\nconst V = `${T}-initialize`;\n\nconst L = \"noClipping\";\n\nconst U = `${T}-body`;\n\nconst P = T;\n\nconst N = \"host\";\n\nconst q = `${T}-viewport`;\n\nconst B = m;\n\nconst F = O;\n\nconst j = \"arrange\";\n\nconst X = \"measuring\";\n\nconst Y = \"scrolling\";\n\nconst W = \"scrollbarHidden\";\n\nconst J = \"noContent\";\n\nconst G = `${T}-padding`;\n\nconst K = `${T}-content`;\n\nconst Q = \"os-size-observer\";\n\nconst Z = `${Q}-appear`;\n\nconst tt = `${Q}-listener`;\n\nconst nt = `${tt}-scroll`;\n\nconst ot = `${tt}-item`;\n\nconst st = `${ot}-final`;\n\nconst et = \"os-trinsic-observer\";\n\nconst ct = \"os-theme-none\";\n\nconst rt = \"os-scrollbar\";\n\nconst lt = `${rt}-rtl`;\n\nconst it = `${rt}-horizontal`;\n\nconst at = `${rt}-vertical`;\n\nconst ut = `${rt}-track`;\n\nconst _t = `${rt}-handle`;\n\nconst dt = `${rt}-visible`;\n\nconst ft = `${rt}-cornerless`;\n\nconst vt = `${rt}-interaction`;\n\nconst pt = `${rt}-unusable`;\n\nconst ht = `${rt}-auto-hide`;\n\nconst gt = `${ht}-hidden`;\n\nconst bt = `${rt}-wheel`;\n\nconst wt = `${ut}-interactive`;\n\nconst yt = `${_t}-interactive`;\n\nlet St;\n\nconst getNonce = () => St;\n\nconst setNonce = t => {\n  St = t;\n};\n\nlet mt;\n\nconst createEnvironment = () => {\n  const getNativeScrollbarSize = (t, n, o) => {\n    appendChildren(document.body, t);\n    appendChildren(document.body, t);\n    const s = A(t);\n    const e = I(t);\n    const c = getFractionalSize(n);\n    o && removeElements(t);\n    return {\n      x: e.h - s.h + c.h,\n      y: e.w - s.w + c.w\n    };\n  };\n  const getNativeScrollbarsHiding = t => {\n    let n = false;\n    const o = addClass(t, R);\n    try {\n      n = getStyles(t, \"scrollbar-width\") === \"none\" || getStyles(t, \"display\", \"::-webkit-scrollbar\") === \"none\";\n    } catch (s) {}\n    o();\n    return n;\n  };\n  const t = `.${k}{scroll-behavior:auto!important;position:fixed;opacity:0;visibility:hidden;overflow:scroll;height:200px;width:200px;z-index:-1}.${k} div{width:200%;height:200%;margin:10px 0}.${R}{scrollbar-width:none!important}.${R}::-webkit-scrollbar,.${R}::-webkit-scrollbar-corner{appearance:none!important;display:none!important;width:0!important;height:0!important}`;\n  const o = createDOM(`<div class=\"${k}\"><div></div><style>${t}</style></div>`);\n  const s = o[0];\n  const e = s.firstChild;\n  const c = s.lastChild;\n  const r = getNonce();\n  if (r) {\n    c.nonce = r;\n  }\n  const [l, , i] = createEventListenerHub();\n  const [a, u] = createCache({\n    o: getNativeScrollbarSize(s, e),\n    i: equalXY\n  }, bind(getNativeScrollbarSize, s, e, true));\n  const [_] = u();\n  const d = getNativeScrollbarsHiding(s);\n  const f = {\n    x: _.x === 0,\n    y: _.y === 0\n  };\n  const p = {\n    elements: {\n      host: null,\n      padding: !d,\n      viewport: t => d && isBodyElement(t) && t,\n      content: false\n    },\n    scrollbars: {\n      slot: true\n    },\n    cancel: {\n      nativeScrollbarsOverlaid: false,\n      body: null\n    }\n  };\n  const h = assignDeep({}, M);\n  const g = bind(assignDeep, {}, h);\n  const b = bind(assignDeep, {}, p);\n  const w = {\n    T: _,\n    k: f,\n    R: d,\n    V: !!v,\n    L: bind(l, \"r\"),\n    U: b,\n    P: t => assignDeep(p, t) && b(),\n    N: g,\n    q: t => assignDeep(h, t) && g(),\n    B: assignDeep({}, p),\n    F: assignDeep({}, h)\n  };\n  removeAttrs(s, \"style\");\n  removeElements(s);\n  addEventListener(n, \"resize\", (() => {\n    i(\"r\", []);\n  }));\n  if (isFunction(n.matchMedia) && !d && (!f.x || !f.y)) {\n    const addZoomListener = t => {\n      const o = n.matchMedia(`(resolution: ${n.devicePixelRatio}dppx)`);\n      addEventListener(o, \"change\", (() => {\n        t();\n        addZoomListener(t);\n      }), {\n        A: true\n      });\n    };\n    addZoomListener((() => {\n      const [t, n] = a();\n      assignDeep(w.T, t);\n      i(\"r\", [ n ]);\n    }));\n  }\n  return w;\n};\n\nconst getEnvironment = () => {\n  if (!mt) {\n    mt = createEnvironment();\n  }\n  return mt;\n};\n\nconst resolveInitialization = (t, n) => isFunction(n) ? n.apply(0, t) : n;\n\nconst staticInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return c || n.apply(0, t);\n};\n\nconst dynamicInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return !!c && (isHTMLElement(c) ? c : n.apply(0, t));\n};\n\nconst cancelInitialization = (t, n) => {\n  const {nativeScrollbarsOverlaid: o, body: s} = n || {};\n  const {k: e, R: c, U: r} = getEnvironment();\n  const {nativeScrollbarsOverlaid: l, body: i} = r().cancel;\n  const a = o != null ? o : l;\n  const u = isUndefined(s) ? i : s;\n  const _ = (e.x || e.y) && a;\n  const d = t && (isNull(u) ? !c : u);\n  return !!_ || !!d;\n};\n\nconst Ot = new WeakMap;\n\nconst addInstance = (t, n) => {\n  Ot.set(t, n);\n};\n\nconst removeInstance = t => {\n  Ot.delete(t);\n};\n\nconst getInstance = t => Ot.get(t);\n\nconst createEventContentChange = (t, n, o) => {\n  let s = false;\n  const e = o ? new WeakMap : false;\n  const destroy = () => {\n    s = true;\n  };\n  const updateElements = c => {\n    if (e && o) {\n      const r = o.map((n => {\n        const [o, s] = n || [];\n        const e = s && o ? (c || find)(o, t) : [];\n        return [ e, s ];\n      }));\n      each(r, (o => each(o[0], (c => {\n        const r = o[1];\n        const l = e.get(c) || [];\n        const i = t.contains(c);\n        if (i && r) {\n          const t = addEventListener(c, r, (o => {\n            if (s) {\n              t();\n              e.delete(c);\n            } else {\n              n(o);\n            }\n          }));\n          e.set(c, push(l, t));\n        } else {\n          runEachAndClear(l);\n          e.delete(c);\n        }\n      }))));\n    }\n  };\n  updateElements();\n  return [ destroy, updateElements ];\n};\n\nconst createDOMObserver = (t, n, o, s) => {\n  let e = false;\n  const {j: c, X: r, Y: l, W: i, J: a, G: u} = s || {};\n  const d = debounce((() => e && o(true)), {\n    _: 33,\n    v: 99\n  });\n  const [f, v] = createEventContentChange(t, d, l);\n  const p = c || [];\n  const h = r || [];\n  const g = concat(p, h);\n  const observerCallback = (e, c) => {\n    if (!isEmptyArray(c)) {\n      const r = a || noop;\n      const l = u || noop;\n      const _ = [];\n      const d = [];\n      let f = false;\n      let p = false;\n      each(c, (o => {\n        const {attributeName: e, target: c, type: a, oldValue: u, addedNodes: v, removedNodes: g} = o;\n        const b = a === \"attributes\";\n        const w = a === \"childList\";\n        const y = t === c;\n        const S = b && e;\n        const m = S && getAttr(c, e || \"\");\n        const O = isString(m) ? m : null;\n        const $ = S && u !== O;\n        const C = inArray(h, e) && $;\n        if (n && (w || !y)) {\n          const n = b && $;\n          const a = n && i && is(c, i);\n          const d = a ? !r(c, e, u, O) : !b || n;\n          const f = d && !l(o, !!a, t, s);\n          each(v, (t => push(_, t)));\n          each(g, (t => push(_, t)));\n          p = p || f;\n        }\n        if (!n && y && $ && !r(c, e, u, O)) {\n          push(d, e);\n          f = f || C;\n        }\n      }));\n      v((t => deduplicateArray(_).reduce(((n, o) => {\n        push(n, find(t, o));\n        return is(o, t) ? push(n, o) : n;\n      }), [])));\n      if (n) {\n        !e && p && o(false);\n        return [ false ];\n      }\n      if (!isEmptyArray(d) || f) {\n        const t = [ deduplicateArray(d), f ];\n        !e && o.apply(0, t);\n        return t;\n      }\n    }\n  };\n  const b = new _(bind(observerCallback, false));\n  return [ () => {\n    b.observe(t, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: g,\n      subtree: n,\n      childList: n,\n      characterData: n\n    });\n    e = true;\n    return () => {\n      if (e) {\n        f();\n        b.disconnect();\n        e = false;\n      }\n    };\n  }, () => {\n    if (e) {\n      d.m();\n      return observerCallback(true, b.takeRecords());\n    }\n  } ];\n};\n\nconst $t = {};\n\nconst Ct = {};\n\nconst addPlugins = t => {\n  each(t, (t => each(t, ((n, o) => {\n    $t[o] = t[o];\n  }))));\n};\n\nconst registerPluginModuleInstances = (t, n, o) => keys(t).map((s => {\n  const {static: e, instance: c} = t[s];\n  const [r, l, i] = o || [];\n  const a = o ? c : e;\n  if (a) {\n    const t = o ? a(r, l, n) : a(n);\n    return (i || Ct)[s] = t;\n  }\n}));\n\nconst getStaticPluginModuleInstance = t => Ct[t];\n\nconst xt = \"__osOptionsValidationPlugin\";\n\nconst Ht = \"__osSizeObserverPlugin\";\n\nconst Et = /* @__PURE__ */ (() => ({\n  [Ht]: {\n    static: () => (t, n, o) => {\n      const s = 3333333;\n      const e = \"scroll\";\n      const c = createDOM(`<div class=\"${ot}\" dir=\"ltr\"><div class=\"${ot}\"><div class=\"${st}\"></div></div><div class=\"${ot}\"><div class=\"${st}\" style=\"width: 200%; height: 200%\"></div></div></div>`);\n      const r = c[0];\n      const a = r.lastChild;\n      const u = r.firstChild;\n      const _ = u == null ? void 0 : u.firstChild;\n      let d = I(r);\n      let f = d;\n      let v = false;\n      let p;\n      const reset = () => {\n        scrollElementTo(u, s);\n        scrollElementTo(a, s);\n      };\n      const onResized = t => {\n        p = 0;\n        if (v) {\n          d = f;\n          n(t === true);\n        }\n      };\n      const onScroll = t => {\n        f = I(r);\n        v = !t || !equalWH(f, d);\n        if (t) {\n          stopPropagation(t);\n          if (v && !p) {\n            l(p);\n            p = i(onResized);\n          }\n        } else {\n          onResized(t === false);\n        }\n        reset();\n      };\n      const h = [ appendChildren(t, c), addEventListener(u, e, onScroll), addEventListener(a, e, onScroll) ];\n      addClass(t, nt);\n      setStyles(_, {\n        [$]: s,\n        [C]: s\n      });\n      i(reset);\n      return [ o ? bind(onScroll, false) : reset, h ];\n    }\n  }\n}))();\n\nconst getShowNativeOverlaidScrollbars = (t, n) => {\n  const {k: o} = n;\n  const [s, e] = t(\"showNativeOverlaidScrollbars\");\n  return [ s && o.x && o.y, e ];\n};\n\nconst overflowIsVisible = t => t.indexOf(x) === 0;\n\nconst createViewportOverflowState = (t, n) => {\n  const getAxisOverflowStyle = (t, n, o, s) => {\n    const e = t === x ? H : t.replace(`${x}-`, \"\");\n    const c = overflowIsVisible(t);\n    const r = overflowIsVisible(o);\n    if (!n && !s) {\n      return H;\n    }\n    if (c && r) {\n      return x;\n    }\n    if (c) {\n      const t = n ? x : H;\n      return n && s ? e : t;\n    }\n    const l = r && s ? x : H;\n    return n ? e : l;\n  };\n  const o = {\n    x: getAxisOverflowStyle(n.x, t.x, n.y, t.y),\n    y: getAxisOverflowStyle(n.y, t.y, n.x, t.x)\n  };\n  return {\n    K: o,\n    Z: {\n      x: o.x === E,\n      y: o.y === E\n    }\n  };\n};\n\nconst zt = \"__osScrollbarsHidingPlugin\";\n\nconst It = /* @__PURE__ */ (() => ({\n  [zt]: {\n    static: () => ({\n      tt: (t, n, o, s, e) => {\n        const {nt: c, ot: r} = t;\n        const {R: l, k: i, T: a} = s;\n        const u = !c && !l && (i.x || i.y);\n        const [_] = getShowNativeOverlaidScrollbars(e, s);\n        const readViewportOverflowState = () => {\n          const getStatePerAxis = t => {\n            const n = getStyles(r, t);\n            const o = n === E;\n            return [ n, o ];\n          };\n          const [t, n] = getStatePerAxis(m);\n          const [o, s] = getStatePerAxis(O);\n          return {\n            K: {\n              x: t,\n              y: o\n            },\n            Z: {\n              x: n,\n              y: s\n            }\n          };\n        };\n        const _getViewportOverflowHideOffset = t => {\n          const {Z: n} = t;\n          const o = l || _ ? 0 : 42;\n          const getHideOffsetPerAxis = (t, n, s) => {\n            const e = t ? o : s;\n            const c = n && !l ? e : 0;\n            const r = t && !!o;\n            return [ c, r ];\n          };\n          const [s, e] = getHideOffsetPerAxis(i.x, n.x, a.x);\n          const [c, r] = getHideOffsetPerAxis(i.y, n.y, a.y);\n          return {\n            st: {\n              x: s,\n              y: c\n            },\n            et: {\n              x: e,\n              y: r\n            }\n          };\n        };\n        const _hideNativeScrollbars = (t, {ct: o}, s) => {\n          if (!c) {\n            const e = assignDeep({}, {\n              [y]: 0,\n              [S]: 0,\n              [w]: 0\n            });\n            const {st: c, et: r} = _getViewportOverflowHideOffset(t);\n            const {x: l, y: i} = r;\n            const {x: a, y: u} = c;\n            const {rt: _} = n;\n            const d = o ? w : y;\n            const f = o ? g : h;\n            const v = _[d];\n            const p = _[S];\n            const m = _[f];\n            const O = _[b];\n            e[$] = `calc(100% + ${u + v * -1}px)`;\n            e[d] = -u + v;\n            e[S] = -a + p;\n            if (s) {\n              e[f] = m + (i ? u : 0);\n              e[b] = O + (l ? a : 0);\n            }\n            return e;\n          }\n        };\n        const _arrangeViewport = (t, s, e) => {\n          if (u) {\n            const {rt: c} = n;\n            const {st: l, et: i} = _getViewportOverflowHideOffset(t);\n            const {x: a, y: u} = i;\n            const {x: _, y: d} = l;\n            const {ct: f} = o;\n            const v = f ? h : g;\n            const p = c[v];\n            const b = c.paddingTop;\n            const w = s.w + e.w;\n            const y = s.h + e.h;\n            const S = {\n              w: d && u ? `${d + w - p}px` : \"\",\n              h: _ && a ? `${_ + y - b}px` : \"\"\n            };\n            setStyles(r, {\n              \"--os-vaw\": S.w,\n              \"--os-vah\": S.h\n            });\n          }\n          return u;\n        };\n        const _undoViewportArrange = t => {\n          if (u) {\n            const s = t || readViewportOverflowState();\n            const {rt: e} = n;\n            const {et: c} = _getViewportOverflowHideOffset(s);\n            const {x: l, y: i} = c;\n            const a = {};\n            const assignProps = t => each(t, (t => {\n              a[t] = e[t];\n            }));\n            if (l) {\n              assignProps([ S, p, b ]);\n            }\n            if (i) {\n              assignProps([ w, y, g, h ]);\n            }\n            const _ = getStyles(r, keys(a));\n            const d = removeAttrClass(r, q, j);\n            setStyles(r, a);\n            return [ () => {\n              setStyles(r, assignDeep({}, _, _hideNativeScrollbars(s, o, u)));\n              d();\n            }, s ];\n          }\n          return [ noop ];\n        };\n        return {\n          lt: _getViewportOverflowHideOffset,\n          it: _arrangeViewport,\n          ut: _undoViewportArrange,\n          _t: _hideNativeScrollbars\n        };\n      }\n    })\n  }\n}))();\n\nconst At = \"__osClickScrollPlugin\";\n\nconst Dt = /* @__PURE__ */ (() => ({\n  [At]: {\n    static: () => (t, n, o, s) => {\n      let e = false;\n      let c = noop;\n      const r = 133;\n      const l = 222;\n      const [i, a] = selfClearTimeout(r);\n      const u = Math.sign(n);\n      const _ = o * u;\n      const d = _ / 2;\n      const easing = t => 1 - (1 - t) * (1 - t);\n      const easedEndPressAnimation = (n, o) => animateNumber(n, o, l, t, easing);\n      const linearPressAnimation = (o, s) => animateNumber(o, n - _, r * s, ((o, s, e) => {\n        t(o);\n        if (e) {\n          c = easedEndPressAnimation(o, n);\n        }\n      }));\n      const f = animateNumber(0, _, l, ((r, l, a) => {\n        t(r);\n        if (a) {\n          s(e);\n          if (!e) {\n            const t = n - r;\n            const s = Math.sign(t - d) === u;\n            s && i((() => {\n              const s = t - _;\n              const e = Math.sign(s) === u;\n              c = e ? linearPressAnimation(r, Math.abs(s) / o) : easedEndPressAnimation(r, n);\n            }));\n          }\n        }\n      }), easing);\n      return t => {\n        e = true;\n        if (t) {\n          f();\n        }\n        a();\n        c();\n      };\n    }\n  }\n}))();\n\nconst createSizeObserver = (t, n, o) => {\n  const {dt: s} = o || {};\n  const e = getStaticPluginModuleInstance(Ht);\n  const [c] = createCache({\n    o: false,\n    u: true\n  });\n  return () => {\n    const o = [];\n    const r = createDOM(`<div class=\"${Q}\"><div class=\"${tt}\"></div></div>`);\n    const l = r[0];\n    const i = l.firstChild;\n    const onSizeChangedCallbackProxy = t => {\n      const o = t instanceof ResizeObserverEntry;\n      let s = false;\n      let e = false;\n      if (o) {\n        const [n, , o] = c(t.contentRect);\n        const r = domRectHasDimensions(n);\n        e = domRectAppeared(n, o);\n        s = !e && !r;\n      } else {\n        e = t === true;\n      }\n      if (!s) {\n        n({\n          ft: true,\n          dt: e\n        });\n      }\n    };\n    if (f) {\n      const t = new f((t => onSizeChangedCallbackProxy(t.pop())));\n      t.observe(i);\n      push(o, (() => {\n        t.disconnect();\n      }));\n    } else if (e) {\n      const [t, n] = e(i, onSizeChangedCallbackProxy, s);\n      push(o, concat([ addClass(l, Z), addEventListener(l, \"animationstart\", t) ], n));\n    } else {\n      return noop;\n    }\n    return bind(runEachAndClear, push(o, appendChildren(t, l)));\n  };\n};\n\nconst createTrinsicObserver = (t, n) => {\n  let o;\n  const isHeightIntrinsic = t => t.h === 0 || t.isIntersecting || t.intersectionRatio > 0;\n  const s = createDiv(et);\n  const [e] = createCache({\n    o: false\n  });\n  const triggerOnTrinsicChangedCallback = (t, o) => {\n    if (t) {\n      const s = e(isHeightIntrinsic(t));\n      const [, c] = s;\n      return c && !o && n(s) && [ s ];\n    }\n  };\n  const intersectionObserverCallback = (t, n) => triggerOnTrinsicChangedCallback(n.pop(), t);\n  return [ () => {\n    const n = [];\n    if (d) {\n      o = new d(bind(intersectionObserverCallback, false), {\n        root: t\n      });\n      o.observe(s);\n      push(n, (() => {\n        o.disconnect();\n      }));\n    } else {\n      const onSizeChanged = () => {\n        const t = I(s);\n        triggerOnTrinsicChangedCallback(t);\n      };\n      push(n, createSizeObserver(s, onSizeChanged)());\n      onSizeChanged();\n    }\n    return bind(runEachAndClear, push(n, appendChildren(t, s)));\n  }, () => o && intersectionObserverCallback(true, o.takeRecords()) ];\n};\n\nconst createObserversSetup = (t, n, o, s) => {\n  let e;\n  let c;\n  let r;\n  let l;\n  let i;\n  let a;\n  const u = `[${P}]`;\n  const _ = `[${q}]`;\n  const d = [ \"id\", \"class\", \"style\", \"open\", \"wrap\", \"cols\", \"rows\" ];\n  const {vt: v, ht: p, ot: h, gt: g, bt: b, nt: w, wt: y, yt: S, St: m, Ot: O} = t;\n  const getDirectionIsRTL = t => getStyles(t, \"direction\") === \"rtl\";\n  const $ = {\n    $t: false,\n    ct: getDirectionIsRTL(v)\n  };\n  const C = getEnvironment();\n  const x = getStaticPluginModuleInstance(zt);\n  const [H] = createCache({\n    i: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  }, (() => {\n    const s = x && x.tt(t, n, $, C, o).ut;\n    const e = y && w;\n    const c = !e && hasAttrClass(p, P, L);\n    const r = !w && S(j);\n    const l = r && getElementScroll(g);\n    const i = l && O();\n    const a = m(X, c);\n    const u = r && s && s()[0];\n    const _ = D(h);\n    const d = getFractionalSize(h);\n    u && u();\n    scrollElementTo(g, l);\n    i && i();\n    c && a();\n    return {\n      w: _.w + d.w,\n      h: _.h + d.h\n    };\n  }));\n  const E = debounce(s, {\n    _: () => e,\n    v: () => c,\n    S(t, n) {\n      const [o] = t;\n      const [s] = n;\n      return [ concat(keys(o), keys(s)).reduce(((t, n) => {\n        t[n] = o[n] || s[n];\n        return t;\n      }), {}) ];\n    }\n  });\n  const setDirection = t => {\n    const n = getDirectionIsRTL(v);\n    assignDeep(t, {\n      Ct: a !== n\n    });\n    assignDeep($, {\n      ct: n\n    });\n    a = n;\n  };\n  const onTrinsicChanged = (t, n) => {\n    const [o, e] = t;\n    const c = {\n      xt: e\n    };\n    assignDeep($, {\n      $t: o\n    });\n    !n && s(c);\n    return c;\n  };\n  const onSizeChanged = ({ft: t, dt: n}) => {\n    const o = t && !n;\n    const e = !o && C.R ? E : s;\n    const c = {\n      ft: t || n,\n      dt: n\n    };\n    setDirection(c);\n    e(c);\n  };\n  const onContentMutation = (t, n) => {\n    const [, o] = H();\n    const e = {\n      Ht: o\n    };\n    setDirection(e);\n    const c = t ? s : E;\n    o && !n && c(e);\n    return e;\n  };\n  const onHostMutation = (t, n, o) => {\n    const s = {\n      Et: n\n    };\n    setDirection(s);\n    if (n && !o) {\n      E(s);\n    }\n    return s;\n  };\n  const [z, I] = b ? createTrinsicObserver(p, onTrinsicChanged) : [];\n  const A = !w && createSizeObserver(p, onSizeChanged, {\n    dt: true\n  });\n  const [M, T] = createDOMObserver(p, false, onHostMutation, {\n    X: d,\n    j: d\n  });\n  const k = w && f && new f((t => {\n    const n = t[t.length - 1].contentRect;\n    onSizeChanged({\n      ft: true,\n      dt: domRectAppeared(n, i)\n    });\n    i = n;\n  }));\n  const R = debounce((() => {\n    const [, t] = H();\n    s({\n      Ht: t\n    });\n  }), {\n    _: 222,\n    p: true\n  });\n  return [ () => {\n    k && k.observe(p);\n    const t = A && A();\n    const n = z && z();\n    const o = M();\n    const s = C.L((t => {\n      if (t) {\n        E({\n          zt: t\n        });\n      } else {\n        R();\n      }\n    }));\n    return () => {\n      k && k.disconnect();\n      t && t();\n      n && n();\n      l && l();\n      o();\n      s();\n    };\n  }, ({It: t, At: n, Dt: o}) => {\n    const s = {};\n    const [i] = t(\"update.ignoreMutation\");\n    const [a, f] = t(\"update.attributes\");\n    const [v, p] = t(\"update.elementEvents\");\n    const [g, y] = t(\"update.debounce\");\n    const S = p || f;\n    const m = n || o;\n    const ignoreMutationFromOptions = t => isFunction(i) && i(t);\n    if (S) {\n      r && r();\n      l && l();\n      const [t, n] = createDOMObserver(b || h, true, onContentMutation, {\n        j: concat(d, a || []),\n        Y: v,\n        W: u,\n        G: (t, n) => {\n          const {target: o, attributeName: s} = t;\n          const e = !n && s && !w ? liesBetween(o, u, _) : false;\n          return e || !!closest(o, `.${rt}`) || !!ignoreMutationFromOptions(t);\n        }\n      });\n      l = t();\n      r = n;\n    }\n    if (y) {\n      E.m();\n      if (isArray(g)) {\n        const t = g[0];\n        const n = g[1];\n        e = isNumber(t) && t;\n        c = isNumber(n) && n;\n      } else if (isNumber(g)) {\n        e = g;\n        c = false;\n      } else {\n        e = false;\n        c = false;\n      }\n    }\n    if (m) {\n      const t = T();\n      const n = I && I();\n      const o = r && r();\n      t && assignDeep(s, onHostMutation(t[0], t[1], m));\n      n && assignDeep(s, onTrinsicChanged(n[0], m));\n      o && assignDeep(s, onContentMutation(o[0], m));\n    }\n    setDirection(s);\n    return s;\n  }, $ ];\n};\n\nconst createScrollbarsSetupElements = (t, n, o, s) => {\n  const e = \"--os-viewport-percent\";\n  const c = \"--os-scroll-percent\";\n  const r = \"--os-scroll-direction\";\n  const {U: l} = getEnvironment();\n  const {scrollbars: i} = l();\n  const {slot: a} = i;\n  const {vt: u, ht: _, ot: d, Mt: f, gt: p, wt: h, nt: g} = n;\n  const {scrollbars: b} = f ? {} : t;\n  const {slot: w} = b || {};\n  const y = [];\n  const S = [];\n  const m = [];\n  const O = dynamicInitializationElement([ u, _, d ], (() => g && h ? u : _), a, w);\n  const initScrollTimeline = t => {\n    if (v) {\n      const n = new v({\n        source: p,\n        axis: t\n      });\n      const _addScrollPercentAnimation = t => {\n        const o = t.Tt.animate({\n          clear: [ \"left\" ],\n          [c]: [ 0, 1 ]\n        }, {\n          timeline: n\n        });\n        return () => o.cancel();\n      };\n      return {\n        kt: _addScrollPercentAnimation\n      };\n    }\n  };\n  const $ = {\n    x: initScrollTimeline(\"x\"),\n    y: initScrollTimeline(\"y\")\n  };\n  const getViewportPercent = () => {\n    const {Rt: t, Vt: n} = o;\n    const getAxisValue = (t, n) => capNumber(0, 1, t / (t + n) || 0);\n    return {\n      x: getAxisValue(n.x, t.x),\n      y: getAxisValue(n.y, t.y)\n    };\n  };\n  const scrollbarStructureAddRemoveClass = (t, n, o) => {\n    const s = o ? addClass : removeClass;\n    each(t, (t => {\n      s(t.Tt, n);\n    }));\n  };\n  const scrollbarStyle = (t, n) => {\n    each(t, (t => {\n      const [o, s] = n(t);\n      setStyles(o, s);\n    }));\n  };\n  const scrollbarsAddRemoveClass = (t, n, o) => {\n    const s = isBoolean(o);\n    const e = s ? o : true;\n    const c = s ? !o : true;\n    e && scrollbarStructureAddRemoveClass(S, t, n);\n    c && scrollbarStructureAddRemoveClass(m, t, n);\n  };\n  const refreshScrollbarsHandleLength = () => {\n    const t = getViewportPercent();\n    const createScrollbarStyleFn = t => n => [ n.Tt, {\n      [e]: roundCssNumber(t) + \"\"\n    } ];\n    scrollbarStyle(S, createScrollbarStyleFn(t.x));\n    scrollbarStyle(m, createScrollbarStyleFn(t.y));\n  };\n  const refreshScrollbarsHandleOffset = () => {\n    if (!v) {\n      const {Lt: t} = o;\n      const n = getScrollCoordinatesPercent(t, getElementScroll(p));\n      const createScrollbarStyleFn = t => n => [ n.Tt, {\n        [c]: roundCssNumber(t) + \"\"\n      } ];\n      scrollbarStyle(S, createScrollbarStyleFn(n.x));\n      scrollbarStyle(m, createScrollbarStyleFn(n.y));\n    }\n  };\n  const refreshScrollbarsScrollCoordinates = () => {\n    const {Lt: t} = o;\n    const n = isDefaultDirectionScrollCoordinates(t);\n    const createScrollbarStyleFn = t => n => [ n.Tt, {\n      [r]: t ? \"0\" : \"1\"\n    } ];\n    scrollbarStyle(S, createScrollbarStyleFn(n.x));\n    scrollbarStyle(m, createScrollbarStyleFn(n.y));\n  };\n  const refreshScrollbarsScrollbarOffset = () => {\n    if (g && !h) {\n      const {Rt: t, Lt: n} = o;\n      const s = isDefaultDirectionScrollCoordinates(n);\n      const e = getScrollCoordinatesPercent(n, getElementScroll(p));\n      const styleScrollbarPosition = n => {\n        const {Tt: o} = n;\n        const c = parent(o) === d && o;\n        const getTranslateValue = (t, n, o) => {\n          const s = n * t;\n          return numberToCssPx(o ? s : -s);\n        };\n        return [ c, c && {\n          transform: getTrasformTranslateValue({\n            x: getTranslateValue(e.x, t.x, s.x),\n            y: getTranslateValue(e.y, t.y, s.y)\n          })\n        } ];\n      };\n      scrollbarStyle(S, styleScrollbarPosition);\n      scrollbarStyle(m, styleScrollbarPosition);\n    }\n  };\n  const generateScrollbarDOM = t => {\n    const n = t ? \"x\" : \"y\";\n    const o = t ? it : at;\n    const e = createDiv(`${rt} ${o}`);\n    const c = createDiv(ut);\n    const r = createDiv(_t);\n    const l = {\n      Tt: e,\n      Ut: c,\n      Pt: r\n    };\n    const i = $[n];\n    push(t ? S : m, l);\n    push(y, [ appendChildren(e, c), appendChildren(c, r), bind(removeElements, e), i && i.kt(l), s(l, scrollbarsAddRemoveClass, t) ]);\n    return l;\n  };\n  const C = bind(generateScrollbarDOM, true);\n  const x = bind(generateScrollbarDOM, false);\n  const appendElements = () => {\n    appendChildren(O, S[0].Tt);\n    appendChildren(O, m[0].Tt);\n    return bind(runEachAndClear, y);\n  };\n  C();\n  x();\n  return [ {\n    Nt: refreshScrollbarsHandleLength,\n    qt: refreshScrollbarsHandleOffset,\n    Bt: refreshScrollbarsScrollCoordinates,\n    Ft: refreshScrollbarsScrollbarOffset,\n    jt: scrollbarsAddRemoveClass,\n    Xt: {\n      Yt: S,\n      Wt: C,\n      Jt: bind(scrollbarStyle, S)\n    },\n    Gt: {\n      Yt: m,\n      Wt: x,\n      Jt: bind(scrollbarStyle, m)\n    }\n  }, appendElements ];\n};\n\nconst createScrollbarsSetupEvents = (t, n, o, s) => (r, l, i) => {\n  const {ht: u, ot: _, nt: d, gt: f, Kt: v, Ot: p} = n;\n  const {Tt: h, Ut: g, Pt: b} = r;\n  const [w, y] = selfClearTimeout(333);\n  const [S, m] = selfClearTimeout(444);\n  const scrollOffsetElementScrollBy = t => {\n    isFunction(f.scrollBy) && f.scrollBy({\n      behavior: \"smooth\",\n      left: t.x,\n      top: t.y\n    });\n  };\n  const createInteractiveScrollEvents = () => {\n    const n = \"pointerup pointercancel lostpointercapture\";\n    const s = `client${i ? \"X\" : \"Y\"}`;\n    const r = i ? $ : C;\n    const l = i ? \"left\" : \"top\";\n    const a = i ? \"w\" : \"h\";\n    const u = i ? \"x\" : \"y\";\n    const createRelativeHandleMove = (t, n) => s => {\n      const {Rt: e} = o;\n      const c = I(g)[a] - I(b)[a];\n      const r = n * s / c;\n      const l = r * e[u];\n      scrollElementTo(f, {\n        [u]: t + l\n      });\n    };\n    const _ = [];\n    return addEventListener(g, \"pointerdown\", (o => {\n      const i = closest(o.target, `.${_t}`) === b;\n      const d = i ? b : g;\n      const h = t.scrollbars;\n      const w = h[i ? \"dragScroll\" : \"clickScroll\"];\n      const {button: y, isPrimary: O, pointerType: $} = o;\n      const {pointers: C} = h;\n      const x = y === 0 && O && w && (C || []).includes($);\n      if (x) {\n        runEachAndClear(_);\n        m();\n        const t = !i && (o.shiftKey || w === \"instant\");\n        const h = bind(getBoundingClientRect, b);\n        const y = bind(getBoundingClientRect, g);\n        const getHandleOffset = (t, n) => (t || h())[l] - (n || y())[l];\n        const O = e(getBoundingClientRect(f)[r]) / I(f)[a] || 1;\n        const $ = createRelativeHandleMove(getElementScroll(f)[u], 1 / O);\n        const C = o[s];\n        const x = h();\n        const H = y();\n        const E = x[r];\n        const z = getHandleOffset(x, H) + E / 2;\n        const A = C - H[l];\n        const D = i ? 0 : A - z;\n        const releasePointerCapture = t => {\n          runEachAndClear(k);\n          d.releasePointerCapture(t.pointerId);\n        };\n        const M = i || t;\n        const T = p();\n        const k = [ addEventListener(v, n, releasePointerCapture), addEventListener(v, \"selectstart\", (t => preventDefault(t)), {\n          H: false\n        }), addEventListener(g, n, releasePointerCapture), M && addEventListener(g, \"pointermove\", (t => $(D + (t[s] - C)))), M && (() => {\n          const t = getElementScroll(f);\n          T();\n          const n = getElementScroll(f);\n          const o = {\n            x: n.x - t.x,\n            y: n.y - t.y\n          };\n          if (c(o.x) > 3 || c(o.y) > 3) {\n            p();\n            scrollElementTo(f, t);\n            scrollOffsetElementScrollBy(o);\n            S(T);\n          }\n        }) ];\n        d.setPointerCapture(o.pointerId);\n        if (t) {\n          $(D);\n        } else if (!i) {\n          const t = getStaticPluginModuleInstance(At);\n          if (t) {\n            const n = t($, D, E, (t => {\n              if (t) {\n                T();\n              } else {\n                push(k, T);\n              }\n            }));\n            push(k, n);\n            push(_, bind(n, true));\n          }\n        }\n      }\n    }));\n  };\n  let O = true;\n  return bind(runEachAndClear, [ addEventListener(b, \"pointermove pointerleave\", s), addEventListener(h, \"pointerenter\", (() => {\n    l(vt, true);\n  })), addEventListener(h, \"pointerleave pointercancel\", (() => {\n    l(vt, false);\n  })), !d && addEventListener(h, \"mousedown\", (() => {\n    const t = getFocusedElement();\n    if (hasAttr(t, q) || hasAttr(t, P) || t === document.body) {\n      a(bind(focusElement, _), 25);\n    }\n  })), addEventListener(h, \"wheel\", (t => {\n    const {deltaX: n, deltaY: o, deltaMode: s} = t;\n    if (O && s === 0 && parent(h) === u) {\n      scrollOffsetElementScrollBy({\n        x: n,\n        y: o\n      });\n    }\n    O = false;\n    l(bt, true);\n    w((() => {\n      O = true;\n      l(bt);\n    }));\n    preventDefault(t);\n  }), {\n    H: false,\n    I: true\n  }), addEventListener(h, \"pointerdown\", bind(addEventListener, v, \"click\", stopAndPrevent, {\n    A: true,\n    I: true,\n    H: false\n  }), {\n    I: true\n  }), createInteractiveScrollEvents(), y, m ]);\n};\n\nconst createScrollbarsSetup = (t, n, o, s, e, c) => {\n  let r;\n  let l;\n  let i;\n  let a;\n  let u;\n  let _ = noop;\n  let d = 0;\n  const isHoverablePointerType = t => t.pointerType === \"mouse\";\n  const [f, v] = selfClearTimeout();\n  const [p, h] = selfClearTimeout(100);\n  const [g, b] = selfClearTimeout(100);\n  const [w, y] = selfClearTimeout((() => d));\n  const [S, m] = createScrollbarsSetupElements(t, e, s, createScrollbarsSetupEvents(n, e, s, (t => isHoverablePointerType(t) && manageScrollbarsAutoHideInstantInteraction())));\n  const {ht: O, Qt: $, wt: C} = e;\n  const {jt: H, Nt: z, qt: I, Bt: A, Ft: D} = S;\n  const manageScrollbarsAutoHide = (t, n) => {\n    y();\n    if (t) {\n      H(gt);\n    } else {\n      const t = bind(H, gt, true);\n      if (d > 0 && !n) {\n        w(t);\n      } else {\n        t();\n      }\n    }\n  };\n  const manageScrollbarsAutoHideInstantInteraction = () => {\n    if (i ? !r : !a) {\n      manageScrollbarsAutoHide(true);\n      p((() => {\n        manageScrollbarsAutoHide(false);\n      }));\n    }\n  };\n  const manageAutoHideSuspension = t => {\n    H(ht, t, true);\n    H(ht, t, false);\n  };\n  const onHostMouseEnter = t => {\n    if (isHoverablePointerType(t)) {\n      r = i;\n      i && manageScrollbarsAutoHide(true);\n    }\n  };\n  const M = [ y, h, b, v, () => _(), addEventListener(O, \"pointerover\", onHostMouseEnter, {\n    A: true\n  }), addEventListener(O, \"pointerenter\", onHostMouseEnter), addEventListener(O, \"pointerleave\", (t => {\n    if (isHoverablePointerType(t)) {\n      r = false;\n      i && manageScrollbarsAutoHide(false);\n    }\n  })), addEventListener(O, \"pointermove\", (t => {\n    isHoverablePointerType(t) && l && manageScrollbarsAutoHideInstantInteraction();\n  })), addEventListener($, \"scroll\", (t => {\n    f((() => {\n      I();\n      manageScrollbarsAutoHideInstantInteraction();\n    }));\n    c(t);\n    D();\n  })) ];\n  return [ () => bind(runEachAndClear, push(M, m())), ({It: t, Dt: n, Zt: e, tn: c}) => {\n    const {nn: r, sn: f, en: v, cn: p} = c || {};\n    const {Ct: h, dt: b} = e || {};\n    const {ct: w} = o;\n    const {k: y} = getEnvironment();\n    const {K: S, rn: m} = s;\n    const [O, M] = t(\"showNativeOverlaidScrollbars\");\n    const [T, k] = t(\"scrollbars.theme\");\n    const [R, V] = t(\"scrollbars.visibility\");\n    const [L, U] = t(\"scrollbars.autoHide\");\n    const [P, N] = t(\"scrollbars.autoHideSuspend\");\n    const [q] = t(\"scrollbars.autoHideDelay\");\n    const [B, F] = t(\"scrollbars.dragScroll\");\n    const [j, X] = t(\"scrollbars.clickScroll\");\n    const [Y, W] = t(\"overflow\");\n    const J = b && !n;\n    const G = m.x || m.y;\n    const K = r || f || p || h || n;\n    const Q = v || V || W;\n    const Z = O && y.x && y.y;\n    const setScrollbarVisibility = (t, n, o) => {\n      const s = t.includes(E) && (R === x || R === \"auto\" && n === E);\n      H(dt, s, o);\n      return s;\n    };\n    d = q;\n    if (J) {\n      if (P && G) {\n        manageAutoHideSuspension(false);\n        _();\n        g((() => {\n          _ = addEventListener($, \"scroll\", bind(manageAutoHideSuspension, true), {\n            A: true\n          });\n        }));\n      } else {\n        manageAutoHideSuspension(true);\n      }\n    }\n    if (M) {\n      H(ct, Z);\n    }\n    if (k) {\n      H(u);\n      H(T, true);\n      u = T;\n    }\n    if (N && !P) {\n      manageAutoHideSuspension(true);\n    }\n    if (U) {\n      l = L === \"move\";\n      i = L === \"leave\";\n      a = L === \"never\";\n      manageScrollbarsAutoHide(a, true);\n    }\n    if (F) {\n      H(yt, B);\n    }\n    if (X) {\n      H(wt, !!j);\n    }\n    if (Q) {\n      const t = setScrollbarVisibility(Y.x, S.x, true);\n      const n = setScrollbarVisibility(Y.y, S.y, false);\n      const o = t && n;\n      H(ft, !o);\n    }\n    if (K) {\n      I();\n      z();\n      D();\n      p && A();\n      H(pt, !m.x, true);\n      H(pt, !m.y, false);\n      H(lt, w && !C);\n    }\n  }, {}, S ];\n};\n\nconst createStructureSetupElements = t => {\n  const o = getEnvironment();\n  const {U: s, R: e} = o;\n  const {elements: c} = s();\n  const {padding: r, viewport: l, content: i} = c;\n  const a = isHTMLElement(t);\n  const u = a ? {} : t;\n  const {elements: _} = u;\n  const {padding: d, viewport: f, content: v} = _ || {};\n  const p = a ? t : u.target;\n  const h = isBodyElement(p);\n  const g = p.ownerDocument;\n  const b = g.documentElement;\n  const getDocumentWindow = () => g.defaultView || n;\n  const w = bind(staticInitializationElement, [ p ]);\n  const y = bind(dynamicInitializationElement, [ p ]);\n  const S = bind(createDiv, \"\");\n  const $ = bind(w, S, l);\n  const C = bind(y, S, i);\n  const elementHasOverflow = t => {\n    const n = I(t);\n    const o = D(t);\n    const s = getStyles(t, m);\n    const e = getStyles(t, O);\n    return o.w - n.w > 0 && !overflowIsVisible(s) || o.h - n.h > 0 && !overflowIsVisible(e);\n  };\n  const x = $(f);\n  const H = x === p;\n  const E = H && h;\n  const z = !H && C(v);\n  const A = !H && x === z;\n  const M = E ? b : x;\n  const T = E ? M : p;\n  const k = !H && y(S, r, d);\n  const R = !A && z;\n  const L = [ R, M, k, T ].map((t => isHTMLElement(t) && !parent(t) && t));\n  const elementIsGenerated = t => t && inArray(L, t);\n  const B = !elementIsGenerated(M) && elementHasOverflow(M) ? M : p;\n  const F = E ? b : M;\n  const j = E ? g : M;\n  const X = {\n    vt: p,\n    ht: T,\n    ot: M,\n    ln: k,\n    bt: R,\n    gt: F,\n    Qt: j,\n    an: h ? b : B,\n    Kt: g,\n    wt: h,\n    Mt: a,\n    nt: H,\n    un: getDocumentWindow,\n    yt: t => hasAttrClass(M, q, t),\n    St: (t, n) => addRemoveAttrClass(M, q, t, n),\n    Ot: () => addRemoveAttrClass(F, q, Y, true)\n  };\n  const {vt: J, ht: Q, ln: Z, ot: tt, bt: nt} = X;\n  const ot = [ () => {\n    removeAttrs(Q, [ P, V ]);\n    removeAttrs(J, V);\n    if (h) {\n      removeAttrs(b, [ V, P ]);\n    }\n  } ];\n  let st = contents([ nt, tt, Z, Q, J ].find((t => t && !elementIsGenerated(t))));\n  const et = E ? J : nt || tt;\n  const ct = bind(runEachAndClear, ot);\n  const appendElements = () => {\n    const t = getDocumentWindow();\n    const n = getFocusedElement();\n    const unwrap = t => {\n      appendChildren(parent(t), contents(t));\n      removeElements(t);\n    };\n    const prepareWrapUnwrapFocus = t => addEventListener(t, \"focusin focusout focus blur\", stopAndPrevent, {\n      I: true,\n      H: false\n    });\n    const o = \"tabindex\";\n    const s = getAttr(tt, o);\n    const c = prepareWrapUnwrapFocus(n);\n    setAttrs(Q, P, H ? \"\" : N);\n    setAttrs(Z, G, \"\");\n    setAttrs(tt, q, \"\");\n    setAttrs(nt, K, \"\");\n    if (!H) {\n      setAttrs(tt, o, s || \"-1\");\n      h && setAttrs(b, U, \"\");\n    }\n    appendChildren(et, st);\n    appendChildren(Q, Z);\n    appendChildren(Z || Q, !H && tt);\n    appendChildren(tt, nt);\n    push(ot, [ c, () => {\n      const t = getFocusedElement();\n      const n = elementIsGenerated(tt);\n      const e = n && t === tt ? J : t;\n      const c = prepareWrapUnwrapFocus(e);\n      removeAttrs(Z, G);\n      removeAttrs(nt, K);\n      removeAttrs(tt, q);\n      h && removeAttrs(b, U);\n      s ? setAttrs(tt, o, s) : removeAttrs(tt, o);\n      elementIsGenerated(nt) && unwrap(nt);\n      n && unwrap(tt);\n      elementIsGenerated(Z) && unwrap(Z);\n      focusElement(e);\n      c();\n    } ]);\n    if (e && !H) {\n      addAttrClass(tt, q, W);\n      push(ot, bind(removeAttrs, tt, q));\n    }\n    focusElement(!H && h && n === J && t.top === t ? tt : n);\n    c();\n    st = 0;\n    return ct;\n  };\n  return [ X, appendElements, ct ];\n};\n\nconst createTrinsicUpdateSegment = ({bt: t}) => ({Zt: n, _n: o, Dt: s}) => {\n  const {xt: e} = n || {};\n  const {$t: c} = o;\n  const r = t && (e || s);\n  if (r) {\n    setStyles(t, {\n      [C]: c && \"100%\"\n    });\n  }\n};\n\nconst createPaddingUpdateSegment = ({ht: t, ln: n, ot: o, nt: s}, e) => {\n  const [c, r] = createCache({\n    i: equalTRBL,\n    o: topRightBottomLeft()\n  }, bind(topRightBottomLeft, t, \"padding\", \"\"));\n  return ({It: t, Zt: l, _n: i, Dt: a}) => {\n    let [u, _] = r(a);\n    const {R: d} = getEnvironment();\n    const {ft: f, Ht: v, Ct: m} = l || {};\n    const {ct: O} = i;\n    const [C, x] = t(\"paddingAbsolute\");\n    const H = a || v;\n    if (f || _ || H) {\n      [u, _] = c(a);\n    }\n    const E = !s && (x || m || _);\n    if (E) {\n      const t = !C || !n && !d;\n      const s = u.r + u.l;\n      const c = u.t + u.b;\n      const r = {\n        [y]: t && !O ? -s : 0,\n        [S]: t ? -c : 0,\n        [w]: t && O ? -s : 0,\n        top: t ? -u.t : 0,\n        right: t ? O ? -u.r : \"auto\" : 0,\n        left: t ? O ? \"auto\" : -u.l : 0,\n        [$]: t && `calc(100% + ${s}px)`\n      };\n      const l = {\n        [p]: t ? u.t : 0,\n        [h]: t ? u.r : 0,\n        [b]: t ? u.b : 0,\n        [g]: t ? u.l : 0\n      };\n      setStyles(n || o, r);\n      setStyles(o, l);\n      assignDeep(e, {\n        ln: u,\n        dn: !t,\n        rt: n ? l : assignDeep({}, r, l)\n      });\n    }\n    return {\n      fn: E\n    };\n  };\n};\n\nconst createOverflowUpdateSegment = (t, s) => {\n  const e = getEnvironment();\n  const {ht: c, ln: r, ot: l, nt: a, Qt: u, gt: _, wt: d, St: f, un: v} = t;\n  const {R: p} = e;\n  const h = d && a;\n  const g = bind(o, 0);\n  const b = {\n    display: () => false,\n    direction: t => t !== \"ltr\",\n    flexDirection: t => t.endsWith(\"-reverse\"),\n    writingMode: t => t !== \"horizontal-tb\"\n  };\n  const w = keys(b);\n  const y = {\n    i: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  };\n  const S = {\n    i: equalXY,\n    o: {}\n  };\n  const setMeasuringMode = t => {\n    f(X, !h && t);\n  };\n  const getMeasuredScrollCoordinates = t => {\n    const n = w.some((n => {\n      const o = t[n];\n      return o && b[n](o);\n    }));\n    if (!n) {\n      return {\n        D: {\n          x: 0,\n          y: 0\n        },\n        M: {\n          x: 1,\n          y: 1\n        }\n      };\n    }\n    setMeasuringMode(true);\n    const o = getElementScroll(_);\n    const s = f(J, true);\n    const e = addEventListener(u, E, (t => {\n      const n = getElementScroll(_);\n      if (t.isTrusted && n.x === o.x && n.y === o.y) {\n        stopPropagation(t);\n      }\n    }), {\n      I: true,\n      A: true\n    });\n    scrollElementTo(_, {\n      x: 0,\n      y: 0\n    });\n    s();\n    const c = getElementScroll(_);\n    const r = D(_);\n    scrollElementTo(_, {\n      x: r.w,\n      y: r.h\n    });\n    const l = getElementScroll(_);\n    scrollElementTo(_, {\n      x: l.x - c.x < 1 && -r.w,\n      y: l.y - c.y < 1 && -r.h\n    });\n    const a = getElementScroll(_);\n    scrollElementTo(_, o);\n    i((() => e()));\n    return {\n      D: c,\n      M: a\n    };\n  };\n  const getOverflowAmount = (t, o) => {\n    const s = n.devicePixelRatio % 1 !== 0 ? 1 : 0;\n    const e = {\n      w: g(t.w - o.w),\n      h: g(t.h - o.h)\n    };\n    return {\n      w: e.w > s ? e.w : 0,\n      h: e.h > s ? e.h : 0\n    };\n  };\n  const [m, O] = createCache(y, bind(getFractionalSize, l));\n  const [$, C] = createCache(y, bind(D, l));\n  const [z, I] = createCache(y);\n  const [M] = createCache(S);\n  const [T, k] = createCache(y);\n  const [R] = createCache(S);\n  const [V] = createCache({\n    i: (t, n) => equal(t, n, w),\n    o: {}\n  }, (() => hasDimensions(l) ? getStyles(l, w) : {}));\n  const [U, N] = createCache({\n    i: (t, n) => equalXY(t.D, n.D) && equalXY(t.M, n.M),\n    o: getZeroScrollCoordinates()\n  });\n  const q = getStaticPluginModuleInstance(zt);\n  const createViewportOverflowStyleClassName = (t, n) => {\n    const o = n ? B : F;\n    return `${o}${capitalizeFirstLetter(t)}`;\n  };\n  const setViewportOverflowStyle = t => {\n    const createAllOverflowStyleClassNames = t => [ x, H, E ].map((n => createViewportOverflowStyleClassName(n, t)));\n    const n = createAllOverflowStyleClassNames(true).concat(createAllOverflowStyleClassNames()).join(\" \");\n    f(n);\n    f(keys(t).map((n => createViewportOverflowStyleClassName(t[n], n === \"x\"))).join(\" \"), true);\n  };\n  return ({It: n, Zt: o, _n: i, Dt: a}, {fn: u}) => {\n    const {ft: _, Ht: d, Ct: b, dt: w, zt: y} = o || {};\n    const S = q && q.tt(t, s, i, e, n);\n    const {it: x, ut: H, _t: E} = S || {};\n    const [D, B] = getShowNativeOverlaidScrollbars(n, e);\n    const [F, j] = n(\"overflow\");\n    const X = overflowIsVisible(F.x);\n    const Y = overflowIsVisible(F.y);\n    const J = true;\n    let K = O(a);\n    let Q = C(a);\n    let Z = I(a);\n    let tt = k(a);\n    if (B && p) {\n      f(W, !D);\n    }\n    {\n      if (hasAttrClass(c, P, L)) {\n        setMeasuringMode(true);\n      }\n      const [t] = H ? H() : [];\n      const [n] = K = m(a);\n      const [o] = Q = $(a);\n      const s = A(l);\n      const e = h && getWindowSize(v());\n      const r = {\n        w: g(o.w + n.w),\n        h: g(o.h + n.h)\n      };\n      const i = {\n        w: g((e ? e.w : s.w + g(s.w - o.w)) + n.w),\n        h: g((e ? e.h : s.h + g(s.h - o.h)) + n.h)\n      };\n      t && t();\n      tt = T(i);\n      Z = z(getOverflowAmount(r, i), a);\n    }\n    const [nt, ot] = tt;\n    const [st, et] = Z;\n    const [ct, rt] = Q;\n    const [lt, it] = K;\n    const [at, ut] = M({\n      x: st.w > 0,\n      y: st.h > 0\n    });\n    const _t = X && Y && (at.x || at.y) || X && at.x && !at.y || Y && at.y && !at.x;\n    const dt = u || b || y || it || rt || ot || et || j || B || J;\n    const ft = createViewportOverflowState(at, F);\n    const [vt, pt] = R(ft.K);\n    const [ht, gt] = V(a);\n    const bt = b || w || gt || ut || a;\n    const [wt, yt] = bt ? U(getMeasuredScrollCoordinates(ht), a) : N();\n    if (dt) {\n      pt && setViewportOverflowStyle(ft.K);\n      if (E && x) {\n        setStyles(l, E(ft, i, x(ft, ct, lt)));\n      }\n    }\n    setMeasuringMode(false);\n    addRemoveAttrClass(c, P, L, _t);\n    addRemoveAttrClass(r, G, L, _t);\n    assignDeep(s, {\n      K: vt,\n      Vt: {\n        x: nt.w,\n        y: nt.h\n      },\n      Rt: {\n        x: st.w,\n        y: st.h\n      },\n      rn: at,\n      Lt: sanitizeScrollCoordinates(wt, st)\n    });\n    return {\n      en: pt,\n      nn: ot,\n      sn: et,\n      cn: yt || et,\n      vn: bt\n    };\n  };\n};\n\nconst createStructureSetup = t => {\n  const [n, o, s] = createStructureSetupElements(t);\n  const e = {\n    ln: {\n      t: 0,\n      r: 0,\n      b: 0,\n      l: 0\n    },\n    dn: false,\n    rt: {\n      [y]: 0,\n      [S]: 0,\n      [w]: 0,\n      [p]: 0,\n      [h]: 0,\n      [b]: 0,\n      [g]: 0\n    },\n    Vt: {\n      x: 0,\n      y: 0\n    },\n    Rt: {\n      x: 0,\n      y: 0\n    },\n    K: {\n      x: H,\n      y: H\n    },\n    rn: {\n      x: false,\n      y: false\n    },\n    Lt: getZeroScrollCoordinates()\n  };\n  const {vt: c, gt: r, nt: l, Ot: i} = n;\n  const {R: a, k: u} = getEnvironment();\n  const _ = !a && (u.x || u.y);\n  const d = [ createTrinsicUpdateSegment(n), createPaddingUpdateSegment(n, e), createOverflowUpdateSegment(n, e) ];\n  return [ o, t => {\n    const n = {};\n    const o = _;\n    const s = o && getElementScroll(r);\n    const e = s && i();\n    each(d, (o => {\n      assignDeep(n, o(t, n) || {});\n    }));\n    scrollElementTo(r, s);\n    e && e();\n    !l && scrollElementTo(c, 0);\n    return n;\n  }, e, n, s ];\n};\n\nconst createSetups = (t, n, o, s, e) => {\n  let c = false;\n  const r = createOptionCheck(n, {});\n  const [l, i, a, u, _] = createStructureSetup(t);\n  const [d, f, v] = createObserversSetup(u, a, r, (t => {\n    update({}, t);\n  }));\n  const [p, h, , g] = createScrollbarsSetup(t, n, v, a, u, e);\n  const updateHintsAreTruthy = t => keys(t).some((n => !!t[n]));\n  const update = (t, e) => {\n    if (o()) {\n      return false;\n    }\n    const {pn: r, Dt: l, At: a, hn: u} = t;\n    const _ = r || {};\n    const d = !!l || !c;\n    const p = {\n      It: createOptionCheck(n, _, d),\n      pn: _,\n      Dt: d\n    };\n    if (u) {\n      h(p);\n      return false;\n    }\n    const g = e || f(assignDeep({}, p, {\n      At: a\n    }));\n    const b = i(assignDeep({}, p, {\n      _n: v,\n      Zt: g\n    }));\n    h(assignDeep({}, p, {\n      Zt: g,\n      tn: b\n    }));\n    const w = updateHintsAreTruthy(g);\n    const y = updateHintsAreTruthy(b);\n    const S = w || y || !isEmptyObject(_) || d;\n    c = true;\n    S && s(t, {\n      Zt: g,\n      tn: b\n    });\n    return S;\n  };\n  return [ () => {\n    const {an: t, gt: n, Ot: o} = u;\n    const s = getElementScroll(t);\n    const e = [ d(), l(), p() ];\n    const c = o();\n    scrollElementTo(n, s);\n    c();\n    return bind(runEachAndClear, e);\n  }, update, () => ({\n    gn: v,\n    bn: a\n  }), {\n    wn: u,\n    yn: g\n  }, _ ];\n};\n\nconst OverlayScrollbars = (t, n, o) => {\n  const {N: s} = getEnvironment();\n  const e = isHTMLElement(t);\n  const c = e ? t : t.target;\n  const r = getInstance(c);\n  if (n && !r) {\n    let r = false;\n    const l = [];\n    const i = {};\n    const validateOptions = t => {\n      const n = removeUndefinedProperties(t, true);\n      const o = getStaticPluginModuleInstance(xt);\n      return o ? o(n, true) : n;\n    };\n    const a = assignDeep({}, s(), validateOptions(n));\n    const [u, _, d] = createEventListenerHub();\n    const [f, v, p] = createEventListenerHub(o);\n    const triggerEvent = (t, n) => {\n      p(t, n);\n      d(t, n);\n    };\n    const [h, g, b, w, y] = createSetups(t, a, (() => r), (({pn: t, Dt: n}, {Zt: o, tn: s}) => {\n      const {ft: e, Ct: c, xt: r, Ht: l, Et: i, dt: a} = o;\n      const {nn: u, sn: _, en: d, cn: f} = s;\n      triggerEvent(\"updated\", [ S, {\n        updateHints: {\n          sizeChanged: !!e,\n          directionChanged: !!c,\n          heightIntrinsicChanged: !!r,\n          overflowEdgeChanged: !!u,\n          overflowAmountChanged: !!_,\n          overflowStyleChanged: !!d,\n          scrollCoordinatesChanged: !!f,\n          contentMutation: !!l,\n          hostMutation: !!i,\n          appear: !!a\n        },\n        changedOptions: t || {},\n        force: !!n\n      } ]);\n    }), (t => triggerEvent(\"scroll\", [ S, t ])));\n    const destroy = t => {\n      removeInstance(c);\n      runEachAndClear(l);\n      r = true;\n      triggerEvent(\"destroyed\", [ S, t ]);\n      _();\n      v();\n    };\n    const S = {\n      options(t, n) {\n        if (t) {\n          const o = n ? s() : {};\n          const e = getOptionsDiff(a, assignDeep(o, validateOptions(t)));\n          if (!isEmptyObject(e)) {\n            assignDeep(a, e);\n            g({\n              pn: e\n            });\n          }\n        }\n        return assignDeep({}, a);\n      },\n      on: f,\n      off: (t, n) => {\n        t && n && v(t, n);\n      },\n      state() {\n        const {gn: t, bn: n} = b();\n        const {ct: o} = t;\n        const {Vt: s, Rt: e, K: c, rn: l, ln: i, dn: a, Lt: u} = n;\n        return assignDeep({}, {\n          overflowEdge: s,\n          overflowAmount: e,\n          overflowStyle: c,\n          hasOverflow: l,\n          scrollCoordinates: {\n            start: u.D,\n            end: u.M\n          },\n          padding: i,\n          paddingAbsolute: a,\n          directionRTL: o,\n          destroyed: r\n        });\n      },\n      elements() {\n        const {vt: t, ht: n, ln: o, ot: s, bt: e, gt: c, Qt: r} = w.wn;\n        const {Xt: l, Gt: i} = w.yn;\n        const translateScrollbarStructure = t => {\n          const {Pt: n, Ut: o, Tt: s} = t;\n          return {\n            scrollbar: s,\n            track: o,\n            handle: n\n          };\n        };\n        const translateScrollbarsSetupElement = t => {\n          const {Yt: n, Wt: o} = t;\n          const s = translateScrollbarStructure(n[0]);\n          return assignDeep({}, s, {\n            clone: () => {\n              const t = translateScrollbarStructure(o());\n              g({\n                hn: true\n              });\n              return t;\n            }\n          });\n        };\n        return assignDeep({}, {\n          target: t,\n          host: n,\n          padding: o || s,\n          viewport: s,\n          content: e || s,\n          scrollOffsetElement: c,\n          scrollEventElement: r,\n          scrollbarHorizontal: translateScrollbarsSetupElement(l),\n          scrollbarVertical: translateScrollbarsSetupElement(i)\n        });\n      },\n      update: t => g({\n        Dt: t,\n        At: true\n      }),\n      destroy: bind(destroy, false),\n      plugin: t => i[keys(t)[0]]\n    };\n    push(l, [ y ]);\n    addInstance(c, S);\n    registerPluginModuleInstances($t, OverlayScrollbars, [ S, u, i ]);\n    if (cancelInitialization(w.wn.wt, !e && t.cancel)) {\n      destroy(true);\n      return S;\n    }\n    push(l, h());\n    triggerEvent(\"initialized\", [ S ]);\n    S.update();\n    return S;\n  }\n  return r;\n};\n\nOverlayScrollbars.plugin = t => {\n  const n = isArray(t);\n  const o = n ? t : [ t ];\n  const s = o.map((t => registerPluginModuleInstances(t, OverlayScrollbars)[0]));\n  addPlugins(o);\n  return n ? s : s[0];\n};\n\nOverlayScrollbars.valid = t => {\n  const n = t && t.elements;\n  const o = isFunction(n) && n();\n  return isPlainObject(o) && !!getInstance(o.target);\n};\n\nOverlayScrollbars.env = () => {\n  const {T: t, k: n, R: o, V: s, B: e, F: c, U: r, P: l, N: i, q: a} = getEnvironment();\n  return assignDeep({}, {\n    scrollbarsSize: t,\n    scrollbarsOverlaid: n,\n    scrollbarsHiding: o,\n    scrollTimeline: s,\n    staticDefaultInitialization: e,\n    staticDefaultOptions: c,\n    getDefaultInitialization: r,\n    setDefaultInitialization: l,\n    getDefaultOptions: i,\n    setDefaultOptions: a\n  });\n};\n\nOverlayScrollbars.nonce = setNonce;\n\nexport { Dt as ClickScrollPlugin, OverlayScrollbars, It as ScrollbarsHidingPlugin, Et as SizeObserverPlugin };\n","import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Component, Output, ViewChild, NgModule } from '@angular/core';\nimport { OverlayScrollbars } from 'overlayscrollbars';\n\n/* eslint-disable @typescript-eslint/consistent-type-imports */\r\nconst createDefer = () => {\r\n    /* istanbul ignore next */\r\n    if (typeof window === 'undefined') {\r\n        // mock ssr calls with \"noop\"\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        const noop = () => { };\r\n        return [noop, noop];\r\n    }\r\n    let idleId;\r\n    let rafId;\r\n    const wnd = window;\r\n    const idleSupported = typeof wnd.requestIdleCallback === 'function';\r\n    const rAF = wnd.requestAnimationFrame;\r\n    const cAF = wnd.cancelAnimationFrame;\r\n    const rIdle = idleSupported ? wnd.requestIdleCallback : rAF;\r\n    const cIdle = idleSupported ? wnd.cancelIdleCallback : cAF;\r\n    const clear = () => {\r\n        cIdle(idleId);\r\n        cAF(rafId);\r\n    };\r\n    return [\r\n        (callback, options) => {\r\n            clear();\r\n            idleId = rIdle(idleSupported\r\n                ? () => {\r\n                    clear();\r\n                    // inside idle its best practice to use rAF to change DOM for best performance\r\n                    rafId = rAF(callback);\r\n                }\r\n                : callback, \r\n            // @ts-ignore\r\n            typeof options === 'object' ? options : { timeout: 2233 });\r\n        },\r\n        clear,\r\n    ];\r\n};\r\nclass OverlayScrollbarsDirective {\r\n    constructor(ngZone) {\r\n        this.ngZone = ngZone;\r\n        this.instanceRef = null;\r\n        const [requestDefer, cancelDefer] = createDefer();\r\n        this.requestDefer = requestDefer;\r\n        this.cancelDefer = cancelDefer;\r\n    }\r\n    osInitialize(target) {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            const init = () => {\r\n                this.instanceRef = OverlayScrollbars(target, this.options || {}, \r\n                /* istanbul ignore next */\r\n                this.events || {});\r\n            };\r\n            if (this.defer) {\r\n                this.requestDefer(init, this.defer);\r\n            }\r\n            else {\r\n                init();\r\n            }\r\n        });\r\n    }\r\n    osInstance() {\r\n        return this.instanceRef;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const optionsChange = changes.options;\r\n        const eventsChange = changes.events;\r\n        if (optionsChange) {\r\n            const curr = optionsChange.currentValue;\r\n            this.options = curr;\r\n            if (OverlayScrollbars.valid(this.instanceRef)) {\r\n                this.instanceRef.options(curr || {}, true);\r\n            }\r\n        }\r\n        /* istanbul ignore else */\r\n        if (eventsChange) {\r\n            const curr = eventsChange.currentValue;\r\n            this.events = curr;\r\n            if (OverlayScrollbars.valid(this.instanceRef)) {\r\n                this.instanceRef.on(\r\n                /* istanbul ignore next */\r\n                curr || {}, true);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.cancelDefer();\r\n    }\r\n}\r\nOverlayScrollbarsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayScrollbarsDirective, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\r\nOverlayScrollbarsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.4.0\", type: OverlayScrollbarsDirective, selector: \"[overlayScrollbars]\", inputs: { options: \"options\", events: \"events\", defer: \"defer\" }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayScrollbarsDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[overlayScrollbars]', // https://angular.io/guide/styleguide#directive-selectors\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { options: [{\r\n                type: Input,\r\n                args: ['options']\r\n            }], events: [{\r\n                type: Input,\r\n                args: ['events']\r\n            }], defer: [{\r\n                type: Input,\r\n                args: ['defer']\r\n            }] } });\n\n/* eslint-disable @typescript-eslint/consistent-type-imports */\r\nconst mergeEventListeners = (emits, events) => Object.keys(emits).reduce((obj, name) => {\r\n    const emitListener = emits[name];\r\n    const eventListener = events[name];\r\n    /* istanbul ignore next */\r\n    obj[name] = [\r\n        emitListener,\r\n        ...(Array.isArray(eventListener) ? eventListener : [eventListener]).filter(Boolean),\r\n    ];\r\n    return obj;\r\n}, {});\r\nclass OverlayScrollbarsComponent {\r\n    constructor(ngZone, targetRef) {\r\n        this.ngZone = ngZone;\r\n        this.targetRef = targetRef;\r\n        this.onInitialized = new EventEmitter();\r\n        this.onUpdated = new EventEmitter();\r\n        this.onDestroyed = new EventEmitter();\r\n        this.onScroll = new EventEmitter();\r\n    }\r\n    osInstance() {\r\n        return this.osDirective.osInstance();\r\n    }\r\n    getElement() {\r\n        return this.targetRef.nativeElement;\r\n    }\r\n    ngAfterViewInit() {\r\n        const targetElm = this.getElement();\r\n        const contentElm = this.contentRef.nativeElement;\r\n        /* istanbul ignore else */\r\n        if (targetElm && contentElm) {\r\n            this.osDirective.osInitialize({\r\n                target: targetElm,\r\n                elements: {\r\n                    viewport: contentElm,\r\n                    content: contentElm,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.osDirective?.osInstance()?.destroy();\r\n    }\r\n    mergeEvents(originalEvents) {\r\n        return mergeEventListeners({\r\n            initialized: (...args) => this.dispatchEventIfHasObservers(this.onInitialized, args),\r\n            updated: (...args) => this.dispatchEventIfHasObservers(this.onUpdated, args),\r\n            destroyed: (...args) => this.dispatchEventIfHasObservers(this.onDestroyed, args),\r\n            scroll: (...args) => this.dispatchEventIfHasObservers(this.onScroll, args),\r\n        }, originalEvents || {});\r\n    }\r\n    dispatchEventIfHasObservers(eventEmitter, args) {\r\n        // `observed` is available since RxJS@7.2 because `observers` is being deprecated.\r\n        if (eventEmitter.observed || eventEmitter.observers.length > 0) {\r\n            // This is required to re-enter the Angular zone to call the event handler in the Angular\r\n            // zone too. This will not re-enter the Angular zone if emitter doesn't have any observers,\r\n            // for instance, it's being listened: `<overlay-scrollbars (osInitialized)=\"...\"`.\r\n            // Events are dispatched outside of the Angular zone because instance is created in the\r\n            // `<root>` zone, see `OverlayScrollbarsDirective#osInitialize`.\r\n            this.ngZone.run(() => eventEmitter.emit(args));\r\n        }\r\n    }\r\n}\r\nOverlayScrollbarsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayScrollbarsComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nOverlayScrollbarsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.4.0\", type: OverlayScrollbarsComponent, selector: \"overlay-scrollbars, [overlay-scrollbars]\", inputs: { options: \"options\", events: \"events\", defer: \"defer\" }, outputs: { onInitialized: \"osInitialized\", onUpdated: \"osUpdated\", onDestroyed: \"osDestroyed\", onScroll: \"osScroll\" }, host: { attributes: { \"data-overlayscrollbars-initialize\": \"\" } }, viewQueries: [{ propertyName: \"contentRef\", first: true, predicate: [\"content\"], descendants: true }, { propertyName: \"osDirective\", first: true, predicate: [\"content\"], descendants: true, read: OverlayScrollbarsDirective }], ngImport: i0, template: `\r\n    <div\r\n      overlayScrollbars\r\n      data-overlayscrollbars-contents=\"\"\r\n      [options]=\"options\"\r\n      [events]=\"mergeEvents(events)\"\r\n      [defer]=\"defer\"\r\n      #content\r\n    >\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, directives: [{ type: OverlayScrollbarsDirective, selector: \"[overlayScrollbars]\", inputs: [\"options\", \"events\", \"defer\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayScrollbarsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'overlay-scrollbars, [overlay-scrollbars]',\r\n                    host: { 'data-overlayscrollbars-initialize': '' },\r\n                    template: `\r\n    <div\r\n      overlayScrollbars\r\n      data-overlayscrollbars-contents=\"\"\r\n      [options]=\"options\"\r\n      [events]=\"mergeEvents(events)\"\r\n      [defer]=\"defer\"\r\n      #content\r\n    >\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }]; }, propDecorators: { options: [{\r\n                type: Input,\r\n                args: ['options']\r\n            }], events: [{\r\n                type: Input,\r\n                args: ['events']\r\n            }], defer: [{\r\n                type: Input,\r\n                args: ['defer']\r\n            }], onInitialized: [{\r\n                type: Output,\r\n                args: ['osInitialized']\r\n            }], onUpdated: [{\r\n                type: Output,\r\n                args: ['osUpdated']\r\n            }], onDestroyed: [{\r\n                type: Output,\r\n                args: ['osDestroyed']\r\n            }], onScroll: [{\r\n                type: Output,\r\n                args: ['osScroll']\r\n            }], contentRef: [{\r\n                type: ViewChild,\r\n                args: ['content']\r\n            }], osDirective: [{\r\n                type: ViewChild,\r\n                args: ['content', { read: OverlayScrollbarsDirective }]\r\n            }] } });\n\nclass OverlayscrollbarsModule {\r\n}\r\nOverlayscrollbarsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayscrollbarsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nOverlayscrollbarsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayscrollbarsModule, declarations: [OverlayScrollbarsComponent, OverlayScrollbarsDirective], exports: [OverlayScrollbarsComponent, OverlayScrollbarsDirective] });\r\nOverlayscrollbarsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayscrollbarsModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.4.0\", ngImport: i0, type: OverlayscrollbarsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [OverlayScrollbarsComponent, OverlayScrollbarsDirective],\r\n                    exports: [OverlayScrollbarsComponent, OverlayScrollbarsDirective],\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsDirective, OverlayscrollbarsModule };\n"],"names":["ExercisesService","constructor","this","http","inject","HttpClient","apiURLExercises","environment","apiURL","apiURLMuscles","apiURLBodyAreas","apiURLMovements","apiURLStartingPositions","apiURLEquipments","getExercises","get","getExercise","exerciseId","createExercise","exerciseData","post","updateExercise","put","deleteExercise","delete","getMuscles","createMuscle","muscle","getBodyAreas","createBodyArea","bodyArea","getMovements","createMovement","movement","getStartingPositions","createStartingPosition","startingPosition","getEquipments","createEquipment","equipment","factory","ɵfac","providedIn","BodyAreasService","getBodyArea","bodyAreaId","updateBodyArea","id","deleteBodyArea","MovementsService","getMovement","movementId","updateMovement","deleteMovement","StartingPositionsService","getStartingPosition","startingPositionId","updateStartingPosition","deleteStartingPosition","EquipmentService","getEquipment","equipmentId","updateEquipment","deleteEquipment","SearchService","apiURLSearch","searchExercises","searchTerm","filters","langCode","params","ShareDataService","data$","BehaviorSubject","searchedData$","asObservable","data2$","filterData$","updateSearchResults","data","next","updateFilterResults","data2","AddRemoveDataService","sharedDataService","dataSignal","signal","addDataItem","name","value","localeName","itemIndex","findIndex","item","console","log","update","updatedData","values","push","localeNames","removeDataItem","filter","v","length","splice","resetAll","set","ShareStateService","drawerSignal","listOption","isFetchingData","isLoading","SelectedExercisesService","selectedExercises","addToSelected","exercise","selectedExercise","isSelected","reps","sets","pause","weight","removeFromSelected","ProgramDataService","programData","notes","programId","programName","ProgramClientsDataService","programClientsData","selectedClients","dateRange","ProgramsService","apiURLPrograms","isAdminProgram","getPrograms","getProgram","createProgram","updateProgram","deleteProgram","IsClientValidService","isClientValid","ClientsService","apiURLClients","getClients","getClientsBasic","getClient","clientId","createClient","clientData","updateClient","deleteClient","getClientProgram","getAllClientsPrograms","getAllClientsProgramsBasic","updateClientProgram","updatedProgram","programPosition","deleteClientProgram","ShareClientsDataService","clients","isClientProgram","clientInfo","clientName","start","end","reuseProgram","isBrandNewClientsProgram","DropListTransferItemService","transferringItem","undefined","i0","muscle_r1","bodyArea_r2","translations","ctx_r2","selectedLang","movement_r4","startingPosition_r5","equipment_r6","_r7","exerciseCard","showHoverIcon","isHovered","_r8","ExerciseModalComponent_Conditional_47_Conditional_1_Template","ExerciseModalComponent_Conditional_47_Conditional_2_Template","ExerciseModalComponent","MAT_DIALOG_DATA","selectedExercisesService","themeManager","ThemeManagerService","themeSignal","selectors","standalone","features","decls","vars","consts","i18n_0","$localize","ExerciseModalComponent_Conditional_2_Template","ExerciseModalComponent_Conditional_3_Template","ExerciseModalComponent_For_22_Template","ExerciseModalComponent_For_28_Template","ExerciseModalComponent_For_34_Template","ExerciseModalComponent_For_40_Template","ExerciseModalComponent_For_46_Template","ExerciseModalComponent_Conditional_47_Template","ExerciseModalComponent_Conditional_48_Template","_c0","ctx","isProgramExercise","fullExercise","images","mainImg","description","muscles","bodyAreas","movements","startingPositions","equipments","NgClass","MatIconButton","MatTooltip","MatDialogClose","MatIcon","MatDialogTitle","OverlayscrollbarsModule","i1","MatChipSet","MatChip","MatDialogActions","MatFabButton","encapsulation","selectedExercise_r2","SelectedExpansionPanelComponent_For_4_Conditional_28_For_4_Conditional_2_Template","equipment_r3","ctx_r5","selectedLanguage","ɵ$index_84_r4","ɵ$count_84_r5","SelectedExpansionPanelComponent_For_4_Conditional_28_For_4_Template","SelectedExpansionPanelComponent_For_4_div_1_Template","SelectedExpansionPanelComponent_For_4_Conditional_26_Template","SelectedExpansionPanelComponent_For_4_Conditional_27_Template","SelectedExpansionPanelComponent_For_4_Conditional_28_Template","$event","_r1","$implicit","stopPropagation","showExerciseModal","isExpanded","ɵ$index_7_r7","SelectedExpansionPanelComponent","_snackBar","MatSnackBar","dialog","MatDialog","exercisesService","localstorageService","LocalstorageService","subscriptions","Subscription","ngOnInit","_getUserLanguageToken","togglePanel","index","panelToToggle","panels","toArray","toggle","_getExercise","subscription","subscribe","open","width","panelClass","backdropClass","add","drop","event","moveItemInArray","previousIndex","currentIndex","removedExercise","duration","onAction","undoRemove","getToken","split","ngOnDestroy","unsubscribe","viewQuery","rf","MatExpansionPanel","SelectedExpansionPanelComponent_For_4_Template","CdkDropList","MatAccordion","CdkDrag","CdkDragPlaceholder","MatExpansionPanelHeader","CdkDragHandle","MatExpansionPanelTitle","MatExpansionPanelDescription","MatFormField","MatLabel","MatInput","FormsModule","i2","CdkTextareaAutosize","styles","ctx_r1","_r4","printEvent","emit","PageToolbarComponent_Conditional_2_Conditional_4_Conditional_2_Template","PageToolbarComponent_Conditional_2_Conditional_4_Conditional_7_Template","_r3","deleteEvent","getDynamicPageTypeString","_c1","editMode","itemName","pageType","cancelEvent","PageToolbarComponent_Conditional_2_Conditional_4_Template","PageToolbarComponent_Conditional_2_Conditional_5_Template","pageTitle","_r5","_r6","onSubmit","newEvent","newButtonString","PageToolbarComponent","router","Router","shareStateService","cancelButton","submitButton","newButton","submitEvent","EventEmitter","action","inputs","outputs","ngContentSelectors","PageToolbarComponent_Conditional_2_Template","PageToolbarComponent_Conditional_3_Template","PageToolbarComponent_Conditional_5_Template","PageToolbarComponent_Conditional_6_Template","PageToolbarComponent_Conditional_7_Template","NgStyle","MatButtonModule","MatTooltipModule","MatDividerModule","i3","MatIconModule","i4","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","disabledInteractive","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatCheckbox","multi","MatCheckboxChange","nextUniqueId","defaults","focus","_inputElement","nativeElement","_createChangeEvent","isChecked","source","checked","_getAnimationTargetElement","inputId","_uniqueId","_elementRef","_changeDetectorRef","_ngZone","tabIndex","_animationMode","_options","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","ariaLabel","ariaLabelledby","labelPosition","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_validatorChangeFn","_checked","_disabled","_indeterminate","parseInt","ngOnChanges","changes","required","ngAfterViewInit","_syncIndeterminate","markForCheck","disabled","indeterminate","changed","_transitionCheckState","_isRippleDisabled","disableRipple","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","validate","control","registerOnValidatorChange","newState","oldState","element","classList","remove","_getAnimationClassForCheckStateTransition","animationClass","runOutsideAngular","setTimeout","_emitChangeEvent","_handleInputClick","Promise","resolve","then","_onInteractionEvent","_onBlur","nativeCheckbox","_onInputClick","_onTouchTargetClick","_preventBubblingFromLabel","target","_labelElement","contains","__ngFactoryType__","ANIMATION_MODULE_TYPE","ɵcmp","type","MatRipple","_t","first","ripple","hostAttrs","hostVars","hostBindings","ariaDescribedby","booleanAttribute","numberAttribute","exportAs","NG_VALIDATORS","template","checkbox_r2","dependencies","_MatInternalFormField","changeDetection","MatCheckboxModule","ɵmod","ɵinj","imports","MatCommonModule","_c3","_c4","a0","a1","MatSelectSearchComponent_mat_checkbox_4_Template","_r2","_emitSelectAllBooleanToParent","matFormField","toggleAllCheckboxChecked","toggleAllCheckboxIndeterminate","toggleAllCheckboxTooltipMessage","toggleAllCheckboxTooltipPosition","MatSelectSearchComponent_mat_spinner_7_Template","MatSelectSearchComponent_button_8_ng_content_1_Template","MatSelectSearchComponent_button_8_ng_template_2_Template","closeSvgIcon","closeIcon","MatSelectSearchComponent_button_8_Template","_reset","defaultIcon_r5","clearIcon","MatSelectSearchComponent_div_11_ng_content_1_Template","MatSelectSearchComponent_div_11_ng_template_2_Template","noEntriesFoundLabel","MatSelectSearchComponent_div_11_Template","defaultNoEntriesFound_r6","noEntriesFound","MatSelectSearchClearDirective","ɵdir","configurableDefaultOptions","MAT_SELECTSEARCH_DEFAULT_OPTIONS","MatSelectNoEntriesFoundDirective","MatSelectSearchComponent","matSelect","changeDetectorRef","_viewportRuler","matOption","defaultOptions","placeholderLabel","clearSearchInput","searching","disableInitialFocus","enableClearOnEscapePressed","preventHomeEndKeyPropagation","disableScrollToActiveOnOptionsChanged","showToggleAllCheckbox","hideClearSearchButton","alwaysRestoreSelectedOptionsMulti","toggleAll","onTouched","_","_options$","optionsList$","pipe","switchMap","map","options","startWith","of","optionsLength$","_formControl","FormControl","nonNullable","_showNoEntriesFound$","combineLatest","valueChanges","optionsLength","getOptionsLengthOffset","_onDestroy","Subject","applyDefaultOptions","getValue","key","hasOwnProperty","_getHostElement","setAttribute","error","openedChange","delay","takeUntil","opened","updateInputWidth","_focus","take","previousFirstOption","tap","currentFirstOption","keyManager","_keyManager","panelOpen","compareWith","activeItem","find","option","setActiveItem","showNoEntriesFound","initMultipleHandling","state","complete","_isToggleAllCheckboxVisible","multiple","_handleKeydown","keyCode","A","Z","ZERO","NINE","SPACE","HOME","END","ENTER","ESCAPE","_handleKeyup","UP_ARROW","DOWN_ARROW","ariaActiveDescendantId","_getAriaActiveDescendant","unselectActiveDescendant","activeDescendant","searchSelectInput","_lastExternalInputValue","setValue","onBlur","panel","scrollTop","ngControl","previousSelectedValues","restoreSelectedValues","Array","isArray","optionValues","forEach","previousValue","some","_onChange","innerSelectSearch","panelElement","parentElement","style","clientWidth","removeAttribute","MatSelect","MatOption","contentQueries","dirIndex","ElementRef","i5","i6","i7","i8","i9","NgxMatSelectSearchModule","CommonModule","ReactiveFormsModule","MatProgressSpinnerModule","country_r1","ClientFullEditFormComponent_Conditional_59_Conditional_1_Defer_2_Template","ClientFullEditFormComponent_Conditional_59_Conditional_1_DeferPlaceholder_3_Template","ClientFullEditFormComponent_Conditional_59_Conditional_1_Defer_4_DepsFn","qualification_r4","ctx_r4","removeQualification","editQualification","licence_r7","removeLicence","editLicence","ClientFullEditFormComponent_Conditional_59_Conditional_1_Template","ClientFullEditFormComponent_Conditional_59_For_15_Template","addQualification","ClientFullEditFormComponent_Conditional_59_For_23_Template","addLicence","isUserForm","qualificationsFormCtrl","qualifications","separatorKeysCodes","addOnBlur","qualificationsChipGrid_r8","licencesFormCtrl","licences","licencesChipGrid_r9","ClientFullEditFormComponent","controlContainer","ControlContainer","announcer","LiveAnnouncer","localStorageService","isClient","countries","countryFilterCtrl","filteredCountries","ReplaySubject","COMMA","_getCountries","_initForm","slice","filterCountries","lang","countriesLib","require","Object","entries","select","entry","sort","a","b","localeCompare","clientInfoForm","form","countryCtrl","setInitialValue","singleSelect","search","toLowerCase","country","indexOf","qualification","announce","trim","chipInput","clear","licence","ClientFullEditFormComponent_Conditional_11_Template","ClientFullEditFormComponent_Conditional_16_Template","ClientFullEditFormComponent_Conditional_22_Template","ClientFullEditFormComponent_Conditional_27_Template","ClientFullEditFormComponent_For_57_Template","ClientFullEditFormComponent_Conditional_59_Template","tmp_3_0","invalid","tmp_4_0","tmp_5_0","tmp_6_0","MatError","MatChipGrid","MatChipRow","MatChipRemove","MatChipInput","AsyncPipe","ProgramModalComponent_For_18_Conditional_33_For_4_Conditional_2_Template","equipment_r4","ɵ$index_116_r5","ɵ$count_116_r6","ProgramModalComponent_For_18_Conditional_33_For_4_Template","ProgramModalComponent_For_18_Conditional_31_Template","ProgramModalComponent_For_18_Conditional_32_Template","ProgramModalComponent_For_18_Conditional_33_Template","ɵ$index_32_r7","ProgramModalComponent","dialogRef","MatDialogRef","addProgramToClient","onClose","close","ProgramModalComponent_For_18_Template","title","program","diagnosis","ClientFullEditProgramsComponent_For_15_th_1_Conditional_2_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_3_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_4_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_5_Template","ClientFullEditProgramsComponent_For_15_th_1_Conditional_6_Template","column_r1","ClientFullEditProgramsComponent_For_15_td_2_Conditional_1_Conditional_1_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_1_Conditional_2_Template","element_r2","isProgramCompleted","ClientFullEditProgramsComponent_For_15_td_2_Conditional_1_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_2_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_3_Template","ClientFullEditProgramsComponent_For_15_td_2_Conditional_4_Template","ClientFullEditProgramsComponent_For_15_th_1_Template","ClientFullEditProgramsComponent_For_15_td_2_Template","element_r5","openEditClientProgramDialog","position","ClientFullEditProgramsComponent_td_18_Conditional_2_Template","reuseEditProgram","openDeleteConfirmationDialog","expandedElement","ClientFullEditProgramsComponent_td_18_Conditional_10_Template","ClientFullEditProgramsComponent_td_18_Conditional_11_Template","selectedExercise_r7","ClientFullEditProgramsComponent_td_20_For_4_Conditional_13_For_3_Conditional_2_Template","ɵ$index_160_r9","ɵ$count_160_r10","equipment_r8","ClientFullEditProgramsComponent_td_20_For_4_Conditional_13_For_3_Template","ClientFullEditProgramsComponent_td_20_For_4_Conditional_11_Template","ClientFullEditProgramsComponent_td_20_For_4_Conditional_12_Template","ClientFullEditProgramsComponent_td_20_For_4_Conditional_13_Template","ClientFullEditProgramsComponent_td_20_For_4_Template","element_r11","element_r13","_r12","_r14","viewProgramModal","dataSourceAllPrograms","ClientFullEditProgramsComponent","programsService","datePipe","DatePipe","formGroupDirective","FormGroupDirective","shareClientsDataService","clientsService","columnsToDisplay","dataSourceClientsPrograms","MatTableDataSource","columnsToDisplayWithExpand","selection","SelectionModel","clientsPrograms","allPrograms","client","parentForm","getClientsPrograms","adaptedProgram","i","currentDate","Date","navigate","queryParams","DeleteConfirmationDialogComponent","message","afterClosed","result","res","removeAt","isAllSelected","selected","toggleAllRows","navigateByUrl","programsList","isTemplate","startDate","endDate","getTime","newProgram","templateProgramId","updatedPrograms","firstName","lastName","email","phone","address","street","streetNumber","city","zipCode","programs","updatedClient","newAddedProgram","pop","ClientFullEditProgramsComponent_For_15_Template","ClientFullEditProgramsComponent_th_17_Template","ClientFullEditProgramsComponent_td_18_Template","ClientFullEditProgramsComponent_td_20_Template","ClientFullEditProgramsComponent_tr_21_Template","ClientFullEditProgramsComponent_tr_22_Template","ClientFullEditProgramsComponent_tr_23_Template","ClientFullEditProgramsComponent_tr_24_Template","ClientFullEditProgramsComponent_Defer_26_Template","ClientFullEditProgramsComponent_DeferPlaceholder_27_Template","ClientFullEditProgramsComponent_Defer_28_DepsFn","MatDivider","MatButton","MatTable","MatColumnDef","MatHeaderCellDef","MatHeaderCell","MatCellDef","MatCell","MatHeaderRowDef","MatHeaderRow","MatRowDef","MatRow","MatNoDataRow","animation","trigger","height","minHeight","transition","animate","MatButtonToggle_Conditional_3_Template","MatButtonToggle_Conditional_4_Template","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY","hideSingleSelectionIndicator","hideMultipleSelectionIndicator","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MatButtonToggleGroup","uniqueIdCounter","MatButtonToggleChange","_name","_markButtonsForCheck","_selectionModel","newValue","_setSelectionByValue","valueChange","_multiple","_disabledInteractive","dir","_dir","_hideSingleSelectionIndicator","_hideMultipleSelectionIndicator","_changeDetector","appearance","ngAfterContentInit","_buttonToggles","_initializeTabIndex","_keydown","buttonId","nextButton","_getNextButton","LEFT_ARROW","RIGHT_ARROW","preventDefault","_onButtonClick","_rawValue","_syncButtonToggle","isUserInput","deferEvents","deselect","_updateModelValue","_isSelected","_isPrechecked","startIndex","offset","items","_clearSelection","currentValue","_selectValue","correspondingOption","_markForCheck","MatButtonToggle","vertical","_tabIndex","buttonToggleGroup","_appearance","toggleGroup","_focusMonitor","defaultTabIndex","parsedTabIndex","Number","group","monitor","stopMonitoring","_buttonElement","newChecked","isSingleSelector","focusable","_getButtonName","button_r3","MatPseudoCheckbox","row_r2","ProgramsTableComponent_td_24_Conditional_1_Conditional_2_Template","ProgramsTableComponent_td_24_Conditional_1_Conditional_3_Template","row_r3","ProgramsTableComponent_td_24_Conditional_1_Template","ProgramsTableComponent_td_24_Conditional_2_Template","row_r4","row_r6","ctx_r6","openEditProgram","isAdmin","ProgramsTableComponent_td_30_Conditional_3_Conditional_0_Template","_r9","_r10","_r11","removeFromFavorites","addToFavorites","ProgramsTableComponent_td_30_Conditional_2_Template","ProgramsTableComponent_td_30_Conditional_3_Template","ProgramsTableComponent_td_30_Conditional_4_Template","ProgramsTableComponent_td_30_Conditional_5_Template","ProgramsTableComponent_td_30_Conditional_6_Template","ProgramsTableComponent_td_30_Conditional_7_Template","isFavorite","input_r13","ProgramsTableComponent","displayedColumns","dataSource","mainProgramsList","getProgramsEvent","reuseEditProgramEvent","openEditProgramEvent","openDeleteConfirmationDialogEvent","favoriteProgram","removeFavoriteProgram","itemId","paginator","applyFilter","firstPage","MatSort","MatPaginator","ProgramsTableComponent_th_20_Template","ProgramsTableComponent_td_21_Template","ProgramsTableComponent_th_23_Template","ProgramsTableComponent_td_24_Template","ProgramsTableComponent_th_26_Template","ProgramsTableComponent_td_27_Template","ProgramsTableComponent_th_29_Template","ProgramsTableComponent_td_30_Template","ProgramsTableComponent_tr_31_Template","ProgramsTableComponent_tr_32_Template","ProgramsTableComponent_tr_33_Template","MatSortHeader","client_r2","FilterSelectClientsComponent","clientFilterCtrl","filteredClients","isIndeterminate","isClientProgramSignal","clientCtrl","clientsList","filterClients","toggleSelectAll","selectAllValue","val","patchValue","FilterSelectClientsComponent_For_12_Template","MatPrefix","clearSearch","SearchComponent","searchService","shareDataService","drawerOpen","debounceTime","distinctUntilChanged","filterData","searchResult","toggleDrawer","SearchComponent_Conditional_4_Template","MatSuffix","reduce","accumulator","seed","operate","scanInternals","arguments","BaseTreeControl","expansionModel","dataNode","_trackByValue","expand","collapse","toggleDescendants","collapseDescendants","expandDescendants","collapseAll","toBeProcessed","getDescendants","trackBy","FlatTreeControl","getLevel","isExpandable","super","results","dataNodes","expandAll","node","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","viewContainer","_node","CdkTreeNodeOutletContext","CdkTreeNodeDef","when","getTreeControlMissingError","Error","CdkTree","_dataSource","_switchDataSource","_differs","Directionality","_levels","Map","_parents","_ariaSets","viewChange","MAX_VALUE","_flattenedNodes","_nodeType","_nodes","_keyManagerNodes","_keyManagerFactory","TREE_KEY_MANAGER","_viewInit","_initializeKeyManager","ngAfterContentChecked","_updateDefaultNodeDefinition","_subscribeToDataChanges","_nodeOutlet","disconnect","_dataSubscription","destroy","_checkTreeControlUsage","_initializeDataDiffer","defaultNodeDefs","_nodeDefs","def","_defaultNodeDef","_setNodeTypeIfUnset","nodeType","_getExpansionModel","treeControl","_expansionModel","dataStream","isDataSource","connect","isObservable","_getRenderData","renderingData","_renderDataChanges","expansionChanges","_emitExpansionChanges","renderNodes","flattenedNodes","_computeRenderingData","convertedData","_updateCachedData","renderNodeChanges","_updateKeyManagerItems","nodes","added","_emitExpansionState","removed","keyManagerNodes","_getExpansionKey","skipPredicate","typeAheadDebounceInterval","horizontalOrientation","_index","_dataDiffer","create","dataDiffer","parentData","diff","forEachOperation","adjustedPreviousIndex","insertNode","view","move","forEachIdentityChange","record","newData","context","_getNodeDef","nodeData","levelAccessor","_getLevelAccessor","level","has","createEmbeddedView","CdkTreeNode","mostRecentTreeNode","_getDescendants","children","child","bind","_getChildrenAccessor","getChildren","childrenAccessor","_getDirectChildren","includes","EMPTY","expanded","_findChildrenByLevel","coerceObservable","levelDelta","dataNodeLevel","expectedLevel","currentLevel","_registerNode","_unregisterNode","_getLevel","_getSetSize","_getAriaSet","_getPositionInSet","_getNodeParent","parent","_getNodeChildren","_sendKeydownToKeyManager","onKeydown","Infinity","_getAllChildrenRecursively","allChildren","nextChildren","concatMap","concat","expansionKey","parentKey","_findParentForNode","cachedNodes","parentIndex","parentNode","_flattenNestedNodesWithExpansion","childNodes","childKey","nestedNodes","rootNodes","_calculateParents","role","_role","_isExpandable","_inputIsExpandable","_inputIsExpanded","_tree","_data","getLabel","typeaheadLabel","textContent","_dataChanges","isLeafNode","_parentNodeAriaLevel","_getAriaExpanded","String","_tabindex","activation","expandedChange","_destroyed","_shouldFocus","ChangeDetectorRef","getParentNodeAriaLevel","nodeElement","isNodeElement","getAttribute","getParent","unfocus","activate","makeFocusable","_focusItem","focusItem","_setActiveItem","cssUnitPattern","CdkTreeNodePadding","_level","_setLevelInput","indent","_indent","_setIndentInput","_treeNode","_element","indentUnits","_setPadding","_paddingIndent","nodeLevel","forceChange","padding","_currentPadding","paddingProp","resetProp","isNaN","units","parts","CdkTreeNodeToggle","recursive","_toggle","MatTreeNode","tabIndexInputBinding","_tabIndexInputBinding","_getTabindexAttribute","isNoopTreeKeyManager","_isNoopTreeKeyManager","elementRef","tree","MatTreeNodeDef","ɵMatTreeNodeDef_BaseFactory","MatTreeNodePadding","ɵMatTreeNodePadding_BaseFactory","MatTreeNodeOutlet","MatTree","ɵMatTree_BaseFactory","MatTreeNodeToggle","ɵMatTreeNodeToggle_BaseFactory","MatTreeFlattener","transformFunction","_flattenNode","resultNodes","parentMap","flatNode","childrenNodes","_flattenChildren","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","currentExpand","MatTreeFlatDataSource","DataSource","_flattenedData","_treeFlattener","_treeControl","initialData","_expandedData","collectionViewer","merge","localeName_r2","chipRemoveNode","SearchFilterComponent_For_9_For_1_Template","node_r6","onCheckboxChange","node_r7","CATEGORIES","categoryName","categoryNameLocale","SearchFilterComponent","bodyAreasService","movementsService","startingPositionsService","equipmentService","addRemoveDataService","toggleDrawerSignal","categoriesData","_transformer","expandable","treeFlattener","hasChild","observables","_getBodyAreas","_getMovements","_getStartingPositions","_getEquipment","forkJoin","category","categoryChildren","nameValue","localeNameToRemove","nodeToRemove","indexToRemove","toggleChecked","valueChipRemove","localeNameChipRemove","x","bodyAreasList","movementsList","startingPositionsList","equipmentList","SearchFilterComponent_For_9_Template","_forTrack0","SearchFilterComponent_mat_tree_node_14_Template","SearchFilterComponent_mat_tree_node_15_Template","MatChipsModule","ExerciseSearchBtnsWrapperComponent","listOptionSignal","listOptionValue","effect","changeListOption","input_r6","BasicProgramsTableComponent","viewProgramEvent","addProgramToClientEvent","MatPaginatorIntl","useClass","PaginatorI18nService","BasicProgramsTableComponent_th_15_Template","BasicProgramsTableComponent_td_16_Template","BasicProgramsTableComponent_th_18_Template","BasicProgramsTableComponent_td_19_Template","BasicProgramsTableComponent_tr_20_Template","BasicProgramsTableComponent_tr_21_Template","BasicProgramsTableComponent_tr_22_Template","MatPaginatorModule","onConfirm","MatDialogContent","firstPageLabel","itemsPerPageLabel","lastPageLabel","nextPageLabel","previousPageLabel","getRangeLabel","page","pageSize","amountPages","Math","ceil","BROWSER_STORAGE","localStorage","BrowserStorageService","storage","getItem","setItem","removeItem","LOCAL_STORAGE_KEY","document","DOCUMENT","browserStorage","isDark","_window","defaultView","overflow","y","scrollbars","theme","autoHide","autoHideDelay","getStoredTheme","JSON","parse","setStoredTheme","meta","stringify","getPreferredTheme","storedTheme","matchMedia","matches","setTheme","documentElement","setMaterialTheme","addEventListener","getLinkElementForKey","getExistingLinkElementByKey","createLinkElementWithKey","linkEl","createElement","getClassNameForKey","head","appendChild","removeStyle","existingLinkElement","removeChild","changeTheme","scrollbarTheme","querySelector","exports","removeDiacritics","str","replace","c","diacriticsMap","replacementList","base","chars","j","codes","supportedLocales","registeredLocales","alpha2","alpha3","numeric","invertedNumeric","formatNumericCode","code","object","property","prototype","call","filterNameBy","countryNameList","TypeError","alpha3ToAlpha2","alpha2ToAlpha3","numericToAlpha3","padded","numericToAlpha2","toAlpha2","test","toUpperCase","codeInformation","s","localeData","locale","alpha3ToNumeric","alpha2ToNumeric","toAlpha3","nameList","localeList","localeFilter","keys","newLocaleList","normalizeString","string","areSimilar","codenames","p","mappedName","getAlpha2Code","getSimpleAlpha2Code","coerced","toString","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","module","ConnectableObservable","_ViewRepeaterOperation","REPLACED","INSERTED","MOVED","REMOVED","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","applyChanges","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","operation","insertContext","templateRef","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","_insertView","viewArgsFactory","_detachAndCacheView","_moveView","cachedView","_insertViewFromCache","viewArgs","detachedView","_maybeCacheView","insert","_selected","from","_selection","initiallySelectedValues","_emitChanges","Set","_deselectedToEmit","_selectedToEmit","_markSelected","_verifyValueAssignment","_hasQueuedChanges","_unmarkSelected","setSelection","oldValues","newSelectedSet","_getConcreteValue","flushEvent","_unmarkAll","isEmpty","size","hasValue","predicate","isMultipleSelection","inputValue","selectedValue","UniqueSelectionDispatcher","_listeners","notify","listener","listen","registered","ɵprov","token","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","getContext","drawImage","getMutableClientRect","rect","getBoundingClientRect","top","right","bottom","left","isInsideClientRect","clientRect","adjustDomRect","domRect","isPointerNearDomRect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","cache","elements","scrollPosition","getViewportScrollPosition","scrollLeft","handleScroll","_getEventTarget","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","window","scrollY","scrollX","getRootNode","viewRef","ELEMENT_NODE","wrapper","extendStyles","dest","importantProperties","setProperty","removeProperty","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","opacity","combineTransforms","transform","initialTransform","matchElementSize","sourceRect","getTransform","round","parseCssTimeUnitsToMs","multiplier","parseFloat","parseCssPropertyValue","computedStyle","getPropertyValue","part","PreviewRef","_preview","_rootElement","_direction","_initialDomRect","_previewTemplate","_previewClass","_pickupPositionOnPage","_initialTransform","_zIndex","attach","_createPreview","supportsPopover","showPopover","_previewEmbeddedView","setTransform","addClass","className","getTransitionDuration","getTransformTransitionDurationInMs","getComputedStyle","transitionedProperties","prop","propertyIndex","rawDurations","rawDelays","handler","removeEventListener","previewConfig","previewClass","previewTemplate","preview","rootRect","matchSize","margin","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","activeEventListenerOptions","activeCapturingEventOptions$1","capture","dragImportantProperties","DragRef","_dropContainer","_toggleNativeDragInteractions","_handles","handle","_config","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","dragStartDelay","scale","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_pointerMove","pointerPosition","_getPointerPositionOnPage","abs","dragStartThreshold","isDelayElapsed","now","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","cancelable","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","constrainPosition","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","coerceElement","disabledHandles","withPreviewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeListeners","reset","disableHandle","enableHandle","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_getShadowRoot","shadowDomSelectStart","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","shadowRoot","dropContainer","placeholder","_createPlaceholderElement","anchor","createComment","insertBefore","zIndex","_getPreviewInsertionPoint","body","replaceChild","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","_pickupPositionInElement","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","previousContainer","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","placeholderRect","propertyName","clearTimeout","timeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","min","max","array","fromIndex","toIndex","clamp","to","copyArrayItem","currentArray","targetArray","targetIndex","SingleAxisSortStrategy","_itemPositions","orientation","_previousSwap","drag","overlaps","withItems","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","elementToOffset","transformAmount","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","_cacheItemPositions","withSortPredicate","_sortPredicate","getActiveItemsSnapshot","reverse","updateOnScroll","withElementContainer","elementToMeasure","immediateSibling","itemPositions","lastItemRect","firstItemRect","floor","MixedSortStrategy","deltaX","deltaY","_relatedNodes","nextSibling","previousSwap","_activeItems","toSwapWith","current","overlapElement","after","before","newOverlapElement","_getRootNode","elementFromPoint","enterIndex","_getClosestItemIndexToPointer","targetItem","root","_rootNode","elementAtPoint","minDistance","minIndex","hypot","AutoScrollVerticalDirection","NONE","UP","DOWN","AutoScrollHorizontalDirection","LEFT","RIGHT","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_scrollableElements","_startScrollInterval","interval","period","scheduler","asyncScheduler","timer","animationFrameScheduler","_scrollNode","scrollStep","scrollBy","coercedElement","withOrientation","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_sortStrategy","_cacheParentPositions","previousItems","every","connectedTo","strategy","_container","withScrollableParents","oldContainerIndex","newContainerIndex","unshift","_domRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollWidth","getViewportSize","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","_startReceiving","activeSiblings","initiator","receiver","draggedItems","activeCapturingEventOptions","activeApps","_ResetsLoader","DragDropRegistry","_appRef","ApplicationRef","_environmentInjector","EnvironmentInjector","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","_loadResets","instances","startsWith","config","_clearGlobalListeners","streams","Observable","observer","eventOptions","instance","componentRef","createComponent","environmentInjector","onDestroy","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","CDK_DRAG_PARENT","CDK_DRAG_HANDLE","_stateChanges","_parentDrag","_addHandle","_removeHandle","CDK_DRAG_CONFIG","CDK_DROP_LIST","_dragRef","_viewContainerRef","dragDrop","_selfHandle","movedEvent","_injector","Injector","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","afterNextRender","_updateRootElement","_setupHandlesListener","freeDragPosition","injector","rootSelectorChange","rootElementSelector","positionChange","firstChange","_setPreviewTemplate","_resetPreviewTemplate","_setPlaceholderTemplate","_resetPlaceholderTemplate","closest","_getBoundaryElement","boundary","ref","coerceNumberProperty","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","handleElements","handleInstance","dragRef","i1$1","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","_uniqueIdCounter","_dropLists","_group","_scrollDispatcher","_unsortedItems","_setupInputSyncSubscription","_syncItemsWithRef","getSortedItems","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","coerceArray","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","elementContainerSelector","listAutoScrollDisabled","listOrientation","useValue","CDK_DRAG_PLACEHOLDER","_drag","optional","MatChip_Conditional_3_Template","MatChip_Conditional_7_Template","MatChipRow_Conditional_0_Template","MatChipRow_Conditional_2_Template","MatChipRow_Conditional_4_Conditional_0_Template","MatChipRow_Conditional_4_Conditional_1_Template","MatChipRow_Conditional_4_Template","ctx_r0","contentEditInput","MatChipRow_Conditional_5_Template","MatChipRow_Conditional_7_Template","_c5","MAT_CHIPS_DEFAULT_OPTIONS","separatorKeyCodes","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","MatChipAction","_parentChip","_getDisabledAttribute","_allowFocusWhenDisabled","_getTabindex","isInteractive","_isPrimary","_handleClick","_handlePrimaryActionInteraction","_isEditing","ɵMatChipRemove_BaseFactory","uid","_hasFocus","_hasFocusInternal","_value","_textElement","_chipListDisabled","_rippleLoader","getRipple","attachRipple","animationMode","_globalRippleOptions","_onFocus","ariaDescription","_ariaDescriptionId","removable","highlighted","destroyed","basicChipAttrName","MatRippleLoader","_animationsDisabled","_monitorFocus","configureRipple","_isBasicChip","hasAttribute","tagName","_pendingFocus","_actionChanges","_allLeadingIcons","_allTrailingIcons","_allRemoveIcons","ngDoCheck","setDisabled","destroyRipple","chip","_hasTrailingIcon","trailingIcon","removeIcon","BACKSPACE","repeat","DELETE","primaryAction","_getSourceAction","_getActions","origin","hasFocus","MAT_RIPPLE_GLOBAL_OPTIONS","leadingIcon","MatChipEditInput","initialize","initialValue","getNativeElement","_moveCursorToEndOfInput","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","ngZone","focusMonitor","globalRippleOptions","_editStartPending","editable","edited","_onEditFinish","_handleFocus","_startEditing","_handleDoubleclick","_getEditInput","activeElement","defaultEditInput","chipFocusChanges","_getChipStream","chipDestroyedChanges","chipRemovedChanges","_syncChipsState","empty","_chips","_explicitRole","_defaultRole","focused","_hasFocusedChip","_lastDestroyedFocusedChipIndex","_chipActions","QueryList","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","_originatesFromChip","_isValidIndex","_allowFocusEscape","previous","mappingFunction","currentElement","chips","actions","notifyOnChanges","FocusKeyManager","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","_skipPredicate","updateActiveItem","_redirectDestroyedChipFocus","chipIndex","chipToFocus","setPreviousItemActive","MatChipGridChange","_chipInput","stateChanges","_required","hasValidator","Validators","shouldLabelFloat","errorStateMatcher","_errorStateTracker","matcher","chipBlurChanges","errorState","parentFormGroup","defaultErrorStateMatcher","controlType","_ariaDescribedbyIds","valueAccessor","_ErrorStateTracker","_blur","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","setFirstItemActive","ids","_propagateChanges","_markAsTouched","TAB","hasModifierKey","last","_focusLastChip","eligibleActions","valueToEmit","MatFormFieldControl","chipGrid","_chipGrid","formField","chipEnd","_emitChipEnd","_isSeparatorKey","input","_onInput","join","MAT_FORM_FIELD","providers","ErrorStateMatcher","MatRippleModule","CdkDialogContainer_ng_template_0_Template","DialogConfig","hasBackdrop","disableClose","ariaDescribedBy","ariaLabelledBy","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","CdkDialogContainer","BasePortalOutlet","_focusTrapFactory","_interactivityChecker","_overlayRef","_platform","Platform","_focusTrap","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledByQueue","_isDestroyed","attachDomPortal","portal","_portalOutlet","hasAttached","_contentAttached","_addAriaLabelledBy","_removeAriaLabelledBy","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","_restoreFocus","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_forceFocus","isFocusable","_focusByCssSelector","elementToFocus","focusInitialElement","_focusDialogContainer","focusConfig","focusTargetElement","_getFocusedElementPierceShadowDom","focusVia","isBrowser","backdropClick","CdkPortalOutlet","DialogRef","overlayRef","closed","keydownEvents","outsidePointerEvents","focusOrigin","_detachSubscription","detachments","containerInstance","closedSubject","componentInstance","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","overlay","Overlay","scrollStrategies","block","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","uniqueId","Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_overlay","_defaultOptions","_overlayContainer","scrollStrategy","_afterAllClosedAtThisLevel","_ariaHiddenElements","afterAllClosed","defer","_getAfterAllClosed","_scrollStrategy","componentOrTemplateRef","getDialogById","overlayConfig","_getOverlayConfig","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","OverlayConfig","positionStrategy","global","centerHorizontally","centerVertically","minWidth","maxWidth","maxHeight","disposeOnNavigation","userInjector","OverlayRef","containerType","containerPortal","ComponentPortal","componentFactoryResolver","TemplateRef","_createInjector","templateContext","TemplatePortal","contentRef","fallbackInjector","emitEvent","overlayContainer","getContainerElement","MatDialogContainer_ng_template_2_Template","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","MatDialogContainer","focusTrapFactory","dialogConfig","interactivityChecker","_animationStateChanged","_animationsEnabled","_actionSectionCount","_hostElement","_enterAnimationDuration","parseCssTime","enterAnimationDuration","_exitAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_openAnimationDone","_finishDialogClose","totalTime","_startOpenAnimation","TRANSITION_DURATION_PROPERTY","_requestAnimationFrame","_waitForAnimationToComplete","_startExitAnimation","_updateActionSectionCount","requestAnimationFrame","location","time","endsWith","substring","MatDialogState","OPEN","CLOSING","CLOSED","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","detachBackdrop","beforeClosed","getState","interactionType","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","dialogConfigClass","_dialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","cdkRef","cdkConfig","_closeDialogs","dialogs","dialogElementUid","getClosestDialog","proxiedChange","_matDialogClose","_matDialogCloseResult","screenX","screenY","MatDialogLayoutSection","_dialogRef","_onAdd","_onRemove","ɵMatDialogTitle_BaseFactory","ɵMatDialogActions_BaseFactory","align","_vertical","_inset","coerceBooleanProperty","inset","nextId$1","CDK_ACCORDION","CdkAccordion","_openCloseAllActions","openAll","nextId","CdkAccordionItem","_expanded","_expansionDispatcher","accordion","_openCloseAllSubscription","_removeUniqueSelectionListener","accordionId","_subscribeToOpenCloseAllActions","MatExpansionPanel_ng_template_5_Template","MatExpansionPanelHeader_Conditional_4_Template","_getExpandedState","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","bodyExpansion","visibility","MAT_EXPANSION_PANEL","MatExpansionPanelContent","_template","_expansionPanel","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","hideToggle","_hideToggle","togglePosition","_togglePosition","_uniqueSelectionDispatcher","afterExpand","afterCollapse","_inputChanges","_headerId","_hasSpacing","displayMode","_lazyContent","_portal","_body","focusedElement","bodyElement","_animationStarted","isInitialAnimation","_animationDone","toState","fromState","_parentChangeSubscription","accordionHideToggleChange","expandedHeight","collapsedHeight","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","_handleHeaderKeydown","_handleHeaderFocus","_ownHeaders","_headers","headers","header","withWrap","ɵMatAccordion_BaseFactory","MatPaginator_Conditional_2_Conditional_3_For_4_Template","pageSizeOption_r3","MatPaginator_Conditional_2_Conditional_3_Template","_changePageSize","selectRef_r4","_formFieldAppearance","_pageSizeLabelId","selectConfig","disableOptionCentering","_displayedPageSizeOptions","MatPaginator_Conditional_2_Conditional_4_Template","MatPaginator_Conditional_2_Template","_intl","MatPaginator_Conditional_6_Template","_previousButtonsDisabled","MatPaginator_Conditional_13_Template","lastPage","_nextButtonsDisabled","MAT_PAGINATOR_INTL_PROVIDER","deps","Optional","SkipSelf","useFactory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_DEFAULT_OPTIONS","pageIndex","_pageIndex","_length","_pageSize","_updateDisplayedPageSizeOptions","pageSizeOptions","_pageSizeOptions","_isInitialized","_initializedStream","hidePageSize","showFirstLastButtons","initialized","_intlChanges","formFieldAppearance","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","getNumberOfPages","maxPageIndex","MatSelectModule","MatProgressSpinner_ng_template_0_Template","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","_color","_defaultColor","_diameter","_noopAnimations","_forceAnimations","mode","strokeWidth","_strokeWidth","viewBox","PI","_strokeDashOffset","_determinateCircle","circle_r2","NgTemplateOutlet","MatSelect_Conditional_4_Template","MatSelect_Conditional_5_Conditional_1_Template","MatSelect_Conditional_5_Conditional_2_Template","triggerValue","MatSelect_Conditional_5_Template","customTrigger","MatSelect_ng_template_10_Template","_panelDoneAnimatingStream","_getPanelTheme","_getPanelAriaLabelledby","matSelectAnimations","transformPanelWrap","query","animateChild","transformPanel","MAT_SELECT_SCROLL_STRATEGY","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_TRIGGER","MatSelectChange","_scrollOptionIntoView","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","offsetTop","offsetHeight","_positioningSettled","activeItemIndex","_getChangeEvent","_focused","_panelOpen","_syncParentProperties","_compareWith","_initializeSelection","_assignValue","_id","_uid","_unusedNgZone","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_positions","originX","originY","overlayX","overlayY","o1","o2","_triggerAriaLabelledBy","_destroy","disableAutomaticLabeling","_valueId","_overlayPanelClass","overlayPanelClass","panelWidth","_initialized","optionSelectionChanges","onSelectionChange","_openedStream","_closedStream","selectionChange","_trackedModal","typeaheadDebounceInterval","_scrollStrategyFactory","_panelDoneAnimating","_overlayWidth","_getOverlayWidth","_preferredOverlayOrigin","_initKeyManager","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","_previousControl","userAriaDescribedBy","withTypeAhead","_clearFromModal","_canOpen","getConnectedOverlayOrigin","_applyModalPanelOwnership","_highlightCorrectOption","modal","panelId","removeAriaReferencedId","addAriaReferencedId","_isRtl","selectedOptions","viewValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","selectedOption","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","shiftKey","_selectViaInteraction","cancelTypeahead","_onAttached","_overlayDir","setInactiveStyles","_selectOptionByValue","_sortValues","preferredOrigin","CdkOverlayOrigin","ActiveDescendantKeyManager","withPageUpDown","withAllowedModifierKeys","tabOut","changedOrDestroyed","_onSelect","wasSelected","sortComparator","fallbackValue","firstEnabledOptionIndex","labelId","getLabelId","isOpen","MAT_OPTGROUP","CdkConnectedOverlay","MAT_OPTION_PARENT_COMPONENT","fallbackOverlayOrigin_r4","OverlayModule","MatOptionModule","CdkScrollableModule","MatFormFieldModule","SimpleSnackBar_Conditional_2_Template","MatSnackBarContainer_ng_template_4_Template","MAX_TIMEOUT","pow","MatSnackBarRef","_afterDismissed","_onAction","_dismissedByAction","_onExit","_finishDismiss","dismiss","_durationTimeoutId","dismissWithAction","closeWithAction","_dismissAfter","_open","dismissedByAction","afterDismissed","_onEnter","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","MatSnackBarLabel","MatSnackBarActions","MatSnackBarAction","SimpleSnackBar","snackBarRef","hasAction","matSnackBarAnimations","snackBarState","MatSnackBarContainer","snackBarConfig","_trackedModals","_announceDelay","_onAnnounce","_animationState","_liveElementId","_assertNotAttached","_afterPortalAttached","_live","FIREFOX","onAnimationEnd","_completeExit","onEnter","_screenReaderAnnounce","_announceTimeoutId","_clearFromModals","queueMicrotask","panelClasses","cssClass","_exposeToModals","label","_label","labelClass","modals","ariaOwns","inertElement","liveElement","HTMLElement","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","_openedSnackBarRef","_parentSnackBar","_snackBarRefAtThisLevel","_breakpointObserver","_defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","openFromComponent","component","_attach","openFromTemplate","_attachSnackBarContainer","containerRef","content","userConfig","_createOverlay","observe","Breakpoints","HandsetPortrait","overlayElement","_animateSnackBar","isRtl","isLeft","isRight","MatSortHeader_Conditional_3_Template","_disableViewStateAnimation","_getArrowViewState","_getArrowDirectionState","MAT_SORT_DEFAULT_OPTIONS","sortables","sortChange","register","sortable","deregister","active","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","disableClear","sortOrder","nextDirectionIndex","SORT_ANIMATION_TRANSITION","AnimationDurations","ENTERING","AnimationCurves","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","keyframes","allowChildren","MatSortHeaderIntl","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_sort","_columnDef","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","_isSorted","_sortButton","_setIndicatorHintVisible","_rerenderSubscription","removeDescription","visible","_isDisabled","viewState","_toggleOnInteraction","_getAriaSortAttribute","_renderArrow","newDescription","describe","attrs","CdkTable_Conditional_2_Template","CdkTable_Conditional_3_Template","CdkTable_Conditional_4_Template","CDK_TABLE","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDef","_setNameInput","sticky","_sticky","_hasStickyChanged","stickyEnd","_stickyEnd","_table","hasStickyChanged","resetStickyChanged","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","cell","headerCell","footerCell","BaseCdkCell","columnDef","CdkHeaderCell","CdkCell","_getCellRole","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","NgZone","schedule","task","_createScheduleIfNeeded","scheduleEnd","BaseRowDef","_columnsDiffer","columns","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","CdkRowDef","CdkCellOutlet","mostRecentCellOutlet","_viewContainer","CdkHeaderRow","CdkRow","CdkNoDataRow","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","_addStickyStyle","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","borderedRowIndex","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","STICKY_POSITIONING_LISTENER","DataRowOutlet","table","_rowOutlet","_outletAssigned","HeaderRowOutlet","_headerRowOutlet","FooterRowOutlet","_footerRowOutlet","NoDataRowOutlet","_noDataRowOutlet","CdkTable","_cellRoleInternal","cellRole","_trackByFn","multiTemplateDataRows","_multiTemplateDataRows","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","_forceRecalculateCellWidths","_stickyColumnStylesNeedReset","_viewRepeater","_stickyPositioningListener","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_hasAllOutlets","_hasInitialized","contentChanged","_isServer","_setupStickyStyler","_i","dataRow","dataIndex","_canRender","_render","_headerRowDefs","_footerRowDefs","_defaultRowDef","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","_adjustedPreviousIndex","_getEmbeddedViewArgs","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","closestTableSection","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","_rowDefs","footerRow","_cacheRowDefs","_cacheColumnDefs","rowDefsChanged","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","renderRow","_getRowDefs","cachedRenderRows","shift","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","columnsDiffReducer","acc","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","_renderRow","columnDefs","columnName","rowOutlet","renderedRows","rowDefs","outlet","cellTemplate","_getCellTemplates","renderIndex","count","even","odd","columnId","stickyCheckReducer","d","_noDataRow","shouldShow","rootNode","section","uppercaseSection","MatTable_Conditional_2_Template","MatTable_Conditional_3_Template","MatTable_Conditional_4_Template","ɵMatTable_BaseFactory","ɵMatCellDef_BaseFactory","ɵMatHeaderCellDef_BaseFactory","ɵMatColumnDef_BaseFactory","ɵMatHeaderCell_BaseFactory","ɵMatCell_BaseFactory","ɵMatHeaderRowDef_BaseFactory","ɵMatRowDef_BaseFactory","ɵMatHeaderRow_BaseFactory","ɵMatRow_BaseFactory","ɵMatNoDataRow_BaseFactory","_renderChangesSubscription","_filterData","_filter","_updateChangeSubscription","_paginator","_renderData","_internalPageChanges","sortingDataAccessor","sortHeaderId","_isNumberValue","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","pageChange","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","createCache","t","n","u","r","cacheUpdateContextual","l","sign","cancelAnimationFrame","getApi","f","isUndefined","isNull","isNumber","isString","isBoolean","isFunction","isObject","isArrayLike","isPlainObject","isHTMLElement","isElement","Element","each","inArray","apply","createOrKeepArray","isEmptyArray","deduplicateArray","runEachAndClear","h","g","w","S","m","O","$","C","H","E","equal","equalWH","equalXY","equalTRBL","noop","selfClearTimeout","debounce","mergeParms","flush","assignDeep","removeUndefinedProperties","isEmptyObject","capNumber","getDomTokensArray","getAttr","hasAttr","setAttrs","removeAttrs","domTokenListAttr","domTokenListOperation","removeAttrClass","addAttrClass","addRemoveAttrClass","hasAttrClass","createDomTokenListClass","removeClass","is","isBodyElement","contents","getFocusedElement","removeElements","appendChildren","createDiv","createDOM","innerHTML","getCSSVal","validFiniteNumber","isFinite","parseToZeroOrNumber","roundCssNumber","numberToCssPx","setStyles","getStyles","topRightBottomLeft","getTrasformTranslateValue","z","getElmWidthHeightProperty","I","D","getFractionalSize","domRectHasDimensions","domRectAppeared","stopAndPrevent","scrollElementTo","getElementScroll","sanitizeScrollCoordinates","M","sanitizeAxis","isDefaultDirectionScrollCoordinates","getAxis","getScrollCoordinatesPercent","focusElement","preventScroll","manageListener","createEventListenerHub","removeEvent","addEvent","triggerEvent","opsStringify","getPropByPath","paddingAbsolute","showNativeOverlaidScrollbars","elementEvents","attributes","ignoreMutation","autoHideSuspend","dragScroll","clickScroll","pointers","getOptionsDiff","createOptionCheck","T","k","R","V","L","U","P","q","B","F","X","W","G","K","Q","tt","rt","lt","it","at","ut","dt","ft","vt","pt","ht","gt","bt","wt","yt","St","mt","getEnvironment","createEnvironment","getNativeScrollbarSize","firstChild","lastChild","nonce","getNativeScrollbarsHiding","host","viewport","slot","cancel","nativeScrollbarsOverlaid","N","addZoomListener","devicePixelRatio","resolveInitialization","staticInitializationElement","dynamicInitializationElement","Ot","getInstance","createDOMObserver","Y","J","createEventContentChange","updateElements","observerCallback","attributeName","oldValue","addedNodes","removedNodes","attributeOldValue","attributeFilter","subtree","childList","characterData","takeRecords","$t","Ct","registerPluginModuleInstances","static","getStaticPluginModuleInstance","overflowIsVisible","zt","createSizeObserver","onSizeChangedCallbackProxy","ResizeObserverEntry","contentRect","createObserversSetup","ot","nt","getDirectionIsRTL","ct","setDirection","onTrinsicChanged","xt","onSizeChanged","onContentMutation","Ht","onHostMutation","Et","createTrinsicObserver","triggerOnTrinsicChangedCallback","isIntersecting","intersectionRatio","isHeightIntrinsic","intersectionObserverCallback","It","At","Dt","liesBetween","findFirst","ignoreMutationFromOptions","createTrinsicUpdateSegment","Zt","_n","ze","createPaddingUpdateSegment","ln","ke","re","Rt","Ge","ne","dn","createOverflowUpdateSegment","Qt","un","flexDirection","writingMode","setMeasuringMode","offsetWidth","getClientRects","elementHasDimensions","hasDimensions","getZeroScrollCoordinates","createViewportOverflowStyleClassName","capitalizeFirstLetter","getShowNativeOverlaidScrollbars","getWindowSize","getOverflowAmount","st","et","createViewportOverflowState","getAxisOverflowStyle","isTrusted","getMeasuredScrollCoordinates","createAllOverflowStyleClassNames","setViewportOverflowStyle","Vt","rn","Lt","en","nn","sn","cn","vn","createSetups","ownerDocument","getDocumentWindow","elementIsGenerated","elementHasOverflow","an","Kt","Mt","appendElements","unwrap","prepareWrapUnwrapFocus","createStructureSetupElements","createStructureSetup","createScrollbarsSetup","isHoverablePointerType","pointerType","createScrollbarsSetupElements","initScrollTimeline","axis","kt","Tt","timeline","scrollbarStructureAddRemoveClass","scrollbarStyle","scrollbarsAddRemoveClass","generateScrollbarDOM","Ut","Pt","Nt","refreshScrollbarsHandleLength","getViewportPercent","getAxisValue","createScrollbarStyleFn","qt","refreshScrollbarsHandleOffset","Bt","refreshScrollbarsScrollCoordinates","ee","Ft","refreshScrollbarsScrollbarOffset","styleScrollbarPosition","getTranslateValue","jt","Xt","Yt","Wt","Jt","Gt","createScrollbarsSetupEvents","scrollOffsetElementScrollBy","behavior","deltaMode","createInteractiveScrollEvents","isPrimary","getHandleOffset","createRelativeHandleMove","releasePointerCapture","pointerId","setPointerCapture","manageScrollbarsAutoHideInstantInteraction","manageScrollbarsAutoHide","manageAutoHideSuspension","onHostMouseEnter","tn","setScrollbarVisibility","updateHintsAreTruthy","pn","hn","gn","bn","wn","yn","OverlayScrollbars","validateOptions","updateHints","sizeChanged","directionChanged","heightIntrinsicChanged","overflowEdgeChanged","overflowAmountChanged","overflowStyleChanged","scrollCoordinatesChanged","contentMutation","hostMutation","appear","changedOptions","force","removeInstance","on","off","overflowEdge","overflowAmount","overflowStyle","hasOverflow","scrollCoordinates","directionRTL","translateScrollbarStructure","scrollbar","track","translateScrollbarsSetupElement","scrollOffsetElement","scrollEventElement","scrollbarHorizontal","scrollbarVertical","plugin","addInstance","cancelInitialization","addPlugins","valid","env","scrollbarsSize","scrollbarsOverlaid","scrollbarsHiding","scrollTimeline","staticDefaultInitialization","staticDefaultOptions","getDefaultInitialization","setDefaultInitialization","getDefaultOptions","setDefaultOptions","OverlayScrollbarsDirective","instanceRef","requestDefer","cancelDefer","createDefer","idleId","rafId","wnd","idleSupported","requestIdleCallback","rAF","cAF","rIdle","cIdle","cancelIdleCallback","osInitialize","init","events","osInstance","optionsChange","eventsChange","curr","OverlayScrollbarsComponent","targetRef","onInitialized","onUpdated","onDestroyed","onScroll","osDirective","getElement","targetElm","contentElm","mergeEvents","originalEvents","mergeEventListeners","emits","eventListener","Boolean","args","dispatchEventIfHasObservers","updated","eventEmitter","observed"],"sourceRoot":"webpack:///"}